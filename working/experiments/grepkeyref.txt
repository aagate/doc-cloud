./trialDITAs/add_hpelinux_compute.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding a Linux for HPE Helion Compute
./trialDITAs/add_hpelinux_compute.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/add_hpelinux_compute.dita:            can find detailed descriptions of these fields <xref keyref="configobj_servers"
./trialDITAs/add_hpelinux_compute.dita:              keyref="configobj_controlplane">Input Model - Control Plane</xref> for more
./trialDITAs/add_hpelinux_compute.dita:              keyref="persisteddata/persistedserverallocations">Input Model</xref> for information
./trialDITAs/adding_compute_nodes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding Compute Nodes</title>
./trialDITAs/adding_moonshot_nodes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding Moonshot Nodes</title>
./trialDITAs/adding_moonshot_nodes.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/adding_moonshot_nodes.dita:    <p>The HPE Moonshot Servers are now verified hardware to run <keyword keyref="kw-hos"/>. The
./trialDITAs/adding_moonshot_nodes.dita:              section in the <keyword keyref="kw-hos"/> input model should not be present for
./trialDITAs/add_network_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding a Neutron Network Node</title>
./trialDITAs/add_network_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/add_new_storage_policy.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding a New Swift Storage Policy</title>
./trialDITAs/add_new_storage_policy.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/add_osd_datadisk.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding a Data Disk to the Object Storage Daemon
./trialDITAs/add_osd_datadisk.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/add_osd_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding an Object Storage Daemon (OSD)
./trialDITAs/add_osd_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/add_osd_node.dita:          <p>You can find detailed descriptions of these fields <xref keyref="configobj_servers"
./trialDITAs/add_osd_node.dita:          Step 5.<p>See <xref keyref="configobj_controlplane">Input Model - Control Plane</xref> for
./trialDITAs/add_osd_node.dita:            Allocations section in <xref keyref="persisteddata/persistedserverallocations"><keyword
./trialDITAs/add_osd_node.dita:                keyref="kw-hos-phrase"/> Input Model</xref> for information on how this
./trialDITAs/add_rados_gateway.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Adding the Rados Gateway to Existing
./trialDITAs/add_rados_gateway.dita:                Ceph model in <keyword keyref="kw-hos-phrase"/> has been extended to include support
./trialDITAs/add_rados_gateway.dita:                component to a pre-deployed <keyword keyref="kw-hos"/> cloud that is not running
./trialDITAs/add_rados_gateway.dita:                    has changed in <keyword keyref="kw-hos-phrase"/>. Previously, a Ceph deployment
./trialDITAs/add_rados_gateway.dita:                    used a single network where the default <keyword keyref="kw-hos-phrase"/>
./trialDITAs/add_rados_gateway.dita:                    monitoring). The upgrade to <keyword keyref="kw-hos-phrase"/> might lead to
./trialDITAs/address_info_yml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>address_info.yml</title>
./trialDITAs/address_info_yml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/add_rhel_compute.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding a RHEL Compute Node</title>
./trialDITAs/add_rhel_compute.dita:              can find detailed descriptions of these fields <xref keyref="configobj_servers"
./trialDITAs/add_rhel_compute.dita:                <xref keyref="configobj_controlplane">Input Model - Control Plane</xref> for more
./trialDITAs/add_rhel_compute.dita:                keyref="persisteddata/persistedserverallocations">Input Model</xref> for information
./trialDITAs/add_rhel_compute.dita:            <li>Mount the <keyword keyref="kw-hos-phrase"/> iso to
./trialDITAs/add_rhel_compute.dita:            <p>You can find detailed descriptions of these fields <xref keyref="configobj_servers"
./trialDITAs/add_rhel_compute.dita:                <xref keyref="configobj_controlplane">Input Model - Control Plane</xref> for more
./trialDITAs/add_rhel_compute.dita:                keyref="persisteddata/persistedserverallocations">Input Model</xref> for information
./trialDITAs/add_swift_disk.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding Additional Disks to a Swift Node</title>
./trialDITAs/add_swift_object_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding a Swift Object Node</title>
./trialDITAs/add_swift_object_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/add_swift_pac_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding a Swift Proxy, Account, Container (PAC)
./trialDITAs/add_swift_pac_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/admin_role_segregation.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Service Admin Role Segregation in the Identity
./trialDITAs/admin_role_segregation.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/admin_role_segregation.dita:        keyref="kw-hos-phrase"/>. These roles serve as a way to group common administrative needs at
./trialDITAs/alarm_definitions.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Alarm Definition</title>
./trialDITAs/alarm_explorer.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Alarm Explorer</title>
./trialDITAs/alarm_explorer.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/alarm_resolutions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Alarm Resolution Procedures</title>
./trialDITAs/alarm_resolutions.dita:  <abstract><shortdesc><keyword keyref="kw-hos"/> provides a monitoring solution based on
./trialDITAs/alarm_resolutions.dita:      components, as well as much of the underlying system. By default, <keyword keyref="kw-hos"/>
./trialDITAs/alarm_resolutions.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/allocate_pac.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Allocating Proxy, Account, and Container
./trialDITAs/allocate_pac.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/allocating_disk_drives.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Allocating Disk Drives for Object
./trialDITAs/allocating_disk_drives.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/allocating_network.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Understanding Swift Network and Service
./trialDITAs/allocating_network.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/allocating_server.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Allocating Object Servers</title>
./trialDITAs/allocating_server.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/alternative_configurations.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Alternative Configurations</title>
./trialDITAs/alternative_configurations.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/alternative_configurations.dita:        <p>In <keyword keyref="kw-hos-phrase"/> there are alternative configurations that we
./trialDITAs/alternative_configurations.dita:                <li><xref keyref="entryscale_kvm_ceph_onenetwork">Entry-scale KVM with Ceph Model
./trialDITAs/alternative_configurations.dita:                <li><xref keyref="entryscale_kvm_ceph_twonetwork">Entry-scale KVM with Ceph Model
./trialDITAs/alternative_configurations.dita:                <li><xref keyref="standalone_deployer">Using a Standalone Lifecycle-Manager
./trialDITAs/alternative_configurations.dita:                <li><xref keyref="without_dvr">Configuring <keyword keyref="kw-hos"/> without
./trialDITAs/alternative_configurations.dita:                <li><xref keyref="without_l3agent">Configuring <keyword keyref="kw-hos"/> with
./trialDITAs/alternative_configurations.dita:                <li><xref keyref="twosystems">Considerations When Installing Two Systems on One
./trialDITAs/api_verification.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>API Verification</title>
./trialDITAs/api_verification.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/api_verification.dita:      <p><keyword keyref="kw-hos-phrase"/> provides a tool, Tempest, that you can use to verify that
./trialDITAs/api_verification.dita:      <note type="note">In <keyword keyref="kw-hos-phrase"/>, the EXT_NET_CIDR setting for the
./trialDITAs/api_verification.dita:          keyref="configobj_neutron_external_networks"
./trialDITAs/api_verification.dita:      In <keyword keyref="kw-hos-phrase"/>,  Tempest has been modelled as a service and this gives you the ability to 
./trialDITAs/api_verification.dita:          <keyword keyref="kw-hos"/> lifecycle manager node. For details on what Tempest is testing,
./trialDITAs/architecture_index.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Helion Lifecycle Manager Overview</title>
./trialDITAs/architecture_index.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/arcsight.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Threat Monitoring and Integration with HPE
./trialDITAs/arcsight.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/arcsight.dita:        <p><keyword keyref="kw-hos"/>, through its centralized logging infrastructure (Logstash),
./trialDITAs/arcsight.dita:          correlate <keyword keyref="kw-hos"/> logs through HPE ArcSight Logger and ESM and supports
./trialDITAs/arcsight.dita:          continuous security monitoring of the entire <keyword keyref="kw-hos"/> infrastructure.
./trialDITAs/arcsight.dita:          time from this Logstash configuration inside an <keyword keyref="kw-hos"/> environment,
./trialDITAs/arcsight.dita:            <keyword keyref="kw-hos"/> logs through HPE ArcSight Logger and ESM. It supports
./trialDITAs/arcsight.dita:          security monitoring for continuous compliance across an <keyword keyref="kw-hos"/>
./trialDITAs/arcsight.dita:            <li><keyword keyref="kw-hos"/> infrastructure </li>
./trialDITAs/arcsight.dita:            <li><keyword keyref="kw-hos"/> services </li>
./trialDITAs/arcsight.dita:          infrastructure by monitoring their entire <keyword keyref="kw-hos"/> cloud in addition to
./trialDITAs/arcsight.dita:        format="html" scope="external">Monitoring <keyword keyref="kw-hos"/> with HPE ArcSight</xref>.</p>
./trialDITAs/audit_logs_backup.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Backing up and Restoring Audit Logs</title>
./trialDITAs/audit_logs_backup.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/audit_logs_checklist.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Audit Logging Checklist</title>
./trialDITAs/audit_logs_enable.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enable Audit Logging</title>
./trialDITAs/audit_logs_enable.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/audit_logs_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Audit Logging Overview</title>
./trialDITAs/audit_logs_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/audit_logs_overview.dita:      regional policies, <keyword keyref="kw-hos"/> provides auditing support as a basic security
./trialDITAs/audit_logs_overview.dita:    <p>The <keyword keyref="kw-hos"/> audit logging feature uses Audit Middleware for Python
./trialDITAs/audit_logs_overview.dita:      on the lifecycle manager and it can only be enabled after <keyword keyref="kw-hos"/>
./trialDITAs/audit_logs_overview.dita:      environment. <keyword keyref="kw-hos"/> provides audit logging for the following services:</p>
./trialDITAs/backup_limitations.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Backup and Restore Limitations</title>
./trialDITAs/backup_limitations.dita:    <p conkeyref="HOS-conrefs/applies-to"/> 
./trialDITAs/backup_limitations.dita:          backup and restore service in <keyword keyref="kw-hos"/>: <p>
./trialDITAs/barbican_admin.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Key Management Service Administration</title>
./trialDITAs/barbican_admin.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/barbican.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Key Management with the Barbican Service</title>
./trialDITAs/barbican.dita:          when upgrading</xref> from previous versions of <keyword keyref="kw-hos"/> (separate
./trialDITAs/barbican.dita:            keyref="kw-hos-phrase"/>, Cinder uses Barbican as its key manager when Barbican is
./trialDITAs/barbican.dita:          disk. There are three options available in <keyword keyref="kw-hos"/>
./trialDITAs/barbican.dita:          keyref="kw-hos-phrase"/> from 2.x versions, you need follow these steps after upgrading
./trialDITAs/barbican.dita:      <p>New installations of <keyword keyref="kw-hos-phrase"/>:</p><ol>
./trialDITAs/barbican.dita:            keyref="kw-hos-phrase"/>, nothing else needs to be done in those files.</li>
./trialDITAs/barbican.dita:            keyref="kw-hos-phrase"/>, you will need to redeploy the service. Please refer to <xref
./trialDITAs/barbican.dita:        currently not tested or supported by <keyword keyref="kw-hos"/>. </p><p>In <keyword keyref="kw-hos"/>,
./trialDITAs/barbican.dita:        format. The <keyword keyref="kw-hos"/> input model has a mechanism to enable / disable auditing on
./trialDITAs/block_storage_alarm.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Block Storage Summary</title>
./trialDITAs/blockstorageconfig_troubleshooting.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting the Block Storage Backend
./trialDITAs/blockstorageconfig_troubleshooting.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/blockstorage_index.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Block Storage Operations</title>
./trialDITAs/blockstorage_index.dita:    environment.</shortdesc>This section contains operations tasks for your <keyword keyref="kw-hos-phrase-30"/>
./trialDITAs/blockstorage_index.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/blockstorage_nodes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Hardware Maintenance Tasks for Block Storage
./trialDITAs/blockstorage_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Block Storage using Cinder</title>
./trialDITAs/blockstorage_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/blockstorage_overview.dita:      <p><keyword keyref="kw-hos"/> Block Storage volume operations use the OpenStack Cinder service
./trialDITAs/blockstorage_overview.dita:      <p><keyword keyref="kw-hos-phrase"/> supports the following storage back ends for block
./trialDITAs/blockstorage_overview.dita:              keyref="prepare_deploy_esx_computes_ovsvapp/modify-volume-config"
./trialDITAs/blockstorage_overview.dita:      <p><keyword keyref="kw-hos"/> supports setting up multiple block storage backends and multiple
./trialDITAs/boeing.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>ESX Cloud Deployment Before Upgrading</title>
./trialDITAs/boeing.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/boeing.dita:      <p>This document outlines the procedure to deploy <keyword keyref="kw-hos-version-30"/> ESX
./trialDITAs/boeing.dita:          keyref="kw-hos-phrase"/>.</p>
./trialDITAs/boeing.dita:      <p>Perform the following steps to bring up <keyword keyref="kw-hos-version-30"/> ESX cloud
./trialDITAs/boeing.dita:          <li>Upgrade to <keyword keyref="kw-hos-phrase"/>.<p>After upgrading the ESX cloud, you can
./trialDITAs/bonddata.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Bonding</title>
./trialDITAs/bonddata.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/bonddata.dita:                            <uicontrol>nic-mapping</uicontrol> (see <xref keyref="concept_nicmapping">NIC
./trialDITAs/bonddata.dita:                            provider options are described in the <xref keyref="configobj_bonddataoptionslinux"
./trialDITAs/bonddata.dita:                            <xref keyref="configobj_bonddataoptionsopenvswitch">Bond configuration options for the "openvswitch" provider</xref>.
./trialDITAs/bonddataoptionslinux.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Bond configuration options for the "linux" provider</title>
./trialDITAs/bonddataoptionslinux.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/bonddataoptionslinux.dita:    <p>Options used in the <keyword keyref="kw-hos"/> examples are:</p>
./trialDITAs/bonddataoptionsopenvswitch.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Bond Data Options for the "openvswitch" Provider</title>
./trialDITAs/bonddataoptionsopenvswitch.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/bonddataoptionswindows.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Bond configuration options for the "windows" provider</title>
./trialDITAs/bonddataoptionswindows.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/centralized_logging.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Centralized Logging Service</title>
./trialDITAs/central_log_access_data.dita:      <p>All logging data in <keyword keyref="kw-hos"/> is managed by the Centralized Logging
./trialDITAs/central_log_access_data.dita:        provided with <keyword keyref="kw-hos"/> to search or create a report from log data.
./trialDITAs/central_log_access_data.dita:        other <keyword keyref="kw-hos"/> resources in your deployment. To use Operations Console you
./trialDITAs/central_log_access_data.dita:      <note type="important">In <keyword keyref="kw-hos"/>, Kibana usually runs on a different
./trialDITAs/central_log_access_data.dita:          <keyword keyref="kw-hos"/> in the cloud log files.</p>
./trialDITAs/central_log_configure_manage.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing the Centralized Logging Feature</title>
./trialDITAs/central_log_configure_manage.dita:      <p><b>NEW in 4.0</b>: In <keyword keyref="kw-hos-phrase"/> the logging-ansible restart
./trialDITAs/central_log_configure_manage.dita:          <note type="attention">These playbooks must be run from the <keyword keyref="kw-hos"/>
./trialDITAs/central_log_configure_manage.dita:        <li>To find the <keyword keyref="kw-hos"/> file to edit, run:
./trialDITAs/central_log_configure_services.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Settings for Other Services</title>
./trialDITAs/central_log_configure_services.dita:      <p>As you use <keyword keyref="kw-hos"/>, you might find a need to redefine which log files
./trialDITAs/central_log_configure_services.dita:      <p><keyword keyref="kw-hos"/> uses the logrotate service to provide rotation, compression, and
./trialDITAs/central_log_configure_services.dita:          keyref="kw-hos"/> uses these options in Elasticsearch to prioritize indexing speed over
./trialDITAs/central_log_configure_services.dita:        search speed. <keyword keyref="kw-hos"/> also configures Elasticsearch for optimal
./trialDITAs/central_log_configure_services.dita:        performance in low RAM environments. The options that <keyword keyref="kw-hos"/> modifies
./trialDITAs/central_log_GS.dita:      <title>New in <keyword keyref="kw-hos-phrase"/></title>
./trialDITAs/central_log_GS.dita:      <p>In <keyword keyref="kw-hos-phrase"/> the logging-ansible restart
./trialDITAs/central_log_understanding.dita:            <keyword keyref="kw-hos"/> distributed cloud environment from a single location.</li>
./trialDITAs/central_log_understanding.dita:        <li><b><keyword keyref="kw-hos"/>:</b> provides public, private, and managed cloud solutions
./trialDITAs/central_log_understanding.dita:        <li><b>Kafka:</b> a messaging broker used for collection of <keyword keyref="kw-hos"/>
./trialDITAs/central_log_understanding.dita:          <keyword keyref="kw-hos"/> API provides a standard REST interface to store logs. It uses
./trialDITAs/central_log_understanding.dita:        node of a <keyword keyref="kw-hos"/> cloud, and there could be hundreds of nodes, all of
./trialDITAs/central_log_understanding.dita:          <dd>The audit logs are configured to be backed up by the <keyword keyref="kw-hos"/>
./trialDITAs/central_log_understanding.dita:            Freezer product. For more information about Freezer, read the <keyword keyref="kw-hos"/>
./trialDITAs/central_log_understanding.dita:      <p><keyword keyref="kw-hos"/> uses a tool called curator that is developed by the
./trialDITAs/central_log_understanding.dita:        Elasticsearch community to handle these situations. <keyword keyref="kw-hos"/> installs and
./trialDITAs/central_log_understanding.dita:        hour. To avoid this <keyword keyref="kw-hos"/> uses a shell script called
./trialDITAs/central_log_understanding.dita:      <p><keyword keyref="kw-hos"/> uses the cron process which in turn calls Logrotate to provide
./trialDITAs/central_log_understanding.dita:        partition, <keyword keyref="kw-hos"/> allows you to choose an approach that works best for
./trialDITAs/ceph_twonetworks_config.dita:      <p><keyword keyref="kw-hos"/> Ceph is a unified storage system for various storage use cases
./trialDITAs/ceph_twonetworks_config.dita:      with the <keyword keyref="kw-hos"/> distro. You will need to make the changes outlined below
./trialDITAs/change_horizon_timeout.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Changing the Dashboard Timeout Value</title>
./trialDITAs/change_horizon_timeout.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/changes_entryscale_kvm_vsa.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Changes to Entry-scale KVM with VSA Model</title>
./trialDITAs/changes_entryscale_kvm_vsa.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/change_service_passwords.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Changing Service Passwords</title>
./trialDITAs/change_service_passwords.dita:  <abstract><shortdesc outputclass="hdphidden"><keyword keyref="kw-hos-phrase"/> provides a process
./trialDITAs/change_service_passwords.dita:      want to do for security or other purposes.</shortdesc><keyword keyref="kw-hos-phrase"/>
./trialDITAs/change_service_passwords.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/change_service_passwords.dita:      <p>In <keyword keyref="kw-hos-phrase"/>, the configuration processor will produce metadata
./trialDITAs/change_service_passwords.dita:      following are immutable in <keyword keyref="kw-hos-phrase"/>:<ul>
./trialDITAs/changing_swift_zone.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Changing Swift Zone Layout</title>
./trialDITAs/charts.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Visualizing Data in Charts</title>
./trialDITAs/cloudadmin_cli.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Cloud Admin Actions with the Command
./trialDITAs/cloudadmin_cli.dita:      <p>With <keyword keyref="kw-hos-phrase-20"/> and above, service policy files can be modified
./trialDITAs/cloudadmin_dashboard.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Cloud Admin Actions with the Dashboard</title>
./trialDITAs/clouddiagram_txt.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>CloudDiagram.txt</title>
./trialDITAs/clouddiagram_txt.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/cloud.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Cloud Configuration</title>
./trialDITAs/cloud.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/cloud.dita:        some global values for the <keyword keyref="kw-hos"/> Cloud, as described in the table below.</p>
./trialDITAs/cloud.dita:                        keyref="namegeneration">Name Generation</xref>) <p>Consists of two
./trialDITAs/cloud_verification.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Cloud Verification</title>
./trialDITAs/cloud_verification.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/clusters.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Clusters</title>
./trialDITAs/clusters.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/clusters.dita:                            is used to persist server allocations (see <xref keyref="persisteddata"
./trialDITAs/clusters.dita:                            keyref="namegeneration">Name Generation</xref>). If not supplied then
./trialDITAs/clusters.dita:                            allocated to this cluster. (see <xref keyref="concept_serverroles">Server
./trialDITAs/clusters.dita:                                keyref="concept_servergroups_failurezones">Server Groups and Failure
./trialDITAs/compute_hosts.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Compute Hosts</title>
./trialDITAs/compute_hosts.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/compute_instances.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Compute Instances</title>
./trialDITAs/compute_instances.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/compute_summary.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Compute Alarm Summary</title>
./trialDITAs/compute_summary.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/concepts_cloud.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Cloud</title>
./trialDITAs/concepts_cloud.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/concepts.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Concepts</title>
./trialDITAs/concepts.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/concepts.dita:    <p>An <keyword keyref="kw-hos-phrase"/> cloud is defined by a declarative model that is described in a
./trialDITAs/concepts.dita:        significance to <keyword keyref="kw-hos"/>, rather it is the relationships between them that
./trialDITAs/concepts.dita:        discussed above, combines it with the service definitions provided by <keyword keyref="kw-hos"/>
./trialDITAs/concepts.dita:    <p>The relationship between the file systems on the <keyword keyref="kw-hos"/> deployment server and
./trialDITAs/concepts.dita:        directories that are maintained by <keyword keyref="kw-hos"/>.</p>
./trialDITAs/concepts_networkgroups.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Network Groups</title>
./trialDITAs/concepts_networkgroups.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/concepts_networkgroups.dita:        are used when defining <uicontrol>control-planes</uicontrol>. <keyword keyref="kw-hos"/> also
./trialDITAs/concepts_networkgroups.dita:        in the service definition files provided by <keyword keyref="kw-hos"/>.</p>
./trialDITAs/concepts_networkgroups.dita:        consideration. In <keyword keyref="kw-hos"/>, routing is controlled at the
./trialDITAs/concepts_networkgroups.dita:    <p>As part of the <keyword keyref="kw-hos"/> deployment, networks are configured to act as the
./trialDITAs/concepts_networkgroups.dita:    <p>Note that <keyword keyref="kw-hos"/> will configure the routing rules on the servers it deploys
./trialDITAs/concepts_networkgroups.dita:        <xref keyref="networkroutevalidation">Network Route
./trialDITAs/concepts_networks.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Networks</title>
./trialDITAs/concepts_networks.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/concepts_networktags.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Network Tags</title>
./trialDITAs/concepts_networktags.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/concepts_networktags.dita:    <p>Network tags are defined by some <keyword keyref="kw-hos"/>
./trialDITAs/concepts_networktags.dita:    <p>See <xref keyref="configobj_networktags">Network Tags</xref> for more information on
./trialDITAs/concepts_servergroups.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Server Groups</title>
./trialDITAs/concepts_servergroups.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/concepts_servergroups.dita:    <p>In the <keyword keyref="kw-hos"/> model we support this configuration by allowing you to define a
./trialDITAs/concepts_serverroles.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Server Roles</title>
./trialDITAs/concepts_serverroles.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/concepts_servers.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Servers</title>
./trialDITAs/concepts_servers.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/concepts_servers.dita:        your cloud. In addition, in this definition file you can either provide <keyword keyref="kw-hos"/>
./trialDITAs/concepts_servers.dita:    <p>The address specified for the server will be the one used by <keyword keyref="kw-hos"/> for
./trialDITAs/concepts_servers.dita:        using <keyword keyref="kw-hos"/> to install the operating system this network must be an untagged
./trialDITAs/concepts_servers.dita:        VLAN. The first server must be installed manually from the <keyword keyref="kw-hos"/> ISO and this
./trialDITAs/config_availability_zones.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Availability Zones</title>
./trialDITAs/config_availability_zones.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configneutronprovidervlans.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Neutron Provider VLANs</title>
./trialDITAs/configneutronprovidervlans.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configneutronprovidervlans.dita:        physical network infrastructure is outside the scope of the <keyword keyref="kw-hos-phrase"/>
./trialDITAs/configneutronprovidervlans.dita:    <p><keyword keyref="kw-hos-phrase"/> automates the server networking configuration and the Neutron
./trialDITAs/configneutronprovidervlans.dita:            keyref="configobj_networktags/neutron.networks.vlan">Network Groups</xref> section. For example (some
./trialDITAs/configneutronprovidervlans.dita:            keyref="configobj_interfacemodels">Interface Models</xref> section. For example (some
./trialDITAs/configneutronprovidervlans.dita:        <keyword keyref="kw-hos"/> <uicontrol>network</uicontrol>, because that VLAN must span all compute
./trialDITAs/configneutronprovidervlans.dita:        <keyword keyref="kw-hos"/> <uicontrol>network</uicontrol> must be defined with <codeph>tagged-vlan:
./trialDITAs/configneutronprovidervlans.dita:    <p>When the cloud is deployed, <keyword keyref="kw-hos-phrase"/> will create the appropriate bridges on
./trialDITAs/configuration_data.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Configuration Data</title>
./trialDITAs/configuration_data.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configurationdata.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Configuration Data</title>
./trialDITAs/configurationdata.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configurationdata.dita:                           <p>Starting in <keyword keyref="kw-hos-phrase"/>, network tags may be defined as part of a 
./trialDITAs/configurationdata_ironic.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Ironic Configuration Data</title>
./trialDITAs/configurationdata_ironic.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configurationdata_neutron.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Neutron Configuration Data </title>
./trialDITAs/configurationdata_neutron.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configurationdata_octavia.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Octavia Configuration Data</title>
./trialDITAs/configurationdata_octavia.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configurationdata_swift.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Swift Configuration Data</title>
./trialDITAs/configurationdata_swift.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configurationobjects.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Configuration Objects</title>
./trialDITAs/configurationobjects.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configure_3par.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring for 3PAR Block Storage
./trialDITAs/configure_3par.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configure_3par.dita:            <keyword keyref="kw-hos"/> releases, we left the names as-is in the release and provided
./trialDITAs/configure_3par.dita:              override the [DEFAULT]/host value which <keyword keyref="kw-hos-phrase"/> is dependent
./trialDITAs/configure_3par.dita:                  will override the [DEFAULT]/host value which <keyword keyref="kw-hos-phrase"/> is
./trialDITAs/configure_ceph_rgw.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Ceph RADOS Gateway
./trialDITAs/configure_ceph_rgw.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configure_ceph_rgw.dita:        <p>The <keyword keyref="kw-hos-tm"/> Entry-scale KVM Ceph input model cloud <xref
./trialDITAs/configure_ceph_rgw.dita:        <p>An <keyword keyref="kw-hos-tm"/> cloud can be deployed with Ceph RADOS Gateway as a
./trialDITAs/configure_compute.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Compute Service</title>
./trialDITAs/configure_dashboard.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Dashboard Service</title>
./trialDITAs/configure_dashboard.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configure_dashboard.dita:    <p>Horizon is the OpenStack service that serves as the basis for the <keyword keyref="kw-hos"/>
./trialDITAs/configure_dashboard.dita:    <p>The dashboards provide a web-based user interface to <keyword keyref="kw-hos"/> services including
./trialDITAs/configure_dashboard.dita:      <title>Dashboard Service and TLS in <keyword keyref="kw-hos-phrase"/></title>
./trialDITAs/configure_firewall.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the <keyword keyref="kw-hos"/>
./trialDITAs/configure_firewall.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configure_firewall.dita:        <keyword keyref="kw-hos"/> firewall that is configured in front of the control services. This
./trialDITAs/configure_firewall.dita:          keyref="configobj_firewallrules">here</xref>.</p>
./trialDITAs/configure_firewall.dita:        that enables the ability for <keyword keyref="kw-hos"/> tenants to create north-south,
./trialDITAs/configure_glance.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Image Service</title>
./trialDITAs/configure_glance.dita:        <p>In <keyword keyref="kw-hos-phrase"/>, by default, the Glance image caching option is not
./trialDITAs/configure_horizon_v3.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Horizon for Keystone v3</title>
./trialDITAs/configure_horizon_v3.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configure_identity.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Identity Service</title>
./trialDITAs/configure_identity.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configure_identity.dita:        <keyword keyref="kw-hos"/> Identity service, based on the OpenStack Keystone API, provides
./trialDITAs/configure_identity.dita:          Keystone, it has not yet been certified by the <keyword keyref="kw-hos"/> engineering team
./trialDITAs/configure_identity.dita:          and is an experimental feature in <keyword keyref="kw-hos"/>.</note></p>
./trialDITAs/configure_identity.dita:        Kilo release but not yet validated for <keyword keyref="kw-hos"/>.--></p>
./trialDITAs/configure_identity.dita:        not yet been certified or documented for <keyword keyref="kw-hos"/>.</p></section>
./trialDITAs/configure_identity.dita:              <entry>The "superuser" role. Provides full access to all <keyword keyref="kw-hos"/> services
./trialDITAs/configure_logging.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Centralized Logging Service</title>
./trialDITAs/configure_logging_level.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Logging Level for
./trialDITAs/configure_monitoring.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Monitoring Service</title>
./trialDITAs/configure_monitoring.dita:      provided with the product.</shortdesc>In <keyword keyref="kw-hos-phrase"/> you have the option
./trialDITAs/configure_monitoring.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configure_mtu.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Maximum Transmission Units in
./trialDITAs/configure_mtu.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configure_mtu.dita:      <b><keyword keyref="kw-hos"/>-managed physical interfaces </b><p><keyword keyref="kw-hos"
./trialDITAs/configure_mtu.dita:        In <keyword keyref="kw-hos-phrase"/>, the DHCP server advertises to all VMS a 1400
./trialDITAs/configure_mtu.dita:          This will set the physical interface managed by <keyword keyref="kw-hos-phrase"/> that has the
./trialDITAs/configure_mtu.dita:        <li>If <keyword keyref="kw-hos"/> has not been deployed yet, do normal deployment and skip to step 8.</li>
./trialDITAs/configure_mtu.dita:          <li>If <keyword keyref="kw-hos"/> has already been deployed, follow the remaining steps,
./trialDITAs/configure_orchestration.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Orchestration Service</title>
./trialDITAs/configure_vsa_ao.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>VSA with or without Adaptive Optimization
./trialDITAs/configure_vsa.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring for VSA Block Storage
./trialDITAs/configure_vsa.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configure_vsa.dita:          <li>Your <keyword keyref="kw-hos"/> cloud must be fully deployed using the a KVM cloud
./trialDITAs/configure_vsa.dita:              keyref="kw-hos"/> and comes with a free trial which allows a maximum limit of 50 TB
./trialDITAs/configure_vsa.dita:          keyref="kw-hos"/> releases, we left the names as-is in the release and provided a mapping
./trialDITAs/configure_vsa.dita:      <p>The process for configuring HPE StoreVirtual VSA for <keyword keyref="kw-hos"/> involves
./trialDITAs/configure_vsa.dita:          keyref="kw-hos-phrase"/>. Clusters created using CMC manually cannot be reconfigured using
./trialDITAs/configure_vsa.dita:        <p>In <keyword keyref="kw-hos"/>, cluster creation using HPE StoreVirtual Centralized
./trialDITAs/configure_vsa.dita:              is not supported in <keyword keyref="kw-hos"/>. Instead, you must manually add each
./trialDITAs/configure_vsa.dita:              <p>[OPTIONAL] <keyword keyref="kw-hos-phrase"/> supports VSA deployment for KVM
./trialDITAs/configure_vsa.dita:            override the [DEFAULT]/host value which <keyword keyref="kw-hos-phrase"/> is dependent
./trialDITAs/configure_vsa_separate_iscsi_network.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring a Separate iSCSI Network to use
./trialDITAs/configure_vsa_separate_iscsi_network.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/controlplane.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Control Plane</title>
./trialDITAs/controlplane.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/controlplane.dita:                            allocations (see <xref keyref="persisteddata">Persisted Data</xref>)
./trialDITAs/controlplane.dita:                            keyref="namegeneration">Name Generation</xref>). If not specified,
./trialDITAs/controlplane.dita:                            of a network group (compatibility with <keyword keyref="kw-hos-phrase-30"/>)</p>
./trialDITAs/controlplane.dita:                            (see <xref keyref="concept_servergroups_failurezones">Server Groups and Failure
./trialDITAs/controlplane.dita:                             control plane (see <xref keyref="concept_configuration_data">Configuration Data</xref>)</entry>
./trialDITAs/controlplane.dita:                            keyref="configobj_clusters">Clusters</xref>).</entry>
./trialDITAs/controlplane.dita:                            keyref="configobj_resources">Resources</xref>).</entry>
./trialDITAs/contacting_support.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Support Resources</title>
./trialDITAs/contacting_support.dita:      <p>The public knowledge base for <keyword keyref="kw-hos-phrase"/> can be reached at <xref
./trialDITAs/controller_nodes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Control Plane Maintenance</title>
./trialDITAs/controlplanes.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Control Planes</title>
./trialDITAs/controlplanes.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/controlplanes.dita:        <keyword keyref="kw-hos-phrase"/> only supports a single control-plane). -->
./trialDITAs/controlplanes.dita:        <ph audience="INTERNAL">(Note that support for multiple control-planes is a non-core feature in <keyword keyref="kw-hos-phrase"/> 
./trialDITAs/controlplanes_regions.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Control Planes and Regions</title>
./trialDITAs/controlplanes_regions.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/controlplanes_regions.dita:        Equally in <keyword keyref="kw-hos"/>, Mysql and RabbitMQ cannot be shared by more than one 
./trialDITAs/control_plane_topology_yml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>control_plane_topology.yml</title>
./trialDITAs/control_plane_topology_yml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/cpinfofiles.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Configuration Processor Information Files</title>
./trialDITAs/cpinfofiles.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="address_info_yml">address_info.yml</xref></entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="firewall_info_yml">firewall_info.yml</xref> </entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="net_info_yml">net_info.yml</xref> </entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="route_info_yml">route_info.yml</xref> </entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="server_info_yml">server_info.yml</xref></entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="service_info_yml">service_info.yml</xref></entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="control_plane_topology_yml">control_plane_topoloy.yml</xref></entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="network_topology_yml">network_topology.yml</xref></entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="region_topology_yml">region_topoloy.yml</xref></entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="service_topology_yml">service_topology.yml</xref></entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="private_data_metadata_yml">private_data_metadata.yml</xref></entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="password_change_yml">password_change.yml</xref></entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="explain_txt">explain.txt</xref> </entry>
./trialDITAs/cpinfofiles.dita:                    <entry><xref keyref="clouddiagram_txt">CloudDiagram.txt</xref></entry>
./trialDITAs/cpu_assignments.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->CPU Assignments</title>
./trialDITAs/cpu_assignments.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/cpu_assignments.dita:            <entry>A list of CPU usage objects (see <xref keyref="configobj_cpu_usage">below</xref>).</entry>
./trialDITAs/cpu_components_roles.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Components and Roles in the CPU Model</title>
./trialDITAs/cpu_components_roles.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/cpumodels.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->CPU Models</title>
./trialDITAs/cpumodels.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/cpumodels.dita:            <entry>A list of CPU assignments (see <xref keyref="configobj_cpu_assignments">below</xref>).</entry>
./trialDITAs/cpu_sizing_vms.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->CPU sizing for virtual machine servers </title>
./trialDITAs/cpu_sizing_vms.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/cpu_usage.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->CPU Usage</title>
./trialDITAs/cpu_usage.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/create_extnet.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating an External Network</title>
./trialDITAs/create_extnet.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/create_extnet.dita:        provide two of them here. The <keyword keyref="kw-hos"/> installer provides an Ansible
./trialDITAs/create_ha_router.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating a Highly Available Router</title>
./trialDITAs/create_ha_router.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/create_ha_router.dita:        technologies which can be used to provide routing processes in <keyword keyref="kw-hos-phrase"/>.
./trialDITAs/create_hdp_servicenet.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating the HPE Helion Development Platform
./trialDITAs/create_hdp_servicenet.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/create_hdp_servicenet.dita:        VLAN-encapsulated provider network which is fully routable to the <keyword keyref="kw-hos"/>
./trialDITAs/create_image.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating and Uploading a Glance Image</title>
./trialDITAs/create_image.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/create_image.dita:        will be compatible with your <keyword keyref="kw-hos"/> cloud:</p>
./trialDITAs/create_image.dita:          2008 R2 image for deployment within <keyword keyref="kw-hos"/>. The Microsoft Windows
./trialDITAs/create_keypair.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating a Key Pair</title>
./trialDITAs/create_multiple_vsa_clusters.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating Multiple VSA Clusters</title>
./trialDITAs/create_multiple_vsa_clusters.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/create_multiple_vsa_clusters.dita:    <p>The <keyword keyref="kw-hos-phrase"/> input model comes with one cluster and three VSA nodes.
./trialDITAs/create_multiple_vsa_clusters.dita:              keyref="kw-hos-phrase"/> input model you will find only a
./trialDITAs/create_multiple_vsa_clusters.dita:              keyref="configure_vsa_ao/deploy-vsa-with-ao-without-ao"/>.</note></li>
./trialDITAs/create_network.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating a Private Network</title>
./trialDITAs/create_network.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/creating_aggregates.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Compute Hosts using Aggregates and
./trialDITAs/creating_object_server_resource.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating Object Server Resource
./trialDITAs/creating_object_server_resource.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/creating_pac_cluster.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating a Swift Proxy, Account, and Container
./trialDITAs/creating_pac_cluster.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/creating_roles_swift_nodes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating Roles for Swift Nodes</title>
./trialDITAs/creating_roles_swift_nodes.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/creating_voltype.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating a Volume Type for your Volumes</title>
./trialDITAs/cs_opsconsole_appliances.dita:    <title><ph conkeyref="HOS-conrefs/product-title-10"/>Appliances</title>
./trialDITAs/cs_opsconsole_backup_restore.dita:    <title><ph conkeyref="HOS-conrefs/product-title-10"/>Backup and Restore</title>
./trialDITAs/cs_opsconsole_block_storage_devices.dita:    <title><ph conkeyref="HOS-conrefs/product-title-10"/>Block Storage Devices</title>
./trialDITAs/cs_opsconsole_block_storage_summary.dita:    <title><ph conkeyref="HOS-conrefs/product-title-10"/>Block Storage Summary</title>
./trialDITAs/cs_opsconsole_compute_storage_summary.dita:    <title><ph conkeyref="HOS-conrefs/product-title-10"/>Compute Summary</title>
./trialDITAs/cs_opsconsole_hardware_baremetal.dita:    <title><ph conkeyref="HOS-conrefs/product-title-10"/>Physical Hardware</title>
./trialDITAs/cs_opsconsole_hardware_oneview.dita:    <title><ph conkeyref="HOS-conrefs/product-title-10"/>HPE OneView/Synergy Servers</title>
./trialDITAs/cs_opsconsole_integrated_tools.dita:    <title><ph conkeyref="HOS-conrefs/product-title-10"/>Integrated Tools</title>
./trialDITAs/cs_opsconsole_system_networking.dita:    <title><ph conkeyref="HOS-conrefs/product-title-10"/>System Networking</title>
./trialDITAs/customizing_inputmodel.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Customizing the Input Model</title>
./trialDITAs/customizing_inputmodel.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/customizing_inputmodel.dita:                    keyref="configure_vsa_ao/deploy-vsa-with-ao-without-ao">VSA with
./trialDITAs/dar.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Data at Rest Encryption</title>
./trialDITAs/dar.dita:  <body><!--not tested-->    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/dar.dita:    <section> The data at rest encryption features in <keyword keyref="kw-hos-phrase"/> include
./trialDITAs/dar.dita:          keyref="kw-hos-phrase"/> supports two types of back ends for safely storing encryption
./trialDITAs/dar.dita:        <li>Native database: This is the default configuration in <keyword keyref="kw-hos-phrase"/>. </li>
./trialDITAs/dar.dita:    <section>The data-at-rest encryption model in <keyword keyref="kw-hos-phrase"/> provides support
./trialDITAs/dcn_core.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Bringing up a Cloud with the DCN Core
./trialDITAs/dcn_core.dita:      <title>Bringing up a <keyword keyref="kw-hos"/> cloud with the DCN core plugin</title>
./trialDITAs/dcn_core.dita:      <p>Bringing up a <keyword keyref="kw-hos"/> cloud with the DCN core plugin is identical to
./trialDITAs/dcn_core.dita:          <xref href="DCN_ml2.dita#DCN_ml2">bringing up a <keyword keyref="kw-hos"/> cloud with the
./trialDITAs/DCN_upgrade.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Future DCN Upgrades</title>
./trialDITAs/deploy_esx_cloud.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Deploy ESX Cloud with OVSvApp</title>
./trialDITAs/deploy_fails_with_msdos_disks.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Deployment Fails With - MSDOS Disks Labels
./trialDITAs/deploy_fails_with_msdos_disks.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/deploy_monitor_standalone_node.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Deploying Ceph Monitor Services on Dedicated
./trialDITAs/deploy_monitor_standalone_node.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/deploy_monitor_standalone_node.dita:        <p>In the <keyword keyref="kw-hos-phrase"/> example configurations, the Ceph monitor service
./trialDITAs/deploy_monitor_standalone_node.dita:                    <keyword keyref="kw-hos-phrase"/> does not support deployment transition. Once
./trialDITAs/designate_initialconfig.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Designate Initial Configuration</title>
./trialDITAs/designate_initialconfig.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/designate_initialconfig.dita:      <p>After the <keyword keyref="kw-hos"/>  installation has been completed, Designate 
./trialDITAs/designate_monitor_support.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>DNS Service Monitoring Support</title>
./trialDITAs/designate_monitor_support.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/designate_monitor_support.dita:        <keyword keyref="kw-hos"/>.
./trialDITAs/designate_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>DNS Service Overview</title>
./trialDITAs/designate_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/designate_overview.dita:      <p><keyword keyref="kw-hos"/> DNS Service provides multi-tenant Domain Name Service with REST
./trialDITAs/devicegroups.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Device Groups</title>
./trialDITAs/devicegroups.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/disable_bura_before_deployment.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Disabling Backup/Restore before Deployment</title>
./trialDITAs/disable_bura_before_deployment.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/diskmodel.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Disk Model</title>
./trialDITAs/diskmodel.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/diskmodel.dita:        specify. The <keyword keyref="kw-hos"/> examples provide some typical configurations. As this is
./trialDITAs/diskmodels.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Disk Models</title>
./trialDITAs/diskmodels.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/diskmodels.dita:    <p>If the operating system has been installed by the <keyword keyref="kw-hos"/> installation process
./trialDITAs/disk_sizing_vms.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Disk Sizing for Virtual Machine Servers </title>
./trialDITAs/disk_sizing_vms.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/documentation_updates.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Changelog for Documentation</title>
./trialDITAs/documentation_updates.dita:      <p>The <keyword keyref="kw-hos"/> documentation team continuously updates the documents in
./trialDITAs/dpdk_componentoptions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->DPDK component-options for the openvswitch component</title>
./trialDITAs/dpdk_componentoptions.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/dpdk_componentoptions.dita:      See the section for <xref keyref="configobj_cpumodels">CPU Models</xref>.</p>
./trialDITAs/dpdkdevices_devices.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->dpdk-devices devices</title>
./trialDITAs/dpdkdevices_devices.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/dpdkdevices_devices.dita:              The device names must be the logical-name specified by the nic-mapping (see <xref keyref="configobj_nicmappings">NIC Mappings</xref>).</entry>            
./trialDITAs/dpdkdevices.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->dpdk-devices</title>
./trialDITAs/dpdkdevices.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/dpdkdevices.dita:            <entry>A list of network devices to be configured for DPDK.  See <xref keyref="configobj_dpdkdevices_devices">dpdk-devices devices</xref>.</entry>            
./trialDITAs/dpdkdevices.dita:                and so should not be specified here.  See the section for  <xref keyref="configobj_cpumodels">CPU Models</xref>.</p>
./trialDITAs/enable_barbican_for_upgrade.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling Barbican Support When Upgrading</title>
./trialDITAs/enable_barbican_for_upgrade.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/enable_barbican_for_upgrade.dita:    <section><title>Enabling Barbican in previous versions of <keyword keyref="kw-hos"/></title>
./trialDITAs/enable_barbican_for_upgrade.dita:      Barbican was added in <keyword keyref="kw-hos-phrase-30"/> and is not available in 2.x
./trialDITAs/enable_barbican_for_upgrade.dita:        <li>For <keyword keyref="kw-hos"/> upgrades to <keyword keyref="kw-hos-phrase"/>:<ul
./trialDITAs/enable_barbican_for_upgrade.dita:            <li>If you had already added Barbican in your <keyword keyref="kw-hos-phrase-30"/>
./trialDITAs/enable_barbican_for_upgrade.dita:                keyref="kw-hos-phrase-30"/> installation, follow the process outlined here to add
./trialDITAs/enable_barbican_for_upgrade.dita:              Barbican after you have upgraded your cloud to <keyword keyref="kw-hos-phrase"/>.</li>
./trialDITAs/enable_barbican_for_upgrade.dita:      </ul>If you are upgrading to <keyword keyref="kw-hos-phrase"/> with your existing input model
./trialDITAs/enable_barbican_for_upgrade.dita:    <section id="tls"><title>TLS configuration </title>In <keyword keyref="kw-hos-phrase"/> internal
./trialDITAs/enable_barbican_for_upgrade.dita:        <keyword keyref="kw-hos-phrase-30"/> to the Barbican API node/host. Therefore, you will need
./trialDITAs/enable_new_cluster_compute_resource.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling a New Cluster as a Compute Resource </title>
./trialDITAs/enable_new_cluster_compute_resource.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/encrypted_storage.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Encryption of Passwords and Sensitive
./trialDITAs/encrypted_storage.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/encrypted_storage.dita:    <p> In <keyword keyref="kw-hos-phrase"/>, sensitive connection data is encrypted. The passwords
./trialDITAs/endpoints.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Separation of Public, Admin, and Internal Endpoints</title>
./trialDITAs/endpoints.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/endpoints.dita:      endpoint. <keyword keyref="kw-hos"/> services are configured to only connect to other services via
./trialDITAs/endpoints.dita:      public and internal access, <keyword keyref="kw-hos"/> will not allow a single
./trialDITAs/endpoints.dita:      the cloud. Within the cloud, <keyword keyref="kw-hos"/> services are configured to use the
./trialDITAs/entryscale_esx_kvm_vsa.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Entry-scale ESX, KVM with VSA Model</title>
./trialDITAs/entryscale_esx_kvm_vsa.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/entryscale_esx_kvm_vsa.dita:        <p>This example shows how to integrate <keyword keyref="kw-hos"/> with ESX, KVM with VSA in
./trialDITAs/entryscale_esx_kvm_vsa.dita:                <keyword keyref="kw-hos"/> as part of activating the vCenter cluster, and are
./trialDITAs/entryscale_esx_kvm_vsa_mml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Entry-scale ESX, KVM with VSA Model with
./trialDITAs/entryscale_esx_kvm_vsa_mml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/entryscale_ironic.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Entry-scale Cloud with Ironic Flat
./trialDITAs/entryscale_ironic.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/entryscale_ironic_multi_tenancy.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Entry-scale Cloud with Ironic
./trialDITAs/entryscale_ironic_multi_tenancy.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/entryscale_kvm_ceph.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Entry-scale KVM with Ceph Model</title>
./trialDITAs/entryscale_kvm_ceph.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/entryscale_kvm_ceph.dita:        which is included with the <keyword keyref="kw-hos"/> distro. You will need to make the
./trialDITAs/entryscale_kvm_ceph_onenetwork.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Entry-scale KVM with Ceph Model</title>
./trialDITAs/entryscale_kvm_ceph_onenetwork.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/entryscale_kvm_ceph_twonetwork.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Entry-scale KVM with Ceph Model with Two
./trialDITAs/entryscale_kvm_ceph_twonetwork.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/entryscale_kvm_ceph_twonetwork.dita:        <p><keyword keyref="kw-hos"/> Ceph is a unified storage system for various storage use cases
./trialDITAs/entryscale_kvm_ceph_twonetwork.dita:            included with the <keyword keyref="kw-hos"/> distro. You will need to make the changes
./trialDITAs/entryscale_kvm_dedicated.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Entry-scale KVM with VSA model with Dedicated
./trialDITAs/entryscale_kvm_dedicated.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/entryscale_kvm_vsa.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Entry-scale KVM with VSA Model</title>
./trialDITAs/entryscale_kvm_vsa.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/entryscale_kvm_vsa.dita:        <p>If you are using <keyword keyref="kw-hos"/> to install the operating system, then an
./trialDITAs/entryscale_kvm_vsa.dita:                keyref="modify_entryscale_kvm_vsa">Modifying the Entry-scale KVM with VSA model for
./trialDITAs/entryscale_swift.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Entry-scale Swift Model</title>
./trialDITAs/entryscale_swift.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/entryscale_swift.dita:    <p>This example shows how <keyword keyref="kw-hos"/> can be configured to provide a Swift-only
./trialDITAs/entryscale_swift.dita:    <p>If you are using <keyword keyref="kw-hos"/> to install the operating system, then an
./trialDITAs/eon_logging.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Debug Logging</title>
./trialDITAs/eon_logging.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/eon_service.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>ESX ON-Boarding Service (EON)</title>
./trialDITAs/eon_service.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/eon_service.dita:    <p>The <keyword keyref="kw-hos-phrase"/> EON (ESX on boarding) service is an inventory service, which
./trialDITAs/eon_service.dita:      a particular cluster to be a compute resource in <keyword keyref="kw-hos-phrase"/>, EON provisions the
./trialDITAs/eon_service.dita:    <p>The integration of EON with <keyword keyref="kw-hos-phrase"/> automates the steps for moving/adding a
./trialDITAs/esx_examples.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>ESX Examples</title>
./trialDITAs/esx_examples.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/esx_host_commissioning.dita:        <title><ph conkeyref="HOS-conrefs/product-title"/>ESX Host Commissioning</title>
./trialDITAs/esx_host_commissioning.dita:                <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/esx_mitaka.dita:  <title><ph conkeyref="HOS-conrefs/product-title">eatures Supported For VMware Driver For
./trialDITAs/esx_mitaka.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/esx_monitoring.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Monitoring Integration with OVSvApp Appliance</title>
./trialDITAs/esx_troubleshooting.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting the ESX</title>
./trialDITAs/esx_troubleshooting.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/esx_troubleshooting.dita:            <p>This section contains troubleshooting tasks for your <keyword keyref="kw-hos-tm"/>
./trialDITAs/esx_troubleshooting.dita:                <keyword keyref="kw-hos-version"/> for ESX.</p>
./trialDITAs/eula_30.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Software License Terms</title>
./trialDITAs/eula_30.dita:            <keyword keyref="kw-hos-tm"/> Software ("Software"), unless it is subject to a separate
./trialDITAs/eula_30.dita:      <title>Part 2: Additional License Authorizations for <keyword keyref="kw-hos"/>
./trialDITAs/eula_30.dita:        <b>Management Software</b> - means an <keyword keyref="kw-hos"/> management software running
./trialDITAs/eula_30.dita:              operate your <keyword keyref="kw-hos"/> based Cloud Fabric. The right to Use the
./trialDITAs/examine_details_planned_ring_changes_prior_deploy.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Examining Planned Ring Changes</title>
./trialDITAs/examine_details_planned_ring_changes_prior_deploy.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/example_config_changes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Changes to Example Configurations</title>
./trialDITAs/example_config_changes.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/example_config_changes.dita:        keyref="kw-hos-phrase"/> and the impact these changes have on a fresh install of <keyword keyref="kw-hos-version-40"/> as
./trialDITAs/example_config_changes.dita:        well as the implications for upgrade from <keyword keyref="kw-hos-phrase-30"/>.</p>
./trialDITAs/example_config_changes.dita:      <p> Alternatively, you can also re-use your existing <keyword keyref="kw-hos-phrase-30"/> configurations for a fresh
./trialDITAs/example_config_changes.dita:        installation of <keyword keyref="kw-hos-phrase"/> - this will create a cloud based on the
./trialDITAs/example_config_changes.dita:        new <keyword keyref="kw-hos-version-40"/> codebase, but missing new services that have been added and maintaining old services
./trialDITAs/example_config_changes.dita:        that have been either deprecated or removed. For more information on re-using version <keyword keyref="kw-hos-version-30"/>
./trialDITAs/example_config_changes.dita:        configuration files with a fresh <keyword keyref="kw-hos-version-40"/> installation, see the article <!-- TODO --> <!--<xref
./trialDITAs/example_config_changes.dita:          keyref="existing_v2_input_model">Re-Using Existing Configuration Files</xref>--> in the
./trialDITAs/example_config_changes.dita:<!--      <p>The structure of the example configurations provided in <keyword keyref="kw-hos-phrase"/>
./trialDITAs/example_config_changes.dita:      <p conkeyref="configure_lbaas/summary_p"/>
./trialDITAs/example_config_changes.dita:        see the article <xref keyref="configure_lbaas">Configuring Load Balancer as a
./trialDITAs/example_config_changes.dita:        in <xref keyref="changes_entryscale_kvm_vsa/control_plane"
./trialDITAs/example_config_changes.dita:        examples. See <xref keyref="changes_entryscale_kvm_vsa/octavia"
./trialDITAs/example_config_changes.dita:          keyref="changes_entryscale_kvm_vsa/neutron"
./trialDITAs/example_config_changes.dita:      <p>If you are upgrading from <keyword keyref="kw-hos-phrase-21"/> and want to enable support
./trialDITAs/example_config_changes.dita:        Input Model and then follow the installation instructions for <xref keyref="configure_lbaas"
./trialDITAs/example_config_changes.dita:      <p conkeyref="newfeatures40/new_feature_barbican"/>
./trialDITAs/example_config_changes.dita:        in <xref keyref="changes_entryscale_kvm_vsa/control_plane"
./trialDITAs/example_config_changes.dita:      <p>If you are upgrading from <keyword keyref="kw-hos-phrase-21"/> and want to enable support
./trialDITAs/example_config_changes.dita:          keyref="enable_barbican_for_upgrade">here</xref>. </p>
./trialDITAs/example_config_changes.dita:      <p conkeyref="newfeatures40/new_feature_dns"/>
./trialDITAs/example_config_changes.dita:        in <xref keyref="changes_entryscale_kvm_vsa/control_plane"
./trialDITAs/example_config_changes.dita:      <p>If you are upgrading from <keyword keyref="kw-hos-phrase-21"/> and want to enable support
./trialDITAs/example_config_changes.dita:        for Designate, you will need to follow the instructions <xref keyref="upgrade_designate"
./trialDITAs/example_config_changes.dita:          services have been changed as shown <xref keyref="changes_entryscale_kvm_vsa"
./trialDITAs/example_config_changes.dita:          have been changed as shown <xref keyref="changes_entryscale_kvm_vsa">here</xref></li>
./trialDITAs/example_config_changes.dita:      <p>If you are upgrading from <keyword keyref="kw-hos-phrase-21"/> and want to migrate to the
./trialDITAs/example_config_changes.dita:        Upgrade section <xref keyref="update_disk_models">here</xref>.</p>
./trialDITAs/example_config_changes.dita:      <p conkeyref="upgrade_ceph_model/ceph_upgrade_summary"/>
./trialDITAs/example_config_changes.dita:      <p>See <xref keyref="upgrade_ceph_model">Upgrade Ceph Model from Single Network to Three
./trialDITAs/example_config_changes.dita:      <p conkeyref="add_rados_gateway/ceph_radosgw_summary"/>
./trialDITAs/example_config_changes.dita:      <p>See <xref keyref="add_rados_gateway">Adding the Rados Gateway to Existing Cloud</xref> for
./trialDITAs/example_config_changes.dita:      <p id="esx_summary">The Entry-Scale ESX model has changed in <keyword keyref="kw-hos-phrase"/>
./trialDITAs/example_config_changes.dita:          keyref="entryscale_esx_kvm_vsa">Entry-scale ESX, KVM and VSA model</xref>.</p>
./trialDITAs/example_config_changes.dita:      <p>If you are upgrading from <keyword keyref="kw-hos-phrase-21"/> and want to migrate to a
./trialDITAs/example_config_changes.dita:          keyref="kw-hos-phrase"/> with a dedicated cluster for Metering, Monitoring and Logging.
./trialDITAs/example_config_changes.dita:        For more information, see <xref keyref="entryscale_esx_kvm_vsa_mml">Entry-scale ESX, KVM and
./trialDITAs/example_config_changes.dita:      <p>As this is a new model, there is no upgrade path from <keyword keyref="kw-hos-phrase-21"
./trialDITAs/example_config_changes.dita:      <p id="glance_summary">Glance Image Caching has been added in <keyword keyref="kw-hos-phrase"
./trialDITAs/example_config_changes.dita:          keyref="changes_entryscale_kvm_vsa/glance">here</xref> for an example.</p>
./trialDITAs/example_config_changes.dita:      <p>To add a disk as an image cache, follow the procedure for <xref keyref="configure_glance"
./trialDITAs/example_config_changes.dita:      <p>If you are upgrading from <keyword keyref="kw-hos-phrase-21"/> and want to enable image
./trialDITAs/example_config_changes.dita:        the procedure for <xref keyref="configure_glance">Configuring the Image Service</xref>.</p>
./trialDITAs/example_config_changes.dita:      <p conkeyref="install_l2_gateway/l2_summary"/>
./trialDITAs/example_config_changes.dita:      <p>The L2 gateway is not part of the example configurations in <keyword keyref="kw-hos-phrase"
./trialDITAs/example_config_changes.dita:          keyref="install_l2_gateway">Installing the L2 Gateway Agent for the Networking
./trialDITAs/example_config_changes.dita:          keyref="kw-hos-phrase"/> using the <codeph>audit-settings</codeph> stanza in
./trialDITAs/example_config_changes.dita:          keyref="changes_entryscale_kvm_vsa/cloudConfig">here</xref>. If you want to enable
./trialDITAs/example_config_changes.dita:        auditing, follow the instructions in the <xref keyref="audit_logs_overview">Audit Logging
./trialDITAs/example_config_changes.dita:          <codeph>swift-rings</codeph> as seen <xref keyref="changes_entryscale_kvm_vsa/swift_rings"
./trialDITAs/example_config_changes.dita:          >here</xref> in the example configurations in <keyword keyref="kw-hos-phrase"/>.
./trialDITAs/example_config_changes.dita:        Information on using Swift zones is available <xref keyref="swift_zones">here</xref>. </p>
./trialDITAs/example_config_changes.dita:      <sectiondiv conkeyref="ring_specifications/erasure_coded_intro"/> Information on erasure
./trialDITAs/example_config_changes.dita:      coding is available in <xref keyref="ring_specifications"/> and <xref
./trialDITAs/example_config_changes.dita:        keyref="storage_policies"/>. </section>
./trialDITAs/example_config_changes.dita:      <p conkeyref="security_features/tls_internal"/>
./trialDITAs/example_config_changes.dita:          keyref="changes_entryscale_kvm_vsa/tls-component-endpoints">network_groups.yml</xref>.</p>
./trialDITAs/example_config_changes.dita:      <p>If you are upgrading from <keyword keyref="kw-hos-phrase-21"/> and want to enable TLS for
./trialDITAs/example_config_changes.dita:        Internal API Endpoints, follow the instructions for <xref keyref="tls_config">TLS
./trialDITAs/example_config_changes.dita:      <p conkeyref="using_ipam/ipam_summary"/>
./trialDITAs/example_config_changes.dita:        for <keyword keyref="kw-hos-phrase"/>. If you want to enable this functionality, you need to
./trialDITAs/example_config_changes.dita:        follow the instructions for <xref keyref="using_ipam">Using IPAM Drivers in the Networking
./trialDITAs/example_config_changes.dita:      <p conkeyref="neutron_provider_networks/provider_network_summary"/>
./trialDITAs/example_config_changes.dita:          keyref="changes_entryscale_kvm_vsa/neutron"
./trialDITAs/example_config_changes.dita:      <p>For more information, see <xref keyref="neutron_provider_networks">Neutron Provider
./trialDITAs/example_configurations.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Example Configurations</title>
./trialDITAs/example_configurations.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/example_configurations.dita:    <p>The <keyword keyref="kw-hos-phrase"/> system ships with a collection of pre-qualified example
./trialDITAs/example_configurations.dita:    <p>The <keyword keyref="kw-hos"/> input model allows a wide variety of configuration parameters
./trialDITAs/example_configurations.dita:    <section id="example_configs"><title><keyword keyref="kw-hos"/> Example Configurations</title>
./trialDITAs/example_configurations.dita:      <!--<p><keyword keyref="kw-hos-phrase"/> ships with two classes of sample cloud models: examples
./trialDITAs/example_configurations.dita:      <p>The following pre-qualified examples are shipped with <keyword keyref="kw-hos-phrase"
./trialDITAs/example_configurations.dita:              <entry><xref keyref="entryscale_kvm_vsa">Entry-scale KVM with VSA model</xref></entry>
./trialDITAs/example_configurations.dita:              <entry><xref keyref="entryscale_kvm_dedicated">Entry-scale KVM with VSA model with Dedicated Cluster for Metering, Monitoring, and
./trialDITAs/example_configurations.dita:              <entry><xref keyref="entryscale_kvm_ceph">Entry-scale KVM with Ceph model</xref></entry>
./trialDITAs/example_configurations.dita:              <entry><xref keyref="midscale_kvm_vsa">Mid-scale KVM with VSA model</xref></entry>
./trialDITAs/example_configurations.dita:              <entry><xref keyref="entryscale_esx_kvm_vsa">Entry-scale ESX, KVM and VSA model</xref></entry>
./trialDITAs/example_configurations.dita:              <entry><xref keyref="entryscale_esx_kvm_vsa_mml">Entry-scale ESX, KVM and VSA model  with Dedicated Cluster for Metering, Monitoring, and
./trialDITAs/example_configurations.dita:              <entry><xref keyref="entryscale_swift">Entry-scale Swift-only model</xref></entry>
./trialDITAs/example_configurations.dita:              <entry><xref keyref="entryscale_ironic">Entry-scale Cloud with Ironic Flat Network</xref></entry>
./trialDITAs/example_configurations.dita:              <entry><xref keyref="entryscale_ironic_multi_tenancy">Entry-scale Cloud with Ironic Multi-Tenancy</xref></entry>
./trialDITAs/example_configurations.dita:          keyref="kw-hos"/> model.</p>
./trialDITAs/example_configurations.dita:        <li><xref keyref="localizing_inputmodel">Localizing the Input Model</xref></li>
./trialDITAs/example_configurations.dita:        <li><xref keyref="customizing_inputmodel">Customizing the Input Model</xref></li>
./trialDITAs/example_configurations.dita:      <p>In <keyword keyref="kw-hos-phrase"/> there are alternative configurations that we recommend
./trialDITAs/example_configurations.dita:        <li><xref keyref="entryscale_kvm_ceph_onenetwork">Entry-scale KVM with Ceph Model with One Network</xref></li>
./trialDITAs/example_configurations.dita:        <li><xref keyref="entryscale_kvm_ceph_twonetwork">Entry-scale KVM with Ceph Model with Two Networks</xref></li>
./trialDITAs/example_configurations.dita:        <li><xref keyref="standalone_deployer">Using a Standalone Lifecycle-Manager Node</xref></li>
./trialDITAs/example_configurations.dita:        <li><xref keyref="without_dvr">Configuring <keyword keyref="kw-hos"/> without DVR</xref></li>
./trialDITAs/example_configurations.dita:        <li><xref keyref="without_l3agent">Configuring <keyword keyref="kw-hos"/> with Provider VLANs and Physical Routers
./trialDITAs/example_configurations.dita:        <li><xref keyref="twosystems">Considerations When Installing Two Systems on One Subnet</xref></li>            
./trialDITAs/existing_v2_input_model.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Re-Using an Existing Version 2 Configuration
./trialDITAs/existing_v2_input_model.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/existing_v2_input_model.dita:                    keyref="kw-hos-phrase"/> compared to those in version 2.x. Many new services
./trialDITAs/existing_v2_input_model.dita:                install of <keyword keyref="kw-hos-phrase"/>, it may be easier to start with the new
./trialDITAs/existing_v2_input_model.dita:                example files and then <xref keyref="localizing_inputmodel">localize</xref> and
./trialDITAs/existing_v2_input_model.dita:                    <xref keyref="customizing_inputmodel">customize</xref> them to suit your setup. </p>
./trialDITAs/existing_v2_input_model.dita:                clean <keyword keyref="kw-hos-phrase"/> installation, making some minor changes as
./trialDITAs/existing_v2_input_model.dita:                    <keyword keyref="kw-hos-phrase"/>. You can see how to add these services in the
./trialDITAs/existing_v2_input_model.dita:                installation documentation <xref keyref="installation_overview">here</xref> and the
./trialDITAs/existing_v2_input_model.dita:                upgrade documentation <xref keyref="upgrade_toc">here</xref>. </p>
./trialDITAs/existing_v2_input_model.dita:            <p>When <keyword keyref="kw-hos-phrase"/> installs, it will automatically uninstall
./trialDITAs/existing_v2_input_model.dita:        <section conkeyref="upgrade_deprecated/addresses_ranges"/>
./trialDITAs/existing_v2_input_model.dita:                    keyref="kw-hos-phrase-30"/> installation. Refer to the <xref
./trialDITAs/existing_v2_input_model.dita:                    keyref="designate_install_overview/DesignateInstallOverview"/> for instructions
./trialDITAs/existing_v2_input_model.dita:            <sectiondiv conkeyref="update_disk_models/disk_sizing_summary"/>
./trialDITAs/existing_v2_input_model.dita:                Upgrade section <xref keyref="update_disk_models">here</xref>.</p>
./trialDITAs/existing_v2_input_model.dita:                    keyref="kw-hos-phrase"/> to use a three network model by default. If you choose
./trialDITAs/existing_v2_input_model.dita:                    <keyword keyref="kw-hos-phrase"/>. If you choose to re-use your existing
./trialDITAs/existing_v2_input_model.dita:            <p conkeyref="example_config_changes/esx_summary"/>
./trialDITAs/existing_v2_input_model.dita:            <p conkeyref="example_config_changes/glance_summary"/>
./trialDITAs/existing_v2_input_model.dita:                    keyref="configure_glance">Configuring the Image Service</xref>.</p>
./trialDITAs/existing_v2_input_model.dita:        <section conkeyref="example_config_changes/audit"/>
./trialDITAs/existing_v2_input_model.dita:            <p conkeyref="example_config_changes/swift_zones_summary"/>
./trialDITAs/existing_v2_input_model.dita:                Information on using Swift zones is available <xref keyref="swift_zones"
./trialDITAs/existing_v2_input_model.dita:            <sectiondiv conkeyref="ring_specifications/erasure_coded_intro"/> Information on erasure
./trialDITAs/existing_v2_input_model.dita:            coding is available in <xref keyref="ring_specifications"/> and <xref
./trialDITAs/existing_v2_input_model.dita:                keyref="storage_policies"/>. </section>
./trialDITAs/existing_v2_input_model.dita:            <p conkeyref="security_features/tls_internal"/>
./trialDITAs/existing_v2_input_model.dita:                Endpoints, follow the instructions for <xref keyref="tls_config">TLS
./trialDITAs/existing_v2_input_model.dita:        <section conkeyref="example_config_changes/infobloc_ipam"/>
./trialDITAs/existing_v2_input_model.dita:            <p conkeyref="neutron_provider_networks/provider_network_summary"/>
./trialDITAs/existing_v2_input_model.dita:                    keyref="neutron_provider_networks">Neutron Provider Networks</xref></p>. </section>
./trialDITAs/explain_txt.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>explain.txt</title>
./trialDITAs/explain_txt.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/F5BIG_IP.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Integrating F5 BIG-IP with LBaaS</title>
./trialDITAs/F5BIG_IP.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/F5BIG_IP.dita:          keyref="kw-hos-phrase"/> deployment by configuring an F5 BIG-IP device to run as a load
./trialDITAs/F5BIG_IP.dita:        private network from the <keyword keyref="kw-hos"/> cloud to the F5 BIG-IP appliance.</p>
./trialDITAs/F5BIG_IP.dita:      <note type="important"><keyword keyref="kw-hos-phrase"/> must be deployed before the F5
./trialDITAs/F5BIG_IP.dita:          <keyword keyref="kw-hos"/> by default, and because the F5 installation depends on the
./trialDITAs/F5BIG_IP.dita:        existence of <keyword keyref="kw-hos"/> Neutron environment.</note>
./trialDITAs/F5BIG_IP_install.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Integrate F5 BIG-IP</title>
./trialDITAs/F5BIG_IP_install.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/F5BIG_IP_install.dita:            type="important">If you need to redeploy <keyword keyref="kw-hos"/> in the future, you
./trialDITAs/F5BIG_IP_install.dita:        driver and the F5 OpenStack agent to the three <keyword keyref="kw-hos"/> controller
./trialDITAs/F5BIG_IP_preinst.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Pre-Integration Checklist</title>
./trialDITAs/F5BIG_IP_preinst.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/F5BIG_IP_preinst.dita:      <p>Before integrating the F5-BIG-IP driver into a <keyword keyref="kw-hos"/> deployment, the
./trialDITAs/F5BIG_IP_preinst.dita:      <note type="important"><keyword keyref="kw-hos"/> must be deployed before the F5 installation
./trialDITAs/F5BIG_IP_preinst.dita:          keyref="kw-hos"/> by default, and because the F5 installation depends on the existence of
./trialDITAs/F5BIG_IP_preinst.dita:          <keyword keyref="kw-hos"/> Neutron environment.</note>
./trialDITAs/F5BIG_IP_preinst.dita:      <p><keyword keyref="kw-hos"/> supports the F5 hardware configurations listed in the <xref
./trialDITAs/F5BIG_IP_preinst.dita:        BIG-IP device with <keyword keyref="kw-hos"/>:</p>
./trialDITAs/F5BIG_IP_preinst.dita:      <note type="important"><keyword keyref="kw-hos"/> must be deployed before the F5 installation
./trialDITAs/F5BIG_IP_preinst.dita:          keyref="kw-hos"/> by default, and because the F5 installation depends on the existence of
./trialDITAs/F5BIG_IP_preinst.dita:          <keyword keyref="kw-hos"/> Neutron environment.</note>
./trialDITAs/F5BIG_IP_preinst.dita:      <p>The Helion team integrated F5 Networks BIG-IP into an <keyword keyref="kw-hos"/> deployment
./trialDITAs/F5BIG_IP_preinst.dita:              keyref="kw-hos"/></xref></li>
./trialDITAs/F5BIG_IP_preinst.dita:      <p>The recommended configuration is to have both the <keyword keyref="kw-hos"/> controller
./trialDITAs/F5BIG_IP_preinst.dita:        during the <keyword keyref="kw-hos"/> installation process. The Management network is the
./trialDITAs/F5BIG_IP_preinst.dita:        backbone for the majority of <keyword keyref="kw-hos"/> management communications. Control
./trialDITAs/F5BIG_IP_preinst.dita:          VLAN from the <keyword keyref="kw-hos"/> Management network. You can use any network as
./trialDITAs/F5BIG_IP_preinst.dita:        virtual machines. In the sample <keyword keyref="kw-hos"/> definition, the network group is
./trialDITAs/F5BIG_IP_preinst.dita:              <entry><b>Add the F5 appliance to your <keyword keyref="kw-hos"/>
./trialDITAs/F5BIG_IP_verify.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Verify F5 BIG-IP Integration</title>
./trialDITAs/F5BIG_IP_verify.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/faqs.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Frequently Asked Questions</title>
./trialDITAs/faqs.dita:            <entry>How do I take advantage of <keyword keyref="kw-hos"/> Failure Zones in Ceph OSD
./trialDITAs/faqs.dita:            <entry>Hardware load balancers are not part of <keyword keyref="kw-hos"/></entry>
./trialDITAs/faqs.dita:            <entry>Are Jumbo frames supported for <keyword keyref="kw-hos"/> networking?</entry>
./trialDITAs/faqs.dita:            <entry>Can I get finer grained security with <keyword keyref="kw-hos"/>? In other clouds
./trialDITAs/faqs.dita:            <entry>What tools / examples are available in <keyword keyref="kw-hos"/> for setting up
./trialDITAs/faqs.dita:            <entry>How do I gracefully bring down the entire <keyword keyref="kw-hos"/> cloud
./trialDITAs/faqs.dita:            <entry>How do I upgrade/update <keyword keyref="kw-hos"/> without disrupting my
./trialDITAs/faqs.dita:            <entry>How do I bring up the entire <keyword keyref="kw-hos"/> cloud after a power
./trialDITAs/faqs.dita:            <entry>How do I achieve control plane HA with <keyword keyref="kw-hos"/>? (How should I
./trialDITAs/faqs.dita:            <entry>What auditing features are available in <keyword keyref="kw-hos"/>? My company
./trialDITAs/faqs.dita:            <entry>Does <keyword keyref="kw-hos"/> support the concept of OpenStack Cells?</entry>
./trialDITAs/faqs.dita:              recommendations and <keyword keyref="kw-hos"/> supported configurations.</entry>
./trialDITAs/faqs.dita:            <entry>Does <keyword keyref="kw-hos"/> support Tricircle?</entry>
./trialDITAs/faqs.dita:              recommendations and <keyword keyref="kw-hos"/> supported configurations.</entry>
./trialDITAs/faqs.dita:            <entry>How can I install <keyword keyref="kw-hos"/> on a single machine?</entry>
./trialDITAs/faqs.dita:            <entry>Patches are included in each <keyword keyref="kw-hos"/> distribution. They are
./trialDITAs/faqs.dita:            <entry>Why is <keyword keyref="kw-hos"/> better than straight OpenStack? </entry>
./trialDITAs/faqs.dita:                keyref="kw-hos"/>?</entry>
./trialDITAs/faqs.dita:              Does <keyword keyref="kw-hos"/>'s Keystone identity service support fernet?</entry>
./trialDITAs/faqs.dita:            <entry><keyword keyref="kw-hos"/>/ESX Which version of Distributed vSwitches does EON
./trialDITAs/faqs.dita:            <entry><keyword keyref="kw-hos"/>/ESX My ESX servers do not connect to the required
./trialDITAs/faqs.dita:            <entry><keyword keyref="kw-hos"/>/ESX Can I use advanced features of dvSwtches v6.0 such
./trialDITAs/faqs.dita:            <entry><keyword keyref="kw-hos"/>/ESX How do I add a server in a cluster which was
./trialDITAs/faqs.dita:            <entry><keyword keyref="kw-hos"/>/ESX How do I configure tenant VLANs rather than
./trialDITAs/faqs.dita:            <entry><keyword keyref="kw-hos"/>/ESX Can I use dvSwitches v 6.0.0 when running ESX 6
./trialDITAs/faqs.dita:            <entry><keyword keyref="kw-hos"/>/ESX Can I have the service console vmkernel interface
./trialDITAs/faqs.dita:            <entry><keyword keyref="kw-hos"/>/ESX Can I have dedicated NICs for carrying the tenant
./trialDITAs/faqs.dita:            <entry>Cinder availability zones are not supported even in <keyword keyref="kw-hos"/>
./trialDITAs/faqs.dita:            <entry>How do take the advantage of <keyword keyref="kw-hos"/> Failures Zones in Ceph
./trialDITAs/faqs.dita:            <entry>Erasure coding is a non-core feature in <keyword keyref="kw-hos"/> 3.0 which is
./trialDITAs/faqs.dita:              in <keyword keyref="kw-hos"/> 3.0. Upstream Ceph documention has steps on how to
./trialDITAs/faqs.dita:            <entry><keyword keyref="kw-hos"/> 2.1 - <xref href="bura/restore_previous_backup.dita"
./trialDITAs/faqs.dita:              there tools in <keyword keyref="kw-hos"/> to check the state of those storage
./trialDITAs/faqs.dita:                <keyword keyref="kw-hos-version-30"/>?). The same tool is used by Swift for doing
./trialDITAs/faqs.dita:            <entry>In <keyword keyref="kw-hos"/> 3.0, default Ceph CRUSH map does not aware about
./trialDITAs/faqs.dita:                <keyword keyref="kw-hos"/> failure zones. One need to edit the default CRUSH map to
./trialDITAs/faqs.dita:            <entry>This is currently not supported in <keyword keyref="kw-hos"/> 3.0. There is a
./trialDITAs/faqs.dita:            <entry>Is Jumbo frames supported for <keyword keyref="kw-hos"/> networking?</entry>
./trialDITAs/faqs.dita:            <entry>Yes, but <keyword keyref="kw-hos"/> default CRUSH map does not do this. You need
./trialDITAs/faqs.dita:              command works in <keyword keyref="kw-hos"/> 2.1 as well.</entry>
./trialDITAs/fcoeinterfaces.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->fcoe-interfaces</title>
./trialDITAs/fcoeinterfaces.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/fcoeinterfaces.dita:                <xref keyref="configobj_nicmappings">NIC Mappings</xref>).</p>
./trialDITAs/filesystem_label.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Verifying a Swift File System Label</title>
./trialDITAs/filesystem_label.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/filesystem_usage_nowipe.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting Swift File System Usage
./trialDITAs/firewallconfiguration.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Firewall Configuration</title>
./trialDITAs/firewallconfiguration.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/firewall_info_yml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>firewall_info.yml</title>
./trialDITAs/firewall_info_yml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/firewallrules.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Firewall Rules</title>
./trialDITAs/firewallrules.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/fwaas.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using Firewall as a Service (FWaaS)</title>
./trialDITAs/fwaas.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/fwaas.dita:      <p><keyword keyref="kw-hos"/> must be installed. </p>
./trialDITAs/fwaas.dita:      <title><keyword keyref="kw-hos-phrase"/> FWaaS Configuration</title>
./trialDITAs/general_procedures.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Whole Cloud Maintenance</title>
./trialDITAs/general_troubleshooting.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>General Troubleshooting</title>
./trialDITAs/general_upgrade.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>General Upgrade Steps</title>
./trialDITAs/general_upgrade.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/general_upgrade.dita:    <p>The following steps are the general steps applying to <keyword keyref="kw-hos"/> services
./trialDITAs/gui_installer.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installing via the GUI </title>
./trialDITAs/gui_installer.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/gui_installer.dita:    <section><keyword keyref="kw-hos-phrase"/> comes with a UI installer for installing your cloud
./trialDITAs/gui_installer.dita:      installation of <keyword keyref="kw-hos"/> are run for you behind the scenes. </section>
./trialDITAs/gui_installer.dita:        <li>Choose your <xref keyref="example_configurations">cloud model/example</xref> template.
./trialDITAs/gui_installer.dita:            included in the <keyword keyref="kw-hos-phrase"/> package. You may find the instructions
./trialDITAs/gui_installer.dita:            <li><xref keyref="install_entryscale_kvm">Operating system install help
./trialDITAs/gui_installer.dita:            <li><xref keyref="installing_esx_kvm_vsa">Operating system install help
./trialDITAs/gui_installer.dita:            keyref="install_entryscale_esx_kvm_vsa/optional-eon">Step 4
./trialDITAs/gui_installer.dita:          <li><xref keyref="input_model"><keyword keyref="kw-hos-phrase"/> Input
./trialDITAs/header_poisoning.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Preventing Host Header Poisoning</title>
./trialDITAs/header_poisoning.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/header_poisoning.dita:    <section> Depending on the environment and context of your <keyword keyref="kw-hos"/> deployment, it
./trialDITAs/high_availability.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>High Availability</title>
./trialDITAs/high_availability.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/high_availability.dita:      <p>By design, <keyword keyref="kw-hos"/> strives to create a system architecture resilient to
./trialDITAs/high_availability.dita:        <p><keyword keyref="kw-hos"/> Compute hypervisors do not support transparent high
./trialDITAs/high_availability.dita:      <p>The <keyword keyref="kw-hos"/> installer deploys highly available configurations of
./trialDITAs/high_availability.dita:            id="image_hrh_tvf_4w" height="700"/><p>The <keyword keyref="kw-hos"/> installer deploys
./trialDITAs/high_availability.dita:      <sectiondiv outputclass="HAsliderText">The <keyword keyref="kw-hos"/> installer deploys highly
./trialDITAs/high_availability.dita:      <p>In <keyword keyref="kw-hos"/>, the primary and secondary L3 agents run continuously, and
./trialDITAs/high_availability.dita:          <keyword keyref="kw-hos-phrase-30"/> uses keepalived package of the pacemaker resource
./trialDITAs/high_availability.dita:      <p><keyword keyref="kw-hos"/> offers APIs, CLIs and Horizon UIs for the administrator to
./trialDITAs/high_availability.dita:      <note>By default, <keyword keyref="kw-hos"/> is deployed in a single availability zone upon
./trialDITAs/high_availability.dita:                  HA Proxy type load balancer in your application VMs until <keyword keyref="kw-hos"
./trialDITAs/high_availability.dita:            <keyword keyref="kw-hos"/> platform services such as Designate, the DNS service. </li>
./trialDITAs/high_availability.dita:        <p>The lifecycle manager in <keyword keyref="kw-hos"/> is not highly-available. The
./trialDITAs/horizon_domainadmin.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Domain Admin Activities with the
./trialDITAs/horizon_ssl_auth.dita:                for accessing the Horizon dashboard in <keyword keyref="kw-hos-phrase"/>. This
./trialDITAs/horizon_ssl_auth.dita:                    in <keyword keyref="kw-hos-phrase"/>. More information on core and non-core
./trialDITAs/horizon_ssl_auth.dita:                        <li>User directs a web browser to the <keyword keyref="kw-hos"/> Horizon login landing
./trialDITAs/html_representation.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>HTML Representation</title>
./trialDITAs/html_representation.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/huge_pages.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Huge Pages</title>
./trialDITAs/huge_pages.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/hw_support_matrix.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Hardware and Software Support Matrix</title>
./trialDITAs/hw_support_matrix.dita:        <keyword keyref="kw-hos-phrase"/>.</shortdesc></abstract>
./trialDITAs/hw_support_matrix.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/hw_support_matrix.dita:          keyref="kw-hos-phrase"/></p>
./trialDITAs/identify_ring_builder.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Identifying the Swift Ring Building
./trialDITAs/identify_ring_builder.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/identity_admin.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Administering the Identity Service</title>
./trialDITAs/identity_admin.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/identity_admin.dita:        lifecycle manager. Also, <keyword keyref="kw-hos"/> installs convenient *.osrc files
./trialDITAs/identity_benchmark.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Keystone Identity Performance
./trialDITAs/identity_benchmark.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/identity_benchmark.dita:      provide a reference for <keyword keyref="kw-hos"/> Keystone users to know how the system
./trialDITAs/identity_benchmark.dita:            <li><keyword keyref="kw-hos"/> 2.0</li>
./trialDITAs/identity_benchmark.dita:            <li><keyword keyref="kw-hos"/> 1.1.1</li>
./trialDITAs/identity_benchmark.dita:      is above the configurable subsystems (e.g. token, identity, etc). <keyword keyref="kw-hos"/>
./trialDITAs/identity_benchmark.dita:        <keyword keyref="kw-hos-phrase-20"/> with domain-specific LDAP back end</title>
./trialDITAs/identity_benchmark.dita:      <p><b>LDAP user lookup performance - <keyword keyref="kw-hos-phrase-20"/> Keystone user lookup
./trialDITAs/identity_benchmark.dita:      LDAP user lookup by name for <keyword keyref="kw-hos"/>. The study of Keystone-LDAP query
./trialDITAs/identity_benchmark.dita:            keyref="kw-hos-phrase-20"/> is much flatter than for <keyword keyref="kw-hos"/>
./trialDITAs/identity_benchmark.dita:          <keyword keyref="kw-hos-phrase-20"/> behaves between 10 and several thousand times better
./trialDITAs/identity_benchmark.dita:          than <keyword keyref="kw-hos-phrase-111"/> for LDAP user lookup operations, especially for
./trialDITAs/identity_benchmark.dita:      <p><b>LDAP user lookup performance - concurrency impact on <keyword keyref="kw-hos-phrase-20"
./trialDITAs/identity_benchmark.dita:          /> Keystone</b></p> Figures 3.a and 3.b represent <keyword keyref="kw-hos-phrase-20"/>
./trialDITAs/identity_benchmark.dita:      <p>Figure 3.a LDAP User lookup by name for <keyword keyref="kw-hos-phrase-20"/> under
./trialDITAs/identity_benchmark.dita:      <p>Figure 3.b LDAP User lookup by name for <keyword keyref="kw-hos-phrase-20"/> under
./trialDITAs/identity_benchmark.dita:            <keyword keyref="kw-hos"/> versions and cached conditions. </li>
./trialDITAs/identity_benchmark.dita:            keyref="kw-hos-phrase-20"/> performs slightly better than <keyword keyref="kw-hos"/>
./trialDITAs/identity_benchmark.dita:          especially for <keyword keyref="kw-hos-phrase-20"/> (see further detail in Figure 6.b).
./trialDITAs/identity_benchmark.dita:          vary for <keyword keyref="kw-hos"/> versions and cached conditions. </li>
./trialDITAs/identity_benchmark.dita:            keyref="kw-hos-phrase-20"/> performs slightly better than <keyword keyref="kw-hos"/>
./trialDITAs/identity_benchmark.dita:          improvement by cache for <keyword keyref="kw-hos-phrase-20"/> is even larger than for
./trialDITAs/identity_benchmark.dita:            <keyword keyref="kw-hos"/> 1.1.1 (see further detail in Figure 6.b and percentage Figure
./trialDITAs/identity_benchmark.dita:        <li>The improvement for non-concurrent <keyword keyref="kw-hos-phrase-20"/> project-scoped
./trialDITAs/identity_benchmark.dita:            keyref="kw-hos-phrase-20"/> about 40%. The improvement percentages stay stable for cases
./trialDITAs/identity_benchmark.dita:        <li>The improvement for non-concurrent <keyword keyref="kw-hos"/> 1.1.1 project-scoped token
./trialDITAs/identity_benchmark.dita:            keyref="kw-hos"/> 1.1.1 it is approximately 20%-28%. The improvement decreases with
./trialDITAs/identity_benchmark.dita:      <p><b>Concurrency impact on <keyword keyref="kw-hos-phrase-20"/> Keystone</b></p>
./trialDITAs/identity_benchmark.dita:          keyref="kw-hos-phrase-20"/> performance for project-scoped token creation.</p>
./trialDITAs/identity_benchmark.dita:        <li>The improvement by cache for <keyword keyref="kw-hos-phrase-20"/> project-scoped token
./trialDITAs/identity_benchmark.dita:          <keyword keyref="kw-hos-phrase-20"/> behaves between 10 and several thousand times better
./trialDITAs/identity_benchmark.dita:          than <keyword keyref="kw-hos-phrase-111"/> for LDAP user lookup operations, The greatest
./trialDITAs/identity_benchmark.dita:          number of domain users in LDAP, but response time slopes vary for <keyword keyref="kw-hos"
./trialDITAs/identity_benchmark.dita:        <li><keyword keyref="kw-hos-phrase-20"/> performs slightly better than <keyword
./trialDITAs/identity_benchmark.dita:            keyref="kw-hos"/> 1.1.1, within 5% for project-scoped token creation. </li>
./trialDITAs/identity_benchmark.dita:            <li>The improvement for non-concurrent <keyword keyref="kw-hos-phrase-20"/>
./trialDITAs/identity_benchmark.dita:            <li>The improvement for non-concurrent <keyword keyref="kw-hos"/> 1.1.1 project-scoped
./trialDITAs/identity_benchmark.dita:            <li>The improvement by cache for <keyword keyref="kw-hos-phrase-20"/> project-scoped
./trialDITAs/identity_limitations.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Identity Service Notes and Limitations</title>
./trialDITAs/identity_limitations.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/identity_limitations.dita:        <li><keyword keyref="kw-hos"/> MFA support is a custom configuration requiring HPE
./trialDITAs/identity_limitations.dita:        <li>MFA drivers are not included with <keyword keyref="kw-hos"/> and need to be provided by
./trialDITAs/identity_limitations.dita:          functional. It is a non-core function in <keyword keyref="kw-hos"/> and is not ready for either
./trialDITAs/identity_limitations.dita:      <p>Keystone in OpenStack Mitaka (on which <keyword keyref="kw-hos-phrase"/> is based) is known
./trialDITAs/identity_limitations.dita:        many additional database queries per token operation. In <keyword keyref="kw-hos-phrase"/>,
./trialDITAs/identity_limitations.dita:                <entry>In  <keyword keyref="kw-hos-phrase"/>  (secs/request)</entry>
./trialDITAs/identity_limitations.dita:                <entry>In  <keyword keyref="kw-hos-phrase-30"/> (secs/request)</entry>
./trialDITAs/identity_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>The Identity Service</title>
./trialDITAs/identity_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/identity_overview.dita:      <p>The <keyword keyref="kw-hos"/> Identity service, based on the OpenStack Keystone API, is
./trialDITAs/identity_overview.dita:          Keystone, it has not yet been certified by the <keyword keyref="kw-hos"/> engineering team
./trialDITAs/identity_overview.dita:          and is an experimental feature in <keyword keyref="kw-hos"/>.</note></p>
./trialDITAs/identity_overview.dita:        Kilo release but not yet validated for <keyword keyref="kw-hos"/>.--></p>
./trialDITAs/identity_overview.dita:        has not yet been certified or documented for <keyword keyref="kw-hos"/>.</p></section>
./trialDITAs/identity_reconfigure.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Reconfiguring the Identity Service</title>
./trialDITAs/identity_reconfigure.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/identity_reconfigure.dita:        configuration options for the Identity service. </p><keyword keyref="kw-hos"/> lets you
./trialDITAs/identity_reconfigure.dita:            <p><keyword keyref="kw-hos-phrase"/> has the following token expiration setting , which
./trialDITAs/identity_reconfigure.dita:      <p><keyword keyref="kw-hos-phrase"/> supports UUID tokens by default. Fernet tokens are
./trialDITAs/identity_reconfigure.dita:      <note>Tempest doesn't work with Fernet tokens in <keyword keyref="kw-hos-phrase"/>. If Fernet
./trialDITAs/increase_timeout.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Increasing the Swift Node Timeout Value</title>
./trialDITAs/input_model_change_existing_rings.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Applying Input Model Changes to Existing
./trialDITAs/input_model_change_existing_rings.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/input_model_change_existing_rings.dita:                <p>In <keyword keyref="kw-hos-phrase"/>, when you remove servers from the input
./trialDITAs/input_model_changes40.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Changes to the Input Model for <keyword keyref="kw-hos-phrase-40"/></title>
./trialDITAs/input_model_changes40.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/input_model_changes40.dita:    <p>The following is a list of links to all the changes in the Input Model for <keyword keyref="kw-hos-phrase-40"/>.</p>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="concept_memorymodel">Memory Model</xref></li>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="concept_cpumodel">CPU Model</xref></li>
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="concept_virtual_machines_as_servers">Virtual Machines as Servers</xref></li>
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_cloud/audit-settings">audit-settings</xref></li>
./trialDITAs/input_model_changes40.dita:              <li audience="INTERNAL"><xref keyref="configobj_multiple_control_planes">Multiple Control Planes</xref></li>
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_load_balancer_definitions">Load Balancer Definitions in Control Planes</xref></li>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="configobj_load_balancers">Load Balancers</xref></li>
./trialDITAs/input_model_changes40.dita:          <li audience="INTERNAL"><xref keyref="configobj_regions">Regions</xref></li>
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_serverroles/memory-model">memory-model</xref></li>
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_serverroles/cpu-model">cpu-model</xref></li>
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_disk_sizing_vms">Disk Sizing for Virtual Machine Servers</xref></li>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="configobj_memorymodels">Memory Models</xref>
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_huge_pages">Huge Pages</xref></li>
./trialDITAs/input_model_changes40.dita:              <li audience="INTERNAL"><xref keyref="configobj_memory_sizing_vms">Memory Sizing for Virtual Machine Servers</xref></li>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="configobj_cpumodels">CPU Models</xref>
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_cpu_assignments">CPU Assignments</xref></li>
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_cpu_usage">CPU Usage</xref></li>
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_cpu_components_roles">Components and Roles in the CPU Model</xref></li>    
./trialDITAs/input_model_changes40.dita:              <li audience="INTERNAL"><xref keyref="configobj_cpu_sizing_vms">CPU sizing for virtual machine servers</xref></li>  
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="configobj_interfacemodels">Interface Models</xref>
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_network_interfaces">network-interfaces</xref>
./trialDITAs/input_model_changes40.dita:                  <li><xref keyref="configobj_network_interfaces_device">network-interfaces device</xref>             
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_bonddata">Bonding</xref>
./trialDITAs/input_model_changes40.dita:                  <li><xref keyref="configobj_bonddataoptionsopenvswitch">Bond Data Options for the "openvswitch" Provider</xref> 
./trialDITAs/input_model_changes40.dita:                  <li audience="INTERNAL"><xref keyref="configobj_bonddataoptionswindows">Bond Data Options for the "windows" Provider</xref> 
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_dpdkdevices">dpdk-devices</xref>
./trialDITAs/input_model_changes40.dita:                  <li><xref keyref="configobj_dpdkdevices_devices">dpdk-devices devices</xref>             
./trialDITAs/input_model_changes40.dita:                  <li><xref keyref="configobj_dpdk_componentoptions">DPDK component-options for the openvswitch component</xref>             
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_nicmappings/nic-device-type">nic-device-type</xref>             
./trialDITAs/input_model_changes40.dita:              <li audience="INTERNAL"><xref keyref="configobj_nicmappings_vms">NIC Mappings for Virtual Machine Servers</xref></li>
./trialDITAs/input_model_changes40.dita:             <li><xref keyref="configobj_lb_defs_networkgroups">Load Balancer Definitions in Network Groups</xref></li>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="configobj_neutron_network_tags">Neutron network-tags</xref></li>
./trialDITAs/input_model_changes40.dita:              <li><xref keyref="configobj_neutron_external_networks">neutron-external-networks</xref>             
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="configobj_configurationdata_swift">Swift Configuration Data</xref></li>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="services_components">Services and Service Components</xref></li>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="service_info_yml">service_info.yml</xref></li>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="control_plane_topology_yml">control_plane_topology.yml</xref></li>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="network_topology_yml">network_topology.yml</xref></li>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="region_topology_yml">region_topology.yml</xref></li>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="service_topology_yml">service_topology.yml</xref></li>
./trialDITAs/input_model_changes40.dita:          <li><xref keyref="html_representation">HTML Representation</xref></li>
./trialDITAs/input_model.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Input Model</title>
./trialDITAs/input_model.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/input_model.dita:                <li><xref keyref="input_model_introduction">Introduction to the Input Model</xref></li>
./trialDITAs/input_model.dita:                <li><xref keyref="concepts"><keyword keyref="kw-hos-phrase"/> Concepts</xref>
./trialDITAs/input_model.dita:                        <li><xref keyref="concept_cloud">Cloud</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="concept_controlplanes">Control Planes</xref>
./trialDITAs/input_model.dita:                                <li><xref keyref="concept_controlplanes_regions">Control Planes and
./trialDITAs/input_model.dita:                        <li><xref keyref="concept_services">Services</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="concept_serverroles">Server Roles</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="concept_diskmodel">Disk Model</xref></li>       
./trialDITAs/input_model.dita:                        <li><xref keyref="concept_memorymodel">Memory Model</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="concept_cpumodel">CPU Model</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="concept_servers">Servers</xref>
./trialDITAs/input_model.dita:                             <li><xref keyref="concept_virtual_machines_as_servers">Virtual Machines as Servers</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="concept_servergroups">Server Groups</xref>
./trialDITAs/input_model.dita:                                <li><xref keyref="concept_servergroups_failurezones">Server Groups and Failure
./trialDITAs/input_model.dita:                                <li><xref keyref="concept_servergroups_networks">Server Groups and
./trialDITAs/input_model.dita:                        <li><xref keyref="concept_networking">Networking</xref>
./trialDITAs/input_model.dita:                                <li><xref keyref="concept_networkgroups">Network Groups</xref>
./trialDITAs/input_model.dita:                                        <li><xref keyref="concept_loadbalancers">Load Balancers</xref></li>
./trialDITAs/input_model.dita:                                        <li><xref keyref="concept_networktags">Network Tags</xref></li>
./trialDITAs/input_model.dita:                                <li><xref keyref="concept_networks">Networks</xref></li>
./trialDITAs/input_model.dita:                                <li><xref keyref="concept_interfacemodel">Interface Model</xref></li>
./trialDITAs/input_model.dita:                                <li><xref keyref="concept_nicmapping">NIC Mapping</xref></li>
./trialDITAs/input_model.dita:                                <li><xref keyref="concept_firewallconfiguration">Firewall
./trialDITAs/input_model.dita:                <li><xref keyref="configurationobjects"><keyword keyref="kw-hos-phrase"/> Configuration
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_cloud">Cloud</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_controlplane">Control Plane</xref>
./trialDITAs/input_model.dita:                                <li><xref keyref="configobj_clusters">Clusters</xref></li>
./trialDITAs/input_model.dita:                                <li><xref keyref="configobj_resources">Resources</xref></li>
./trialDITAs/input_model.dita:                                <li audience="INTERNAL"><xref keyref="configobj_multiple_control_planes">Multiple Control Planes</xref></li>
./trialDITAs/input_model.dita:                                <li><xref keyref="configobj_load_balancer_definitions">Load Balancer Definitions in Control Planes</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_load_balancers">Load Balancers</xref></li>
./trialDITAs/input_model.dita:                        <li audience="INTERNAL"><xref keyref="configobj_regions">Regions</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_servers">Servers</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_servergroups">Server Groups</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_serverroles">Server Roles</xref>
./trialDITAs/input_model.dita:                              <li><xref keyref="configobj_serverroles/memory-model">memory-model</xref></li>
./trialDITAs/input_model.dita:                              <li><xref keyref="configobj_serverroles/cpu-model">cpu-model</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_diskmodels">Disk Models</xref>
./trialDITAs/input_model.dita:                                <li><xref keyref="configobj_volumegroups">Volume Groups</xref></li>
./trialDITAs/input_model.dita:                                <li><xref keyref="configobj_devicegroups">Device Groups</xref></li>
./trialDITAs/input_model.dita:                                <li audience="INTERNAL"><xref keyref="configobj_disk_sizing_vms">Disk Sizing for Virtual Machine Servers</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_memorymodels">Memory Models</xref>
./trialDITAs/input_model.dita:                              <li><xref keyref="configobj_huge_pages">Huge Pages</xref></li>
./trialDITAs/input_model.dita:                              <li audience="INTERNAL"><xref keyref="configobj_memory_sizing_vms">Memory Sizing for Virtual Machine Servers</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_cpumodels">CPU Models</xref>
./trialDITAs/input_model.dita:                              <li><xref keyref="configobj_cpu_assignments">CPU Assignments</xref></li>
./trialDITAs/input_model.dita:                              <li><xref keyref="configobj_cpu_usage">CPU Usage</xref></li>
./trialDITAs/input_model.dita:                              <li><xref keyref="configobj_cpu_components_roles">Components and Roles in the CPU Model</xref></li>    
./trialDITAs/input_model.dita:                              <li audience="INTERNAL"><xref keyref="configobj_cpu_sizing_vms">CPU sizing for virtual machine servers</xref></li>  
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_interfacemodels">Interface Models</xref>
./trialDITAs/input_model.dita:                              <li><xref keyref="configobj_network_interfaces">network-interfaces</xref>
./trialDITAs/input_model.dita:                                  <li><xref keyref="configobj_network_interfaces_device">network-interfaces device</xref>             
./trialDITAs/input_model.dita:                                <li><xref keyref="configobj_bonddata">Bonding</xref>
./trialDITAs/input_model.dita:                                        <li><xref keyref="configobj_bonddataoptionslinux">Bond configuration options for the &quot;linux&quot; provider</xref> 
./trialDITAs/input_model.dita:                                        <li><xref keyref="configobj_bonddataoptionsopenvswitch">Bond Data Options for the "openvswitch" Provider</xref> 
./trialDITAs/input_model.dita:                                         <li audience="INTERNAL"><xref keyref="configobj_bonddataoptionswindows">Bond Data Options for the "windows" Provider</xref> 
./trialDITAs/input_model.dita:                                <li><xref keyref="configobj_dpdkdevices">dpdk-devices</xref>
./trialDITAs/input_model.dita:                                        <li><xref keyref="configobj_dpdkdevices_devices">dpdk-devices devices</xref>             
./trialDITAs/input_model.dita:                                        <li><xref keyref="configobj_dpdk_componentoptions">DPDK component-options for the openvswitch component</xref>             
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_nicmappings">NIC Mappings</xref>
./trialDITAs/input_model.dita:                              <li><xref keyref="configobj_nicmappings/nic-device-type">nic-device-type</xref>             
./trialDITAs/input_model.dita:                              <li audience="INTERNAL"><xref keyref="configobj_nicmappings_vms">NIC Mappings for Virtual Machine Servers</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_networkgroups">Network Groups</xref>
./trialDITAs/input_model.dita:                                <li><xref keyref="configobj_lb_defs_networkgroups">Load Balancer Definitions in Network Groups</xref></li>
./trialDITAs/input_model.dita:                                <li><xref keyref="configobj_networktags">Network Tags</xref></li>
./trialDITAs/input_model.dita:                                <li><xref keyref="configobj_mtu">MTU</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_networks">Networks</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="configobj_firewallrules">Firewall Rules</xref>
./trialDITAs/input_model.dita:                                <li><xref keyref="configobj_rule">Rule</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="passthrough">Passthrough</xref></li>
./trialDITAs/input_model.dita:                         <li><xref keyref="configobj_configurationdata">Configuration Data</xref>
./trialDITAs/input_model.dita:                                  <li><xref keyref="configobj_neutron_network_tags">Neutron network-tags</xref></li>
./trialDITAs/input_model.dita:                                  <li><xref keyref="configobj_configurationdata_neutron">Neutron Configuration Data</xref> 
./trialDITAs/input_model.dita:                                      <li><xref keyref="configobj_neutron_external_networks">neutron-external-networks</xref>             
./trialDITAs/input_model.dita:                                 <li><xref keyref="configobj_configurationdata_octavia">Octavia Configuration Data</xref></li>
./trialDITAs/input_model.dita:                                   <li><xref keyref="configobj_configurationdata_ironic">Ironic Configuration Data</xref></li> 
./trialDITAs/input_model.dita:                                  <li><xref keyref="configobj_configurationdata_swift">Swift Configuration Data</xref></li>                 
./trialDITAs/input_model.dita:                <li><xref keyref="othertopics">Other Topics</xref>
./trialDITAs/input_model.dita:                        <li><xref keyref="services_components">Services and Service Components</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="namegeneration">Name Generation</xref>
./trialDITAs/input_model.dita:                                <li><xref keyref="namegeneration/o_clusters"> Clusters</xref></li>
./trialDITAs/input_model.dita:                                <li><xref keyref="namegeneration/o_resourcenodes">Resource Nodes</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="persisteddata">Persisted Data</xref>
./trialDITAs/input_model.dita:                                <li><xref keyref="persisteddata/persistedserverallocations">Persisted Server
./trialDITAs/input_model.dita:                                <li><xref keyref="persisteddata/persistedaddressallocations">Persisted Address
./trialDITAs/input_model.dita:                        <li><xref keyref="serverallocation">Server Allocation</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="servernetworkselection">Server Network
./trialDITAs/input_model.dita:                        <li><xref keyref="networkroutevalidation">Network Route
./trialDITAs/input_model.dita:                        <li><xref keyref="configneutronprovidervlans">Configuring Neutron Provider
./trialDITAs/input_model.dita:                <li><xref keyref="cpinfofiles">Configuration Processor Information Files</xref>
./trialDITAs/input_model.dita:                        <li><xref keyref="address_info_yml">address_info.yml</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="firewall_info_yml">firewall_info.yml</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="net_info_yml">net_info.yml</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="route_info_yml">route_info.yml</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="server_info_yml">server_info.yml</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="service_info_yml">service_info.yml</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="control_plane_topology_yml">control_plane_topology.yml</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="network_topology_yml">network_topology.yml</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="region_topology_yml">region_topology.yml</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="service_topology_yml">service_topology.yml</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="private_data_metadata_yml">private_data_metadata.yml</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="password_change_yml">password_change.yml</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="explain_txt">explain.txt</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="clouddiagram_txt">CloudDiagram.txt</xref></li>
./trialDITAs/input_model.dita:                        <li><xref keyref="html_representation">HTML Representation</xref></li>
./trialDITAs/input_model_introduction.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Introduction to the Input Model</title>
./trialDITAs/input_model_introduction.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/input_model_introduction.dita:    <p>This document describes how the <keyword keyref="kw-hos"/> input model can be used to define and
./trialDITAs/input_model_introduction.dita:    <p><keyword keyref="kw-hos"/> ships with a set of example input models that can be used as starting
./trialDITAs/input_model_introduction.dita:            approach used in <keyword keyref="kw-hos-phrase"/> and the core concepts used in describing that
./trialDITAs/input_model_introduction.dita:        <title>New in <keyword keyref="kw-hos-phrase"/></title>
./trialDITAs/input_model_introduction.dita:        <keyword keyref="kw-hos-phrase"/> introduces the following additions to the cloud model:
./trialDITAs/installation_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installation Overview</title>
./trialDITAs/installation_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/installation_overview.dita:          <xref keyref="example_configurations">Example Configurations</xref> documentation to
./trialDITAs/installation_overview.dita:        get an overview of the sample configurations <keyword keyref="kw-hos-phrase"/> offers. We
./trialDITAs/installation_overview.dita:      <table conkeyref="example_configurations/table_examples">
./trialDITAs/installation_overview.dita:        <li><xref keyref="entryscale_kvm_vsa">Entry-scale KVM with VSA model</xref></li>
./trialDITAs/installation_overview.dita:        <li><xref keyref="entryscale_esx_kvm_vsa">Entry-scale ESX, KVM, and VSA model</xref></li>
./trialDITAs/installation_overview.dita:        <li><xref keyref="entryscale_swift">Entry-scale Swift model</xref></li>
./trialDITAs/installation_overview.dita:        <li><xref keyref="entryscale_kvm_ceph">Entry-scale KVM with Ceph model</xref></li>
./trialDITAs/installation_overview.dita:        <li><xref keyref="midscale_kvm_vsa">Mid-scale KVM with VSA model</xref></li>
./trialDITAs/installation_overview.dita:          model. See the <xref keyref="input_model">Input Model page</xref> for
./trialDITAs/installation_overview.dita:        <li><xref keyref="installing_esx_kvm_vsa">Installing ESX, KVM with VSA
./trialDITAs/installation_troubleshooting.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting the Installation</title>
./trialDITAs/installation_troubleshooting.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/installation_troubleshooting.dita:          keyref="kw-hos"/> ISO, then you should be able to remove all of your nodes from Cobbler
./trialDITAs/installation_troubleshooting.dita:        reserved for another purpose outside of your <keyword keyref="kw-hos"/> deployment then you
./trialDITAs/installation_verification.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Verifying the Installation</title>
./trialDITAs/installation_verification.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/installation_verification.dita:      <p><keyword keyref="kw-hos-phrase"/> provides a tool, Tempest, that you can use to verify that
./trialDITAs/installation_verification.dita:          <keyword keyref="kw-hos"/> lifecycle manager node.</p>
./trialDITAs/install_designate_Akamai.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Install the DNS Service with Akamai </title>
./trialDITAs/install_designate_Akamai.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_designate_Akamai.dita:      <p><keyword keyref="kw-hos"/>DNS Service can be installed to use the <b>Akamai's FastDNS</b>
./trialDITAs/install_designate_DynECT.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Install the DNS Service with DynECT </title>
./trialDITAs/install_designate_DynECT.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_designate_DynECT.dita:      <p><keyword keyref="kw-hos"/>DNS Service can be installed to use the <b>DynECT</b> backend
./trialDITAs/install_designate_InfoBlox.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Install the DNS Service with InfoBlox </title>
./trialDITAs/install_designate_InfoBlox.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_designate_InfoBlox.dita:      <p><keyword keyref="kw-hos"/> DNS Service can be installed with the <b>InfoBlox</b> backend
./trialDITAs/install_designate_InfoBlox.dita:          server will be deployed onto the <keyword keyref="kw-hos"/> nodes. Instead, zones will be
./trialDITAs/install_designate_InfoBlox.dita:          keyref="kw-hos"/> 3.x. To use InfoBlox with version [4.x / 5.x] we recommend that you
./trialDITAs/install_entryscale_esx_kvm_vsa_template_json.dita:<title><ph conkeyref="HOS-conrefs/product-title"/> Sample activationtemplate.json File for ESX
./trialDITAs/install_entryscale_kvm_overview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>KVM</title>
./trialDITAs/install_entryscale_kvm_overview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_entryscale_kvm_overview.dita:            <keyword keyref="kw-hos"/> Entry-scale cloud models that utilize the KVM hypervisor on the
./trialDITAs/install_esx_overview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>ESX Installation Overview</title>
./trialDITAs/install_esx_overview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/installing_cli.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installing the Command-Line Clients</title>
./trialDITAs/installing_esx_kvm_vsa.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installation for Helion Entry Scale ESX (with
./trialDITAs/installing_esx_kvm_vsa.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/installing_esx_kvm_vsa.dita:        <li><xref keyref="esx_prerequisite">Prerequisite</xref></li>       
./trialDITAs/installing_esx_kvm_vsa.dita:        <li><xref keyref="deploy_esx_cloud">Deploy ESX Cloud with OVSvAPP</xref></li>
./trialDITAs/installing_esx_kvm_vsa.dita:        <li><xref keyref="procedure_deploy_esx_cloud">Procedure to Deploy ESX
./trialDITAs/installing_esx_kvm_vsa.dita:        <li><xref keyref="prepare_deploy_esx_computes_ovsvapp">Prepare and Deploy ESX
./trialDITAs/installing_esx_kvm_vsa_with_noop.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installation for Helion Entry Scale ESX, KVM
./trialDITAs/installing_esx_kvm_vsa_with_noop.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/installing_kvm.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installing Mid-scale and Entry-scale KVM</title>
./trialDITAs/installing_kvm.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/installing_kvm.dita:          can be found on the <xref keyref="example_configurations">Example Configuration</xref>
./trialDITAs/installing_kvm.dita:              keyref="kw-hos-tm"/>
./trialDITAs/installing_kvm.dita:            <keyword keyref="kw-hos-version"
./trialDITAs/installing_kvm.dita:            <p>Example for <keyword keyref="kw-hos-phrase"/>
./trialDITAs/installing_kvm.dita:              keyref="kw-hos-tm"/>
./trialDITAs/installing_kvm.dita:            <keyword keyref="kw-hos-version"
./trialDITAs/installing_kvm.dita:      <note conkeyref="twosystems/symlinks"/>
./trialDITAs/installing_kvm.dita:          keyref="example_configurations">Example Configurations</xref> documentation for detailed
./trialDITAs/installing_kvm.dita:                  keyref="modify_entryscale_kvm_vsa">Modifying the Entry-scale KVM with VSA model
./trialDITAs/installing_kvm.dita:        operating system installation process provided by <keyword keyref="kw-hos"/> or you can use
./trialDITAs/installing_kvm.dita:          <keyword keyref="kw-hos-version"/> then the requirements that have to be met using the
./trialDITAs/installing_kvm.dita:        <li>The operating system must be installed via the HPE Linux for <keyword keyref="kw-hos"/>
./trialDITAs/installing_kvm.dita:          <keyword keyref="kw-hos-version"/> then complete all of the steps below.</p>
./trialDITAs/installing_kvm.dita:      <p><b>Using the Automated Operating System Installation Provided by <keyword keyref="kw-hos"
./trialDITAs/installing_kvm.dita:          keyref="kw-hos"/> installation.</note>
./trialDITAs/installing_kvm.dita:      <p><keyword keyref="kw-hos"/> supports VSA, 3PAR, and Ceph as block storage backend options.
./trialDITAs/installing_swift_object_storage.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installation for HPE Helion Entry-scale Cloud
./trialDITAs/installing_swift_object_storage.dita:    <p conkeyref="HOS-conrefs/applies-to"/>    
./trialDITAs/installing_swift_object_storage.dita:                do this can be found here: <xref keyref="input_model"><keyword
./trialDITAs/installing_swift_object_storage.dita:                    keyref="kw-hos-phrase"/> Input Model</xref>.</p><p>In many cases, the example
./trialDITAs/install_l2_gateway.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installing the L2 Gateway Agent for the Networking
./trialDITAs/install_l2_gateway.dita:  <body><!--not tested-->    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_l2_gateway.dita:        keyref="kw-hos-phrase"/>, is a plug-in to the Neutron networking service that allows two L2
./trialDITAs/install_l2_gateway.dita:        agent either during installation of <keyword keyref="kw-hos-phrase"/>, while performing an
./trialDITAs/install_l2_gateway.dita:        upgrade to <keyword keyref="kw-hos-phrase"/>, or later by running neutron reconfigure on any
./trialDITAs/install_l2_gateway.dita:        existing <keyword keyref="kw-hos-phrase"/> installation.</p>L2 Gateway agent installation
./trialDITAs/install_l2_gateway.dita:      <title>Perform standard <keyword keyref="kw-hos"/> installation steps</title></section>
./trialDITAs/install_rhel_ceph.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using RHEL as a Ceph Client</title>
./trialDITAs/install_rhel_ceph.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_rhel_ceph.dita:      <p id="install_rhel_ceph_summary"><keyword keyref="kw-hos-phrase"/> supports the use of a RHEL compute node (specifically
./trialDITAs/install_rhel_ceph.dita:          keyref="kw-hos-phrase"/>. So, you will need to provide the necessary rpm packages on the
./trialDITAs/install_rhel_ceph.dita:        <keyword keyref="kw-hos"/> lifecycle manager node. This document describes the steps to achieve this.
./trialDITAs/install_rhel_ceph.dita:          <li><b>Upgrade: </b> If you are upgrading your <keyword keyref="kw-hos"/> cloud to <keyword keyref="kw-hos-version"/>, you should execute the steps 
./trialDITAs/install_rhel_ceph.dita:          <li><b>New Install: </b> If you are deploying a new <keyword keyref="kw-hos-phrase"/> cloud, you should execute the steps 
./trialDITAs/install_rhel_ceph.dita:          <li><b>Existing <keyword keyref="kw-hos-version"/> Cloud: </b> If you alrady have a <keyword keyref="kw-hos-phrase"/> cloud, you should execute the steps 
./trialDITAs/install_rhel_compute.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installing RHEL Compute</title>
./trialDITAs/install_rhel_compute.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_rhel.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Using the Lifecycle Manager to Deploy RHEL
./trialDITAs/install_rhel.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_rhel.dita:                nodes as described in the topic for <xref keyref="install_entryscale_kvm"
./trialDITAs/install_rhel.dita:                        the Input Model for RHEL, see <xref keyref="rhel_compute_model"> RHEL
./trialDITAs/install_rhel.dita:                <p><keyword keyref="kw-hos-phrase-30"/> required a manual procedure if you wanted to
./trialDITAs/install_rhel.dita:                    automated in the <keyword keyref="kw-hos-phrase"/> lifecycle manager in
./trialDITAs/install_rhel.dita:                                instructions at <xref keyref="rhel_compute_model"> RHEL Compute
./trialDITAs/install_rhel_uefi.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>RHEL Compute Node Installation on UEFI Node</title>
./trialDITAs/install_rhel_uefi.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_rhel_uefi.dita:                <p><keyword keyref="kw-hos-phrase-30"/> required a manual procedure if you wanted to use the lifecycle manager
./trialDITAs/install_rhel_uefi.dita:                This procedure has been automated in the <keyword keyref="kw-hos-phrase"/> lifecycle manager. 
./trialDITAs/install_rhel_uefi.dita:                <xref href="../../newfeatures40.dita#new_features_hlm/DOCS-3759"><keyword keyref="kw-hos-phrase"/> New Features</xref> article.</p>   
./trialDITAs/install_swift_overview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Swift Installation Overview
./trialDITAs/install_swift_overview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/integrating_logstash_splunk.dita:            <p>The <keyword keyref="kw-hos-phrase"/> logging solution provides a flexible and
./trialDITAs/integrating_logstash_splunk.dita:                The <keyword keyref="kw-hos-phrase"/> logging solution uses the ELK stack
./trialDITAs/integrating_logstash_splunk.dita:            <p>This tutorial demonstrates how to integrate the <keyword keyref="kw-hos-phrase"/>
./trialDITAs/integrating_logstash_splunk.dita:            <title>Configuring Splunk to receive log messages from <keyword keyref="kw-hos-phrase"
./trialDITAs/integrating_logstash_splunk.dita:            <title>Forwarding log messages from <keyword keyref="kw-hos-phrase"/> centralized
./trialDITAs/integrating_logstash_splunk.dita:                steps to configure the <keyword keyref="kw-hos-phrase"/> Logstash service to ship
./trialDITAs/integrating_splunk.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Splunk Integration</title>
./trialDITAs/integrating_splunk.dita:      integration between the <keyword keyref="kw-hos-phrase"/> centralized logging solution and
./trialDITAs/integrating_splunk.dita:      <p>The <keyword keyref="kw-hos-phrase"/> logging solution provides a flexible and extensible
./trialDITAs/integrating_splunk.dita:          keyref="kw-hos-phrase"/> logging solution uses the ELK stack (Elasticsearch, Logstash and
./trialDITAs/integrating_splunk.dita:          keyref="kw-hos-phrase"/> centralized logging solution and Splunk including the steps to
./trialDITAs/integrating_splunk.dita:      <title>Configuring Splunk to receive log messages from <keyword keyref="kw-hos-phrase"
./trialDITAs/integrating_splunk.dita:      <title>Forwarding log messages from <keyword keyref="kw-hos-phrase"/> Centralized Logging to
./trialDITAs/integrating_splunk.dita:        configure <keyword keyref="kw-hos-phrase"/> to forward the logs to Splunk. These steps will
./trialDITAs/integrations.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Integrations</title>
./trialDITAs/integrations.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/interfacemodel.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Interface Model</title>
./trialDITAs/interfacemodel.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/interfacemodels.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Interface Models</title>
./trialDITAs/interfacemodels.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/interfacemodels.dita:            keyref="concept_nicmapping">NIC Mapping</xref>).</p>
./trialDITAs/interfacemodels.dita:                         <entry id="fcoe_interfaces"><xref keyref="configobj_fcoeinterfaces/table_fcoe_interfaces">fcoe-interfaces (optional)</xref></entry>
./trialDITAs/interpreting_swift_validate_input_model.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Interpreting Swift Input Model Validation
./trialDITAs/interpreting_swift_validate_input_model.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/introduction.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Overview</title>
./trialDITAs/introduction.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/introduction.dita:        <p>This section provides general information on the <keyword keyref="kw-hos-phrase"/> release.</p>
./trialDITAs/ironic_audit_support.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Audit Support for Ironic</title>
./trialDITAs/ironic_audit_support.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ironic_configuration.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Ironic Flat Network Configuration</title>
./trialDITAs/ironic_configuration.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ironic_configuration.dita:            <p>The information in this section is taken from the <xref keyref="input_model">Input Model</xref>, 
./trialDITAs/ironic_configuration.dita:                <xref keyref="example_configurations">Example Configurations</xref> and 
./trialDITAs/ironic_configuration.dita:                <xref keyref="hardware">Hardware and Software Support Matrix</xref> documents.</p>
./trialDITAs/ironic_configuration.dita:            <p><image keyref="ironic_entry_scale_network_model"/></p>    
./trialDITAs/ironic_configuration.dita:            <p><xref keyref="ironic_entry_scale_network_model_lg">Download a high-resolution version</xref></p>
./trialDITAs/ironic_configuration.dita:        <section conkeyref="recommended_hardware_minimums/min_requirements_ironic"/>
./trialDITAs/ironic_configuration.dita:        <section conkeyref="hardware/guestos-ironic"/>
./trialDITAs/ironic_examples.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Ironic Examples</title>
./trialDITAs/ironic_examples.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ironic_multi_control_plane.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Ironic in Multiple Control Plane</title>
./trialDITAs/ironic_multi_control_plane.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ironic_multi_control_plane.dita:        <p><keyword keyref="kw-hos-phrase"/> introduces the concept of multiple control planes and multiple regions - see the 
./trialDITAs/ironic_multi_control_plane.dita:          Input Model documentation for the relevant <xref keyref="concept_controlplanes_regions">concepts</xref> and 
./trialDITAs/ironic_multi_control_plane.dita:        <xref keyref="configobj_multiple_control_planes">configuration objects</xref>. 
./trialDITAs/ironic_multi_control_plane.dita:          This document covers the use of an Ironic region in a multiple control plane cloud model in <keyword keyref="kw-hos"/>.                                  
./trialDITAs/ironic_multi_control_plane.dita:    <p>Swift is very resource-intensive and as a result, it is now optional in the <keyword keyref="kw-hos"/> control plane. 
./trialDITAs/ironic_oneview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Ironic and OneView</title>
./trialDITAs/ironic_oneview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ironic_oneview.dita:          <title>Enabling IRONIC Oneview driver in <keyword keyref="kw-hos"/></title>
./trialDITAs/ironic_oneview.dita:            This will enable the OneView driver for Ironic in <keyword keyref="kw-hos"/>.
./trialDITAs/ironic_oneview.dita:        <p>For more informations, see the documentation for <xref keyref="encrypted_storage">Encrypted Storage</xref>.</p>
./trialDITAs/ironic_raid_config.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Raid Configuration for Ironic</title>
./trialDITAs/ironic_raid_config.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ironic_troubleshooting.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting Ironic Installation</title>
./trialDITAs/ironic_troubleshooting.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/isolated_metadata.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Improve Network Peformance with Isolated Metadata Settings</title>
./trialDITAs/isolated_metadata.dita:  <body><!--not tested-->    <p conkeyref="HOS-conrefs/applies-to"> </p>
./trialDITAs/isolated_metadata.dita:    <p>In <keyword keyref="kw-hos"/> Neutron we currently set <codeph>enable_isolated_metadata =
./trialDITAs/keystone_federation.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Keystone-to-Keystone Federation</title>
./trialDITAs/keystone_federation.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/keystone_federation.dita:      <p>Identity federation lets you configure <keyword keyref="kw-hos"/> using existing identity
./trialDITAs/keystone_federation.dita:        resources in multiple, separate <keyword keyref="kw-hos"/> clouds. You can configure each cloud to
./trialDITAs/keystone_federation.dita:      <p>The <keyword keyref="kw-hos"/> cloud that provides the initial user authentication is called the
./trialDITAs/keystone_federation.dita:        which are used to automatically authenticate users with other <keyword keyref="kw-hos"/>
./trialDITAs/keystone_federation.dita:      <p>An <keyword keyref="kw-hos"/> cloud that provides resources is called a service provider (SP). A
./trialDITAs/keystone_federation.dita:          keyref="kw-hos-phrase-30"/> using configuration parameters in specific Ansible files.
./trialDITAs/keystone_ldap_integration.dita:    <title>Integrating <keyword keyref="kw-hos"/> with an LDAP System</title>
./trialDITAs/keystone_ldap_integration.dita:            <p>You can configure your <keyword keyref="kw-hos"/> cloud to work with an outside user
./trialDITAs/keystone_ldap_integration.dita:                permissions in <keyword keyref="kw-hos"/>. </p>
./trialDITAs/keystone_ldap_integration.dita:            <p>To configure your <keyword keyref="kw-hos"/> cloud to use an outside user-management
./trialDITAs/keystone_ldap_integration.dita:                            integrate your <keyword keyref="kw-hos"/> cloud with multiple domains,
./trialDITAs/keystone_ldap_integration.dita:                authentication requests from the other <keyword keyref="kw-hos"/> services:</p>
./trialDITAs/keystone_token_validation.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Identity Service Token Validation Example</title>
./trialDITAs/keystone_token_validation.dita:  <body>   <p conkeyref="HOS-conrefs/applies-to"> </p>
./trialDITAs/keystone_token_validation.dita:      <keyword keyref="kw-hos"/> services and the Identity service. It shows how Keystone issues and
./trialDITAs/kvm_examples.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>KVM Examples</title>
./trialDITAs/kvm_examples.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/label_on_partition.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Verifying a Swift Partition Label</title>
./trialDITAs/label_on_partition.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/lbaas_admin.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Load Balancing as a Service
./trialDITAs/lbaas_admin.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/lbaas_admin.dita:    <p><b><keyword keyref="kw-hos-phrase"/> LBaaS Configuration</b></p>
./trialDITAs/lbaas_admin.dita:    <p><keyword keyref="kw-hos-phrase"/> can support either LBaaS v1 or LBaaS v2 to allow for wide
./trialDITAs/lbaas_admin.dita:      Octavia is the default load balancing provider in <keyword keyref="kw-hos-phrase-30"/> for
./trialDITAs/lbaas_admin.dita:    <note type="warning">If you are planning to upgrade from <keyword keyref="kw-hos-phrase-30"/> or <keyword keyref="kw-hos-phrase-40"/>,
./trialDITAs/lbaas_admin.dita:      failure of your cloud deployment. The last tested versions are 8.0.8 for <keyword keyref="kw-hos"/> 3.x and 9.0.3
./trialDITAs/lbaas_admin.dita:      for <keyword keyref="kw-hos"/> 4.x . More information is expected in 4th quarter 2017, including the correct
./trialDITAs/lbaas_admin.dita:      drivers for <keyword keyref="kw-hos"/> 5.x.</note>
./trialDITAs/lbaas_admin.dita:      v2 is installed by default with <keyword keyref="kw-hos"/> and requires minimal configuration
./trialDITAs/lbaas_admin.dita:      <p><b><keyword keyref="kw-hos"/> LBaaS v1</b></p>
./trialDITAs/lbaas_admin.dita:        installation preparations during <keyword keyref="kw-hos"/> installation since LBaaS v2 is
./trialDITAs/lbaas_admin.dita:            <keyword keyref="kw-hos-phrase"/>: Using Git for Configuration Management</xref> to
./trialDITAs/lbaas_admin.dita:      <p><b><keyword keyref="kw-hos"/> LBaaS v2</b></p>
./trialDITAs/lbaas_admin.dita:        <li><keyword keyref="kw-hos"/> must be installed for LBaaS v2.</li>
./trialDITAs/lbaas_dashboard.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating a Load Balancer with the
./trialDITAs/lbaas_dashboard.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/lbaas_dashboard.dita:      <p>In <keyword keyref="kw-hos-phrase"/> you can create a Load Balancer with the Load
./trialDITAs/lbaas.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using Load Balancing as a Service
./trialDITAs/lbaas.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/lbaas.dita:    <p><b><keyword keyref="kw-hos-phrase"/> LBaaS Configuration</b></p>
./trialDITAs/lbaas.dita:      a Horizon web interface in a future <keyword keyref="kw-hos"/> release. This document
./trialDITAs/lbaas.dita:    <p>You can create TLS enabled Load Balancers in <keyword keyref="kw-hos-phrase"/> by following
./trialDITAs/lbaas.dita:    <p><keyword keyref="kw-hos-phrase"/> can support either LBaaS v1 or LBaaS v2 to allow for wide
./trialDITAs/lbaas.dita:      <p><keyword keyref="kw-hos-phrase"/> LBaaS Configuration</p>
./trialDITAs/lbaas_heat.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using Load Balancing as a Service with
./trialDITAs/lbaas_heat.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/lbaas_heat.dita:      <p>In <keyword keyref="kw-hos-phrase-30"/>, the Orchestration Service provides support for
./trialDITAs/lbaas_heat.dita:      <p>For more information on configuring and using the <keyword keyref="kw-hos"/> Load Balancing
./trialDITAs/lb_defs_networkgroups.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Load Balancer Definitions  in Network Groups</title>
./trialDITAs/lb_defs_networkgroups.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/lb_defs_networkgroups.dita:        as shown in the examples above.  See section <xref keyref="configobj_load_balancers">Load Balancers</xref> for a 
./trialDITAs/lb_defs_networkgroups.dita:      <p>Starting in <keyword keyref="kw-hos-phrase"/>, a <codeph>load-balancer</codeph> may be defined within a <codeph>control-plane</codeph> 
./trialDITAs/lb_defs_networkgroups.dita:        See section <xref keyref="configobj_load_balancers">Load Balancer</xref> definitions in control planes. </p>
./trialDITAs/live_migration.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Live Migration of Instances</title>
./trialDITAs/live_migration.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/live_migration.dita:      <p><keyword keyref="kw-hos"/> Nova offers a set of commands that allow you to move compute
./trialDITAs/lm_scan_metering.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Gathering Swift Monitoring Metrics</title>
./trialDITAs/lm_scan_metering.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/load_balancer_definitions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Load Balancer Definitions in Control
./trialDITAs/load_balancer_definitions.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/load_balancer_definitions.dita:      <p> Starting in <keyword keyref="kw-hos-phrase"/>, a load-balancer may be defined within a
./trialDITAs/load_balancers.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Load Balancers</title>
./trialDITAs/load_balancers.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/loadbalancers.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Load Balancers</title>
./trialDITAs/loadbalancers.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/loadbalancers.dita:        <keyword keyref="kw-hos"/> supplied service definition files.</p>
./trialDITAs/loadbalancers.dita:            the external name and security certificate.   To accommodate this in <keyword keyref="kw-hos-phrase"/>, 
./trialDITAs/localizing_inputmodel.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Localizing the Input Model</title>
./trialDITAs/localizing_inputmodel.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/localizing_inputmodel.dita:                instructions, see <xref keyref="create_extnet"/>.) You will only specify
./trialDITAs/localizing_inputmodel.dita:                from PCI bus address to a user specified name. <keyword keyref="kw-hos"/> uses the prefix
./trialDITAs/localizing_inputmodel.dita:                <li><b>Logical name</b> - <keyword keyref="kw-hos"/> uses the form
./trialDITAs/localizing_inputmodel.dita:                <li><b>Type</b> - Only simple-port types are supported in <keyword keyref="kw-hos-phrase"
./trialDITAs/localizing_inputmodel.dita:                    keyref="input_model"><keyword keyref="kw-hos-phrase"/> Input Model</xref>.</p>
./trialDITAs/localizing_inputmodel.dita:                <xref keyref="input_model"><keyword keyref="kw-hos-phrase"/> Input Model</xref>.</p>
./trialDITAs/localizing_inputmodel.dita:                see <xref keyref="localizing_inputmodel/nicmappings"
./trialDITAs/logging.dita:        <title><ph conkeyref="HOS-conrefs/product-title"/>Logging</title>
./trialDITAs/logging.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/manage_compute_instances.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Compute Hosts</title>
./trialDITAs/manage_compute_instances.dita:            accomplish these tasks, in previous versions of <keyword keyref="kw-hos"/> you had to
./trialDITAs/manage_logs.dita:            <p><keyword keyref="kw-hos"/> uses the ELK (Elasticsearch, Logstash, Kibana) stack for
./trialDITAs/managing_blockstorage_ceph.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Block Storage using Ceph</title>
./trialDITAs/managing_blockstorage_ceph.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/managing_blockstorage_ceph.dita:            <p>The <keyword keyref="kw-hos-phrase"/> Ceph storage solution provides an unified,
./trialDITAs/managing_blockstorage_ceph.dita:                    keyref="kw-hos"/> volume storage (Cinder persistent volumes) service. </p>
./trialDITAs/managing_blockstorage_ceph.dita:                    <keyword keyref="kw-hos-phrase"/> and Ceph Firefly 0.80.7 running on the hlinux
./trialDITAs/managing_blockstorage_ceph.dita:                    keyref="kw-hos-phrase"/>, the supported version of Ceph is Firefly 0.80.7. In
./trialDITAs/managing_blockstorage_ceph.dita:                upcoming <keyword keyref="kw-hos"/> releases, new versions of Ceph will be supported
./trialDITAs/managing_blockstorage_cinder.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Block Storage using Cinder</title>
./trialDITAs/managing_blockstorage.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Block Storage</title>
./trialDITAs/managing_cinder_volumebackup_services.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Cinder Volume and Backup
./trialDITAs/managing_compute.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/> Managing Compute</title>
./trialDITAs/managing_dashboards.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing the Dashboard</title>
./trialDITAs/managing_esx.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/> Managing ESX</title>
./trialDITAs/managing_identity.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Identity</title>
./trialDITAs/managing_notificationmethods.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Notification Methods for Alarms</title>
./trialDITAs/managing_objectstorage.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Object Storage</title>
./trialDITAs/managing_objectstorage_swift.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Object Storage using Swift</title>
./trialDITAs/managing_objectstorage_swift.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/managing_orchestration.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Orchestration</title>
./trialDITAs/managing_quotas.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Project Quotas</title>
./trialDITAs/managing_services.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Your Cloud Services</title>
./trialDITAs/managing_telemetry.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Monitoring, Logging, and Usage
./trialDITAs/managing_telemetry.dita:    sections to help you monitor your <keyword keyref="kw-hos-phrase"/> cloud.</abstract>
./trialDITAs/memorymodels.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Memory Models</title>
./trialDITAs/memorymodels.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/memory_sizing_vms.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Memory Sizing for Virtual Machine Servers </title>
./trialDITAs/memory_sizing_vms.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metering_apis.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Metering API Reference</title>
./trialDITAs/metering_apis.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metering_apis.dita:      <keyword keyref="kw-hos"/> uses the Apache2 Web Server to provide API access. It is possible
./trialDITAs/metering_apis.dita:        keyref="kw-hos-phrase"/> and it requires a separate pipeline.yml for Ceilometer. This is because it uses a pipeline configuration different than the agents. Also by default, the API pipeline has no meters enabled. When
./trialDITAs/metering_bestpractice.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Optimizing the Ceilometer Metering
./trialDITAs/metering_bestpractice.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metering_bestpractice.dita:                    keyref="kw-hos"/> uses Apache2 Web Server to provide the API access. This topic
./trialDITAs/metering_concepts.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Understanding the Metering Service Concepts</title>
./trialDITAs/metering_concepts.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metering_failover_ha.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Ceilometer Metering Failover HA
./trialDITAs/metering_failover_ha.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metering_failover_ha.dita:    <section> In the <keyword keyref="kw-hos"/> environment, the Ceilometer metering service
./trialDITAs/metering_metertypes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Ceilometer Metering Available Meter
./trialDITAs/metering_metertypes.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metering_metertypes.dita:      <title><keyword keyref="kw-hos"/> Default Meters</title>
./trialDITAs/metering_metertypes.dita:      <p>These meters are installed and enabled by default during an <keyword keyref="kw-hos"/>
./trialDITAs/metering_newfunctions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Metering Service New Functionality</title>
./trialDITAs/metering_newfunctions.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metering_newfunctions.dita:      <title>New Metering Functionality in <keyword keyref="kw-hos-phrase"/></title>
./trialDITAs/metering_newfunctions.dita:          overall <keyword keyref="kw-hos"/> performance prior to deploying any Ceilometer
./trialDITAs/metering_newfunctions.dita:        <li>The Ceilometer Alarms API is disabled by default. <keyword keyref="kw-hos-phrase"/>
./trialDITAs/metering_notifications.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Ceilometer Metering Service Notifications</title>
./trialDITAs/metering_notifications.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metering_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Metering Service (Ceilometer) Overview</title>
./trialDITAs/metering_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metering_rbac.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Ceilometer Metering Setting Role-based
./trialDITAs/metering_rbac.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metering_reconfig.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configure the Ceilometer Metering
./trialDITAs/metering_reconfig.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metering_reconfig.dita:      <p><keyword keyref="kw-hos-phrase"/> automatically deploys Ceilometer to use the Monasca database. Ceilometer is deployed on the same control plane nodes along with other OpenStack
./trialDITAs/metering_reconfig.dita:        For Ceilometer, the playbook included with <keyword keyref="kw-hos"/> is
./trialDITAs/metering_reconfig.dita:        basic usage data and information.<keyword keyref="kw-hos"/> uses Apache2 Web Server to
./trialDITAs/metering_samples.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Metering Service Samples</title>
./trialDITAs/metering_samples.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metric_monitoring.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Time Series Graphs</title>
./trialDITAs/midscale_kvm_vsa.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Mid-scale KVM with VSA Model</title>
./trialDITAs/midscale_kvm_vsa.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/midscale_kvm_vsa.dita:                keyref="kw-hos"/> for increased scale. The controller services are distributed
./trialDITAs/mitaka_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>OpenStack Mitaka Features</title>
./trialDITAs/mitaka_features.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/mitaka_features.dita:      <title><keyword keyref="kw-hos-phrase"/> Mitaka Features</title>
./trialDITAs/mitaka_features.dita:        identified below) are enabled in the <keyword keyref="kw-hos-phrase"/> standard settings and
./trialDITAs/modify_entryscale_kvm_vsa.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Modifying the Entry-scale KVM with VSA Model for Your Environment</title>
./trialDITAs/modify_entryscale_kvm_vsa.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/modify_entryscale_kvm_vsa.dita:        <li><b><xref keyref="localizing_inputmodel">Localizations</xref></b> - These are the minimum set of changes that you need to make to
./trialDITAs/modify_entryscale_kvm_vsa.dita:        <li><b><xref keyref="customizing_inputmodel">Customizations</xref></b> - These describe more general changes that you can make to your
./trialDITAs/modify_swift_service_config_files.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Customizing Swift Service Configuration Files </title>
./trialDITAs/modify_swift_service_config_files.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/modify_swift_service_config_files.dita:      <p><keyword keyref="kw-hos-phrase"/> enables you to modify various Swift service configuration
./trialDITAs/modify_swift_service_config_files.dita:            Service</xref>-->  <xref keyref="centralized_logging">Centralized Logging Service</xref>.</p>
./trialDITAs/monitoring.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Monitoring</title>
./trialDITAs/monitoring.dita:  <abstract><shortdesc>The <keyword keyref="kw-hos"/> Monitoring service leverages OpenStack
./trialDITAs/mtu.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>MTU (Maximum Transmission Unit)</title>
./trialDITAs/mtu.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/multipath_boot_from_san.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Boot from SAN and Multipath Configuration</title>
./trialDITAs/multipath_boot_from_san.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/multipath_boot_from_san.dita:                   <sectiondiv conkeyref="hw_support_hardwareconfig/multipath_hardware"/>
./trialDITAs/multipath_boot_from_san.dita:                       Boot from SAN support using QLogic-based FlexFabric adapters is latent in <keyword keyref="kw-hos-phrase"/> but 
./trialDITAs/multipath_boot_from_san.dita:                       <keyword keyref="kw-hos-phrase"/> customers to not use that configuration. The aim is to fix this outstanding 
./trialDITAs/multipath_boot_from_san.dita:                       issue in a patch to <keyword keyref="kw-hos-phrase"/> in the near future. This issue also affects the use of QLogic 
./trialDITAs/multipath_boot_from_san.dita:                       <xref keyref="configure_3par/multipath">3PAR Configuration - Multipath</xref>.</p>
./trialDITAs/multipath_boot_from_san.dita:                   In order to allow <keyword keyref="kw-hos-phrase"/> use volumes from a SAN,
./trialDITAs/multipath_boot_from_san.dita:    <p conkeyref="HOS-conrefs/applies-to-301"/>
./trialDITAs/multipath_boot_from_san.dita:        <!--<note conkeyref="multipath_boot_from_san/boot-from-san-native-fcoe"/>-->
./trialDITAs/multipath_boot_from_san.dita:        <title>Installing the <keyword keyref="kw-hos-phrase"/> iso for nodes that support Boot from SAN</title>
./trialDITAs/multipath_boot_from_san.dita:                <image keyref="uefi_installer_menu"/>
./trialDITAs/multipath_boot_from_san.dita:                <image keyref="uefi_edit_selection"/>
./trialDITAs/multipath_boot_from_san.dita:                <image keyref="uefi_multipath_true"/>  
./trialDITAs/multipath_boot_from_san.dita:            <p conkeyref="HOS-conrefs/applies-to-301"/>
./trialDITAs/multipath_boot_from_san.dita:                     <image keyref="uefi_multipath_install_edit_argument"/>
./trialDITAs/multipath_boot_from_san.dita:                <image keyref="installer_boot_options"/>
./trialDITAs/multipath_boot_from_san.dita:               <image keyref="installer_advanced_options"/>
./trialDITAs/multipath_boot_from_san.dita:        <p conkeyref="HOS-conrefs/applies-to-301"/>
./trialDITAs/multipath_boot_from_san.dita:                <image keyref="installer_boot_options"/>
./trialDITAs/multipath_boot_from_san.dita:               <image keyref="installer_advanced_options"/>
./trialDITAs/multipath_boot_from_san.dita:               <image keyref="multipath_install_edit"/>
./trialDITAs/multipath_boot_from_san.dita:           <image keyref="multipath_install_edit_argument"/>
./trialDITAs/multiple_control_planes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Multiple Control Planes </title>
./trialDITAs/multiple_control_planes.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/multiple_control_planes.dita:        defined as part of the service definitions provide by <keyword keyref="kw-hos"/>, the control-planes define how
./trialDITAs/my_dashboard_overview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>My Dashboard</title>
./trialDITAs/my_dashboard_overview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/namegeneration.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Name Generation</title>
./trialDITAs/namegeneration.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/namegeneration.dita:            keyref="configobj_nicmappings">NIC Mappings</xref>). Names are generated from data
./trialDITAs/namegeneration.dita:                        (see <xref keyref="configobj_cloud">Cloud</xref>)</entry>
./trialDITAs/namegeneration.dita:                        keyref="configobj_controlplane">Control Plane</xref>)</entry>
./trialDITAs/namegeneration.dita:                        keyref="configobj_clusters">Clusters</xref>)</entry>
./trialDITAs/namegeneration.dita:                        (see <xref keyref="configobj_cloud">Cloud</xref>)</entry>
./trialDITAs/namegeneration.dita:                        which the network belongs (see <xref keyref="configobj_nicmappings">NIC
./trialDITAs/namegeneration.dita:                        (see <xref keyref="configobj_cloud">Cloud</xref>).</entry>
./trialDITAs/namegeneration.dita:                        keyref="configobj_controlplane">Control Plane</xref>).</entry>
./trialDITAs/namegeneration.dita:                        keyref="configobj_resources">Resources</xref>).</entry>
./trialDITAs/namegeneration.dita:                        which the network belongs to (see <xref keyref="configobj_nicmappings">NIC
./trialDITAs/net_info_yml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>net_info.yml</title>
./trialDITAs/net_info_yml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/network_esx_ovsvapp.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Networking for ESXi Hypervisor
./trialDITAs/network_esx_ovsvapp.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/networkgroups.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Network Groups</title>
./trialDITAs/networkgroups.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/networkgroups.dita:                            keyref="namegeneration">Name Generation</xref>). If not specified,
./trialDITAs/networkgroups.dita:                        <p>Starting in <keyword keyref="kw-hos-phrase"/>, a load balancer may be defined within a 
./trialDITAs/networkgroups.dita:                            See <xref keyref="configobj_lb_defs_networkgroups">Load balancer definitions</xref> in control planes.</p>
./trialDITAs/networkgroups.dita:                                (see <xref keyref="configobj_neutron_provider_networks/neutron_name">here</xref>)
./trialDITAs/networkgroups.dita:                        <p>Starting in <keyword keyref="kw-hos-phrase"/>, network tags may be defined as part of a Neutron <codeph>configuration-data</codeph> 
./trialDITAs/networkgroups.dita:                            <xref keyref="configobj_configurationdata_neutron">Configuration Data</xref>).</p>
./trialDITAs/networkgroups.dita:                            <p>See notes <xref keyref="configobj_mtu">here</xref> on how MTU settings are applied to interfaces when 
./trialDITAs/networkgroups.dita:                                keyref="concept_loadbalancers">Load Balancers</xref> for an example of how
./trialDITAs/networkgroups.dita:                            balancer provides TLS-terminated virtual IP addresses for. In <keyword keyref="kw-hos-phrase-30"/>,
./trialDITAs/networking.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Networking</title>
./trialDITAs/networking.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/networking_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Networking Service Overview</title>
./trialDITAs/networking_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/networking_overview.dita:    <p><keyword keyref="kw-hos"/> Networking is a virtual networking service that leverages the OpenStack
./trialDITAs/networking_overview.dita:      Neutron service to provide network connectivity and addressing to <keyword keyref="kw-hos"/> Compute
./trialDITAs/networking_overview.dita:          <keyword keyref="kw-hos"/> Dashboard</xref> to work with the Networking service.</p>
./trialDITAs/networking_overview.dita:        OpenStack Cloud is put together. However, <keyword keyref="kw-hos"/> takes care of these
./trialDITAs/networking_summary.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Networking Alarm Summary</title>
./trialDITAs/networking_summary.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/network_interfaces_device.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->network-interfaces device</title>
./trialDITAs/network_interfaces_device.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/network_interfaces.dita:  <title><ph conkeyref="HOS-conrefs/product-title"
./trialDITAs/network_interfaces.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/network_interfaces.dita:                                server) and associated properties (see <xref keyref="configobj_network_interfaces_device">network-interfaces device</xref> for details).</p>
./trialDITAs/network_interfaces.dita:                                the <uicontrol>nic-mapping</uicontrol> (see <xref keyref="concept_nicmapping"
./trialDITAs/network_interfaces.dita:                        <entry>Used to define a bond. See <xref keyref="configobj_bonddata"
./trialDITAs/network_interfaces.dita:                            keyref="configobj_networkgroups">Network Groups</xref>) containing
./trialDITAs/network_interfaces.dita:                            <uicontrol>networks</uicontrol> (see <xref keyref="configobj_networks"
./trialDITAs/network_interfaces.dita:                            keyref="configobj_networkgroups">Network Groups</xref>) containing
./trialDITAs/network_interfaces.dita:                            <uicontrol>networks</uicontrol> (see <xref keyref="configobj_networks">Networks</xref>) 
./trialDITAs/network_interfaces.dita:                        <entry>A list of one or more network-groups (see <xref keyref="configobj_networkgroups">Network Groups</xref>) 
./trialDITAs/network_interfaces.dita:                          containing networks (see <xref keyref="configobj_networks">Networks</xref>) that can 
./trialDITAs/networkroutevalidation.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Network Route Validation</title>
./trialDITAs/networkroutevalidation.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/networkroutevalidation.dita:        <keyword keyref="kw-hos"/> release.</p>
./trialDITAs/networkroutevalidation.dita:        server (see <xref keyref="servernetworkselection">Server Network
./trialDITAs/networks.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Networks</title>
./trialDITAs/networks.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/networks.dita:                            server-group definition (see <xref keyref="configobj_servergroups">Server
./trialDITAs/networktags.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Network Tags</title>
./trialDITAs/networktags.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/networktags.dita:    <p><keyword keyref="kw-hos"/> supports a small number of network tags which may be used to convey
./trialDITAs/network_topology_yml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>network_topology.yml</title>
./trialDITAs/network_topology_yml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/neutron_configuration_data.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Update Neutron Configration Data</title>
./trialDITAs/neutron_configuration_data.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/neutron_configuration_data.dita:        In <keyword keyref="kw-hos-phrase"/>, the <xref keyref="configobj_configurationdata_neutron">Neutron Configuration Data</xref> 
./trialDITAs/neutron_configuration_data.dita:        section of the <xref keyref="input_model">Input Model</xref> has been extended to include information on the Neutron external network 
./trialDITAs/neutron_configuration_data.dita:        setup - see <xref keyref="configobj_neutron_external_networks">neutron-external-networks</xref>.                
./trialDITAs/neutron_configuration_data.dita:        In <keyword keyref="kw-hos-phrase-30"/>, this configuration was typically set using the <codeph>neutron-cloud-configure.yml</codeph> playbook:
./trialDITAs/neutron_configuration_data.dita:      <p>After upgrading to <keyword keyref="kw-hos-phrase"/>, we recommend that you add the configuration information to the Input Model:</p>
./trialDITAs/neutron-external-networks.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>neutron-external-networks</title>
./trialDITAs/neutron-external-networks.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/neutron-external-networks.dita:                when the <keyword keyref="kw-hos"/> cloud model configures the external network with the 
./trialDITAs/neutron_network_tags.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Neutron network-tags</title>
./trialDITAs/neutron_network_tags.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/neutron_provider_networks.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>neutron-provider-networks</title>
./trialDITAs/neutron_provider_networks.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/neutron-provider-networks.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Neutron Provider Networks</title>
./trialDITAs/neutron-provider-networks.dita:          <keyword keyref="kw-hos"/> cloud that is consumed by Helion services. The distinctive
./trialDITAs/neutron-provider-networks.dita:      <p>A provider network is created by adding the specification to the <keyword keyref="kw-hos"/>
./trialDITAs/neutron-provider-networks.dita:      <title><keyword keyref="kw-hos"/> input model</title>
./trialDITAs/neutron-provider-networks.dita:          keyref="kw-hos-phrase"/> software.</p>
./trialDITAs/neutron-provider-networks.dita:      <p><keyword keyref="kw-hos-phrase"/> automates the server networking configuration and the
./trialDITAs/neutron-provider-networks.dita:      <p>A network group used for provider VLANs may contain only a single <keyword keyref="kw-hos"
./trialDITAs/neutron-provider-networks.dita:        nodes/controllers (i.e. it is a single L2 segment). The <keyword keyref="kw-hos"/> network
./trialDITAs/neutron-provider-networks.dita:      <p>When the cloud is deployed, <keyword keyref="kw-hos-phrase"/> will create the appropriate
./trialDITAs/nicmapping.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>NIC Mapping</title>
./trialDITAs/nicmapping.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/nicmapping.dita:            or PCI Passthrough.   Each <keyword keyref="kw-hos"/> release includes the data for the supported device types.</p>
./trialDITAs/nicmappings.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>NIC Mappings</title>
./trialDITAs/nicmappings.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/nicmappings.dita:                keyref="configobj_servers">Servers</xref>). Devices should be named
./trialDITAs/nicmappings.dita:                <keyword keyref="kw-hos"/>, ensuring that all devices on a baremetal machine are
./trialDITAs/nicmappings.dita:                            server definition (see <xref keyref="configobj_servers">Servers</xref>) to
./trialDITAs/nicmappings.dita:                                keyref="configobj_interfacemodels">Interface Models</xref>)</entry>
./trialDITAs/nicmappings.dita:                        <entry>The type of port. <keyword keyref="kw-hos-phrase"/> supports "simple-port" and
./trialDITAs/nicmappings_vms.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>NIC Mappings for Virtual Machine Servers</title>
./trialDITAs/nicmappings_vms.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/node_cleaning.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Node Cleaning</title>
./trialDITAs/node_cleaning.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/node_config.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Node Configuration</title>
./trialDITAs/node_config.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/noops_driver.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Deploying ESX with NoOp Driver in EON</title>
./trialDITAs/notification_methods.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Notification Methods</title>
./trialDITAs/notification_methods.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/objectstorage_index.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Object Storage Operations</title>
./trialDITAs/objectstorage_index.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/objectstorage_index.dita:    <p>This section contains operations tasks for your <keyword keyref="kw-hos-phrase"/> Object Storage service.</p>
./trialDITAs/objectstorage_nodes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Hardware Maintenance Tasks for Object Storage
./trialDITAs/objectstorage_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Object Storage using Swift Overview</title>
./trialDITAs/objectstorage_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/objectstorage_overview.dita:      <p>The <keyword keyref="kw-hos"/> Object Storage using Swift service leverages <tm
./trialDITAs/objectstorage_overview.dita:      <p><keyword keyref="kw-hos"/> Object Storage using Swift provides a highly-available,
./trialDITAs/objectstorage_overview.dita:        architecture, with no single point of failure. In addition, <keyword keyref="kw-hos"/>
./trialDITAs/objectstorage_overview.dita:        exists in the example cloud models distributed in <keyword keyref="kw-hos"/>:</p><p>
./trialDITAs/octavia_admin.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Load Balancer: Octavia Driver
./trialDITAs/octavia_admin.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/octavia_admin.dita:      <note type="warning">Changes might be lost during <keyword keyref="kw-hos"/> upgrades.</note>
./trialDITAs/octavia_admin.dita:      <p>Reasons to enable a load balancing spare pool in <keyword keyref="kw-hos"/>
./trialDITAs/octavia_admin.dita:      <note type="important">In <keyword keyref="kw-hos-phrase-30"/> the spare pool can’t be used to
./trialDITAs/octavia_admin.dita:        speed up fail overs. If a load balancer fails in <keyword keyref="kw-hos"/>, Octavia will
./trialDITAs/octavia_admin.dita:          <keyword keyref="kw-hos-phrase-30"/>.</p>
./trialDITAs/operations_index.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Operations Guide</title>
./trialDITAs/operations_index.dita:      <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/operations_index.dita:          keyref="kw-hos-phrase"/> cloud.  The audience is the admin-level operator of the
./trialDITAs/operations_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Operations Overview</title>
./trialDITAs/operations_overview.dita:      operating a <keyword keyref="kw-hos-phrase"/> cloud.</shortdesc></abstract>
./trialDITAs/operations_overview.dita:        and responsibilities we are referring to. <keyword keyref="kw-hos"/> defines a cloud
./trialDITAs/operations_overview.dita:      <p><keyword keyref="kw-hos"/> provides the following tools which are available to operate your
./trialDITAs/operations_overview.dita:        is operating correctly. By logging on to the console, <keyword keyref="kw-hos"/>
./trialDITAs/operations_overview.dita:      <p>Each service within <keyword keyref="kw-hos"/> provides a command-line client, such as the
./trialDITAs/operations_overview.dita:        <li><b>Ensure your cloud is running correctly</b>: <keyword keyref="kw-hos"/> is deployed as
./trialDITAs/operations_overview.dita:          to address issues before they affect the broader system. <keyword keyref="kw-hos"/>
./trialDITAs/operations_overview.dita:          initial deployment’s capacity. You can expand <keyword keyref="kw-hos"/> in a variety of
./trialDITAs/operations_overview.dita:      <p><b>How do I determine if my cloud is operating correctly now?</b>: <keyword keyref="kw-hos"
./trialDITAs/operations_overview.dita:        underlying system. By default, <keyword keyref="kw-hos"/> comes with a set of alarms that
./trialDITAs/opsconsole_dashboard.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Alarms Dashboard</title>
./trialDITAs/OpsConsole_manage_swift.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Managing SWIFT Performance</title>
./trialDITAs/opsconsole_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Operations Console Overview</title>
./trialDITAs/opsconsole_overview.dita:        keyref="kw-hos-phrase"/> to view data about your Helion cloud infrastructure in a web-based
./trialDITAs/opsconsole_overview.dita:      the console, <keyword keyref="kw-hos"/> administrators can manage data in the following ways:
./trialDITAs/opsconsole_overview.dita:          <li><keyword keyref="kw-hos-phrase"/> no longer supports DBaaS and MSGaaS panels in the
./trialDITAs/ops_dashboard_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using the Dashboard</title>
./trialDITAs/ops_dashboard_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ops_dashboard_overview.dita:    <p>Horizon is the OpenStack service that serves as the basis for the <keyword keyref="kw-hos"/>
./trialDITAs/ops_dashboard_overview.dita:    <p>The dashboards provide a web-based user interface to <keyword keyref="kw-hos"/> services
./trialDITAs/othertopics.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Other Topics</title>
./trialDITAs/othertopics.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Overview</title>
./trialDITAs/overview.dita:  <abstract><shortdesc outputclass="hdphidden"><keyword keyref="kw-hos-phrase"/> is the latest OpenStack-based
./trialDITAs/overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/overview.dita:    <p><keyword keyref="kw-hos-phrase"/> is the latest OpenStack-based infrastructure-as-a-service 
./trialDITAs/overview.dita:      <p>With the release of <keyword keyref="kw-hos-phrase"/> comes an easy installation and
./trialDITAs/overview.dita:        install and configure them individually. Instead, in <keyword keyref="kw-hos-phrase"/>,
./trialDITAs/overview.dita:      <p>These files allow customization, and <keyword keyref="kw-hos-phrase"/> ships with complete
./trialDITAs/overview.dita:      <p>This installation and configuration is made possible by <keyword keyref="kw-hos-phrase"/>,
./trialDITAs/overview.dita:      <p>As you will read in the <keyword keyref="kw-hos-phrase"/>
./trialDITAs/overview.dita:        <xref keyref="input_model">Input Model</xref> topic, the configuration processor reads and
./trialDITAs/overview.dita:        service definitions provided by <keyword keyref="kw-hos"/> and any persisted state
./trialDITAs/overview.dita:          <keyword keyref="kw-hos-phrase"/> allows you to deploy and manage your cloud via this
./trialDITAs/overview.dita:      <p>The example configurations that ship with <keyword keyref="kw-hos-phrase"/> are described
./trialDITAs/overview.dita:        in <xref keyref="example_configurations"><keyword keyref="kw-hos-phrase"/>: Example
./trialDITAs/overview.dita:          <li><xref keyref="entryscale_kvm_vsa">Entry-scale KVM with VSA model</xref></li>
./trialDITAs/overview.dita:          <li><xref keyref="entryscale_esx">Entry-scale ESX model</xref></li>
./trialDITAs/overview.dita:          <li><xref keyref="entryscale_swift">Entry-scale Swift model</xref></li>
./trialDITAs/overview.dita:          <li><xref keyref="entryscale_ceph">Entry-scale KVM with Ceph model</xref></li>
./trialDITAs/overview.dita:          <li><xref keyref="midscale_kvm_vsa">Mid-scale KVM with VSA model</xref></li>
./trialDITAs/overview.dita:      <table conkeyref="example_configurations/table_examples">
./trialDITAs/overview.dita:          keyref="kw-hos-phrase"/> documentation to refer to the features described in this
./trialDITAs/overview.dita:      <p>In <keyword keyref="kw-hos-phrase"/>, the YAML files that define your cloud configuration
./trialDITAs/passthrough.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Pass Through</title>
./trialDITAs/passthrough.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/password_change_yml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>password_change.yml</title>
./trialDITAs/password_change_yml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/password_change_yml.dita:            <keyword keyref="kw-hos"/> documentation</p>
./trialDITAs/pdf30.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Documentation PDF</title>
./trialDITAs/pdf30.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/pdf30.dita:    <p>A PDF version of the <keyword keyref="kw-hos"/> documentation can be downloaded here. Be
./trialDITAs/persisteddata.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Persisted Data</title>
./trialDITAs/persisteddata.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/persisteddata.dita:        <keyword keyref="kw-hos"/> will only persist data when the administrator confirms that they are about to
./trialDITAs/persisteddata.dita:    <p>Imagine you have completed your <keyword keyref="kw-hos"/> deployment with servers A, B, and C
./trialDITAs/persisteddata.dita:        keyref="configobj_servers">Servers</xref>), and include the control plane,
./trialDITAs/persisteddata.dita:        <xref keyref="namegeneration">Name Generation</xref> for how names are
./trialDITAs/planning_index.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Planning</title>
./trialDITAs/planning_preinstall.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Planning and Pre-installation</title>
./trialDITAs/planning_preinstall.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/post_install_overview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Post-Installation Overview</title>
./trialDITAs/post_install_overview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/postinstall_tasks.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Other Common Post-Installation Tasks</title>
./trialDITAs/postinstall_tasks.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/postinstall_tasks.dita:      <p>The home directory of the user that owns the <keyword keyref="kw-hos-phrase"/> scripts 
./trialDITAs/preinstall_checklist.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Pre-Installation Checklist</title>
./trialDITAs/preinstall_checklist.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/preinstall_checklist.dita:      <p>Before installing <keyword keyref="kw-hos"/>, the following networks must be provisioned
./trialDITAs/preinstall_checklist.dita:        manage the networks as documented in the <xref keyref="example_configurations">Example
./trialDITAs/preinstall_checklist.dita:        with a clean install of <keyword keyref="kw-hos-phrase"/> can you specify a different IPAM
./trialDITAs/preinstall_checklist.dita:      <p>The IP router used with <keyword keyref="kw-hos"/> must support the updated of its ARP
./trialDITAs/preinstall_checklist.dita:      <p>The management network is the backbone used for the majority of <keyword keyref="kw-hos"/>
./trialDITAs/preinstall_checklist.dita:      <p>This server contains the <keyword keyref="kw-hos"/> installer, which is based on Git,
./trialDITAs/preinstall_checklist.dita:        core <keyword keyref="kw-hos"/> services including Nova, Keystone, Glance, Cinder, Heat,
./trialDITAs/preinstall_config.dita:    <title><keyword keyref="kw-hos-version-30"/>Pre-installation Service and Feature Configuration</title>
./trialDITAs/preinstall_overview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Pre-installation Overview</title>
./trialDITAs/preinstall_overview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/preinstall_overview.dita:        <section><title><keyword keyref="kw-hos-phrase"/> Installation</title>
./trialDITAs/preinstall_overview.dita:                full power and flexibility of <keyword keyref="kw-hos-phrase"/>.</p>
./trialDITAs/prepare_deploy_cloud_controllers.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installation for Helion Entry Scale ESX, KVM
./trialDITAs/prepare_deploy_esx_cloud_ovsvapp.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Prepare and Deploy ESX Computes and OVSvAPPs </title>
./trialDITAs/private_data_metadata_yml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>private_data_metadata.yml</title>
./trialDITAs/private_data_metadata_yml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/procedure_to_deploy_esx_cloud.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Procedure to Deploy ESX Cloud with
./trialDITAs/provisioning_rhel.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Provisioning RHEL Yourself</title>
./trialDITAs/provisioning_rhel.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/provisioning_rhel.dita:                it can be added to a new or existing <keyword keyref="kw-hos-phrase"/> cloud.</p>
./trialDITAs/provisioning_rhel.dita:            <p>You need to set up a yum repository, either external or local, containing a <keyword keyref="kw-hos"/>
./trialDITAs/provisioning_rhel.dita:            <p>As documented in the <xref keyref="install_entryscale_kvm/thirdparty">Using 3rd Party
./trialDITAs/provisioning_rhel.dita:                    Baremetal Installers</xref> section of <xref keyref="install_entryscale_kvm"
./trialDITAs/provisioning_rhel.dita:                    conkeyref="install_entryscale_kvm/baremetal_prereqs"/>-->
./trialDITAs/qemu_save_folder_move.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Handle <codeph>qemu/save</codeph> Folder Migration </title>
./trialDITAs/qemu_save_folder_move.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/qemu_save_folder_move.dita:            <p>In <keyword keyref="kw-hos-phrase-21"/>, the folder used for saving suspended instances,
./trialDITAs/qemu_save_folder_move.dita:                limited capacity. To overcome this issue, <keyword keyref="kw-hos-phrase"/> uses a symbolic link  to a 
./trialDITAs/qemu_save_folder_move.dita:                If a compute node has a lot of suspended instances, the upgrade process from <keyword keyref="kw-hos-phrase-21"/> to 
./trialDITAs/qemu_save_folder_move.dita:                <keyword keyref="kw-hos-phrase"/> could take a long time as all the images for the suspended instances need to be 
./trialDITAs/quickstart_guide.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><keyword keyref="kw-hos"/> Quickstart
./trialDITAs/quickstart_guide.dita:                installing and setting up a <keyword keyref="kw-hos"/> cloud. Use this quickstart
./trialDITAs/quickstart_guide.dita:                fully functioning <keyword keyref="kw-hos"/> demo environment.</p>
./trialDITAs/quickstart_guide.dita:            <p>The following are short descriptions of the components that <keyword keyref="kw-hos"
./trialDITAs/quickstart_guide.dita:                        <keyword keyref="kw-hos"/> to manage nearly all aspects of your cloud
./trialDITAs/quickstart_guide.dita:            <p>Successfully deploying a <keyword keyref="kw-hos"/> cloud environment is a large but
./trialDITAs/quickstart_guide.dita:                    keyref="kw-hos"/> cloud requires the proper network infrastrucure. Because
./trialDITAs/quickstart_guide.dita:                    <keyword keyref="kw-hos"/> segregates the network traffic of many of its
./trialDITAs/quickstart_guide.dita:                    a copy of the <keyword keyref="kw-hos"/> installation
./trialDITAs/quickstart_guide.dita:                        <li>Using the URL that you obtained the <keyword keyref="kw-hos"/>
./trialDITAs/quickstart_guide.dita:                            server:<codeblock>wget &lt;URL for <keyword keyref="kw-hos"/> installation ISO></codeblock></li>
./trialDITAs/quickstart_guide.dita:                                        playbook, your <keyword keyref="kw-hos"/> cloud will be in
./trialDITAs/rbac.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Role-based Access Control in Neutron</title>
./trialDITAs/rbac.dita:      <p>Previously in <keyword keyref="kw-hos"/>, a network object was either private to a project or
./trialDITAs/rebalanced_explained.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Rebalancing Swift Rings</title>
./trialDITAs/rebalanced_explained.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/rebalanced_explained.dita:        <li>Not all devices are of the same size. <keyword keyref="kw-hos-phrase"/> automatically
./trialDITAs/reboot_cloud_down.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Bringing Down Your Cloud: Services Down
./trialDITAs/reboot_cloud_down.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/reboot_cloud_down.dita:        <li>Continue checking the status of your <keyword keyref="kw-hos-phrase"/> cloud services
./trialDITAs/reboot_cloud_rolling.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Rolling Reboot of the Cloud</title>
./trialDITAs/reboot_rados_node.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Rebooting a RADOS Gateway Node</title>
./trialDITAs/recommended_hardware_minimums.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recommended Hardware Minimums for the Example
./trialDITAs/recommended_hardware_minimums.dita:      <p>These recommended minimums are based on the included <xref keyref="example_configurations"
./trialDITAs/recommended_hardware_minimums.dita:          keyref="example_configurations"/>.</p>
./trialDITAs/recommended_hardware_minimums.dita:      <p>These recommended minimums are based on the included <xref keyref="example_configurations"
./trialDITAs/recommended_hardware_minimums.dita:        keyref="example_configurations"/>.</p>
./trialDITAs/recommended_hardware_minimums.dita:      <p>These recommended minimums are based on the included <xref keyref="example_configurations"
./trialDITAs/recommended_hardware_minimums.dita:      <p><keyword keyref="kw-hos-phrase"/> currently supports the following ESXi versions:</p>
./trialDITAs/recommended_hardware_minimums.dita:      <p>These recommended minimums are based on the included <xref keyref="example_configurations"
./trialDITAs/recommended_hardware_minimums.dita:      <p><keyword keyref="kw-hos-phrase"/> currently supports the following ESXi versions:</p>
./trialDITAs/recommended_hardware_minimums.dita:          keyref="example_configurations">example configurations</xref> included with the base
./trialDITAs/recommended_hardware_minimums.dita:          keyref="example_configurations"/>.</p>
./trialDITAs/recommended_hardware_minimums.dita:      <p>These recommended minimums are based on the included <xref keyref="example_configurations"
./trialDITAs/recommended-hardware-minimums.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recommended Hardware Minimums for the Example
./trialDITAs/recommended-hardware-minimums.dita:      <p>Before performing any installation or upgrade of a <keyword keyref="kw-hos"/> release on
./trialDITAs/recommended-hardware-minimums.dita:      <p>These recommended minimums are based on the included <xref keyref="example_configurations"
./trialDITAs/recommended-hardware-minimums.dita:        keyref="example_configurations"/>.</p>
./trialDITAs/reconfigure_ceph_services.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Reconfiguring Ceph Services</title>
./trialDITAs/reconfigure_ceph_services.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/reconfigure_vsa_verb_add_extra_disk.dita:  <title><ph conkeyref="HOS-conrefs/product-title">Reconfiguring Disk Model of Already Deployed VSA
./trialDITAs/reconfigure_vsa_verb_add_extra_disk.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/reconfigure_vsa_verb_add_extra_disk.dita:      <p>The <keyword keyref="kw-hos-phrase"/> allows you to add new disk(s) to the deployed VSA
./trialDITAs/reconfigure_vsa_verb_add_remove_extra_disk.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Reconfiguring the Disk Model of a Deployed VSA </title>
./trialDITAs/reconfigure_vsa_verb_add_remove_extra_disk.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/recover_compute_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recovering a Compute Node</title>
./trialDITAs/recover_compute_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/recovering_builder_file.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recovering Swift Builder Files</title>
./trialDITAs/recovering_builder_file.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/recovering_controller_nodes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recovering the Control Plane</title>
./trialDITAs/recovering_controller_nodes.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/recover_swift_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recovering a Swift Node</title>
./trialDITAs/recover_vertica.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recovering Vertica after File System
./trialDITAs/recover_vertica.dita:  <abstract><shortdesc outputclass="hdphidden">In <keyword keyref="kw-hos-phrase"/>, the monitoring
./trialDITAs/recover_vertica.dita:    <p>In <keyword keyref="kw-hos-phrase"/>, the monitoring service uses Vertica as its database. If
./trialDITAs/regions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Regions</title>
./trialDITAs/regions.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/region_topology_yml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>region_topology.yml</title>
./trialDITAs/region_topology_yml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/releasenotes50.dita:    <title><keyword keyref="kw-hos-tm"/>
./trialDITAs/releasenotes50.dita:        <keyword keyref="kw-hos-version-50"/>: Release Notes</title>
./trialDITAs/releasenotes50.dita:                <keyword keyref="kw-hos-phrase"/>, including known issues and workarounds for this
./trialDITAs/releasenotes50.dita:                keyref="kw-hos-phrase"/>, including known issues and workarounds for this
./trialDITAs/remove_ceph_rados_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Removing a Ceph RADOS Gateway Node</title>
./trialDITAs/remove_ceph_rados_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/remove_compute_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Removing a Compute Node</title>
./trialDITAs/remove_compute_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/remove_compute_node.dita:          nodes you are using. <p>See <xref keyref="configobj_controlplane">Input Model - Control
./trialDITAs/remove_compute_node.dita:            the configuration processor. See <xref keyref="persisteddata">Persisted Data</xref> for
./trialDITAs/remove_existing_cluster_compute_resource_pool.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Removing a Cluster from the Compute Resource
./trialDITAs/remove_existing_cluster_compute_resource_pool.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/remove_monitor_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Removing a Ceph Monitor Node</title>
./trialDITAs/remove_monitor_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/remove_osd_datadisk.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Removing a Data Disk from a Ceph OSD
./trialDITAs/remove_osd_datadisk.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/remove_osd_node.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Removing a Ceph OSD Node</title>
./trialDITAs/remove_osd_node.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/remove_vsa_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Removing a VSA Node</title>
./trialDITAs/remove_vsa_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/removing_esx_host_from_cluster.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Removing an ESXi Host from a Cluster</title>
./trialDITAs/removing_esx_host_from_cluster.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/removing_esx_host_from_cluster.dita:              keyref="persisteddata">Persisted Data</xref> for more
./trialDITAs/removing_swift_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Removing a Swift Node</title>
./trialDITAs/removing_swift_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/removing_swift_node.dita:          IDs are already listed in that file. See <xref keyref="passthrough">Input Model -
./trialDITAs/removing_swift_node.dita:              running the configuration processor. See <xref keyref="persisteddata">Persisted
./trialDITAs/replace_ceph_monitor_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing a Ceph Monitor Node</title>
./trialDITAs/replace_ceph_monitor_node.dita:    <p><keyword keyref="kw-hos-phrase"/> supports hosting the Ceph monitor service in the following
./trialDITAs/replace_ceph_osd_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing a Ceph OSD Node</title>
./trialDITAs/replace_ceph_osd_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/replace_controller.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing a Controller Node</title>
./trialDITAs/replace_controller.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/replace_controller.dita:    <p>For <keyword keyref="kw-hos-phrase"/> versions, you must have three controller nodes.
./trialDITAs/replace_osd_datadisk.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing the Data Disk in a Ceph OSD
./trialDITAs/replace_osd_journaldisk.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing the Journal Disk in a Ceph OSD
./trialDITAs/replace_osd_journaldisk.dita:      <p><keyword keyref="kw-hos-phrase"/> supports a Ceph environment with the following OSD node
./trialDITAs/replace_osd_osdisk.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing the Operating System Disk in a Ceph
./trialDITAs/replacing_drives_swift_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing Drives in a Swift Node</title>
./trialDITAs/replacing_drives_swift_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/replacing_swift_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing a Swift Node</title>
./trialDITAs/replacing_swift_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/resources.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Resources</title>
./trialDITAs/resources.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/resources.dita:                            server allocations (see <xref keyref="persisteddata">Persisted
./trialDITAs/resources.dita:                            keyref="namegeneration">Name Generation</xref>)</entry>
./trialDITAs/resources.dita:                            allocated to this resource group. (see <xref keyref="concept_serverroles"
./trialDITAs/resources.dita:                                keyref="concept_servergroups_failurezones">Server Groups and Failure
./trialDITAs/restart_ceph.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recovering Ceph Hosts After a Reboot</title>
./trialDITAs/restart_ceph.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/restart_ceph_rados.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Restarting a Ceph RADOS Gateway Node</title>
./trialDITAs/restart_ceph_rados.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/restart_controller.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Restarting Controller Nodes After a
./trialDITAs/restart_controller.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/restart_deploy_from_scratch.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Restarting the Object Storage Deployment</title>
./trialDITAs/restart_deploy_from_scratch.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/restarting_nodes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Restarting Nodes</title>
./trialDITAs/retrieve_adminpassword.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Retrieving the Admin Password</title>
./trialDITAs/retrieve_adminpassword.dita:      tools and API.</shortdesc><p>In a default <keyword keyref="kw-hos-phrase"/> installation there is a
./trialDITAs/rhel_overview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>RHEL Compute Node Installation Overview</title>
./trialDITAs/rhel_overview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/rhel_overview.dita:                <p><keyword keyref="kw-hos-phrase"/> supports RHEL compute nodes, specifically RHEL 7.2. 
./trialDITAs/rhel_overview.dita:                    HPE does not ship a RedHat iso with <keyword keyref="kw-hos"/> so you will need to 
./trialDITAs/rhel_overview.dita:                <p>There are two approaches for deploying RHEL compute nodes in <keyword keyref="kw-hos"/>:
./trialDITAs/rhel_compute_model.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>RHEL Compute Nodes</title>
./trialDITAs/rhel_compute_model.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/rhel_preinstall.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>RHEL Pre-Installation Checks</title>
./trialDITAs/rhel_preinstall.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/rhel_preinstall.dita:                <keyword keyref="kw-hos-phrase"/> uses iptables to secure access to lifecycle manager network interfaces and on 
./trialDITAs/rhel_preinstall.dita:                This sample configuration is inappropriate for <keyword keyref="kw-hos"/> operation and the node will not be able to run HOS 
./trialDITAs/rhel_preinstall.dita:                <keyword keyref="kw-hos-phrase"/> install will prevent the installation of the sample files.                
./trialDITAs/rhel_preinstall.dita:                However, if these files do exist, there are a number of steps that you must follow before you install <keyword keyref="kw-hos-phrase"/>.
./trialDITAs/rhel_preinstall.dita:                <keyword keyref="kw-hos"/> components and OpenStack components manage <i>interface specific</i> rules.
./trialDITAs/rhel_preinstall.dita:                <li>Ensure that any remaining rules are limited to interfaces not used by <keyword keyref="kw-hos"/>.  <!--To delete
./trialDITAs/rhel_preinstall.dita:                    interfaces not used by <keyword keyref="kw-hos"/>), you will need to reboot the system to activate the new settings.
./trialDITAs/rhel_support.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>RHEL Support</title>
./trialDITAs/rhel_support.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/rhel_support.dita:                tested and qualified by HPE to run on <keyword keyref="kw-hos"/>. Refer to the
./trialDITAs/rhel_support.dita:                published compatibility matrix for your version of <keyword keyref="kw-hos"/> at the
./trialDITAs/rhel_support.dita:                        <p>HPE customers who have purchased both <keyword keyref="kw-hos"/> and RHEL
./trialDITAs/rhel_support.dita:                            specialists in <keyword keyref="kw-hos"/> and RedHat technologies. If
./trialDITAs/rhel_support.dita:                            level. If <keyword keyref="kw-hos"/> software is excluded as the cause
./trialDITAs/rhel_toc.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>RHEL Installation Overview</title>
./trialDITAs/rhel_toc.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ring_management.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Swift Rings</title>
./trialDITAs/ring_management.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ring_management.dita:      provided during setup of the <keyword keyref="kw-hos"/> Input Model. (For more information,
./trialDITAs/ring_specifications.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Understanding Swift Ring Specifications</title>
./trialDITAs/ring_specifications.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ring_specifications.dita:        data required to build future rings. In <keyword keyref="kw-hos-phrase"/>, you will use the
./trialDITAs/ring_specifications.dita:      <p><b>Ring Specifications in <keyword keyref="kw-hos"/> 2.x and 3.x</b></p>
./trialDITAs/ring_specifications.dita:        In <keyword keyref="kw-hos"/> 2.x and 3.x, ring specifications were mentioned in the 
./trialDITAs/ring_specifications.dita:        <keyword keyref="kw-hos"/> 4.x continues to support ring specifications in that file. 
./trialDITAs/ring_specifications.dita:        If you upgrade to <keyword keyref="kw-hos"/> 4.x, you do not need to make any changes.
./trialDITAs/ring_specifications.dita:        <p>In <keyword keyref="kw-hos-phrase"/>, Swift supports erasure coded object rings as well
./trialDITAs/ring_specifications.dita:                ec_types in <keyword keyref="kw-hos-phrase"/> are: <ul>
./trialDITAs/rn_content-jira_1688.dita:      included in <keyword keyref="kw-hos"/> and their status. Only official upstream OpenStack
./trialDITAs/rn_content-jira_1688.dita:        service is not listed in the table then it is not present in <keyword keyref="kw-hos"
./trialDITAs/rn_content-jira_1688.dita:          <stentry>Status in <keyword keyref="kw-hos-phrase-20"/></stentry>
./trialDITAs/rn_content-jira_1688.dita:      <title>Relation of <keyword keyref="kw-hos"/> Services with OpenStack stable/kilo</title>
./trialDITAs/rn_content-jira_1688.dita:      <p>The general policy for <keyword keyref="kw-hos-version-20"/> is that each service is kept
./trialDITAs/rn_content-jira_1688.dita:        <keyword keyref="kw-hos-version-20"/> build is summarised here. This is automated output
./trialDITAs/rn_content-jira_1688.dita:      from all the OpenStack repos included in the <keyword keyref="kw-hos"/> daily builds. </p>
./trialDITAs/rn_content-jira_1688.dita:      of OpenStack Kilo will <keyword keyref="kw-hos-version-20"/> ship with?As per above, <keyword
./trialDITAs/rn_content-jira_1688.dita:        keyref="kw-hos-version-20"/> is built from code which is sync'd nightly with upstream
./trialDITAs/rn_content-jira_1688.dita:      OpenStack stable/kilo. <keyword keyref="kw-hos-version-20"/> will therefore ship with the
./trialDITAs/rn_content-jira_1688.dita:      latest Kilo patches as of the final build of <keyword keyref="kw-hos-version-20"/>. In other
./trialDITAs/rn_content-jira_1688.dita:      words, the <keyword keyref="kw-hos-version-20"/> plan is that it will be more up to date than
./trialDITAs/route_info_yml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>route_info.yml</title>
./trialDITAs/route_info_yml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/route_info_yml.dita:        data; this file shows which routes will actually be used. <keyword keyref="kw-hos"/> will
./trialDITAs/rule.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Rule</title>
./trialDITAs/rule.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/safe_rebalance_deploy_ring.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Determining When to Rebalance and Deploy a New
./trialDITAs/safe_rebalance_deploy_ring.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/scale_config_changes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Making Scale Configuration Changes</title>
./trialDITAs/scale_config_changes.dita:    <p conkeyref="HOS-conrefs/applies-to"> </p>
./trialDITAs/security_overview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Security Overview</title>
./trialDITAs/security_overview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/security_overview.dita:        <p>The <keyword keyref="kw-hos-phrase"/> Security topics include:</p>
./trialDITAs/serverallocation.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Server Allocation</title>
./trialDITAs/serverallocation.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/servergroups.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Server Groups</title>
./trialDITAs/servergroups.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/servergroups.dita:            keyref="concept_servergroups">Server Groups</xref>).</p>
./trialDITAs/servergroups.dita:                                keyref="configobj_controlplane">Control Plane</xref>)</entry>
./trialDITAs/servergroups.dita:                        <entry>A list of network names (see <xref keyref="concept_networks"
./trialDITAs/servergroups.dita:                            >Networks</xref>). See <xref keyref="concept_servergroups_networks">Server
./trialDITAs/servergroups_failurezones.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Server Groups and Failure Zones</title>
./trialDITAs/servergroups_failurezones.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/servergroups_networks.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Server Groups and Networks</title>
./trialDITAs/servergroups_networks.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/servergroups_networks.dita:        <keyword keyref="kw-hos"/> model via <uicontrol>server-groups</uicontrol>, each group lists zero or more
./trialDITAs/server_info_yml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>server_info.yml</title>
./trialDITAs/server_info_yml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/servernetworkselection.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Server Network Selection</title>
./trialDITAs/servernetworkselection.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/servernetworkselection.dita:            <xref keyref="concept_servergroups_networks">Server Groups and Networks</xref>) to
./trialDITAs/serverroles.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Server Roles</title>
./trialDITAs/serverroles.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/serverroles.dita:            <li>Disk model (see <xref keyref="configobj_diskmodels">Disk Models</xref>)</li>
./trialDITAs/serverroles.dita:            <li>Interface model (see <xref keyref="configobj_interfacemodels">Interface
./trialDITAs/serverroles.dita:        <li>Memory model (see <xref keyref="configobj_memorymodels">Memory Models</xref>)</li>
./trialDITAs/serverroles.dita:            <li>CPU model (see <xref keyref="configobj_cpumodels">CPU Models</xref>)</li>
./trialDITAs/serverroles.dita:        <p>Server roles are referenced in the servers (see <xref keyref="configobj_servers"
./trialDITAs/servers.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Servers</title>
./trialDITAs/servers.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/servers.dita:                            are used to track server allocations. (see <xref keyref="persisteddata"
./trialDITAs/servers.dita:                            keyref="concept_serverroles">Server Roles</xref> for a description of server
./trialDITAs/servers.dita:                            server. (see <xref keyref="configobj_nicmappings">NIC Mappings</xref>)</entry>
./trialDITAs/servers.dita:                            belongs to. (see <xref keyref="concept_servergroups">Server
./trialDITAs/service_info_yml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>service_info.yml</title>
./trialDITAs/service_info_yml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/services_components.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Services and Service Components</title>
./trialDITAs/services_components.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/services.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Services</title>
./trialDITAs/services.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/services.dita:        <keyword keyref="kw-hos"/>.</p>
./trialDITAs/services.dita:    <p>When specifying your <keyword keyref="kw-hos"/> cloud you have to decide where components will
./trialDITAs/services.dita:        services? The <keyword keyref="kw-hos"/> supplied examples provide solutions for some typical
./trialDITAs/service_topology_yml.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>service_topology.yml</title>
./trialDITAs/service_topology_yml.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/shared_node_recovery.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Shared Control Plane/Lifecycle Manager Recovery</title>
./trialDITAs/shared_node_recovery.dita:      in this case) in <keyword keyref="kw-hos"/>, excute the following steps. <ol>
./trialDITAs/sles_compute_model.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>SLES Compute Nodes</title>
./trialDITAs/sles_compute_model.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/standalone_deployer.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Using a Dedicated Lifecycle Manager
./trialDITAs/standalone_deployer.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/standalone_deployer.dita:                configuration, see <xref keyref="localizing_inputmodel/netinterfaces"
./trialDITAs/standalone_deployer.dita:                running on, i.e., the node where you have installed the <keyword keyref="kw-hos"/>
./trialDITAs/standalonedeployer.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Standalone Lifecycle Manager</title>
./trialDITAs/standalonedeployer.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/start_stop_services.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Starting and Stopping Individual
./trialDITAs/start_stop_services.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/start_stop_services.dita:      <p><keyword keyref="kw-hos"/> provides an ansible playbook that can stop or start all Nova
./trialDITAs/storage_maintenance.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Planned Storage Maintenance</title>
./trialDITAs/storage_policies.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Designing Storage Policies</title>
./trialDITAs/storage_policies.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/swift_cli.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using the Swift Command-line Client
./trialDITAs/swift_cli.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/swift_container_sync.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring your Swift System to Allow Container
./trialDITAs/swift_container_sync.dita:          keyref="kw-hos-version-30"/> system. If you are synchronizing with another Swift system
./trialDITAs/swift_container_sync.dita:          <keyword keyref="kw-hos-version-30"/> terminology.</p>
./trialDITAs/swift_device_groups.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Swift Requirements for Device Group
./trialDITAs/swift_device_groups.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/swift_dispersion_report.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Running the Swift Dispersion Report</title>
./trialDITAs/swift_dispersion_report.dita:      <p>Once a Swift system has been fully deployed in <keyword keyref="kw-hos-phrase"/>, you can
./trialDITAs/swift_examples.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Swift Examples</title>
./trialDITAs/swift_examples.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/swift_input_model.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Modifying Example Configurations for Object
./trialDITAs/swift_input_model.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/swift_min_part_hours.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Changing min-part-hours in Swift</title>
./trialDITAs/swift_min_part_hours.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/swift_node_maintenance.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Swift Node Maintenance</title>
./trialDITAs/swift_ring_mgmt.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Rings Using Swift Playbooks</title>
./trialDITAs/swift_ring_mgmt.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/swift_weight_attribute.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using the Weight-Step Attributes to Prepare for
./trialDITAs/swift_weight_attribute.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/swift_weight_attribute.dita:        keyref="kw-hos-phrase"/> does this by limiting the weights of the new drives to a smaller
./trialDITAs/swift_weight_attribute.dita:        keyref="kw-hos-phrase"/> will increase the weight and rebuild rings to trigger another round
./trialDITAs/swift_weight_attribute.dita:    <p>In <keyword keyref="kw-hos"/>, the weight-step attribute is set in the ring specification of
./trialDITAs/swift_zones.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Designing Swift Zones</title>
./trialDITAs/system_details.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>View Ironic System Details</title>
./trialDITAs/system_details.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/system_maintenance.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>System Maintenance</title>
./trialDITAs/system_maintenance.dita:      keyref="kw-hos-phrase"/> cloud.</abstract>
./trialDITAs/test.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Bringing up a Cloud with DCN ml2 Mechanism
./trialDITAs/test.dita:      <p><image keyref=""/></p>
./trialDITAs/thirdparty_driver_support.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Third-party Driver Support</title>
./trialDITAs/thirdparty_driver_support.dita:  <abstract><shortdesc outputclass="hdphidden"><keyword keyref="kw-hos-phrase"/> comes with a
./trialDITAs/thirdparty_driver_support.dita:      overview of deployer-side additions to a <keyword keyref="kw-hos"/>
./trialDITAs/thirdparty_driver_support.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/thirdparty_driver_support.dita:      <p><keyword keyref="kw-hos-phrase"/> comes with a selection of built-in plugins and drivers
./trialDITAs/thirdparty_driver_support.dita:        additions to a <keyword keyref="kw-hos"/> deployment.</p>
./trialDITAs/thirdparty_driver_support.dita:          <keyword keyref="kw-hos"/> environment. The second will be from the perspective of a
./trialDITAs/thirdparty_driver_support.dita:        developer who wants to package their driver for use on <keyword keyref="kw-hos"/>.</p>
./trialDITAs/thirdparty_driver_support.dita:                    third-party drivers forward with new <keyword keyref="kw-hos"/>
./trialDITAs/thirdparty_driver_support.dita:          keyref="kw-hos"/> versions</title>
./trialDITAs/third_party_service_integration.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Third-party Service Integration</title>
./trialDITAs/third_party_service_integration.dita:<abstract><shortdesc outputclass="hdphidden">This documentation details the support <keyword keyref="kw-hos-phrase"/>
./trialDITAs/third_party_service_integration.dita:        provides for the integration of 3rd-party components with a <keyword keyref="kw-hos"/>
./trialDITAs/third_party_service_integration.dita:        existing service in the <keyword keyref="kw-hos"/> stack. The 3rd-party mechanism supports the integration of a
./trialDITAs/third_party_service_integration.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/third_party_service_integration.dita:      <p><keyword keyref="kw-hos"/> provides great  flexibility when deploying your cloud, including:
./trialDITAs/third_party_service_integration.dita:        <keyword keyref="kw-hos-phrase"/>
./trialDITAs/third_party_service_integration.dita:        extends this flexibility by supporting the integration of 3rd-party components with a <keyword keyref="kw-hos"/>
./trialDITAs/third_party_service_integration.dita:        existing service in the <keyword keyref="kw-hos"/> stack. The 3rd-party mechanism supports the integration of a
./trialDITAs/third_party_service_integration.dita:          <b>Packages:</b> Addition of 3rd-party packages not available in <keyword keyref="kw-hos"/> repos onto a separate
./trialDITAs/third_party_service_integration.dita:          <keyword keyref="kw-hos"/> services are deployed as separate python virtual environments
./trialDITAs/third_party_service_integration.dita:            <li> The patching of an existing <keyword keyref="kw-hos"/> venv, e.g. adding a plugin
./trialDITAs/third_party_service_integration.dita:              to the <keyword keyref="kw-hos"/> neutron venv.</li>
./trialDITAs/third_party_service_integration.dita:                <keyword keyref="kw-hos"/> venv. </li>
./trialDITAs/third_party_service_integration.dita:          <b>Service Definitions:</b> <keyword keyref="kw-hos"/> services and service components are defined in a series of
./trialDITAs/third_party_service_integration.dita:          relationships between each other and with <keyword keyref="kw-hos"/>-supplied services can be defined. These
./trialDITAs/third_party_service_integration.dita:          service definitions will be processed along with the set of <keyword keyref="kw-hos"/> service definitions to
./trialDITAs/third_party_service_integration.dita:            plugin to be patched in an existing <keyword keyref="kw-hos"/> service venv or python code for a new venv. Helion lifecycle manager
./trialDITAs/third_party_service_integration.dita:          centralised logging service provided by <keyword keyref="kw-hos"/>. This service also manages the logrorate
./trialDITAs/third_party_service_integration.dita:          <b><keyword keyref="kw-hos"/> service configuration:</b> Some <keyword keyref="kw-hos"/> services (currently, just Neutron) provide an
./trialDITAs/third_party_service_integration.dita:        <keyword keyref="kw-hos"/> platform in advance of a deployment. In the general use case, the 3rd-party content is
./trialDITAs/third_party_service_integration.dita:              populated with <keyword keyref="kw-hos"/> extensions content shipped with <keyword
./trialDITAs/third_party_service_integration.dita:                keyref="kw-hos"/>, e.g. for a <keyword keyref="kw-hos"/>-DCN deployment: <codeblock>cp -r ~/helion/hos_extensions/dcn ~/third-party/</codeblock>
./trialDITAs/third_party_service_integration.dita:                keyref="kw-hos"/> extensions) must be added to the third-party area for a <keyword
./trialDITAs/third_party_service_integration.dita:                keyref="kw-hos"/>-DCN deployment. <!--Full details on how to set up
./trialDITAs/third_party_service_integration.dita:              <keyword keyref="kw-hos"/> with DCN see – TODO REF):-->
./trialDITAs/third_party_service_integration.dita:                keyref="kw-hos"/> provides a different set of service venvs for hlinux and RHEL) are
./trialDITAs/third_party_service_integration.dita:          <image keyref="debian_rhel_import"/>
./trialDITAs/third_party_service_integration.dita:          and populate the 3rd-party apt repo (separate to the base <keyword keyref="kw-hos"/> apt repo) with deb packages
./trialDITAs/third_party_service_integration.dita:          and populate the 3rd-party yum repo (separate to the <keyword keyref="kw-hos"/> yum repo, if present) with rpm
./trialDITAs/third_party_service_integration.dita:        <p>The third-party import mechanism supports both the patching of existing <keyword keyref="kw-hos"/> venvs and
./trialDITAs/third_party_service_integration.dita:          the creation of new venvs. An example of the patching of an existing <keyword keyref="kw-hos"/> neutron venv is
./trialDITAs/third_party_service_integration.dita:          <image keyref="hos_neutron_venv"/>
./trialDITAs/third_party_service_integration.dita:        <p>A sample directory layout for the patching of an existing <keyword keyref="kw-hos"/> venv with plugin code and
./trialDITAs/third_party_service_integration.dita:          which must be present. To patch an existing <keyword keyref="kw-hos"/> venv, such as neutron, the services.yml is
./trialDITAs/third_party_service_integration.dita:          the original venv supplied with <keyword keyref="kw-hos"/>.</p>
./trialDITAs/third_party_service_integration.dita:          <keyword keyref="kw-hos"/> nova-client venv. This additionally has content installed into it from the debs, src
./trialDITAs/third_party_service_integration.dita:          the input model can be found <xref keyref="input_model">here</xref>). The input model refers to a
./trialDITAs/third_party_service_integration.dita:          readability and organisation, but this is not strictly required); the full set of <keyword keyref="kw-hos"/>
./trialDITAs/third_party_service_integration.dita:          service and its constituent service-components (in <keyword keyref="kw-hos-phrase"/>) is as follows: </p>
./trialDITAs/third_party_service_integration.dita:          <image keyref="import_mechanisms"/>
./trialDITAs/third_party_service_integration.dita:          definitions will have been added to the existing set of <keyword keyref="kw-hos"/> services under
./trialDITAs/third_party_service_integration.dita:          <image keyref="ansible_playbook_roles"/>
./trialDITAs/third_party_service_integration.dita:              <b>service: </b>Refers to the name of a <keyword keyref="kw-hos"/> service as per its naming in the Helion lifecycle manager
./trialDITAs/third_party_service_integration.dita:          <p>In deploying <keyword keyref="kw-hos"/>, customers may want to modify some of the configuration files supplied
./trialDITAs/third_party_service_integration.dita:            by <keyword keyref="kw-hos"/>. To facilitate this, the <codeph>~/helion/my_cloud/config</codeph> area on the lifecycle
./trialDITAs/third_party_service_integration.dita:            services in <keyword keyref="kw-hos"/>. To customise, the customer edits these files directly and commits to
./trialDITAs/third_party_service_integration.dita:            git (see <xref keyref="using_git">Using GIT</xref> ) and those
./trialDITAs/third_party_service_integration.dita:            <image keyref="other_application_content"/>
./trialDITAs/third_party_service_integration.dita:        <p><keyword keyref="kw-hos"/> provides a centralised logging service, which collects log files for all <keyword keyref="kw-hos"/> services
./trialDITAs/third_party_service_integration.dita:          profile and general info on the centralized logging service, please see the documentation <xref keyref="centralized_logging">here</xref>.
./trialDITAs/third_party_service_integration.dita:      <title><keyword keyref="kw-hos"/> Service Configuration</title>
./trialDITAs/third_party_service_integration.dita:          <ph>Some <keyword keyref="kw-hos"/> services provide an interface for injecting third-party customizations of the
./trialDITAs/third_party_service_integration.dita:            service/service-component. Currently, only the <keyword keyref="kw-hos"/> neutron service provides such an
./trialDITAs/third_party_service_integration.dita:      <p>After deploying <keyword keyref="kw-hos"/> integrated with a third-party service, there are two main upgrade
./trialDITAs/third_party_service_integration.dita:        <li> <keyword keyref="kw-hos"/> upgrade (major, minor, patch or hotfix) </li>
./trialDITAs/third_party_service_integration.dita:        <li>Upgrade of third-party content independent of a <keyword keyref="kw-hos"/> upgrade.</li>
./trialDITAs/third_party_service_integration.dita:      <title><keyword keyref="kw-hos"/> Upgrade</title>
./trialDITAs/third_party_service_integration.dita:          <ph>After deploying <keyword keyref="kw-hos"/> integrated with a third-party service, the </ph>following steps
./trialDITAs/third_party_service_integration.dita:          must be carried for any upgrade of <keyword keyref="kw-hos"/> (major, minor, patch, hotfix): </p>
./trialDITAs/third_party_service_integration.dita:            to the latest <keyword keyref="kw-hos"/> Neutron venv supplied in the upgrade kit. </li>
./trialDITAs/third_party_service_integration.dita:          patched and deployed venv with the latest one supplied in the <keyword keyref="kw-hos"/> upgrade kit. For this
./trialDITAs/third_party_service_integration.dita:        <p>It is also possible to update third-party content independently of a <keyword keyref="kw-hos"/> upgrade, e.g.
./trialDITAs/third_party_service_integration.dita:          update the plugin used to patch the <keyword keyref="kw-hos"/> Neutron venv. To update third-party content, the
./trialDITAs/third_party_service_integration.dita:            If the third-party update involves the change of a Neutron plugin, the latest <keyword keyref="kw-hos"/>
./trialDITAs/tls_configCONTENT_DO_NOT_DELETE.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Transport Layer Security Configuration</title>
./trialDITAs/tls_configCONTENT_DO_NOT_DELETE.dita:    <section><title/>In <keyword keyref="kw-hos-phrase-30"/>, you can provide your own certificate
./trialDITAs/tls_configCONTENT_DO_NOT_DELETE.dita:        service has a different domain name in <keyword keyref="kw-hos-phrase-30"/>. So it is
./trialDITAs/tls_configCONTENT_DO_NOT_DELETE.dita:      <p>All of the <keyword keyref="kw-hos-phrase"/> example cloud models ship with TLS enabled on
./trialDITAs/tls_config.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>TLS Configuration</title>
./trialDITAs/tls_config.dita:    <section><title/>In <keyword keyref="kw-hos-phrase"/>, you can provide your own certificate
./trialDITAs/tls_config.dita:        keyref="kw-hos"/> are useful for testing and setup, but you should always install your own
./trialDITAs/tls_config.dita:        service has a different domain name in <keyword keyref="kw-hos-phrase"/>. So it is
./trialDITAs/tls_config.dita:        <p>All of the <keyword keyref="kw-hos-phrase"/> example cloud models ship with TLS enabled on
./trialDITAs/tls_config.dita:          keyref="kw-hos-phrase"/>. Let's also assume that for the internal VIP you will use the
./trialDITAs/tls_config.dita:      <p><keyword keyref="kw-hos"/> generates its own internal certificates but is designed to allow
./trialDITAs/tls_config.dita:          for the CA certificate to be processed by <keyword keyref="kw-hos"/>. Detailed steps are
./trialDITAs/tls_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Transport Layer Security (TLS)  Overview</title>
./trialDITAs/tls_overview.dita:        user communications to and between the <keyword keyref="kw-hos"/> services from internal and
./trialDITAs/tls_overview.dita:      <p>In  <keyword keyref="kw-hos-phrase"/>, the following are enabled for TLS</p>
./trialDITAs/tls_overview.dita:            keyref="kw-hos-phrase-30"/>. The external name in the input model files (in
./trialDITAs/tls_overview.dita:    <section><title> <keyword keyref="kw-hos-phrase"/> clean install vs. upgrade</title> <p>Clean install: all
./trialDITAs/troubleshooting_issues.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting Issues</title>
./trialDITAs/troubleshooting_issues.dita:      <keyword keyref="kw-hos-phrase"/> cloud.</abstract>
./trialDITAs/troubleshooting_issues.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/troubleshooting_sosreport.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Retrieving the SOS Report</title>
./trialDITAs/troubleshooting_sosreport.dita:    debugging issues in your <keyword keyref="kw-hos"/> environment you can run an ansible playbook
./trialDITAs/troubleshooting_tls.dita:      while <keyword keyref="kw-hos-phrase"/> allows you to add new trust chains, it would be
./trialDITAs/troubleshooting_tls.dita:        keyref="kw-hos-phrase"/> due to the following. <ul>
./trialDITAs/ts_blockstorage.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Block Storage Troubleshooting</title>
./trialDITAs/ts_bura.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Backup and Restore Troubleshooting</title>
./trialDITAs/ts_bura.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ts_ceph.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Ceph Storage Troubleshooting</title>
./trialDITAs/ts_ceph.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ts_ceph.dita:          <p>In <keyword keyref="kw-hos"/>, OSD disks are referred to by UUID instead of by block
./trialDITAs/ts_ceph.dita:          <p>If you were using a previous version of <keyword keyref="kw-hos"/> and then upgraded,
./trialDITAs/ts_ceph.dita:              keyref="kw-hos"/> then your UUIDs will be auto-populated during installation.</p>
./trialDITAs/ts_ceph.dita:          <note type="attention">This is applicable only for <keyword keyref="kw-hos-version-30"
./trialDITAs/ts_compute.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting Compute Service</title>
./trialDITAs/ts_compute.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ts_compute.dita:    <section conkeyref="rhel_support/rhel_support_text"/>
./trialDITAs/ts_compute.dita:        initial install or upgrade to <keyword keyref="kw-hos-phrase-30"/>, and you have run the
./trialDITAs/ts_controlplane.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Control Plane Troubleshooting</title>
./trialDITAs/ts_image.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting the Image (Glance)
./trialDITAs/ts_keymgmt.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting Key Management</title>
./trialDITAs/ts_keymgmt.dita:  <body><!--not tested-->    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ts_metering.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Usage Reporting Troubleshooting</title>
./trialDITAs/ts_metering.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ts_rados.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting the Ceph RADOS Service</title>
./trialDITAs/ts_rados.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ts_storage.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Storage Troubleshooting</title>
./trialDITAs/ts_swift.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Swift Storage Troubleshooting</title>
./trialDITAs/ts_swift.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ts_telemetry.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Monitoring, Logging, and Usage Reporting
./trialDITAs/ts_tools.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting Tools</title>
./trialDITAs/ts_vsa.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>VSA Storage Troubleshooting</title>
./trialDITAs/tutorials.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Tutorials</title>
./trialDITAs/tutorials.dita:    <keyword keyref="kw-hos-phrase"/> cloud.</abstract>
./trialDITAs/twosystems.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Considerations When Installing Two Systems on One Subnet</title>
./trialDITAs/twosystems.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/twosystems.dita:    <p>If you wish to install two separate <keyword keyref="kw-hos-phrase"/> systems
./trialDITAs/twosystems.dita:        <p>To resolve this issue, our recommendation is to install your separate <keyword keyref="kw-hos-phrase"/> systems with VRRP traffic on different
./trialDITAs/twosystems.dita:        <p>If this is not possible, you may also assign a unique routerid to your separate <keyword keyref="kw-hos-phrase"/> system by changing the
./trialDITAs/ui_verification.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>UI Verification</title>
./trialDITAs/ui_verification.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/understanding_identity.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Understanding Domains, Projects, Users, Groups,
./trialDITAs/understanding_identity.dita:      <keyword keyref="kw-hos-phrase"/> identity service uses OpenStack Keystone and the concepts of
./trialDITAs/understanding_identity.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/understanding_identity.dita:            <keyword keyref="kw-hos"/> keystone installation after the Keystone service has been
./trialDITAs/understanding_identity.dita:        <li>The "default" domain is created automatically during the <keyword keyref="kw-hos"/>
./trialDITAs/understanding_identity.dita:          the <keyword keyref="kw-hos"/> keystone installation process.</li>
./trialDITAs/understanding_identity.dita:        <keyword keyref="kw-hos-phrase-20"/> and above, service policy files can be modified and deployed
./trialDITAs/understanding_identity.dita:      <codeph>project_observer</codeph> is explicitly created in <keyword keyref="kw-hos-phrase"/>. Any user who is
./trialDITAs/update_disk_models.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Updating Disk Models</title>
./trialDITAs/update_disk_models.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/update_disk_models.dita:                <p>In a <keyword keyref="kw-hos-phrase"/> cloud, the controller and compute nodes have volume groups setup based
./trialDITAs/update_disk_models.dita:                    configurations. In <keyword keyref="kw-hos-phrase"/>, new services have been added and some existing services 
./trialDITAs/update_disk_models.dita:                    for the various volumes have changed. The disk templates in the examples folder for <keyword keyref="kw-hos-phrase"/> 
./trialDITAs/update_disk_models.dita:            <p>This means that after upgrade to <keyword keyref="kw-hos-phrase"/>, your existing disks and volume allocations that originated in 
./trialDITAs/update_disk_models.dita:                <keyword keyref="kw-hos-phrase-21"/> will now be incompatible with the recommended values for a 
./trialDITAs/update_disk_models.dita:                cloud now running <keyword keyref="kw-hos-phrase"/> services.
./trialDITAs/update_disk_models.dita:            <p>If you are planning on upgrading from <keyword keyref="kw-hos-phrase-21"/> to <keyword keyref="kw-hos-phrase"/>, this document
./trialDITAs/update_disk_models.dita:            <p>For an introduction to using the online Disk sizing tool, see <xref keyref="hardware/disk_calc">Disk Calculator for Compute-Centric Deployments</xref>.
./trialDITAs/update_disk_models.dita:                will need after upgrade to <keyword keyref="kw-hos-phrase"/>.
./trialDITAs/update_disk_models.dita:            <image keyref="upgrade_disc_calc_inputs"/>
./trialDITAs/update_disk_models.dita:                present in <keyword keyref="kw-hos-phrase-21"/>: </p>
./trialDITAs/update_disk_models.dita:            <image keyref="upgrade_disc_calc_output_entry_scale"/>
./trialDITAs/upgrade_ceph_model.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Upgrade Ceph Model
./trialDITAs/upgrade_ceph_model.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_ceph_model.dita:            <p id="ceph_upgrade_summary">New <keyword keyref="kw-hos-phrase"/> clouds use the three
./trialDITAs/upgrade_ceph_model.dita:                    keyref="entryscale_kvm_ceph">here</xref>. If you are upgrading an existing Ceph
./trialDITAs/upgrade_ceph-rados.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>VPN Service Upgrade</title>
./trialDITAs/upgrade_ceph-rados.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_ceph-rados.dita:      <title>Upgrade from <keyword keyref="kw-hos"/>
./trialDITAs/upgrade_ceph-rados.dita:        <keyword keyref="kw-hos-version-20-21"/></title>
./trialDITAs/upgrade_ceph-rados.dita:      <p>It is not possible to upgrade your <keyword keyref="kw-hos"/>
./trialDITAs/upgrade_ceph-rados.dita:        <keyword keyref="kw-hos-version-20-21"/> VPNaaS objects to <keyword
./trialDITAs/upgrade_ceph-rados.dita:          keyref="kw-hos-phrase-30"/> automatically. This is because the <keyword keyref="kw-hos"/>
./trialDITAs/upgrade_ceph-rados.dita:        <keyword keyref="kw-hos-version-20-21"/> VPNaaS uses OpenSwan and the <keyword
./trialDITAs/upgrade_ceph-rados.dita:          keyref="kw-hos-phrase-30"/> VPNaaS uses StrongSwan and currently there isn't a clean
./trialDITAs/upgrade_ceph-rados.dita:          <li>Delete all <keyword keyref="kw-hos"/>
./trialDITAs/upgrade_ceph-rados.dita:            <keyword keyref="kw-hos-version-20-21"/> VPNaaS IPSec site connection and VPN service
./trialDITAs/upgrade_ceph-rados.dita:          <li>Perform the <keyword keyref="kw-hos-phrase-30"/> upgrade.</li>
./trialDITAs/upgrade_ceph-rados.dita:          <li>Recreate the <keyword keyref="kw-hos-phrase-30"/> VPNaaS VPN service and IPSec site
./trialDITAs/upgrade_ceph-rados.dita:      <p>Recreate the <keyword keyref="kw-hos-phrase-30"/> VPNaaS VPN service and IPSec site
./trialDITAs/upgrade_delete_alarms.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Delete Alarms that are not Supported</title>
./trialDITAs/upgrade_delete_alarms.dita:        <!--<p conkeyref="HOS-conrefs/applies-to"/>-->
./trialDITAs/upgrade_delete_alarms.dita:         <p>A number of alarms that were supported in <keyword keyref="kw-hos-phrase-21"/> 
./trialDITAs/upgrade_delete_alarms.dita:            have been removed in <keyword keyref="kw-hos-phrase-30"/>. After a successful upgrade, these
./trialDITAs/upgrade_delete_alarms.dita:           by following the appropriate procedure on the <xref keyref="alarm_resolutions">Alarm Resolutions</xref> page.-->
./trialDITAs/upgrade_delete_alarms.dita:            <p>Note that the components in question are still being monitored in <keyword keyref="kw-hos-phrase-30"/>, 
./trialDITAs/upgrade_deltas.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Delta Upgrades</title>
./trialDITAs/upgrade_deltas.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_deltas.dita:            <p>A full <keyword keyref="kw-hos"/> kit contains the following elements:</p>
./trialDITAs/upgrade_deltas.dita:                <li> A set of input model yaml files, which contains both <keyword keyref="kw-hos"/>
./trialDITAs/upgrade_deprecated.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Update input Model to Remove Deprecated start-address and end-address</title>
./trialDITAs/upgrade_deprecated.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_deprecated.dita:        <xref keyref="configobj_networks/start_address">start-address</xref>  and   
./trialDITAs/upgrade_deprecated.dita:        <xref keyref="configobj_networks/end_address">end-address</xref> have been deprecated in
./trialDITAs/upgrade_deprecated.dita:        favour of <xref keyref="configobj_networks/addresses">addresses</xref> in the Input Model.
./trialDITAs/upgrade_deprecated.dita:    <p>An example showing how to use the <codeph>addresses</codeph> parameter is available <xref keyref="configobj_networks/example_addresses">here</xref>.</p>
./trialDITAs/upgrade_designate.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>DNS Service (Designate) Upgrade</title>
./trialDITAs/upgrade_designate.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_designate.dita:      <p><keyword keyref="kw-hos"/>DNS Service can be upgraded to 3.0 by following the steps
./trialDITAs/upgrade_designate.dita:        <keyword keyref="kw-hos-phrase-30"/> release. Please consider other backend server options 
./trialDITAs/upgrade_designate.dita:      <title>Step 1: Upgrade <keyword keyref="kw-hos"></keyword></title>
./trialDITAs/upgrade_designate.dita:      <note>This assumes you are connected to the <keyword keyref="kw-hos"/> lifecycle manager and have 
./trialDITAs/upgrade_designate.dita:        The end location is required to be in <codeph>/home/stack/ </codeph>on the <keyword keyref="kw-hos"/>
./trialDITAs/upgrade_designate.dita:      <keyword keyref="kw-hos"/> lifecycle manager node.
./trialDITAs/upgrade_fail_alarms.dita:        <!--<p conkeyref="HOS-conrefs/applies-to"/>-->
./trialDITAs/upgrade_fail_alarms.dita:          <p>If you experience a failure during upgrade from <keyword keyref="kw-hos-phrase-30"/> to <keyword keyref="kw-hos-version-40"/> 
./trialDITAs/upgrade_git_merge.dita:        <!--<p conkeyref="HOS-conrefs/applies-to"/>-->
./trialDITAs/upgrade_git_merge.dita:            <p>When you perform an upgrade, <keyword keyref="kw-hos"/> 
./trialDITAs/upgrade_git_merge.dita:            certain changes to your environment,  <keyword keyref="kw-hos"/>
./trialDITAs/upgrade_git_merge.dita:            <p>For a general overview of how <keyword keyref="kw-hos"/> uses Git, see the 
./trialDITAs/upgrade_git_merge.dita:            introductory article in the Installation section <xref keyref="using_git">here</xref>.
./trialDITAs/upgrade_git_merge.dita:            <p>This indicates that <keyword keyref="kw-hos-phrase-30"/> is trying to set the value of
./trialDITAs/upgrade_git_merge.dita:                from <keyword keyref="kw-hos-phrase"/>
./trialDITAs/upgrade_git_merge.dita:                <keyword keyref="kw-hos-phrase"/> wants to set.
./trialDITAs/upgrade_git_merge.dita:                from <keyword keyref="kw-hos-phrase"/> with the previous upstream version from
./trialDITAs/upgrade_git_merge.dita:                <keyword keyref="kw-hos-phrase"/> wants to set and the previous upstream value
./trialDITAs/upgrade_install_clients.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installing OpenStack Clients after Upgrade</title>
./trialDITAs/upgrade_install_clients.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_install_clients.dita:        keyref="kw-hos-phrase"/>. If you have a standalone deployer,  you may need to follow the procedure <xref
./trialDITAs/upgrade_install_clients.dita:          keyref="install_openstack_clients">here</xref> to add the OpenStack
./trialDITAs/upgrade_ironic.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Ironic Post-Upgrade Procedures</title>
./trialDITAs/upgrade_ironic.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_ironic.dita:      <p>If you have Ironic nodes in your existing  <keyword keyref="kw-hos-phrase-30"/> cloud, with perhaps some
./trialDITAs/upgrade_ironic.dita:        information after upgrade to <keyword keyref="kw-hos-phrase"/> to point at  new deploy images.
./trialDITAs/upgrade_ironic.dita:      <p>If you have  provisioned a node in <keyword keyref="kw-hos"/> <keyword keyref="kw-hos-version-302"/> and you try to delete the node after upgrade
./trialDITAs/upgrade_ironic.dita:        to <keyword keyref="kw-hos-version-40"/>, 
./trialDITAs/upgrade_ironic.dita:      <p>After upgrade from <keyword keyref="kw-hos"/> <keyword keyref="kw-hos-version-302"/>, if you have a node enrolled with agent based drivers and
./trialDITAs/upgrade_ironic.dita:      and try to spawn an instance with user images uploaded in <keyword keyref="kw-hos-version-302"/>, instance creation will fail with the message 
./trialDITAs/upgrade_ironic.dita:      <p>You will need to re-upload any user images that were uploaded in <keyword keyref="kw-hos-version-302"/>, so that the images are uploaded to a new glance container.
./trialDITAs/upgrade_nova_resize_migrate.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Nova Resize and Nova Migrate Features may be Disabled after Upgrade</title>
./trialDITAs/upgrade_nova_resize_migrate.dita:        <!--<p conkeyref="HOS-conrefs/applies-to"/>-->
./trialDITAs/upgrade_nova_resize_migrate.dita:    <p>If you had enabled the Nova Resize or the Nova Migrate feature in your <keyword keyref="kw-hos-phrase-21"/> cloud,
./trialDITAs/upgrade_nova_resize_migrate.dita:        features by following the steps <xref keyref="enabling_resize">here</xref>.
./trialDITAs/upgrade_overview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Introduction to the Upgrade Procedure</title>
./trialDITAs/upgrade_overview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_overview.dita:            <title>Reasons to Upgrade to <keyword keyref="kw-hos-phrase"/></title>       
./trialDITAs/upgrade_overview.dita:                <li><xref keyref="newton_features">OpenStack Newton Features</xref>.</li>
./trialDITAs/upgrade_overview.dita:                <li><xref keyref="newfeatures50">New Features</xref> in <keyword keyref="kw-hos-phrase-50"/>.
./trialDITAs/upgrade_overview.dita:                <li><xref keyref="fixedissues50">Fixes</xref> for issues that were present in previous releases.</li>
./trialDITAs/upgrade_overview.dita:                <li>Read the <xref keyref="releasenotes50">Release Notes</xref>, especially the <xref keyref="knownissues50">Known Issues</xref> for the new version.</li>
./trialDITAs/upgrade_overview.dita:                <li>Ensure you have a Backup strategy in place - see <xref keyref="bura_overview"/></li>
./trialDITAs/upgrade_overview.dita:                <li>Ensure you have a known starting state by <xref keyref="alarm_resolutions">resolving any unexpected alarms</xref>.</li>
./trialDITAs/upgrade_overview.dita:                <li>Determine if you will need to follow the procedure to <xref keyref="upgradeto50/rebooting_general">reboot your cloud</xref> after upgrading the software. In general, rebooting
./trialDITAs/upgrade_overview.dita:                is only needed if the HPE Linux kernel has changed between versions. In the case of upgrade to <keyword keyref="kw-hos-version"/>, the kernel has changed
./trialDITAs/upgrade_overview.dita:                        keyref="designate_cfg_dns_ns"/> document.</li>
./trialDITAs/upgrade_overview.dita:                    <li>Read about the changes in the <xref keyref="input_model_changes40">Input Model</xref>. </li>
./trialDITAs/upgrade_overview.dita:                <li>Learn about <xref keyref="upgrade_deltas">Delta Upgrades</xref> and when you can  use them.</li>
./trialDITAs/upgrade_overview.dita:                <li>Perform any <xref keyref="upgrade_preupgrade_tasks">pre-upgrade</xref> tasks you deem necessary, such as:
./trialDITAs/upgrade_overview.dita:                        <li>Handle <xref keyref="upgrade_preupgrade_tasks">Using RHEL as a Ceph Client</xref></li>                        
./trialDITAs/upgrade_overview.dita:                        <li><xref keyref="upgradeto50">Upgrade your Cloud</xref>.</li>                       
./trialDITAs/upgrade_overview.dita:                        <li><xref keyref="upgradeto50/rebooting_general">Reboot your Cloud.</xref></li>   
./trialDITAs/upgrade_overview.dita:                        <li><xref keyref="upgrade_tempest">Upgrade Tempest as Service</xref></li>
./trialDITAs/upgrade_overview.dita:                        <li><xref keyref="upgrade_git_merge">Resolve any Merge Conflicts.</xref></li>   
./trialDITAs/upgrade_overview.dita:                        <li><xref keyref="upgrade_recover_rabbit">Recover RabbitMQ after Failure during Upgrade</xref></li>
./trialDITAs/upgrade_overview.dita:                        <li><xref keyref="upgrade_fail_alarms">Handle Upgrade Failure while Creating or Removing Alarms</xref></li>
./trialDITAs/upgrade_overview.dita:                <li>Perform any <xref keyref="upgrade_postupgrade_tasks">post-upgrade</xref> tasks you deem necessary , such as: 
./trialDITAs/upgrade_overview.dita:                        <li><xref keyref="upgrade_install_clients">Installing OpenStack Clients after Upgrade</xref></li>
./trialDITAs/upgrade_overview.dita:                        <li><xref keyref="neutron_configuration_data">Update Neutron Configration Data</xref></li>
./trialDITAs/upgrade_overview.dita:                        <li><xref keyref="enable_barbican_for_upgrade">Enabling Barbican Support When Upgrading</xref></li>
./trialDITAs/upgrade_overview.dita:                        <li><xref keyref="upgrade_ironic">Ironic Post-Upgrade Procedures</xref></li>
./trialDITAs/upgrade_perform_upgrade.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Performing the Upgrade</title>
./trialDITAs/upgrade_perform_upgrade.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_postupgrade_tasks.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Post-Upgrade Tasks</title>
./trialDITAs/upgrade_preupgrade_tasks.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Pre-Upgrade Tasks</title>
./trialDITAs/upgrade_preupgrade_tasks.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_preupgrade_tasks.dita:            <p conkeyref="install_rhel_ceph/install_rhel_ceph_summary"/>
./trialDITAs/upgrade_preupgrade_tasks.dita:            in the article <xref keyref="install_rhel_ceph/yum_repo_steps">here</xref> <b>before</b> executing the <codeph>hlm-upgrade.yml</codeph> playbook 
./trialDITAs/upgrade_recover_rabbit.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Recovering RabbitMQ after Failure during Upgrade</title>
./trialDITAs/upgrade_recover_rabbit.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_tempest.dita:        <!--<p conkeyref="HOS-conrefs/applies-to"/>-->
./trialDITAs/upgrade_tempest.dita:          <p>In <keyword keyref="kw-hos-phrase"/>,  Tempest has been modelled as a service and this gives you the ability to 
./trialDITAs/upgrade_tempest.dita:          <p>When you are upgrading from <keyword keyref="kw-hos-phrase-30"/>, you must add <codeph>tempest</codeph> as a service in you cloud definition 
./trialDITAs/upgrade_toc.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Upgrade</title>
./trialDITAs/upgrade_toc.dita:        <!--question: Where will customers learn of updates? It might be nice to add a sentence telling them. Something along the lines of "Upgrades and software updates are part of the <keyword keyref="kw-hos"/> distribution. For more information, contact ???."-->
./trialDITAs/upgrade_toc.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_vpnaas.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>VPN Service Upgrade</title>
./trialDITAs/upgrade_vpnaas.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upgrade_vpnaas.dita:      <title>Upgrade from <keyword keyref="kw-hos"/>
./trialDITAs/upgrade_vpnaas.dita:        <keyword keyref="kw-hos-version-20-21"/></title>
./trialDITAs/upgrade_vpnaas.dita:      <p>It is not possible to upgrade your <keyword keyref="kw-hos"/>
./trialDITAs/upgrade_vpnaas.dita:        <keyword keyref="kw-hos-version-20-21"/> VPNaaS objects to <keyword
./trialDITAs/upgrade_vpnaas.dita:          keyref="kw-hos-phrase-30"/> automatically. This is because the <keyword keyref="kw-hos"/>
./trialDITAs/upgrade_vpnaas.dita:        <keyword keyref="kw-hos-version-20-21"/> VPNaaS uses OpenSwan and the <keyword
./trialDITAs/upgrade_vpnaas.dita:          keyref="kw-hos-phrase-30"/> VPNaaS uses StrongSwan and currently there isn't a clean
./trialDITAs/upgrade_vpnaas.dita:          <li>Delete all <keyword keyref="kw-hos"/>
./trialDITAs/upgrade_vpnaas.dita:            <keyword keyref="kw-hos-version-20-21"/> VPNaaS IPSec site connection and VPN service
./trialDITAs/upgrade_vpnaas.dita:          <li>Perform the <keyword keyref="kw-hos-phrase-30"/> upgrade.</li>
./trialDITAs/upgrade_vpnaas.dita:          <li>Recreate the <keyword keyref="kw-hos-phrase-30"/> VPNaaS VPN service and IPSec site
./trialDITAs/upgrade_vpnaas.dita:      <p>Recreate the <keyword keyref="kw-hos-phrase-30"/> VPNaaS VPN service and IPSec site
./trialDITAs/upload_image.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Uploading an Image for Use</title>
./trialDITAs/upload_image.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/upload_image.dita:          keyref="kw-hos"/> lifecycle manager provides an Ansible playbook that will download a
./trialDITAs/user_cloudadmin.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Cloud Admin User Guide</title>
./trialDITAs/user_dashboard_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using the Dashboard</title>
./trialDITAs/user_dashboard_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/user_dashboard_overview.dita:    <p>Horizon is the OpenStack service that serves as the basis for the <keyword keyref="kw-hos"/>
./trialDITAs/user_dashboard_overview.dita:    <p>The dashboards provide a web-based user interface to <keyword keyref="kw-hos"/> services
./trialDITAs/user_dashboard_overview.dita:      <p>As a Cloud or Domain admin of the <keyword keyref="kw-hos"/> dashboard, you should 
./trialDITAs/user_dashboard_overview.dita:          <p><keyword keyref="kw-hos"/> provides five VNIC types to use when creating network
./trialDITAs/userguide_index.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>User Guide Overview</title>
./trialDITAs/userguide_index.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/userguide_index.dita:    <p>This section contains user tasks for your <keyword keyref="kw-hos-phrase"/> cloud.</p>
./trialDITAs/user_nonadmin.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Project User Guide</title>
./trialDITAs/using_apparmor.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Refining Access Control with AppArmor</title>
./trialDITAs/using_apparmor.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/using_apparmor.dita:    <section id="apparmor_helion"><title>AppArmor in <keyword keyref="kw-hos-phrase"/></title>
./trialDITAs/using_apparmor.dita:      <p> AppArmor in <keyword keyref="kw-hos-phrase"/> is installed and enabled on the KVM compute nodes by
./trialDITAs/using_container_as_a_service.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using Container as a Service (Magnum)</title>
./trialDITAs/using_container_as_a_service.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/using_container_as_a_service.dita:    <p>The <keyword keyref="kw-hos"/> Magnum Service provides 
./trialDITAs/using_container_as_a_service.dita:      as first class resources.  <keyword keyref="kw-hos"/> Magnum uses Heat to orchestrate an OS image which
./trialDITAs/using_git.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using Git for Configuration Management</title>
./trialDITAs/using_git.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/using_git.dita:    <p>In <keyword keyref="kw-hos-phrase"/>, a local git repository is used to track configuration
./trialDITAs/using_git.dita:      <p>On a system new to <keyword keyref="kw-hos-phrase"/>, the lifecycle manager will prepare a
./trialDITAs/using_ipam.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using IPAM Drivers in the Networking
./trialDITAs/using_ipam.dita:            keyref="kw-hos-phrase-20"/>. This option continues to be available in <keyword
./trialDITAs/using_ipam.dita:            keyref="kw-hos-phrase"/> and is the default when the ipam_driver parameter is not
./trialDITAs/using_ipam.dita:            <keyword keyref="kw-hos-phrase"/> (OpenStack Liberty). It is a refactoring of the Kilo
./trialDITAs/using_ipam.dita:      follow the steps to deploy <keyword keyref="kw-hos"/> in the <xref
./trialDITAs/using_ipam.dita:          reconfiguration of <keyword keyref="kw-hos-phrase"/>from using the default non-pluggable
./trialDITAs/using_ipam.dita:          IPAM configuration to <keyword keyref="kw-hos-phrase"/> using a pluggable IPAM driver is
./trialDITAs/using_ipam.dita:        <li>Upgrade from previous versions of <keyword keyref="kw-hos"/> to <keyword
./trialDITAs/using_ipam.dita:            keyref="kw-hos-phrase"/> to use a pluggable IPAM driver is not supported.</li>
./trialDITAs/validating_swift_recon.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Gathering Swift Data</title>
./trialDITAs/validating_swift_recon.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/validating_swift_recon.dita:      <note type="warning"><keyword keyref="kw-hos"/> does not support ec_type <codeph>isa_l_rs_vand</codeph> and <codeph>ec_num_parity_fragments</codeph> greater than or equal to <b>5</b> in the storage-policy configuration. This particular policy is known to harm data
./trialDITAs/vcenter_credential_update.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Updating vCenter Credentials</title>
./trialDITAs/vcenter_credential_update.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/verify_block_storage.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Verifying Your Block Storage Backend</title>
./trialDITAs/verify_block_storage.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/virtual_machines_as_servers.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Virtual Machines as Servers </title>
./trialDITAs/virtual_machines_as_servers.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/virtual_machines_as_servers.dita:      <p>Starting in <keyword keyref="kw-hos-phrase"/>, servers can be configured as hypervisors which host 
./trialDITAs/virtual_machines_as_servers.dita:        <keyword keyref="kw-hos"/> services.  Both the hypervisors and the VMs are treated as “servers” 
./trialDITAs/virtual_machines_as_servers.dita:      <p>Given the above information, <keyword keyref="kw-hos"/> will configure the hypervisors 
./trialDITAs/virtual_machines_as_servers.dita:        of the virtual machine’s operating system, and installation and configuration of <keyword keyref="kw-hos"/> 
./trialDITAs/virtual_machines_as_servers.dita:      <p>Note that a hypervisor can still be used to run <keyword keyref="kw-hos"/>  services, so for example 
./trialDITAs/volumegroups.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/><!-- Configuration Object -  -->Volume Groups</title>
./trialDITAs/volumegroups.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/volumegroups.dita:    <p>The <keyword keyref="kw-hos"/> operating system installation automatically creates a volume-group
./trialDITAs/volumegroups.dita:                            by the <keyword keyref="kw-hos"/> operating system install process, the volume group
./trialDITAs/vpnaas.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using VPN as a Service (VPNaaS)</title>
./trialDITAs/vpnaas.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/vpnaas.dita:    <p><b><keyword keyref="kw-hos-phrase"/> VPNaaS Configuration</b></p>
./trialDITAs/vpnaas.dita:        keyref="kw-hos-phrase"/> Virtual Private Network (VPN) as a Service module.</p>
./trialDITAs/vpnaas.dita:        <li><keyword keyref="kw-hos"/> must be installed. </li>
./trialDITAs/vpnaas.dita:          extend access between private networks across two different <keyword keyref="kw-hos"/>
./trialDITAs/vpnaas.dita:          clouds or between a <keyword keyref="kw-hos"/> cloud and a non-cloud network. VPNaaS is
./trialDITAs/VSC_setup_input_model_changes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Input Model Changes for VSC Setup on Virtual
./trialDITAs/websso.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Web Single Sign-On</title>
./trialDITAs/websso.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/websso.dita:        dashboard in <keyword keyref="kw-hos-phrase-30"/> . If users have not yet authenticated with
./trialDITAs/websso.dita:        <li>The <keyword keyref="kw-hos"/> WebSSO function was tested with Microsoft Active Directory
./trialDITAs/websso.dita:            keyref="kw-hos-phrase-30"/> . OpenID-based federation is not currently supported. </li>
./trialDITAs/websso.dita:      <keyword keyref="kw-hos-phrase-30"/> now provides WebSSO support for the Horizon web
./trialDITAs/without_l3agent.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring <keyword keyref="kw-hos"/> with Provider VLANs
./trialDITAs/without_l3agent.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/add_ceph_rados_node.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Adding a RADOS Gateway Node</title>
./trialDITAs/add_ceph_rados_node.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/add_monitor_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding a Ceph Monitor Node</title>
./trialDITAs/add_monitor_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/add_monitor_node.dita:              keyref="persisteddata/persistedserverallocations"><keyword keyref="kw-hos-phrase"/>
./trialDITAs/add_sles_compute.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding a SLES Compute Node</title>
./trialDITAs/add_sles_compute.dita:              can find detailed descriptions of these fields <xref keyref="configobj_servers"
./trialDITAs/add_sles_compute.dita:                <xref keyref="configobj_controlplane">Input Model - Control Plane</xref> for more
./trialDITAs/add_sles_compute.dita:                keyref="persisteddata/persistedserverallocations">Input Model</xref> for information
./trialDITAs/add_sles_compute.dita:            <li>Mount the <keyword keyref="kw-hos-phrase"/> iso to
./trialDITAs/add_sles_compute.dita:            <p>You can find detailed descriptions of these fields <xref keyref="configobj_servers"
./trialDITAs/add_sles_compute.dita:                <xref keyref="configobj_controlplane">Input Model - Control Plane</xref> for more
./trialDITAs/add_sles_compute.dita:                keyref="persisteddata/persistedserverallocations">Input Model</xref> for information
./trialDITAs/add_vsa_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Adding a VSA Node</title>
./trialDITAs/add_vsa_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/add_vsa_node.dita:            can find detailed descriptions of these fields <xref keyref="configobj_servers"
./trialDITAs/add_vsa_node.dita:              keyref="configobj_controlplane">Input Model - Control Plane</xref> for more
./trialDITAs/add_vsa_node.dita:              <xref keyref="persisteddata/persistedserverallocations"><keyword
./trialDITAs/add_vsa_node.dita:                keyref="kw-hos-phrase"/> Input Model</xref> for information on how this
./trialDITAs/alarm_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Alarm Metrics</title>
./trialDITAs/alarms_monitoring.dita:    <p><keyword keyref="kw-hos"/> comes with some predefined monitoring alarms for the services
./trialDITAs/alternative_supported_choice.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Alternative Supported Choices</title>
./trialDITAs/alternative_supported_choice.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/alternative_supported_choice.dita:                        keyref="kw-hos-phrase"/> does not support deployment transition. After Ceph
./trialDITAs/alternative_supported_choice.dita:                </title><keyword keyref="kw-hos-tm"/>
./trialDITAs/alternative_supported_choice.dita:            <keyword keyref="kw-hos-version"/> supports the deployment of control plane elements on
./trialDITAs/alternative_supported_choice.dita:                                keyref="kw-hos-tm"/> .</p></li>
./trialDITAs/apache_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Apache Metrics</title>
./trialDITAs/autoscaling.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Autoscaling using the Orchestration
./trialDITAs/barbican_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Key Manager Service (Barbican) Features</title>
./trialDITAs/barbican_features.dita:      <p>Barbican is all new for the <keyword keyref="kw-hos"/> Mitaka release.</p>
./trialDITAs/barbican_new_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Features in the Barbican Key Manager
./trialDITAs/barbican_new_features.dita:    <section> This topic explains the Barbican service in <keyword keyref="kw-hos-phrase"/>. </section>
./trialDITAs/barbican_new_features.dita:      <p><b>DAR Policy</b></p>In <keyword keyref="kw-hos-phrase"/>, DAR policy has been enhanced
./trialDITAs/brocade_zone_manager.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Brocade Fibre Channel Zone
./trialDITAs/brocade_zone_manager.dita:    <p><keyword keyref="kw-hos-phrase"/> supports Brocade FC Zone Manager. Block Storage (Cinder)
./trialDITAs/brocade_zone_manager.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/brocade_zone_manager.dita:        <li>If <keyword keyref="kw-hos-tm"/> is configured to boot from SAN over Fibre Channel, all
./trialDITAs/brocade_zone_manager.dita:          <li><keyword keyref="kw-hos-tm"/> Cloud must be successfully deployed. </li>
./trialDITAs/bura_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Backup and Restore</title>
./trialDITAs/bura_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/bura_overview.dita:    <p><keyword keyref="kw-hos-phrase"/> supports backup and restore of control plane services. It
./trialDITAs/capacity_reporting_transform.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Capacity Reporting and Monasca Transform</title>
./trialDITAs/capacity_reporting_transform.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ceilometer_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Data Collection Service (Ceilometer)
./trialDITAs/ceilometer_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Ceilometer Metrics</title>
./trialDITAs/central_log_configure_CL.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Centralized Logging</title>
./trialDITAs/central_log_configure_CL.dita:      <p>The log files that are centrally collected in <keyword keyref="kw-hos"/> are stored by
./trialDITAs/central_log_configure_CL.dita:          keyref="kw-hos-phrase"/> and used the older versions of Elasticsearch, then this data will
./trialDITAs/central_log_configure_CL.dita:          <li>Deploy a separate distinct Elasticsearch instance version matching the version in <keyword keyref="kw-hos-phrase"/>.</li>
./trialDITAs/central_log_configure_CL.dita:            to the ElasticSearch instance matching the version in <keyword keyref="kw-hos-phrase"/>.</li>
./trialDITAs/central_log_configure_CL.dita:        <note>We do not recommend restoring to the original <keyword keyref="kw-hos"/> Centralized
./trialDITAs/central_log_configure_CL.dita:      <p>When centralized logging is installed in <keyword keyref="kw-hos"/>, parameters 
./trialDITAs/ceph_config_parameters.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Ceph Parameters for
./trialDITAs/ceph_deployment.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Ceph Deployment and Configurations </title>
./trialDITAs/ceph_deployment.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ceph_deployment.dita:      <keyword keyref="kw-hos-tm"/>  <keyword keyref="kw-hos-version"/> Ceph deployment leverages the cloud lifecycle operations
./trialDITAs/ceph_deployment.dita:      <p>Before you start deploying the <keyword keyref="kw-hos-tm"/> cloud with Ceph, you must
./trialDITAs/ceph_deployment.dita:                Disk</b></p><p><keyword keyref="kw-hos-tm"/>
./trialDITAs/ceph_deployment.dita:              <keyword keyref="kw-hos-version"/> recommends storing the Ceph OSD journal on an SSD
./trialDITAs/ceph_deployment.dita:              5120 MB (5 GB) in <keyword keyref="kw-hos-tm"/>
./trialDITAs/ceph_deployment.dita:              <keyword keyref="kw-hos-version"/>. This value can be changed, but it does not apply
./trialDITAs/ceph_deployment.dita:                      keyref="kw-hos-tm"/> makes it easy to configure service parameters. All common
./trialDITAs/ceph_deployment.dita:                            from <keyword keyref="kw-hos-tm"/> 3.0 to <keyword keyref="kw-hos-tm"/>
./trialDITAs/ceph_deployment.dita:                            <keyword keyref="kw-hos-version"/>, you are strongly advice not to
./trialDITAs/ceph_deployment.dita:      <p>To deploy a new <keyword keyref="kw-hos-tm"/> Ceph cloud using the default
./trialDITAs/ceph_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Ceph Metrics</title>
./trialDITAs/ceph_nodes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Planned Maintenance Tasks for Ceph Nodes</title>
./trialDITAs/ceph_overview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Ceph Overview</title>
./trialDITAs/ceph_overview.dita:        <shortdesc outputclass="hdphidden"><keyword keyref="kw-hos-tm"/>
./trialDITAs/ceph_overview.dita:            <keyword keyref="kw-hos-version"/> supports the Hammer version of Ceph cluster. Ceph
./trialDITAs/ceph_overview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ceph_overview.dita:            <p><keyword keyref="kw-hos-tm"/>
./trialDITAs/ceph_overview.dita:                <keyword keyref="kw-hos-version"/> supports the Hammer version of Ceph cluster. Ceph
./trialDITAs/ceph_overview.dita:                                    activity.<p><!--The default <keyword keyref="kw-hos-tm"/>configuration makes three copies of your data (but it can be adjusted).--></p></entry>
./trialDITAs/ceph_overview.dita:                <li>The HAProxy on the <keyword keyref="kw-hos-tm"/> controller node acts as a load
./trialDITAs/ceph_overview.dita:                <li>The default <keyword keyref="kw-hos-tm"/> configuration installs RADOS Gateway
./trialDITAs/ceph_overview.dita:            </p><p><keyword keyref="kw-hos-tm"/> Ceph software offers significant flexibility when
./trialDITAs/ceph_overview.dita:        <section><b>Alternative supported architecture</b><p><keyword keyref="kw-hos-tm"/>
./trialDITAs/ceph_overview.dita:                <keyword keyref="kw-hos-version"/> also supports an alternate deployment
./trialDITAs/ceph_overview.dita:                                keyref="kw-hos-tm"/>
./trialDITAs/ceph_overview.dita:                            <keyword keyref="kw-hos-version"/> is as follows.<ul>
./trialDITAs/ceph_overview.dita:                                <keyword keyref="kw-hos-tm"/> services as follows.</p><p>
./trialDITAs/ceph_storage_unplanned.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Unplanned Ceph Storage Maintenance</title>
./trialDITAs/change_default_backup_jobs.dita:  <title><keyword keyref="kw-hos-tm"/>
./trialDITAs/change_default_backup_jobs.dita:    <keyword keyref="kw-hos-version-30"/>: Changing Default Jobs</title>
./trialDITAs/change_default_backup_jobs.dita:    <section> The procedure to make changes to jobs created by default in <keyword keyref="kw-hos"/> is to
./trialDITAs/change_keystone_credential.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Change Keystone Credential for RGW</title>
./trialDITAs/change_keystone_credential.dita:        <shortdesc outputclass="hdphidden">RADOS Gateway (RGW) in <keyword keyref="kw-hos-tm"/>
./trialDITAs/change_keystone_credential.dita:            <keyword keyref="kw-hos-version"/> authenticates with keystone by passing the service
./trialDITAs/change_keystone_credential.dita:            name and password whereas in  <keyword keyref="kw-hos-phrase-30"/> , it was using admin
./trialDITAs/change_keystone_credential.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/change_keystone_credential.dita:        <p> RADOS Gateway (RGW) in <keyword keyref="kw-hos-tm"/>
./trialDITAs/change_keystone_credential.dita:            <keyword keyref="kw-hos-version"/> authenticates with keystone by passing the service
./trialDITAs/change_keystone_credential.dita:            name and password whereas in <keyword keyref="kw-hos-phrase-30"/> it was using admin
./trialDITAs/cinder_backend_config.dita:      <p>Before <keyword keyref="kw-hos-phrase"/> there was no way to express the cinder back-end storage configuration for a
./trialDITAs/cinder_backend_config.dita:        cloud deployment. Instead, after <keyword keyref="kw-hos"/> had completed the deployment of a cloud, the operator
./trialDITAs/cinder_backend_config.dita:      <p>In <keyword keyref="kw-hos-phrase"/> and later, when an operator is defining a cloud in the cloud definition
./trialDITAs/cinder_backend_config.dita:        managed by <keyword keyref="kw-hos"/>, for example ceph or VSA. The data added to the yaml files corresponds
./trialDITAs/cinder_backend_config.dita:      <p>The cinder ansible playbooks in <keyword keyref="kw-hos-phrase"/> will support back-end configuration using either
./trialDITAs/cinder_backend_config.dita:          <codeph>enabled_backends=</codeph>. In <keyword keyref="kw-hos-phrase"/> the playbooks check for the line
./trialDITAs/cinder_backend_config.dita:        back-end devices that are not managed by <keyword keyref="kw-hos"/>. The next section describes how to configure
./trialDITAs/cinder_backend_config.dita:        back-ends that are managed by <keyword keyref="kw-hos"/>, at the moment these are VSA and ceph.</p>
./trialDITAs/cinder_backend_config.dita:      <title>Configuring back-ends not managed by <keyword keyref="kw-hos"/></title>
./trialDITAs/cinder_backend_config.dita:        <note type="note"><keyword keyref="kw-hos"/> Availablity Zones <p>Currently all cinder volumes are assigned to a
./trialDITAs/cinder_backend_config.dita:          <p>In <keyword keyref="kw-hos"/> an availability zone, or 'Failure Zone' is implemented as a server group.
./trialDITAs/cinder_backend_config.dita:          <p>If the block storage back-end is deployed and managed by <keyword keyref="kw-hos"/>, then the
./trialDITAs/cinder_backend_config.dita:            back-ends, like 3PAR, that are not managed by <keyword keyref="kw-hos"/>, there is no way of knowing which
./trialDITAs/cinder_backend_config.dita:      <title>Configuring Back-ends Managed by <keyword keyref="kw-hos"/></title>
./trialDITAs/cinder_backend_config.dita:        <p>If the back-end being configured is managed by <keyword keyref="kw-hos"/> then the configuration data for the
./trialDITAs/cinder_backend_config.dita:        <p>The <keyword keyref="kw-hos"/> Cinder playbook automatically generates some configuration variable values so you
./trialDITAs/cinder_backend_config.dita:                <entry>Normally set to True for <keyword keyref="kw-hos"/></entry>
./trialDITAs/cinder_backend_config.dita:          described <xref keyref="encrypted_storage"><keyword keyref="kw-hos"/>
./trialDITAs/cinder_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Block Storage Service (Cinder) Features</title>
./trialDITAs/cinder_meters.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Volume (Cinder) Meters</title>
./trialDITAs/cinder_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Cinder Metrics</title>
./trialDITAs/cleanupErrorInstances.dita:  <title><keyword keyref="kw-hos-tm"/>
./trialDITAs/cleanupErrorInstances.dita:    <keyword keyref="kw-hos-phrase"/>: Deleting Load Balancer Instances Stuck in Pending_delete or Error State</title> 
./trialDITAs/cleanupErrorInstances.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/cloud_control_plane_backup.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling Default Backups of the Control Plane to
./trialDITAs/cloud_control_plane_backup.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/cloud_control_plane_backup.dita:    <section><title>Default Backup and Restore</title><p>As part of the installation procedure in <keyword keyref="kw-hos-phrase"/>, automatic
./trialDITAs/cloud_control_plane_backup.dita:      <p>By default, during <keyword keyref="kw-hos-phrase"/> deployment, backup jobs
./trialDITAs/cloud_control_plane_backup.dita:      firewalling deployed with <keyword keyref="kw-hos"/>. If you use a non-standard SSH port, you may need to
./trialDITAs/cloud_control_plane_backup.dita:      <li>Firewall SSH traffic to ensure it comes from the <keyword keyref="kw-hos"/> address range</li>
./trialDITAs/cloudinstallation_overview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Cloud Installation Overview</title>
./trialDITAs/cloudinstallation_overview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/cloudinstallation_overview.dita:                <xref keyref="example_configurations">Example Configurations</xref> documentation to
./trialDITAs/cloudinstallation_overview.dita:                get an overview of the sample configurations <keyword keyref="kw-hos-phrase"/> offers. We
./trialDITAs/cloudinstallation_overview.dita:                <li><xref keyref="entryscale_kvm_vsa">Entry-scale KVM with VSA model</xref></li>
./trialDITAs/cloudinstallation_overview.dita:                <li><xref keyref="entryscale_esx">Entry-scale ESX model</xref></li>
./trialDITAs/cloudinstallation_overview.dita:                <li><xref keyref="entryscale_swift">Entry-scale Swift model</xref></li>
./trialDITAs/cloudinstallation_overview.dita:                <li><xref keyref="entryscale_ceph">Entry-scale KVM with Ceph model</xref></li>
./trialDITAs/cloudinstallation_overview.dita:                <li><xref keyref="midscale_kvm_vsa">Mid-scale KVM with VSA model</xref></li>
./trialDITAs/cloudinstallation_overview.dita:            <table conkeyref="example_configurations/table_examples">
./trialDITAs/cloudinstallation_overview.dita:                    model. See the <xref keyref="input_model">Input Model page</xref> for
./trialDITAs/cloudinstallation_overview.dita:                <li><xref keyref="install_entryscale_kvm">Installing Mid-scale and Entry-scale KVM</xref></li>
./trialDITAs/cloudinstallation_overview.dita:                <li><xref keyref="installing_esx_kvm_vsa/">Installing Entry-scale ESX, KVM and VSA
./trialDITAs/comp_planned.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Planned Compute Maintenance</title>
./trialDITAs/compute_alarmdefinitions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Compute Alarms</title>
./trialDITAs/computehost_meters.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Compute Host Meters</title>
./trialDITAs/compute_maintenance.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Unplanned Compute Maintenance</title>
./trialDITAs/compute_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Compute Metrics</title>
./trialDITAs/config_ceph_boot.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Efficiently Creating Bootable Volumes when using
./trialDITAs/config_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Availability of Alarm
./trialDITAs/config_mon_database.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Monitoring Database
./trialDITAs/config_mon_database.dita:      provided with the product.</shortdesc>In <keyword keyref="kw-hos-phrase"/> you have the option
./trialDITAs/config_mon_database.dita:        <!--(please see eula )-->. Vertica is the recommended database for <keyword keyref="kw-hos"
./trialDITAs/config_mon_notemail.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring the Monitoring Email Notification
./trialDITAs/config_mon_notemail.dita:    trigger.</shortdesc>In <keyword keyref="kw-hos-phrase"/> you have the option to specify a SMTP
./trialDITAs/config_mon_notemail.dita:      email server is not provided by <keyword keyref="kw-hos"/>, but must be specified in the
./trialDITAs/config_mon_notemail.dita:        configured <keyword keyref="kw-hos"/> domain names before sending the notification over
./trialDITAs/configure_lbaas.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Load Balancer as a Service</title>
./trialDITAs/configure_lbaas.dita:  <abstract><shortdesc outputclass="hdphidden">The <keyword keyref="kw-hos"/> Neutron LBaaS service
./trialDITAs/configure_lbaas.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/configure_lbaas.dita:      <note type="warning">If you are planning to upgrade from <keyword keyref="kw-hos-phrase-30"/> or <keyword keyref="kw-hos-phrase-40"/>,
./trialDITAs/configure_lbaas.dita:        failure of your cloud deployment. The last tested versions are 8.0.8 for <keyword keyref="kw-hos"/> 3.x and 9.0.3
./trialDITAs/configure_lbaas.dita:        for <keyword keyref="kw-hos"/> 4.x . More information is expected in 4th quarter 2017, including the correct
./trialDITAs/configure_lbaas.dita:        drivers for <keyword keyref="kw-hos"/> 5.x.</note>
./trialDITAs/configure_lbaas.dita:      <p>The <keyword keyref="kw-hos"/> Neutron LBaaS service supports several load balancing
./trialDITAs/configure_lbaas.dita:          keyref="kw-hos"/>.</p>
./trialDITAs/configure_lbaas.dita:          keyref="kw-hos-phrase-30"/>. Also note that the Octavia load balancer provider is listed
./trialDITAs/configure_lbaas.dita:          keyref="kw-hos-phrase"/> is an operator grade load balancer for OpenStack. It is based
./trialDITAs/configure_lbaas.dita:        Certificate Authority (CA) certificates included with <keyword keyref="kw-hos-phrase"/>
./trialDITAs/configuring_check_plugins.dita:        <p><b>Using Ansible modules to configure plugins in <keyword keyref="kw-hos-phrase"
./trialDITAs/configuring_tls.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Transport Layer Security
./trialDITAs/configuring_tls.dita:        <keyword keyref="kw-hos-phrase"/> and additional configuration options are available to
./trialDITAs/configuring_tls.dita:      <keyword keyref="kw-hos-phrase"/> and additional configuration options are available to
./trialDITAs/configuring_tls.dita:      should be .crt or it will not be processed by <keyword keyref="kw-hos"/>.</section>
./trialDITAs/configuring_tls.dita:      <p><keyword keyref="kw-hos"/> generates its own internal certificates but is designed to allow
./trialDITAs/configuring_tls.dita:            keyref="kw-hos"/>. </li>
./trialDITAs/connect_opsconsole.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Connecting to the Operations Console</title>
./trialDITAs/console_alarmdefinitions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Console Alarms</title>
./trialDITAs/cont_planned.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Planned Control Plane Maintenance</title>
./trialDITAs/cont_unplanned.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Unplanned Control Plane Maintenance</title>
./trialDITAs/cpumodel.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>CPU Model</title>
./trialDITAs/cpumodel.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/crash_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Crash Metrics</title>
./trialDITAs/create_magnum_cluster_dashboard.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating a Magnum Cluster with the
./trialDITAs/create_magnum_cluster_dashboard.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/create_magnum_cluster_dashboard.dita:          <li>Magnum must be installed before proceeding. Refer to <xref keyref="install_magnum"
./trialDITAs/create_magnum_cluster_dashboard.dita:          keyref="cloudadmin_dashboard"/> for more information.
./trialDITAs/create_magnum_cluster.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Creating a Magnum Cluster</title>
./trialDITAs/create_magnum_cluster.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/create_magnum_cluster.dita:            keyref="install_magnum"/></li>
./trialDITAs/create_magnum_cluster.dita:            keyref="user_dashboard_overview"/></li>
./trialDITAs/create_magnum_cluster.dita:        running on Fedora Atomic guest OS on <keyword keyref="kw-hos"/> VMs.</p>
./trialDITAs/create_magnum_cluster.dita:                <li>Use your organization's DNS server. If the <keyword keyref="kw-hos"/> public
./trialDITAs/create_magnum_cluster.dita:                    keyref="kw-hos"/> public endpoint: <ol>
./trialDITAs/create_magnum_cluster.dita:          <keyword keyref="kw-hos"/> public endpoint and issued by a well known Certificate
./trialDITAs/create_magnum_cluster.dita:          keyref="kw-hos"/> public endpoint refer to <xref
./trialDITAs/create_magnum_cluster.dita:          <keyword keyref="kw-hos"/> public endpoint is configured correctly. </p>
./trialDITAs/create_magnum_cluster.dita:          certificate at <keyword keyref="kw-hos"/> public endpoint.</li>
./trialDITAs/crt_adding_transform_spark.dita:  <title>Adding Monasca Transform and Spark to <keyword keyref="kw-hos-phrase"/> Deployment</title>
./trialDITAs/crt_adding_transform_spark.dita:        <keyword keyref="kw-hos-phrase"/> install. The following instructions 
./trialDITAs/crt_adding_transform_spark.dita:        existing <keyword keyref="kw-hos-phrase"/> deployment.
./trialDITAs/crt_aggregated_metrics.dita:      <p>Following is the list of aggregated metrics produced by monasca transform in <keyword keyref="kw-hos-phrase"/>
./trialDITAs/crt_change_compute_host.dita:      <note type="warning">Please note that in <keyword keyref="kw-hos-phrase"/> 
./trialDITAs/crt_features.dita:          <li>Capacity reporting is a new feature in <keyword keyref="kw-hos-phrase"/> which will provides cloud operators an
./trialDITAs/crt_features.dita:          <li>A list of aggregated metrics is provided <xref keyref="crt_aggregated_metrics">here</xref></li>
./trialDITAs/crt_overview.dita:      <p>Capacity reporting is a new feature in <keyword keyref="kw-hos-phrase"/> which will 
./trialDITAs/crt_upgrade.dita:        <keyword keyref="kw-hos-phrase"/> deploy the upgrade process is straightforward and falls 
./trialDITAs/dcn_integration.dita:  <title><keyword keyref="kw-hos-version-402"/>DCN Integration</title>
./trialDITAs/dcn_integration.dita:      <p>The VSD portion of your DCN integration will be a virtual machine. This virtual machine must be able to communicate with the Neutron API on the Management network, so it will need an IP address on the same subnet as your <keyword keyref="kw-hos"/> control plane.</p>
./trialDITAs/DCN_integration.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>DCN Integration with Multisite Support for
./trialDITAs/DCN_integration.dita:      <title>HPE Distributed Cloud Networking (DCN) capabilities in <keyword keyref="kw-hos-phrase"
./trialDITAs/DCN_integration.dita:        <keyword keyref="kw-hos-phrase"/> allows you to use DCN as your networking.
./trialDITAs/DCN_integration.dita:          <keyword keyref="kw-hos-phrase"/> if you choose to use DCN.</p>
./trialDITAs/DCN_integration.dita:          <keyword keyref="kw-hos"/> to <keyword keyref="kw-hos-phrase"/> with DCN. The network
./trialDITAs/DCN_integration.dita:          <keyword keyref="kw-hos-phrase"/> as a new deployment, and follow the steps outlined in
./trialDITAs/DCN_integration.dita:        when DCN is running in <keyword keyref="kw-hos"/>, these features are not deployed:</p>
./trialDITAs/DCN_integration.dita:      <title>Notes about deploying DCN in <keyword keyref="kw-hos"/></title>
./trialDITAs/DCN_integration.dita:          download will need to be "staged" for deployment into <keyword keyref="kw-hos"/> using the
./trialDITAs/DCN_integration.dita:        <li>After running the third-party import playbook, <keyword keyref="kw-hos"/> needs to be
./trialDITAs/DCN_integration.dita:        <li>Run the standard <keyword keyref="kw-hos"/> steps to deploy. 
./trialDITAs/DCN_ml2.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Bringing up a Cloud with DCN ml2 Mechanism
./trialDITAs/DCN_ml2.dita:      <p><b>Upgrading DCN without upgrading <keyword keyref="kw-hos"/></b></p>
./trialDITAs/DCN_ml2.dita:      <p><b>Upgrading <keyword keyref="kw-hos"/> with or without upgrading DCN</b></p>
./trialDITAs/DCN_ml2.dita:          files are identical on all <keyword keyref="kw-hos"/> nodes. So the cms_id 
./trialDITAs/DCN_ml2.dita:      <!--<p><image keyref=""/></p>-->
./trialDITAs/ded_lifecyclemanager_recovery.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Dedicated Lifecycle Manager Disaster
./trialDITAs/ded_lifecyclemanager_recovery.dita:    <p>Ensuring that you use the same version of <keyword keyref="kw-hos"/> that you previously had
./trialDITAs/deploying_apache_mesos_ubuntu.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Deploying an Apache Mesos Cluster on
./trialDITAs/deploying_apache_mesos_ubuntu.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/deploying_apache_mesos_ubuntu.dita:            keyref="install_magnum"/></li>
./trialDITAs/deploying_apache_mesos_ubuntu.dita:        running on Fedora Atomic guest OS on <keyword keyref="kw-hos"/> VMs.</p>
./trialDITAs/deploying_apache_mesos_ubuntu.dita:                <li>Use your organization's DNS server. If the <keyword keyref="kw-hos"/> public
./trialDITAs/deploying_apache_mesos_ubuntu.dita:          <li>If LBaaS v2 is enabled in <keyword keyref="kw-hos"/> environment, a new load balancer
./trialDITAs/deploying_apache_mesos_ubuntu.dita:              <xref keyref="configure_lbaas"/>for more information on LBaaS v2 support.</li>
./trialDITAs/deploying_docker_fedora_atomic.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Deploying a Docker Swarm Cluster on Fedora
./trialDITAs/deploying_docker_fedora_atomic.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/deploying_docker_fedora_atomic.dita:            keyref="install_magnum"/></li>
./trialDITAs/deploying_docker_fedora_atomic.dita:        running on Fedora Atomic guest OS on <keyword keyref="kw-hos"/> VMs.</p>
./trialDITAs/deploying_docker_fedora_atomic.dita:                <li>Use your organization's DNS server. If the <keyword keyref="kw-hos"/> public
./trialDITAs/deploying_docker_fedora_atomic.dita:          <li>If LBaaS v2 is enabled in your <keyword keyref="kw-hos"/> environment, a new load
./trialDITAs/deploying_docker_fedora_atomic.dita:            refer to <xref keyref="configure_lbaas"/>for more information on LBaaS v2 support.</li>
./trialDITAs/deploying_kubernetes_coreos.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Deploying a Kubernetes Cluster on CoreOS</title>
./trialDITAs/deploying_kubernetes_coreos.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/deploying_kubernetes_coreos.dita:            keyref="install_magnum"/></li>
./trialDITAs/deploying_kubernetes_coreos.dita:        running on CoreOS guest OS on <keyword keyref="kw-hos"/> VMs.</p>
./trialDITAs/deploying_kubernetes_coreos.dita:                <li>Use your organization's DNS server. If the <keyword keyref="kw-hos"/> public
./trialDITAs/deploying_kubernetes_coreos.dita:          <li>Install kubectl onto your <keyword keyref="kw-hos"/> lifecycle manager.
./trialDITAs/deploying_kubernetes_coreos.dita:          <li>If LBaaS v2 is enabled in <keyword keyref="kw-hos"/> environment, and your cluster was
./trialDITAs/deploying_kubernetes_coreos.dita:            request rotation between several masters. Please refer to <xref keyref="configure_lbaas"
./trialDITAs/deploying_kubernetes_fedora_atomic.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Deploying a Kubernetes Cluster on Fedora
./trialDITAs/deploying_kubernetes_fedora_atomic.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/deploying_kubernetes_fedora_atomic.dita:            keyref="install_magnum"/></li>
./trialDITAs/deploying_kubernetes_fedora_atomic.dita:        running on Fedora Atomic guest OS on <keyword keyref="kw-hos"/> VMs.</p>
./trialDITAs/deploying_kubernetes_fedora_atomic.dita:                <li>Use your organization's DNS server. If the <keyword keyref="kw-hos"/> public
./trialDITAs/deploying_kubernetes_fedora_atomic.dita:          <li>Install kubectl onto your <keyword keyref="kw-hos"/> lifecycle manager.
./trialDITAs/deploying_kubernetes_fedora_atomic.dita:            <li>If LBaaS v2 is enabled in <keyword keyref="kw-hos"/> environment, and your cluster
./trialDITAs/deploying_kubernetes_fedora_atomic.dita:                keyref="configure_lbaas"/>for more information on LBaaS v2 support.</li>
./trialDITAs/deploy_kubernetes_app.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Deploying a Kubernetes Application</title>
./trialDITAs/deploy_kubernetes_app.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/deploy_kubernetes_app.dita:    <note type="important"><keyword keyref="kw-hos"/> monitors Magnum processes and examines Magnum
./trialDITAs/deploy_kubernetes_app.dita:          <li>Install kubectl onto your <keyword keyref="kw-hos"/> lifecycle manager.
./trialDITAs/deploy_kubernetes_app.dita:          <li>If LBaaS v2 is enabled in <keyword keyref="kw-hos"/> environment, and your cluster was
./trialDITAs/deploy_kubernetes_app.dita:            request rotation between several masters. Please refer to <xref keyref="configure_lbaas"
./trialDITAs/deploy_vsa_virtual_control_plane.dita:        <shortdesc outputclass="hdphidden"><keyword keyref="kw-hos-tm"/>
./trialDITAs/deploy_vsa_virtual_control_plane.dita:            <keyword keyref="kw-hos-version"/> supports deployment of control plane elements on the
./trialDITAs/deploy_vsa_virtual_control_plane.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/deploy_vsa_virtual_control_plane.dita:        <p><keyword keyref="kw-hos-tm"/>
./trialDITAs/deploy_vsa_virtual_control_plane.dita:            <keyword keyref="kw-hos-version"/> supports deployment of control plane elements on the
./trialDITAs/deploy_vsa_virtual_control_plane.dita:            that is used for the deployment of ceph cluster using <keyword keyref="kw-hos-tm"/>.</p>
./trialDITAs/designate_cfg_dns_ns.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configure DNS Domain and NS Records</title>
./trialDITAs/designate_cfg_dns_ns.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/designate_cfg_dns_ns.dita:        <note>In an <xref keyref="entryscale_kvm_vsa">entry-scale model</xref>, you will have 3
./trialDITAs/designate_cfg_dns_ns.dita:            keyref="midscale_kvm_vsa">mid-scale model</xref> or <xref
./trialDITAs/designate_cfg_dns_ns.dita:            keyref="entryscale_kvm_dedicated">dedicated metering, monitoring and logging
./trialDITAs/designate_install_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>DNS Service Installation Overview</title>
./trialDITAs/designate_install_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/designate_install_overview.dita:      <p>The <keyword keyref="kw-hos"/> DNS Service supports several different backends for domain
./trialDITAs/designate_install_overview.dita:          <keyword keyref="kw-hos"/> install is completed.  </p>
./trialDITAs/designate_install_overview.dita:                <keyword keyref="kw-hos"/> install.</entry>
./trialDITAs/designate_install_overview.dita:              <entry>The authoritative DNS server itself is external to <keyword keyref="kw-hos"/>.
./trialDITAs/designate_install_overview.dita:              <entry>The authoritative DNS server itself is external to <keyword keyref="kw-hos"/>,
./trialDITAs/directory_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Directory Metrics</title>
./trialDITAs/dpdk_configurations.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>DPDK Configurations</title>
./trialDITAs/dpdk_ovs.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>OVS-DPDK Support</title>
./trialDITAs/dpdk_ovs.dita:        <keyword keyref="kw-hos-phrase"/> uses an updated Open vSwitch (OVS) that is built with the
./trialDITAs/dpdk_setup.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>DPDK Setup for Neutron Networking</title>
./trialDITAs/dpdk_setup.dita:        <li>Applies to <keyword keyref="kw-hos-phrase"/> only. </li>
./trialDITAs/elasticsearch_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Elasticsearch Metrics</title>
./trialDITAs/enable_mon_console.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling the RabbitMQ Admin Console</title>
./trialDITAs/enable_mon_console.dita:        <p>The RabbitMQ Admin Console is off by default in <keyword keyref="kw-hos-phrase"/>.  
./trialDITAs/enabling_cpu_pinning.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling CPU Pinning</title>
./trialDITAs/enabling_pcipt_on_gen9.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling PCI-PT on HPE DL360 Gen 9
./trialDITAs/enabling_resize.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling the Nova Resize and Migrate
./trialDITAs/enabling_resize_esx_compute.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling ESX Compute Instance(s) Resize Feature </title>
./trialDITAs/encrypted_ephvol.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Encryption of Ephemeral Volumes</title>
./trialDITAs/enhancements_to_openstack.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enhancements to OpenStack</title>
./trialDITAs/enhancements_to_openstack.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/enhancements_to_openstack.dita:    <section><title>How does <keyword keyref="kw-hos"/> differ from a pure OpenStack cloud
./trialDITAs/enhancements_to_openstack.dita:        implementation?</title>There are a number of enhancements in <keyword keyref="kw-hos"/> that
./trialDITAs/enhancements_to_openstack.dita:    <section>During installation of <keyword keyref="kw-hos"/>, the core OpenStack services, such as
./trialDITAs/enhancements_to_openstack.dita:        keyref="kw-hos"/> lifecycle manager, a collection of Ansible playbooks, script together
./trialDITAs/enhancements_to_openstack.dita:          keyref="kw-hos"/> input model</xref> are pre-populated as your starting point for a
./trialDITAs/enhancements_to_openstack.dita:    <section><keyword keyref="kw-hos"/> lifecyle manager responsibilities go beyond installation and
./trialDITAs/enhancements_to_openstack.dita:        keyref="kw-hos"/> as well using Monasca integration.</section>
./trialDITAs/enhancements_to_openstack.dita:    <section>Additionally, the following security features are built into <keyword keyref="kw-hos"
./trialDITAs/esx_alarmdefinitions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>ESX vCenter Plugin Alarms</title>
./trialDITAs/fixedissues50.dita:                configuration steps, see: <xref keyref="configure_3par"/></p>
./trialDITAs/forcing_overcommit.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Forcing CPU and RAM Overcommit Settings</title>
./trialDITAs/forcing_overcommit.dita:    <p><keyword keyref="kw-hos"/> supports overcommitting of CPU and RAM resources on compute nodes.
./trialDITAs/freezer_agent.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Backup/Restore Agent</title>
./trialDITAs/freezer_agent.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/freezer_agent.dita:                backup (or do a restore) because all <keyword keyref="kw-hos"/> nodes have the
./trialDITAs/freezer_agent.dita:            <p>For <keyword keyref="kw-hos-phrase"/>,
./trialDITAs/freezer_agent.dita:                </ul></p>For <keyword keyref="kw-hos-phrase"/>, you can create a backup using only
./trialDITAs/freezer_agent.dita:        <section><title>Restoring your Data</title><p> For <keyword keyref="kw-hos-phrase"/>, 
./trialDITAs/freezer_faq.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Backup and Restore FAQ</title>
./trialDITAs/freezer_faq.dita:    <p conkeyref="HOS-conrefs/applies-to"/>  
./trialDITAs/freezer_faq.dita:    <section>I did not set up SSH backups before installing <keyword keyref="kw-hos"/>. How can I set it
./trialDITAs/freezer_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Backup, Restore, and Disaster Recovery Service
./trialDITAs/freezer_features.dita:      <p>Freezer is all new for the <keyword keyref="kw-hos"/> Mitaka release.</p>
./trialDITAs/freezer_scheduler.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Backup/Restore Scheduler</title>
./trialDITAs/freezer_scheduler.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/freezer_scheduler.dita:            keyref="kw-hos-phrase"/>, Freezer Scheduler is automatically installed on the
./trialDITAs/freezer_ui.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Backup/Restore Via the Horizon UI</title>
./trialDITAs/freezer_ui.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/freezer_ui.dita:      <title>Limitations</title> The following limitations apply to Freezer backups in <keyword keyref="kw-hos"/>: <p>
./trialDITAs/full_recovery.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Full Disaster Recovery</title>
./trialDITAs/glance_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Image Service (Glance) Features</title>
./trialDITAs/glance_meters.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Image (Glance) Meters</title>
./trialDITAs/haproxy_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>HAProxy Metrics</title>
./trialDITAs/heat_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Orchestration Service (Heat) Features</title>
./trialDITAs/help_opsconsole.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Getting Help with the Operations Console</title>
./trialDITAs/horizon_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Dashboard (Horizon) Features</title>
./trialDITAs/httpcheck_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>HTTP Check Metrics</title>
./trialDITAs/index.dita:  <title><keyword keyref="kw-hos"/>
./trialDITAs/index.dita:    <keyword keyref="kw-hos-version-50"/>
./trialDITAs/index.dita:    <searchtitle><keyword keyref="kw-hos-phrase"/>: Documentation Home</searchtitle>
./trialDITAs/index.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/index.dita:    <p><keyword keyref="kw-hos"/> is a commercial-grade distribution of <tm tmtype="reg"
./trialDITAs/index.dita:      clouds on a resilient, maintainable platform. <keyword keyref="kw-hos"/> enables
./trialDITAs/index.dita:      <title>Get Started with <keyword keyref="kw-hos"/></title>
./trialDITAs/index.dita:          keyref="kw-hos-phrase"/> cloud.</p>
./trialDITAs/index.dita:        <li><xref href="overview.dita"><keyword keyref="kw-hos-phrase"/> Overview</xref></li>
./trialDITAs/index.dita:        <li><xref keyref="input_model">Input Model</xref></li>
./trialDITAs/index.dita:        <li><xref keyref="example_configurations">Example Configurations</xref></li>
./trialDITAs/hugepages.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring Hugepages for DPDK in Neutron
./trialDITAs/hugepages.dita:        performance enhancements, new in <keyword keyref="kw-hos-phrase"/>, you must first enable
./trialDITAs/hw_support_diskcalc.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Disk Calculator</title>
./trialDITAs/hw_support_diskcalc.dita:        compute-centric <keyword keyref="kw-hos"/> deployment. To accurately estimate the disk space
./trialDITAs/hw_support_diskcalc.dita:      <p><keyword keyref="kw-hos"/> provides entry scale and scale-out models for deployment. This
./trialDITAs/hw_support_esxguestos.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>ESX Guest OS Support</title>
./trialDITAs/hw_support_hardwareconfig.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Supported Hardware Configurations</title>
./trialDITAs/hw_support_hardwareconfig.dita:      <p><keyword keyref="kw-hos-phrase"/> supports the following hardware configurations for a
./trialDITAs/hw_support_hardwareconfig.dita:        <p><keyword keyref="kw-hos-phrase"/> supports Fibre Channel and FCoE boot from SAN in
./trialDITAs/hw_support_hardware.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Supported Hardware</title>
./trialDITAs/hw_support_hardware.dita:      <p>For information about hardware supported in <keyword keyref="kw-hos-phrase"/>, see <xref
./trialDITAs/hw_support_ironicguestos.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Ironic Guest OS Support</title>
./trialDITAs/hw_support_ironicguestos.dita:        bare metal instance on <keyword keyref="kw-hos-phrase"/>.</p>
./trialDITAs/hw_support_ironicguestos.dita:        vendor as a bare metal instance on <keyword keyref="kw-hos-phrase"/>.</p>
./trialDITAs/hw_support_kvmguestos.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>KVM Guest OS Support</title>
./trialDITAs/hw_support_kvmguestos.dita:        Nova compute virtual machine on <keyword keyref="kw-hos-phrase"/>.</p>
./trialDITAs/hw_support_kvmguestos.dita:        vendor as a Nova compute virtual machine on <keyword keyref="kw-hos-phrase"/>.</p>
./trialDITAs/hw_support_openstackvers.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>OpenStack Version Information</title>
./trialDITAs/hw_support_openstackvers.dita:    <p><keyword keyref="kw-hos-phrase"/> services have been updated to the <xref
./trialDITAs/hw_support_perfnotes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Notes about Performance</title>
./trialDITAs/hw_support_scaling.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Cloud Scaling</title>
./trialDITAs/hw_support_scaling.dita:      <p>In <keyword keyref="kw-hos-phrase"/> a total of 200 total compute nodes in a single region
./trialDITAs/hw_support_scaling.dita:      <p><keyword keyref="kw-hos-phrase"/> supports a total of 8000 virtual machines across a total
./trialDITAs/hw_support_scaling.dita:      <p><keyword keyref="kw-hos-phrase"/> supports 100 baremetal Ironic nodes in a single
./trialDITAs/hw_support_software.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Supported Software</title>
./trialDITAs/hw_support_software.dita:      <p><keyword keyref="kw-hos-phrase"/> currently supports the following ESXi versions:</p>
./trialDITAs/identity_alarmdefinitions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Identity Alarms</title>
./trialDITAs/identity_ldap.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Integrating LDAP with the Identity
./trialDITAs/identity_ldap.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/identity_ldap.dita:      </ul><p><keyword keyref="kw-hos"/> can support multiple domains for deployments that support
./trialDITAs/identity_ldap.dita:            keyref="kw-hos-phrase-30"/>.</li>
./trialDITAs/identity_ldap.dita:        <keyword keyref="kw-hos-phrase"/> domain-specific configuration: <ul>
./trialDITAs/identity_ldap.dita:          <li>The <keyword keyref="kw-hos"/> 'default' domain is pre-configured to store service
./trialDITAs/identity_ldap.dita:        <keyword keyref="kw-hos-phrase"/> API-based domain-specific configuration management <ul>
./trialDITAs/identity_ldap.dita:              <keyword keyref="kw-hos-phrase"/>. </li>
./trialDITAs/install_designate_BIND.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Install the DNS Service with BIND </title>
./trialDITAs/install_designate_BIND.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_designate_BIND.dita:      <p><keyword keyref="kw-hos"/> DNS Service and BIND can be installed together instead of the
./trialDITAs/install_designate_PowerDNS.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Install the DNS Service with PowerDNS </title>
./trialDITAs/install_designate_PowerDNS.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_designate_PowerDNS.dita:      <p><keyword keyref="kw-hos"/> DNS Service defaults to the PowerDNS Backend if another backend
./trialDITAs/install_entryscale_ironic.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Installation for HPE Helion Entry-scale Cloud
./trialDITAs/install_entryscale_ironic.dita:        <p conkeyref="HOS-conrefs/applies-to"/>    
./trialDITAs/install_entryscale_ironic.dita:        <!--<section conkeyref="install_entryscale_kvm/important_notes"/>-->
./trialDITAs/install_entryscale_ironic.dita:                <li conkeyref="install_entryscale_kvm/notes-gui" conrefend="null#null/notes-release"/>
./trialDITAs/install_entryscale_ironic.dita:                <li conkeyref="install_entryscale_kvm/notes-trouble" conrefend="null#null/notes-ansible"/>
./trialDITAs/install_entryscale_ironic.dita:        <section conkeyref="install_entryscale_kvm/prereqs"/>
./trialDITAs/install_entryscale_ironic.dita:        <section conkeyref="install_entryscale_kvm/setup_deployer"/>
./trialDITAs/install_entryscale_ironic.dita:                <li conkeyref="install_entryscale_kvm/hosencrypt"/>
./trialDITAs/install_entryscale_ironic.dita:                <li conkeyref="install_entryscale_kvm/commit"/>
./trialDITAs/install_entryscale_ironic.dita:        <section conkeyref="install_entryscale_kvm/provision"/>
./trialDITAs/install_entryscale_ironic.dita:        <section conkeyref="install_entryscale_kvm/config_processor"/>
./trialDITAs/install_entryscale_ironic.dita:        <section conkeyref="install_entryscale_kvm/deploy"/>
./trialDITAs/install_openstack_clients.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installing OpenStack Clients</title>
./trialDITAs/install_openstack_clients.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_openstack_clients.dita:      <p>The way OpenStack clients are installed changed in <keyword keyref="kw-hos-phrase-40"/>.
./trialDITAs/install_sles_ceph.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using SLES as a Ceph Client</title>
./trialDITAs/install_sles_ceph.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_sles_ceph.dita:        Ceph Jewel release. <keyword keyref="kw-hos-phrase"/> Ceph server is based on the Ceph
./trialDITAs/install_sles_ceph.dita:          keyref="kw-hos-phrase"/> system.
./trialDITAs/install_sles_compute.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Installing SLES Compute</title>
./trialDITAs/install_sles_compute.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_sles.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Using the Lifecycle Manager to Deploy SLES
./trialDITAs/install_sles.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_sles.dita:                nodes as described in the topic for <xref keyref="install_entryscale_kvm"
./trialDITAs/install_sles.dita:                        the Input Model for SLES, see <xref keyref="sles_compute_model"> SLES
./trialDITAs/install_sles.dita:                    <li><keyword keyref="kw-hos"/> playbooks currently do not take care of the SDK,
./trialDITAs/install_sles.dita:                            is no need to add OS repo as in case of <xref keyref="provisioning_sles"
./trialDITAs/install_sles.dita:                <p><keyword keyref="kw-hos-phrase-30"/> required a manual procedure if you wanted to
./trialDITAs/install_sles.dita:                    automated in the <keyword keyref="kw-hos-phrase"/> lifecycle manager. </p>
./trialDITAs/install_sles.dita:                                instructions at <xref keyref="sles_compute_model"> SLES Compute
./trialDITAs/install_sles_uefi.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>SLES Compute Node Installation on UEFI
./trialDITAs/install_sles_uefi.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/install_sles_uefi.dita:                <p><keyword keyref="kw-hos-phrase-30"/> required a manual procedure if you wanted to use the lifecycle manager
./trialDITAs/install_sles_uefi.dita:                This procedure has been automated in the <keyword keyref="kw-hos-phrase"/> lifecycle manager. 
./trialDITAs/install_sles_uefi.dita:                <xref href="../../newfeatures40.dita#new_features_hlm/DOCS-3759"><keyword keyref="kw-hos-phrase"/> New Features</xref> article.</p>   
./trialDITAs/install_vcp.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>HLM-Hypervisor instructions</title>
./trialDITAs/install_vcp.dita:        related functionality of <keyword keyref="kw-hos-phrase"/>. This comprises model changes
./trialDITAs/install_vcp.dita:              set-aside in the <keyword keyref="kw-hos"/> input model for gluster.
./trialDITAs/install_vcp.dita:      <p>Start with one baremetal node and install it directly from the <keyword keyref="kw-hos-phrase"/> iso e.g. through
./trialDITAs/install_vcp.dita:        virtual media on its iLO. Follow the usual install instructions e.g. <xref keyref="install_entryscale_kvm"/>
./trialDITAs/install_vcp.dita:      <title>Installing a fully input model managed Virtual Control Plane based <keyword keyref="kw-hos"/> Cloud</title>
./trialDITAs/install_vcp.dita:          deploy the <keyword keyref="kw-hos"/> Cloud.</p>
./trialDITAs/install_vcp.dita:          You can confirm that your <keyword keyref="kw-hos"/> build has the necessary patches by grepping
./trialDITAs/install_vcp.dita:        <p>If your <keyword keyref="kw-hos"/> Cloud installation requires that you perform additional actions between the
./trialDITAs/install_vcp.dita:          You can confirm that your <keyword keyref="kw-hos"/> build has the necessary patches by check for the
./trialDITAs/install_vcp.dita:              vm-factories instead; your <keyword keyref="kw-hos"/> build may have been cut during the interim period
./trialDITAs/install_vcp.dita:              run <codeph>site.yml</codeph> to complete the installation of the <keyword keyref="kw-hos"/> Cloud.</p>
./trialDITAs/install_vcp.dita:            <p>If you <keyword keyref="kw-hos"/> build is too old, i.e. the <codeph>hlm-hypervisor-*.yml</codeph> playbooks
./trialDITAs/install_vcp.dita:      <title>Deploying the Hypervisor nodes and VCP VMs using older <keyword keyref="kw-hos"/> build</title>
./trialDITAs/install_vcp.dita:          won't work - the default <keyword keyref="kw-hos"/> firewall rules disallow it.</p>
./trialDITAs/install_vcp.dita:        <codeph>The following text, should be used as the basis for a <keyword keyref="kw-hos"/> V4.0 documentation update
./trialDITAs/install_vcp.dita:      <p>Rebooting  a HLM-Hypervisor node follows the standard procedure in the <keyword keyref="kw-hos"/> documentation <xref keyref="reboot_cloud_rolling"/>.
./trialDITAs/install_vcp.dita:      <p>The sequence here is to target the <keyword keyref="kw-hos"/> vms first then the host itself - then shutdown the
./trialDITAs/install_vcp.dita:      <p>Once this is done we then would need to deploy the <keyword keyref="kw-hos"/> vms - this can be done with
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:                <image keyref="check"/>
./trialDITAs/install_vcp.dita:      <p>In addition, if these nodes are being used in scenarios where there are no <keyword keyref="kw-hos"/> servers to
./trialDITAs/integrating_hpeopsbridge.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>HPE Operations Bridge Integration</title>
./trialDITAs/integrating_hpeopsbridge.dita:      integration between the <keyword keyref="kw-hos-phrase"/> monitoring solution and HPE
./trialDITAs/integrating_hpeopsbridge.dita:    <p><keyword keyref="kw-hos"/> Monasca can easily be integrated with your existing monitoring
./trialDITAs/integrating_nagios.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Nagios Integration</title>
./trialDITAs/integrating_nagios.dita:      integration between the <keyword keyref="kw-hos-phrase"/> centralized logging solution and
./trialDITAs/integrating_nagios.dita:      <p><keyword keyref="kw-hos"/> cloud operators that are using Nagios or Icinga-based monitoring
./trialDITAs/integrating_nagios.dita:      <title><keyword keyref="kw-hos"/> monitoring and reporting</title>
./trialDITAs/integrating_nagios.dita:      <p><keyword keyref="kw-hos"/> comes with a monitoring engine (Monasca) and a separate
./trialDITAs/integrating_nagios.dita:      <p>A key benefit of Nagios style monitoring is that it allows for <keyword keyref="kw-hos"/>
./trialDITAs/integrating_nagios.dita:        <p>The Monasca agent is installed on all <keyword keyref="kw-hos"/> servers and includes the
./trialDITAs/integrating_nagios.dita:        <p>In the subsequent section, the physical servers making up the <keyword keyref="kw-hos"/>
./trialDITAs/integrating_nagios.dita:          <li>Multiple clouds, integrating <keyword keyref="kw-hos"/> monitoring with existing
./trialDITAs/integrating_nagios.dita:              keyref="kw-hos"/> services.</li>
./trialDITAs/integrating_nagios.dita:          <li>If you have multiple <keyword keyref="kw-hos"/> clusters it allows all of their alarms
./trialDITAs/integrating_nagios.dita:        <p><b><keyword keyref="kw-hos"/>-specific Nagios Plugins</b></p>
./trialDITAs/integration_of_plugins_with_monasca-agent.dita:                keyref="kw-hos-phrase"/> system using the steps outlined in the <b>Writing Custom
./trialDITAs/integration_of_plugins_with_monasca-agent.dita:                <keyword keyref="kw-hos-phrase"/>, the third party can remove the custom plugin
./trialDITAs/ironic_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Bare Metal Service (Ironic) Features</title>
./trialDITAs/ironic_oneview_integration.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Ironic OneView Integration</title>
./trialDITAs/ironic_oneview_integration.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ironic_oneview_integration.dita:      <p><keyword keyref="kw-hos-phrase"/> supports integration of Ironic (Baremetal) service with HPE OneView using
./trialDITAs/ironic_oneview_integration.dita:          <li>Installed <keyword keyref="kw-hos-phrase"/> with entry-scale-ironic-flat-network or
./trialDITAs/ironic_oneview_integration.dita:                program. This program is shipped as part of <keyword keyref="kw-hos"/> and can be
./trialDITAs/ironic_oneview_integration.dita:                model. Please refer to <xref keyref="ironic_examples">Ironic Examples</xref> for
./trialDITAs/ironic_provisioning.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Provisioning Baremetal Nodes with Flat Network
./trialDITAs/ironic_provisioning.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ironic_provisioning.dita:            <note type="important">The steps outlined in <xref keyref="ironic-tls"/>
./trialDITAs/ironic_provisioning.dita:                    <keyword keyref="kw-hos"/> has been tested with the following drivers: <ul>
./trialDITAs/ironic_provisioning.dita:                            keyref="kw-hos-phrase"/>. </li>
./trialDITAs/ironic_provisioning.dita:            <image keyref="ilo_boot_order_legacy_bios"/>
./trialDITAs/ironic_provisioning.dita:            <image keyref="hLinux_login"/>
./trialDITAs/ironic_provisioning.dita:            <image keyref="ubuntu_login"/>
./trialDITAs/ironic_provisioning_multi_tenancy.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Provisioning Baremetal Nodes with
./trialDITAs/ironic_provisioning_multi_tenancy.dita:                            <note>Deployed images are already populated by <keyword keyref="kw-hos"
./trialDITAs/ironic_tls.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>TLS Certificates with Ironic Python Agent (IPA) Images</title>
./trialDITAs/ironic_tls.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ironic_tls.dita:        <p>As part of <keyword keyref="kw-hos-phrase"/>, Ironic Python Agent, better known as IPA in the OpenStack community, 
./trialDITAs/ironic_tls.dita:            remote node, and ensure that the TLS endpoints being connected to in <keyword keyref="kw-hos"/> can be trusted.  This 
./trialDITAs/kafka_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Kafka Metrics</title>
./trialDITAs/keystone_features.dita:                    keyref="kw-hos-phrase"/></title>
./trialDITAs/keystone_features.dita:                    keyref="kw-hos-phrase"/> release.</p>
./trialDITAs/keystone_features.dita:                    keyref="kw-hos-phrase"/></title>
./trialDITAs/keystone_features.dita:                    keyref="kw-hos-phrase"/> release, but are disabled by default. Customers can run
./trialDITAs/keystone_features.dita:            <title><b>OpenStack upstream features that have been specifically disabled in <keyword keyref="kw-hos-phrase"/></b></title>
./trialDITAs/keystone_features.dita:                    <keyword keyref="kw-hos-phrase"/>, according to Keystone policy.</p>
./trialDITAs/knownissues50.dita:      <title>Upgrading from <keyword keyref="kw-hos-phrase-404"/></title>
./trialDITAs/knownissues50.dita:      <note type="warning">If your system is currently on version <keyword keyref="kw-hos-phrase-404"/> the correct upgrade path is to <keyword keyref="kw-hos-phrase-501"/></note>
./trialDITAs/knownissues50.dita:          keyref="kw-hos"/> service affected by this issue. The error conditions which cause this
./trialDITAs/knownissues50.dita:      <title><keyword keyref="kw-hos"/> Directory Umask</title>
./trialDITAs/knownissues50.dita:      <p><keyword keyref="kw-hos"/> directory umask is 0022. Changing this value may cause unstable
./trialDITAs/knownissues50.dita:        internal communication in the <keyword keyref="kw-hos"/> product and will negatively affect upgrade.</p>
./trialDITAs/knownissues50.dita:      <p>In <keyword keyref="kw-hos-phrase"/> and earlier ( with designate V2.0.1 ) when using
./trialDITAs/knownissues50.dita:        After upgrading to <keyword keyref="kw-hos-phrase"/> from <keyword keyref="kw-hos-phrase-40"/>
./trialDITAs/knownissues50.dita:      <p>You can now create a new flavors in <keyword keyref="kw-hos-phrase"/>. </p>
./trialDITAs/knownissues50.dita:          <keyword keyref="kw-hos"/> versions. </p>
./trialDITAs/knownissues50.dita:      <p>In <keyword keyref="kw-hos-phrase"/> Transparent VLAN is not supported.</p>
./trialDITAs/knownissues50.dita:      <p>In <keyword keyref="kw-hos-phrase"/> the ILO Firmware version needs to be minimum 2.30 for
./trialDITAs/knownissues50.dita:          keyref="kw-hos-phrase"/>. An existing Ironic flat environment to multi-tenancy environment
./trialDITAs/knownissues50.dita:      <p>If you are planning to upgrade from <keyword keyref="kw-hos-phrase-30"/> or <keyword keyref="kw-hos-phrase-40"/>,
./trialDITAs/knownissues50.dita:        failure of your cloud deployment. The last tested versions are 8.0.8 for <keyword keyref="kw-hos"/> 3.x and 9.0.3
./trialDITAs/knownissues50.dita:        for <keyword keyref="kw-hos"/> 4.x . More information is expected in 4th quarter 2017, including the correct
./trialDITAs/knownissues50.dita:        drivers for <keyword keyref="kw-hos"/> 5.x.</p>
./trialDITAs/l2gw5930.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/><b>Installing the L2 Gateway Agent for the
./trialDITAs/libvirt_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Libvirt Metrics</title>
./trialDITAs/licensing_50.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Software License Terms</title>
./trialDITAs/licensing_50.dita:      <p>Additional license authorizations for <keyword keyref="kw-hos"/> are available at: <xref
./trialDITAs/lifecyclemanager_recovery.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Lifecycle Manager Disaster Recovery</title>
./trialDITAs/lifecyclemanager_recovery.dita:    <p>Ensuring that you use the same version of <keyword keyref="kw-hos"/> that you previously had
./trialDITAs/logging_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Logging Service Features</title>
./trialDITAs/magnum_architecture.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Magnum Architecture</title>
./trialDITAs/magnum_architecture.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/magnum_architecture.dita:      <p>Magnum API anmd Magnum Conductor are run on the <keyword keyref="kw-hos"/> controllers (or core nodes
./trialDITAs/magnum_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Container Infrastructure Management (Magnum)
./trialDITAs/magnum_install.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Install the Magnum Service </title>
./trialDITAs/magnum_install.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/magnum_install.dita:          keyref="kw-hos-phrase"/> environment or can be added to an existing <keyword
./trialDITAs/magnum_install.dita:          keyref="kw-hos-phrase"/> environment. Both installations require container management
./trialDITAs/magnum_install.dita:        (public) <keyword keyref="kw-hos"/> endpoints. <table frame="all" rowsep="1" colsep="1"
./trialDITAs/magnum_install.dita:      <title>Installing Magnum as part of new <keyword keyref="kw-hos-phrase"/> environment</title>
./trialDITAs/magnum_install.dita:      <p>Magnum components are already included in example <keyword keyref="kw-hos"/> models based
./trialDITAs/magnum_install.dita:        guide: <xref keyref="install_entryscale_kvm"/>
./trialDITAs/magnum_install.dita:                <codeph>external-name</codeph>. In test installations, the <keyword keyref="kw-hos"
./trialDITAs/magnum_install.dita:                keyref="configure_lbaas"/>.</li>
./trialDITAs/magnum_install.dita:      <title>Adding Magnum to existing <keyword keyref="kw-hos-phrase"/> environment</title>
./trialDITAs/magnum_install.dita:      <p>Adding Magnum to an already deployed <keyword keyref="kw-hos-phrase"/> installation or
./trialDITAs/magnum_install.dita:            described in <xref keyref="using_git"/> for your Installation. <ul>
./trialDITAs/magnum_install.dita:              <keyword keyref="kw-hos"/> installer will use an IP address as public endpoint
./trialDITAs/magnum_install.dita:            keyref="configure_lbaas"/> for more information.
./trialDITAs/magnum_install.dita:      <note type="warning">By default <keyword keyref="kw-hos"/> stores the private key used by
./trialDITAs/magnum_integrate_dns.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Integrate Magnum with the DNS Service </title>
./trialDITAs/magnum_integrate_dns.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/magnum_integrate_dns.dita:              keyref="kw-hos"/> frontend certificate is issued for this hostname.</li>
./trialDITAs/magnum_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Magnum Overview</title>
./trialDITAs/magnum_overview.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/magnum_overview.dita:      <p>The <keyword keyref="kw-hos"/> Magnum Service provides 
./trialDITAs/magnum_overview.dita:        as first class resources.  <keyword keyref="kw-hos"/> Magnum uses Heat to orchestrate an OS image which
./trialDITAs/managing_ceph_clusters_after_deployment.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Ceph Clusters After Deployment</title>
./trialDITAs/managing_ceph_clusters_after_deployment.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/managing_networking.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Managing Networking</title>
./trialDITAs/memorymodel.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Memory Model</title>
./trialDITAs/memorymodel.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/metric_performance_considerations.dita:                keyref="kw-hos-phrase"/> supports 200 compute nodes, with up to 40 VMs each. If your
./trialDITAs/middleware_auditing.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Security Audit Logs</title>
./trialDITAs/middleware_auditing.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/middleware_auditing.dita:      this need, <keyword keyref="kw-hos"/> supports CADF (Cloud Auditing Data Federation)-compliant
./trialDITAs/middleware_auditing.dita:      of auditing support in <keyword keyref="kw-hos-phrase"/>: <ul>
./trialDITAs/middleware_auditing.dita:        <li>Auditing is disabled by default and can be enabled only after <keyword keyref="kw-hos"/>
./trialDITAs/middleware_auditing.dita:        <li>Auditing support has been added to eight <keyword keyref="kw-hos"/> services (Nova,
./trialDITAs/middleware_auditing.dita:      In <keyword keyref="kw-hos"/>, all auditing
./trialDITAs/monasca_agent.dita:            <li><keyword keyref="kw-hos-phrase"/>-specific component metrics, such as apache, mysql, rabbitmq,
./trialDITAs/monasca_agg_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Monasca Aggregated Metrics</title>
./trialDITAs/monasca_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Monitoring Service (Monasca) Features</title>
./trialDITAs/monasca_hipchat_plugin.dita:                    notifications from your <keyword keyref="kw-hos-phrase"/> cloud.</li>
./trialDITAs/monasca_integration_overview.dita:        <p>Monasca, the <keyword keyref="kw-hos-phrase"/> monitoring service, collects information
./trialDITAs/monasca_jira_plugin.dita:            type are not yet included in <keyword keyref="kw-hos-phrase"/>, you must perform the
./trialDITAs/monasca_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Monitoring Metrics</title>
./trialDITAs/monasca_plugins_overview.dita:        <p>Monasca, the <keyword keyref="kw-hos-phrase"/> monitoring and notification service,
./trialDITAs/monasca_plugins_overview.dita:            plugins. This guide also assumes that your <keyword keyref="kw-hos-phrase"/> cloud is
./trialDITAs/monitoring_overview.dita:      <p>The monitoring service is automatically installed as part of the <keyword keyref="kw-hos"/>
./trialDITAs/monitoring_overview.dita:    <section id="differences"><title>Differences Between Upstream and <keyword keyref="kw-hos"/>
./trialDITAs/monitoring_overview.dita:      <p>In the <keyword keyref="kw-hos-phrase"/> release, the OpenStack monitoring service,
./trialDITAs/monitoring_overview.dita:      <note>Icinga was supported in previous <keyword keyref="kw-hos"/> versions but it has been
./trialDITAs/monitoring_overview.dita:        deprecated in <keyword keyref="kw-hos-phrase"/>.</note>
./trialDITAs/monitoring_service.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Getting Started with Monitoring</title>
./trialDITAs/monitoring_service.dita:    use the <keyword keyref="kw-hos"/> Monitoring service to monitor the health of your cloud and,
./trialDITAs/monitoring_service.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/monitoring_vcenter_clusters.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Monitoring vCenter Clusters</title>
./trialDITAs/monitoring_vcenter_clusters.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/moving_from_dvr_deployments.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Moving from DVR deployments to non_DVR</title>
./trialDITAs/moving_from_dvr_deployments.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/moving_from_dvr_deployments.dita:            <p>If you have an older deployment of <keyword keyref="kw-hos"/> which is using DVR as a
./trialDITAs/mysql_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>MySQL Metrics</title>
./trialDITAs/networking_alarmdefinitions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Networking Alarms</title>
./trialDITAs/networking_nodes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Planned Network Maintenance</title>
./trialDITAs/neutron_external_networks.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Neutron External Networks</title>
./trialDITAs/neutron_external_networks.dita:      <p><keyword keyref="kw-hos"/> provides the ability to have multiple external networks, 
./trialDITAs/neutron_external_networks.dita:        You can configure <keyword keyref="kw-hos"/> to allow the use of provider VLANs as 
./trialDITAs/neutron_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Networking Service (Neutron) Features</title>
./trialDITAs/neutron_meters.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Networking (Neutron) Meters</title>
./trialDITAs/neutron_troubleshooting.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Network Service Troubleshooting </title>
./trialDITAs/neutron_troubleshooting.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/newfeatures50.dita:            <p><keyword keyref="kw-hos-phrase"/> now supports SUSE Linux Enterprise Server compute
./trialDITAs/newfeatures50.dita:                nodes see the document, <xref keyref="install_sles_compute"/>.</p>
./trialDITAs/newfeatures50.dita:            <p>New in <keyword keyref="kw-hos-phrase"/> is the Magnum OpenStack service. Magnum is a
./trialDITAs/newfeatures50.dita:                    keyref="install_magnum"/>.</p>
./trialDITAs/newton_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>OpenStack Newton Features</title>
./trialDITAs/newton_features.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/newton_features.dita:      <title><keyword keyref="kw-hos-phrase"/> Newton Features</title>
./trialDITAs/newton_features.dita:        identified below) are enabled in the <keyword keyref="kw-hos-phrase"/> standard settings and
./trialDITAs/newton_keystone_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Identity Service (Keystone) Features</title>
./trialDITAs/nova_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Compute Service (Nova) Features</title>
./trialDITAs/nova_meters.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Compute (Nova) Meters</title>
./trialDITAs/ntp_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>NTP Metrics</title>
./trialDITAs/onetwo_controller_recovery.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>One or Two Controller Node Disaster
./trialDITAs/onetwo_controller_recovery.dita:              keyref="persisteddata/persistedserverallocations">Input Model</xref> for information
./trialDITAs/other_alarmdefinitions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Other Services Alarms</title>
./trialDITAs/ovs_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Open vSwitch (OVS) Metrics</title>
./trialDITAs/pcipt_sriov_config.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>SR-IOV and PCI Passthrough Support</title>
./trialDITAs/pcipt_sriov_config.dita:    <p><keyword keyref="kw-hos-phrase"/> supports both single-root I/O virtualization (SR-IOV) and
./trialDITAs/pcipt_sriov_config.dita:      <p>If you plan to take advantage of SR-IOV support in <keyword keyref="kw-hos"/> you will need
./trialDITAs/pcipt_sriov_config.dita:      <p><keyword keyref="kw-hos-phrase"/> provides various options for the user to configure the
./trialDITAs/percona_partitioning_check.dita:  <title><keyword keyref="kw-hos-tm"/>
./trialDITAs/percona_partitioning_check.dita:    <keyword keyref="kw-hos-version-301"/>: Checking for Percona Cluster Partitioning</title>
./trialDITAs/pit_database_recovery.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Point-in-Time MySQL Database Recovery</title>
./trialDITAs/pit_lifecyclemanager_recovery.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Point-in-time Lifecycle Manager Recovery</title>
./trialDITAs/pit_swiftrings_recovery.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Point-in-Time Swift Rings Recovery</title>
./trialDITAs/pit_vertica_recovery.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Point-in-Time Vertica Recovery</title>
./trialDITAs/planned_computenode.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Planned Maintenance for a Compute Node</title>
./trialDITAs/planned_maintenance.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Planned System Maintenance</title>
./trialDITAs/prerequisite.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Prerequisites</title>
./trialDITAs/prerequisite.dita:                                keyref="kw-hos-tm"/>  management network</li>
./trialDITAs/prerequisite.dita:                    logs are not automatically included in <keyword keyref="kw-hos-tm"/> centralized
./trialDITAs/prerequisite.dita:                    password for the <keyword keyref="kw-hos-tm"/>  message queue.</li>
./trialDITAs/prerequisite.dita:                        keyref="kw-hos-tm"/> configuration as part of Nova and Cinder volume
./trialDITAs/prerequisite.dita:            <li>Since the file containing the <keyword keyref="kw-hos-tm"/>  message queue password
./trialDITAs/process_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Process Metrics</title>
./trialDITAs/provisioning_sles.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Provisioning SLES Yourself</title>
./trialDITAs/provisioning_sles.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/provisioning_sles.dita:                it can be added to a new or existing <keyword keyref="kw-hos-phrase"/> cloud.</p>
./trialDITAs/provisioning_sles.dita:            <p>As documented in the <xref keyref="install_entryscale_kvm/thirdparty">Using 3rd Party
./trialDITAs/provisioning_sles.dita:                    Baremetal Installers</xref> section of <xref keyref="install_entryscale_kvm"
./trialDITAs/rabbitmq_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>RabbitMQ Metrics</title>
./trialDITAs/reboot_computenode.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Rebooting a Compute Node</title>
./trialDITAs/rec_min_entryscale_esx_kvm_vsa.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recommended Hardware Minimums for an Entry-scale
./trialDITAs/rec_min_entryscale_esx_kvm_vsa.dita:      <p>These recommended minimums are based on the included <xref keyref="example_configurations"
./trialDITAs/rec_min_entryscale_esx_kvm_vsa.dita:      <p><keyword keyref="kw-hos-phrase"/> currently supports the following ESXi versions:</p>
./trialDITAs/rec_min_entryscale_esx_kvm_vsa_mml.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recommended Hardware Minimums for an Entry-scale
./trialDITAs/rec_min_entryscale_esx_kvm_vsa_mml.dita:    <p>These recommended minimums are based on the included <xref keyref="example_configurations"
./trialDITAs/rec_min_entryscale_esx_kvm_vsa_mml.dita:    <p><keyword keyref="kw-hos-phrase"/> currently supports the following ESXi versions:</p>
./trialDITAs/rec_min_entryscale_kvm_ceph.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recommended Hardware Minimums for an Entry-scale
./trialDITAs/rec_min_entryscale_kvm.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recommended Hardware Minimums for an Entry-scale
./trialDITAs/rec_min_entryscale_kvm.dita:    <p>These recommended minimums are based on the included <xref keyref="example_configurations"
./trialDITAs/rec_min_entryscale_kvm.dita:        keyref="example_configurations"/>.</p>
./trialDITAs/rec_min_entryscale_kvm_vsa.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recommended Hardware Minimums for an Entry-scale
./trialDITAs/rec_min_entryscale_kvm_vsa.dita:    <p>These recommended minimums are based on the included <xref keyref="example_configurations"
./trialDITAs/rec_min_entryscale_kvm_vsa.dita:        keyref="example_configurations"/>.</p>
./trialDITAs/rec_min_ironic.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recommended Hardware Minimums for an Ironic Flat
./trialDITAs/rec_min_ironic.dita:        keyref="example_configurations">example configurations</xref> included with the base
./trialDITAs/rec_min_ironic.dita:        keyref="example_configurations"/>.</p>
./trialDITAs/rec_min_swift.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recommended Hardware Minimums for an Entry-scale
./trialDITAs/rec_min_swift.dita:    <p>These recommended minimums are based on the included <xref keyref="example_configurations"
./trialDITAs/recover_rabbit.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Understanding and Recovering RabbitMQ after
./trialDITAs/recover_rabbit.dita:        <keyword keyref="kw-hos-phrase"/> cloud environment. It is important for cloud operators to
./trialDITAs/recover_rabbit.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/recover_rabbit.dita:        brokers communication between multiple services in your <keyword keyref="kw-hos-phrase"/>
./trialDITAs/recover_rabbit.dita:      <p>There are two types of upgrades within <keyword keyref="kw-hos"/> -- major and minor. The
./trialDITAs/recover_rabbit.dita:        as the upgrade from <keyword keyref="kw-hos-phrase-20"/> (RabbitMQ version 3.4.3) to 3.0
./trialDITAs/recover_rabbit.dita:        keyref="kw-hos-phrase"/> is likely to recover automatically without any further action
./trialDITAs/recover_vertica_network.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Recovering Vertica after Network Outage</title>
./trialDITAs/register_suse_already_installed.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Registering SUSE Linux from the Installed System</title>
./trialDITAs/register_suse_automated.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Registering SUSE Linux during Automated
./trialDITAs/register_suse_install.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Registering SUSE Linux during the
./trialDITAs/register_suse_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Registering SUSE Linux</title>
./trialDITAs/releasenotes501.dita:  <title><keyword keyref="kw-hos-tm"/>
./trialDITAs/releasenotes501.dita:    <keyword keyref="kw-hos-version-501"/>: Release Notes</title>
./trialDITAs/releasenotes501.dita:        keyref="kw-hos-version-501"/>, including known issues and workarounds for this
./trialDITAs/releasenotes501.dita:      <p id="SCRD-1262"><b><keyword keyref="kw-hos-phrase-501"/> supports SLES12 SP3 for Compute Nodes</b></p>
./trialDITAs/releasenotes501.dita:      <p>SLES12 SP2 is supported for compute nodes in <keyword keyref="kw-hos-phrase-50"/>. <keyword
./trialDITAs/releasenotes501.dita:          keyref="kw-hos-phrase-501"/> includes support for the more recently released SLES12 SP3.
./trialDITAs/releasenotes501.dita:          <note type="important"><keyword keyref="kw-hos-phrase-501"/> does not support SLES12 SP2
./trialDITAs/releasenotes501.dita:          compute nodes. If you intend to upgrade to <keyword keyref="kw-hos-phrase-501"/> you will
./trialDITAs/releasenotes501.dita:          <keyword keyref="kw-hos"/> Entry-scale KVM Cloud</xref>. 
./trialDITAs/releasenotes501.dita:          <li><keyword keyref="kw-hos"/> playbooks currently do not take care of SDK, so it needs to
./trialDITAs/releasenotes501.dita:      <p id="BUGZILLA-1065762"><b>Upgrading <keyword keyref="kw-hos-phrase"/> with SLES Compute SP2 to SP3</b></p>
./trialDITAs/releasenotes501.dita:          <li>You must be running <keyword keyref="kw-hos-phrase"/> with SLES12 SP2 Compute</li>
./trialDITAs/releasenotes501.dita:      <p id="SCRD-1362"><b>Magnum Fedora Atomic for <keyword keyref="kw-hos-phrase"/> must use version fedora-25</b></p>
./trialDITAs/releasenotes501.dita:          keyref="deploying_kubernetes_fedora_atomic"/>
./trialDITAs/releasenotes501.dita:              keyref="adding_compute_nodes"/> in the <keyword
./trialDITAs/releasenotes501.dita:              keyref="kw-hos-phrase"/> documentation.</li>
./trialDITAs/releasenotes502.dita:  <title><keyword keyref="kw-hos-tm"/>
./trialDITAs/releasenotes502.dita:    <keyword keyref="kw-hos-version-502"/>: Release Notes</title>
./trialDITAs/releasenotes502.dita:        keyref="kw-hos-version-502"/>, including known issues and workarounds for this
./trialDITAs/releasenotes502.dita:      <p id="SCRD-1851"><b><keyword keyref="kw-hos-phrase-502"/> supports RHEL 7.3 Compute Nodes</b></p>
./trialDITAs/releasenotes502.dita:      <p><keyword keyref="kw-hos-phrase-502"/> introduces support for RHEL 7.3 compute nodes. 
./trialDITAs/releasenotes502.dita:        python-freezerclient which has been added to <keyword keyref="kw-hos-phrase-502"/> is the
./trialDITAs/repair_vsa_maintenance.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Repairing a VSA Node</title>
./trialDITAs/repair_vsa_maintenance.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/replace_ceph_rgw_node.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing a RADOS Gateway Node</title>
./trialDITAs/replace_ceph_rgw_node.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/replace_dedicated_lm.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing a Standalone Controller Node</title>
./trialDITAs/replace_osd_datadisk_from_dl_sl_servers.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing a Ceph OSD Data Disk from DL and SL
./trialDITAs/replace_osd_datadisk_from_dl_sl_servers.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/replace_shared_lm.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing a Shared Lifecycle Manager/Controller
./trialDITAs/replace_shared_lm.dita:      <li>Ensuring that you use the same version of <keyword keyref="kw-hos"/> that you previously
./trialDITAs/replace_vsa_node.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Replacing a VSA Node</title>
./trialDITAs/replace_vsa_node.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/replacing_controller_notes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Notes</title>
./trialDITAs/restore_previous_backup.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Restore from a Specific Backup</title>
./trialDITAs/restore_shared_controller.chagedExthide.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Restoring a Shared Controller</title>
./trialDITAs/restore_shared_controller.chagedExthide.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/restore_shared_controller.chagedExthide.dita:        <li>Ensuring that you use the same version of <keyword keyref="kw-hos"/> that you previously
./trialDITAs/security_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Security Features Overview</title>
./trialDITAs/security_features.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/security_features.dita:    <section id="overview"><title>Security features in <keyword keyref="kw-hos-phrase"/></title>
./trialDITAs/security_features.dita:          keyref="kw-hos-phrase"/> provides capabilities that help you to protect your data at rest
./trialDITAs/security_features.dita:        PCI-DSS.</p><p>In <keyword keyref="kw-hos-phrase"/>, a number of security enhancements are
./trialDITAs/security_features.dita:        <keyword keyref="kw-hos"/> deployment, promoting better compliance with your organization’s
./trialDITAs/security_features.dita:      <p id="tls_internal">With <keyword keyref="kw-hos-phrase"/>, data transmission between
./trialDITAs/security_features.dita:          keyref="kw-hos-phrase"/>.
./trialDITAs/security_features.dita:      <keyword keyref="kw-hos-phrase"/> is PCI (Payment Card Industry) ready, enabling retail
./trialDITAs/security_features.dita:      standards document. Since <keyword keyref="kw-hos"/> satisfies the requirements that fall
./trialDITAs/security_features.dita:      confidence and peace of mind that <keyword keyref="kw-hos"/> will not be a blocker.</section>
./trialDITAs/shared_lifecyclemanager_recovery.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Shared Controller / Lifecycle Manager Disaster
./trialDITAs/shared_lifecyclemanager_recovery.dita:      <li>Ensuring that you use the same version of <keyword keyref="kw-hos"/> that you previously
./trialDITAs/sles_overview.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>SLES Compute Node Installation
./trialDITAs/sles_overview.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/sles_overview.dita:                <p><keyword keyref="kw-hos-phrase"/> supports SLES compute nodes, specifically SLES
./trialDITAs/sles_overview.dita:                    12 SP2. HPE does not ship a SLES ISO with <keyword keyref="kw-hos"/> so you will
./trialDITAs/sles_overview.dita:                        keyref="kw-hos"/>: </p>
./trialDITAs/sles_overview.dita:                        keyref="register_suse_overview"/> for more information. </p>
./trialDITAs/sles_preinstall.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>SLES Pre-Installation Checks</title>
./trialDITAs/sles_preinstall.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/sles_preinstall.dita:                <keyword keyref="kw-hos-phrase"/> uses iptables to secure access to lifecycle manager network interfaces and on 
./trialDITAs/sles_preinstall.dita:                This sample configuration is inappropriate for <keyword keyref="kw-hos"/> operation and the node will not be able to run HOS 
./trialDITAs/sles_preinstall.dita:                <keyword keyref="kw-hos-phrase"/> install will prevent the installation of the sample files.                
./trialDITAs/sles_preinstall.dita:                However, if these files do exist, there are a number of steps that you must follow before you install <keyword keyref="kw-hos-phrase"/>.
./trialDITAs/sles_preinstall.dita:                <keyword keyref="kw-hos"/> components and OpenStack components manage <i>interface specific</i> rules.
./trialDITAs/sles_preinstall.dita:                <li>Ensure that any remaining rules are limited to interfaces not used by <keyword keyref="kw-hos"/>.  
./trialDITAs/sles_preinstall.dita:                    interfaces not used by <keyword keyref="kw-hos"/>), you will need to reboot the system to activate the new settings.
./trialDITAs/sles_support.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>SLES Support</title>
./trialDITAs/sles_support.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/sles_support.dita:                been tested and qualified by HPE to run on <keyword keyref="kw-hos"/>. Refer to the
./trialDITAs/sles_support.dita:                published compatibility matrix for your version of <keyword keyref="kw-hos"/> at the
./trialDITAs/sles_support.dita:                        <p>HPE customers who have purchased both <keyword keyref="kw-hos"/> and SLES
./trialDITAs/sles_support.dita:                            specialists in <keyword keyref="kw-hos"/> and SUSE technologies. If the
./trialDITAs/sles_support.dita:                            level. If <keyword keyref="kw-hos"/> software is excluded as the cause
./trialDITAs/sles_toc.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>SLES Installation Overview</title>
./trialDITAs/sles_toc.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/start_stop_freezer_services.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling, Disabling and Restoring Backup/Restore
./trialDITAs/start_stop_freezer_services.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/storage_alarmdefinitions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Storage Alarms</title>
./trialDITAs/storage_unplanned.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Unplanned Storage Maintenance</title>
./trialDITAs/supported_services.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Default Automatic Backup Jobs</title>
./trialDITAs/supported_services.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/supported_services.dita:      backup and restore service in <keyword keyref="kw-hos"/>: <p>
./trialDITAs/swift_features.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Object Storage Service (Swift) Features</title>
./trialDITAs/swift_meters.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Storage (Swift) Meters</title>
./trialDITAs/swift_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Swift Metrics</title>
./trialDITAs/swift_nodes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Planned Maintenance Tasks for Swift
./trialDITAs/swiftrings_recovery.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Swift Rings Recovery</title>
./trialDITAs/swift_storage_unplanned.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Unplanned Swift Storage Maintenance</title>
./trialDITAs/system_alarmdefinitions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>System Alarms</title>
./trialDITAs/system_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>System Metrics</title>
./trialDITAs/tech_overview_ataglance.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>At A Glance</title>
./trialDITAs/tech_overview_hlm.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Helion Lifecycle Manager Overview</title>
./trialDITAs/tech_overview_hlm.dita:        and often error prone. To help with this process, <keyword keyref="kw-hos-phrase"/> provides lifecycle 
./trialDITAs/tech_overview_hlm.dita:        configure, maintain and update <keyword keyref="kw-hos-phrase"/>. These playbooks are collectively 
./trialDITAs/tech_overview_hlm.dita:      <p>During installation of <keyword keyref="kw-hos-phrase"/>, the core OpenStack services, 
./trialDITAs/tech_overview_hlm.dita:        the <keyword keyref="kw-hos"/> lifecycle manager provides scripts that perform the integrations for you.</p>
./trialDITAs/tech_overview_hlm.dita:      <p><keyword keyref="kw-hos-phrase"/> clouds are defined through a set of configuration files 
./trialDITAs/tech_overview_hlm.dita:        <keyword keyref="kw-hos"/> input model. Rather than needing to define a cloud from scratch every time,
./trialDITAs/tech_overview_hlm.dita:        <keyword keyref="kw-hos-phrase"/> includes a series of starting point examples that reflect 
./trialDITAs/tech_overview_hlm.dita:        <keyword keyref="kw-hos-phrase"/> cloud, you can choose to start with one of the supplied examples 
./trialDITAs/tech_overview_hlm.dita:        <keyword keyref="kw-hos"/> lifecycle manager utilizes Cobbler as an included and optional baremetal deployer.</p>
./trialDITAs/tech_overview_hlm.dita:        combines this information with the service definitions provided by <keyword keyref="kw-hos"/> and any 
./trialDITAs/tech_overview_hlm.dita:      <p><keyword keyref="kw-hos"/> uses Helion Lifecycle Manager for hotfixes, patches, updates and upgrades.
./trialDITAs/tech_overview_linux.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>HPE Linux for HPE Helion</title>
./trialDITAs/tech_overview_linux.dita:      <p><keyword keyref="kw-hos"/> is OpenStack technology coupled with HPE Linux for HPE Helion</p>
./trialDITAs/tech_overview_newimproved.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>What's New and Improved in <keyword
./trialDITAs/tech_overview_newimproved.dita:      keyref="kw-hos-phrase"/></title>
./trialDITAs/tech_overview_openstack.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>OpenStack Services</title>
./trialDITAs/tech_overview_openstack.dita:        <keyword keyref="kw-hos"/>  is based on the OpenStack offering which brings many benefits:
./trialDITAs/tech_overview_openstack.dita:      <p>The following table provides a brief summary of the OpenStack services on which <keyword keyref="kw-hos"/>
./trialDITAs/tech_overview_valueadd.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>HPE Enhancements to OpenStack </title>
./trialDITAs/tech_overview_valueadd.dita:      <p><keyword keyref="kw-hos-phrase"/> offers a number of value-added
./trialDITAs/tech_overview_valueadd.dita:      <note><keyword keyref="kw-hos-phrase"/> is the last supported release for HPE Linux, it is
./trialDITAs/telemetry_alarmdefinitions.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Telemetry Alarms</title>
./trialDITAs/thirdparty_integrations.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Third Party Integrations</title>
./trialDITAs/thirdparty_integrations.dita:    <!--<p>We have the following documentation showing how to integrate <keyword keyref="kw-hos-phrase"
./trialDITAs/thirdparty_overview.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Third Party Integrations</title>
./trialDITAs/thirdparty_overview.dita:      integrate <keyword keyref="kw-hos-phrase"/> with third party solutions.</shortdesc></abstract>
./trialDITAs/thirdparty_overview.dita:    <p>We have the following documentation showing how to integrate <keyword keyref="kw-hos-phrase"
./trialDITAs/thirdparty_overview.dita:        <p><keyword keyref="kw-hos-phrase"/>
./trialDITAs/thirdparty_overview.dita:        supports the integration of 3rd-party components with a <keyword keyref="kw-hos"/>
./trialDITAs/thirdparty_overview.dita:        existing service in the <keyword keyref="kw-hos"/> stack. The 3rd-party mechanism supports the integration of a
./trialDITAs/thirdparty_overview.dita:            keyref="kw-hos-phrase"/> centralized logging solution and Splunk including the steps to
./trialDITAs/three_controller_recovery.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Three Control Plane Node Disaster
./trialDITAs/tls_mysql.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling TLS for MySQL Traffic</title>
./trialDITAs/tls_mysql.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/tls_mysql.dita:    <p>Since <keyword keyref="kw-hos-phrase-40"/> MySQL traffic can be encrypted using TLS. For
./trialDITAs/tls_mysql.dita:      completely new <keyword keyref="kw-hos-phrase"/> deployments using the supplied input model
./trialDITAs/tls_rabbit_mq.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling TLS for RabbitMQ Traffic</title>
./trialDITAs/tls_rabbit_mq.dita:      <p>Since <keyword keyref="kw-hos-phrase-40"/> RabbitMQ traffic can be encrypted using TLS. To enable it, you will have to add
./trialDITAs/ts_dpdk.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting DPDK</title>
./trialDITAs/ts_heat.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Heat Troubleshooting</title>
./trialDITAs/ts_heat.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ts_magnum.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Troubleshooting Magnum Service</title>
./trialDITAs/ts_magnum.dita:    <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/ts_orchestration.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Orchestration Troubleshooting</title>
./trialDITAs/unplanned_maintenance.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Unplanned System Maintenance</title>
./trialDITAs/unsupported_features.dita:            Ceph Jewel is not supported in <keyword keyref="kw-hos-phrase"/>, the current supported version is Ceph Hammer.
./trialDITAs/update_vertica_license.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Updating the Vertica License Key</title>
./trialDITAs/update_vertica_license.dita:      <p>A Vertica license is included in <keyword keyref="kw-hos"/> for you to use. If you have
./trialDITAs/usage_ceph_storage_helion.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Usage of Ceph Storage </title>
./trialDITAs/usage_ceph_storage_helion.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/usage_ceph_storage_helion.dita:            using multiple protocols. Ceph is closely integrated with <keyword keyref="kw-hos-tm"/>
./trialDITAs/usage_ceph_storage_helion.dita:            cinder-volume and glance data store. <keyword keyref="kw-hos-tm"/> further simplifies
./trialDITAs/usage_ceph_storage_helion.dita:                            user model provided with <keyword keyref="kw-hos-tm"/> is mentioned
./trialDITAs/usage_ceph_storage_helion.dita:                                                <keyword keyref="kw-hos-tm"/> . It just means that
./trialDITAs/usage_ceph_storage_helion.dita:                                        setting that <keyword keyref="kw-hos"/> supports.</stentry>
./trialDITAs/usage_ceph_storage_helion.dita:                            [DEFAULT]/host value which <keyword keyref="kw-hos-phrase"/> is
./trialDITAs/usage_ceph_storage_helion.dita:                in <keyword keyref="kw-hos-tm"/>
./trialDITAs/usage_ceph_storage_helion.dita:                <keyword keyref="kw-hos-version"/> enables 1.a, 2.a, and 2.b only. </p>
./trialDITAs/using_flavor_metadata.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using Flavor Metadata to Specify CPU
./trialDITAs/using_flavor_metadata.dita:      <p>In <keyword keyref="kw-hos"/> Nova, the <codeph>ComputeCapabilitiesFilter</codeph>
./trialDITAs/using_opsconsole.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Using the Operations Console</title>
./trialDITAs/vertica_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Vertica Metrics</title>
./trialDITAs/vlan-aware_vm.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Setting up VLAN-Aware VMs</title>
./trialDITAs/vlan-aware_vm.dita:            apparent that this step disables Neutron security groups completely. The default <keyword keyref="kw-hos"/>
./trialDITAs/vlan-aware_vm.dita:            which does not implement security groups for trunk ports. Optionally, the <keyword keyref="kw-hos"/> default
./trialDITAs/vlan-aware_vm.dita:    <section id="firewall"><title>Firewall issues</title> The <keyword keyref="kw-hos"/> default
./trialDITAs/vlan_transparency.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Enabling VLAN Transparent Networks</title>
./trialDITAs/vlan_transparency.dita:      <p>VLAN transparent networks in <keyword keyref="kw-hos-phrase"/> allow for support of
./trialDITAs/vsa_nodes.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Planned Maintenance Tasks for VSA Nodes</title>
./trialDITAs/vsa_storage_unplanned.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Unplanned VSA Storage Maintenance</title>
./trialDITAs/whole_unplanned.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Whole Cloud Recovery Procedures</title>
./trialDITAs/without_dvr.dita:    <title><ph conkeyref="HOS-conrefs/product-title"/>Configuring <keyword keyref="kw-hos"/> without
./trialDITAs/without_dvr.dita:        <p conkeyref="HOS-conrefs/applies-to"/>
./trialDITAs/without_dvr.dita:            <title>Configuring <keyword keyref="kw-hos"/> without DVR</title>
./trialDITAs/working_monitoring.dita:    <p>For a full list of packaged plugins that are included <keyword keyref="kw-hos"/>, see <xref
./trialDITAs/zookeeper_metrics.dita:  <title><ph conkeyref="HOS-conrefs/product-title"/>Zookeeper Metrics</title>
