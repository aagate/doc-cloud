<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/swift/doc/source/api/object_api_v1_overview.rst">
    <section ids="object-storage-api-overview" names="object\ storage\ api\ overview">
        <title>Object Storage API overview</title>
        <paragraph>OpenStack Object Storage is a highly available, distributed, eventually
            consistent object/blob store. You create, modify, and get objects and
            metadata by using the Object Storage API, which is implemented as a set
            of Representational State Transfer (REST) web services.</paragraph>
        <paragraph>For an introduction to OpenStack Object Storage, see the <reference internal="True" refuri="../admin/index"><inline classes="doc">OpenStack Swift Administrator Guide</inline></reference>.</paragraph>
        <paragraph>You use the HTTPS (SSL) protocol to interact with Object Storage, and
            you use standard HTTP calls to perform API operations. You can also use
            language-specific APIs, which use the RESTful API, that make it easier
            for you to integrate into your applications.</paragraph>
        <paragraph>To assert your right to access and change data in an account, you
            identify yourself to Object Storage by using an authentication token. To
            get a token, you present your credentials to an authentication service.
            The authentication service returns a token and the URL for the account.
            Depending on which authentication service that you use, the URL for the
            account appears in:</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph><strong>OpenStack Identity Service</strong>. The URL is defined in the service
                    catalog.</paragraph>
            </list_item>
            <list_item>
                <paragraph><strong>Tempauth</strong>. The URL is provided in the <literal>X-Storage-Url</literal> response
                    header.</paragraph>
            </list_item>
        </bullet_list>
        <paragraph>In both cases, the URL is the full URL and includes the account
            resource.</paragraph>
        <paragraph>The Object Storage API supports the standard, non-serialized response
            format, which is the default, and both JSON and XML serialized response
            formats.</paragraph>
        <paragraph>The Object Storage system organizes data in a hierarchy, as follows:</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph><strong>Account</strong>. Represents the top-level of the hierarchy.</paragraph>
                <paragraph>Your service provider creates your account and you own all resources
                    in that account. The account defines a namespace for containers. A
                    container might have the same name in two different accounts.</paragraph>
                <paragraph>In the OpenStack environment, <emphasis>account</emphasis> is synonymous with a project
                    or tenant.</paragraph>
            </list_item>
            <list_item>
                <paragraph><strong>Container</strong>. Defines a namespace for objects. An object with the
                    same name in two different containers represents two different
                    objects. You can create any number of containers within an account.</paragraph>
                <paragraph>In addition to containing objects, you can also use the container to
                    control access to objects by using an access control list (ACL). You
                    cannot store an ACL with individual objects.</paragraph>
                <paragraph>In addition, you configure and control many other features, such as
                    object versioning, at the container level.</paragraph>
                <paragraph>You can bulk-delete up to 10,000 containers in a single request.</paragraph>
                <paragraph>You can set a storage policy on a container with predefined names
                    and definitions from your cloud provider.</paragraph>
            </list_item>
            <list_item>
                <paragraph><strong>Object</strong>. Stores data content, such as documents, images, and so
                    on. You can also store custom metadata with an object.</paragraph>
                <paragraph>With the Object Storage API, you can:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Store an unlimited number of objects. Each object can be as large
                            as 5 GB, which is the default. You can configure the maximum
                            object size.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Upload and store objects of any size with large object creation.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Use cross-origin resource sharing to manage object security.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Compress files using content-encoding metadata.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Override browser behavior for an object using content-disposition metadata.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Schedule objects for deletion.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Bulk-delete up to 10,000 objects in a single request.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Auto-extract archive files.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Generate a URL that provides time-limited <strong>GET</strong> access to an
                            object.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Upload objects directly to the Object Storage system from a
                            browser by using form <strong>POST</strong> middleware</paragraph>
                    </list_item>
                </bullet_list>
            </list_item>
        </bullet_list>
        <paragraph>The account, container, and object hierarchy affects the way you
            interact with the Object Storage API.</paragraph>
        <paragraph>Specifically, the resource path reflects this structure and has this
            format:</paragraph>
        <literal_block classes="code" xml:space="preserve">/v1/{account}/{container}/{object}</literal_block>
        <paragraph>For example, for the <literal>flowers/rose.jpg</literal> object in the <literal>images</literal>
            container in the <literal>12345678912345</literal> account, the resource path is:</paragraph>
        <literal_block classes="code" xml:space="preserve">/v1/12345678912345/images/flowers/rose.jpg</literal_block>
        <paragraph>Notice that the object name contains the <literal>/</literal> character. This slash
            does not indicate that Object Storage has a sub-hierarchy called
            <literal>flowers</literal> because containers do not store objects in actual
            sub-folders. However, the inclusion of <literal>/</literal> or a similar convention
            inside object names enables you to create pseudo-hierarchical folders
            and directories.</paragraph>
        <paragraph>For example, if the endpoint for Object Storage is
            <literal>objects.mycloud.com</literal>, the returned URL is
            <literal>https://objects.mycloud.com/v1/12345678912345</literal>.</paragraph>
        <paragraph>To access a container, append the container name to the resource path.</paragraph>
        <paragraph>To access an object, append the container and the object name to the
            path.</paragraph>
        <paragraph>If you have a large number of containers or objects, you can use query
            parameters to page through large lists of containers or objects. Use the
            <literal>marker</literal>, <literal>limit</literal>, and <literal>end_marker</literal> query parameters to
            control how many items are returned in a list and where the list starts
            or ends. If you want to page through in reverse order, you can use the query
            parameter <literal>reverse</literal>, noting that your marker and end_markers should be
            switched when applied to a reverse listing. I.e, for a list of objects
            <literal>[a, b, c, d, e]</literal> the non-reversed could be:</paragraph>
        <literal_block classes="code" xml:space="preserve">/v1/{account}/{container}/?marker=a&amp;end_marker=d
b
c</literal_block>
        <paragraph>However, when reversed marker and end_marker are applied to a reversed list:</paragraph>
        <literal_block classes="code" xml:space="preserve">/v1/{account}/{container}/?marker=d&amp;end_marker=a&amp;reverse=on
c
b</literal_block>
        <paragraph>Object Storage HTTP requests have the following default constraints.
            Your service provider might use different default values.</paragraph>
        <table>
            <tgroup cols="3">
                <colspec colwidth="28"></colspec>
                <colspec colwidth="13"></colspec>
                <colspec colwidth="48"></colspec>
                <thead>
                    <row>
                        <entry>
                            <paragraph>Item</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Maximum value</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Notes</paragraph>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <paragraph>Number of HTTP headers</paragraph>
                        </entry>
                        <entry>
                            <paragraph>90</paragraph>
                        </entry>
                        <entry>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>Length of HTTP headers</paragraph>
                        </entry>
                        <entry>
                            <paragraph>4096 bytes</paragraph>
                        </entry>
                        <entry>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>Length per HTTP request line</paragraph>
                        </entry>
                        <entry>
                            <paragraph>8192 bytes</paragraph>
                        </entry>
                        <entry>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>Length of HTTP request</paragraph>
                        </entry>
                        <entry>
                            <paragraph>5 GB</paragraph>
                        </entry>
                        <entry>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>Length of container names</paragraph>
                        </entry>
                        <entry>
                            <paragraph>256 bytes</paragraph>
                        </entry>
                        <entry>
                            <paragraph>Cannot contain the <literal>/</literal> character.</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph>Length of object names</paragraph>
                        </entry>
                        <entry>
                            <paragraph>1024 bytes</paragraph>
                        </entry>
                        <entry>
                            <paragraph>By default, there are no character restrictions.</paragraph>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <paragraph>You must UTF-8-encode and then URL-encode container and object names
            before you call the API binding. If you use an API binding that performs
            the URL-encoding for you, do not URL-encode the names before you call
            the API binding. Otherwise, you double-encode these names. Check the
            length restrictions against the URL-encoded string.</paragraph>
        <paragraph>The API Reference describes the operations that you can perform with the
            Object Storage API:</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph><reference name="Storage accounts" refuri="http://developer.openstack.org/api-ref/object-storage/index.html#accounts">Storage
                        accounts</reference>:
                    Use to perform account-level tasks.</paragraph>
                <paragraph>Lists containers for a specified account. Creates, updates, and
                    deletes account metadata. Shows account metadata.</paragraph>
            </list_item>
            <list_item>
                <paragraph><reference name="Storage containers" refuri="http://developer.openstack.org/api-ref/object-storage/index.html#containers">Storage
                        containers</reference>:
                    Use to perform container-level tasks.</paragraph>
                <paragraph>Lists objects in a specified container. Creates, shows details for,
                    and deletes containers. Creates, updates, shows, and deletes
                    container metadata.</paragraph>
            </list_item>
            <list_item>
                <paragraph><reference name="Storage objects" refuri="http://developer.openstack.org/api-ref/object-storage/index.html#objects">Storage
                        objects</reference>:
                    Use to perform object-level tasks.</paragraph>
                <paragraph>Creates, replaces, shows details for, and deletes objects. Copies
                    objects with another object with a new or different name. Updates
                    object metadata.</paragraph>
            </list_item>
        </bullet_list>
    </section>
</document>
