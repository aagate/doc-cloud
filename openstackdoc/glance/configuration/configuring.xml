<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/configuration/configuring.rst">
    <block_quote>
        <paragraph>Copyright 2011 OpenStack Foundation
            All Rights Reserved.</paragraph>
        <paragraph>Licensed under the Apache License, Version 2.0 (the “License”); you may
            not use this file except in compliance with the License. You may obtain
            a copy of the License at</paragraph>
        <block_quote>
            <paragraph><reference refuri="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</reference></paragraph>
        </block_quote>
        <paragraph>Unless required by applicable law or agreed to in writing, software
            distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
            WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
            License for the specific language governing permissions and limitations
            under the License.</paragraph>
    </block_quote>
    <target refid="basic-configuration"></target>
    <section ids="basic-configuration id1" names="basic\ configuration basic-configuration">
        <title>Basic Configuration</title>
        <paragraph>Glance has a number of options that you can use to configure the Glance API
            server, the Glance Registry server, and the various storage backends that
            Glance can use to store images.</paragraph>
        <paragraph>Most configuration is done via configuration files, with the Glance API
            server and Glance Registry server using separate configuration files.</paragraph>
        <paragraph>When starting up a Glance server, you can specify the configuration file to
            use (see <reference internal="True" refuri="../admin/controllingservers#controlling-servers"><inline classes="std std-ref">the documentation on controller Glance servers</inline></reference>).
            If you do <strong>not</strong> specify a configuration file, Glance will look in the following
            directories for a configuration file, in order:</paragraph>
        <bullet_list bullet="*">
            <list_item>
                <paragraph><literal>~/.glance</literal></paragraph>
            </list_item>
            <list_item>
                <paragraph><literal>~/</literal></paragraph>
            </list_item>
            <list_item>
                <paragraph><literal>/etc/glance</literal></paragraph>
            </list_item>
            <list_item>
                <paragraph><literal>/etc</literal></paragraph>
            </list_item>
        </bullet_list>
        <paragraph>The Glance API server configuration file should be named <literal>glance-api.conf</literal>.
            Similarly, the Glance Registry server configuration file should be named
            <literal>glance-registry.conf</literal>. There are many other configuration files also
            since Glance maintains a configuration file for each of its services. If you
            installed Glance via your operating system’s package management system, it
            is likely that you will have sample configuration files installed in
            <literal>/etc/glance</literal>.</paragraph>
        <paragraph>In addition, sample configuration files for each server application with
            detailed comments are available in the <reference internal="True" refuri="sample-configuration#sample-configuration"><inline classes="std std-ref">Glance Sample Configuration</inline></reference> section.</paragraph>
        <paragraph>The PasteDeploy configuration (controlling the deployment of the WSGI
            application for each component) may be found by default in
            &lt;component&gt;-paste.ini alongside the main configuration file, &lt;component&gt;.conf.
            For example, <literal>glance-api-paste.ini</literal> corresponds to <literal>glance-api.conf</literal>.
            This pathname for the paste config is configurable, as follows:</paragraph>
        <literal_block xml:space="preserve">[paste_deploy]
config_file = /path/to/paste/config</literal_block>
        <section ids="common-configuration-options-in-glance" names="common\ configuration\ options\ in\ glance">
            <title>Common Configuration Options in Glance</title>
            <paragraph>Glance has a few command-line options that are common to all Glance programs:</paragraph>
            <definition_list>
                <definition_list_item>
                    <term><literal>--verbose</literal></term>
                    <definition>
                        <paragraph>Optional. Default: <literal>False</literal></paragraph>
                        <paragraph>Can be specified on the command line and in configuration files.</paragraph>
                        <paragraph>Turns on the INFO level in logging and prints more verbose command-line
                            interface printouts.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>--debug</literal></term>
                    <definition>
                        <paragraph>Optional. Default: <literal>False</literal></paragraph>
                        <paragraph>Can be specified on the command line and in configuration files.</paragraph>
                        <paragraph>Turns on the DEBUG level in logging.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>--config-file=PATH</literal></term>
                    <definition>
                        <paragraph>Optional. Default: See below for default search order.</paragraph>
                        <paragraph>Specified on the command line only.</paragraph>
                        <paragraph>Takes a path to a configuration file to use when running the program. If this
                            CLI option is not specified, then we check to see if the first argument is a
                            file. If it is, then we try to use that as the configuration file. If there is
                            no file or there were no arguments, we search for a configuration file in the
                            following order:</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>~/.glance</literal></paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>~/</literal></paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>/etc/glance</literal></paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>/etc</literal></paragraph>
                            </list_item>
                        </bullet_list>
                        <paragraph>The filename that is searched for depends on the server application name. So,
                            if you are starting up the API server, <literal>glance-api.conf</literal> is searched for,
                            otherwise <literal>glance-registry.conf</literal>.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>--config-dir=DIR</literal></term>
                    <definition>
                        <paragraph>Optional. Default: <literal>None</literal></paragraph>
                        <paragraph>Specified on the command line only.</paragraph>
                        <paragraph>Takes a path to a configuration directory from which all *.conf fragments
                            are loaded. This provides an alternative to multiple –config-file options
                            when it is inconvenient to explicitly enumerate all the configuration files,
                            for example when an unknown number of config fragments are being generated
                            by a deployment framework.</paragraph>
                        <paragraph>If –config-dir is set, then –config-file is ignored.</paragraph>
                        <paragraph>An example usage would be:</paragraph>
                        <block_quote>
                            <paragraph>$ glance-api –config-dir=/etc/glance/glance-api.d</paragraph>
                            <definition_list>
                                <definition_list_item>
                                    <term>$ ls /etc/glance/glance-api.d</term>
                                    <definition>
                                        <paragraph>00-core.conf
                                            01-swift.conf
                                            02-ssl.conf
                                            … etc.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </block_quote>
                        <paragraph>The numeric prefixes in the example above are only necessary if a specific
                            parse ordering is required (i.e. if an individual config option set in an
                            earlier fragment is overridden in a later fragment).</paragraph>
                        <paragraph>Note that <literal>glance-manage</literal> currently loads configuration from three files:</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>glance-registry.conf</literal></paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>glance-api.conf</literal></paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>glance-manage.conf</literal></paragraph>
                            </list_item>
                        </bullet_list>
                        <paragraph>By default <literal>glance-manage.conf</literal> only specifies a custom logging file but
                            other configuration options for <literal>glance-manage</literal> should be migrated in there.
                            <strong>Warning</strong>: Options set in <literal>glance-manage.conf</literal> will override options of
                            the same section and name set in the other two. Similarly, options in
                            <literal>glance-api.conf</literal> will override options set in <literal>glance-registry.conf</literal>.
                            This tool is planning to stop loading <literal>glance-registry.conf</literal> and
                            <literal>glance-api.conf</literal> in a future cycle.</paragraph>
                    </definition>
                </definition_list_item>
            </definition_list>
        </section>
        <section ids="configuring-server-startup-options" names="configuring\ server\ startup\ options">
            <title>Configuring Server Startup Options</title>
            <paragraph>You can put the following options in the <literal>glance-api.conf</literal> and
                <literal>glance-registry.conf</literal> files, under the <literal>[DEFAULT]</literal> section. They enable
                startup and binding behaviour for the API and registry servers, respectively.</paragraph>
            <definition_list>
                <definition_list_item>
                    <term><literal>bind_host=ADDRESS</literal></term>
                    <definition>
                        <paragraph>The address of the host to bind to.</paragraph>
                        <paragraph>Optional. Default: <literal>0.0.0.0</literal></paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>bind_port=PORT</literal></term>
                    <definition>
                        <paragraph>The port the server should bind to.</paragraph>
                        <paragraph>Optional. Default: <literal>9191</literal> for the registry server, <literal>9292</literal> for the API server</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>backlog=REQUESTS</literal></term>
                    <definition>
                        <paragraph>Number of backlog requests to configure the socket with.</paragraph>
                        <paragraph>Optional. Default: <literal>4096</literal></paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>tcp_keepidle=SECONDS</literal></term>
                    <definition>
                        <paragraph>Sets the value of TCP_KEEPIDLE in seconds for each server socket.
                            Not supported on OS X.</paragraph>
                        <paragraph>Optional. Default: <literal>600</literal></paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>client_socket_timeout=SECONDS</literal></term>
                    <definition>
                        <paragraph>Timeout for client connections’ socket operations.  If an incoming
                            connection is idle for this period it will be closed.  A value of <title_reference>0</title_reference>
                            means wait forever.</paragraph>
                        <paragraph>Optional. Default: <literal>900</literal></paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>workers=PROCESSES</literal></term>
                    <definition>
                        <paragraph>Number of Glance API or Registry worker processes to start. Each worker
                            process will listen on the same port. Increasing this value may increase
                            performance (especially if using SSL with compression enabled). Typically
                            it is recommended to have one worker process per CPU. The value <title_reference>0</title_reference>
                            will prevent any new worker processes from being created. When <literal>data_api</literal>
                            is set to <literal>glance.db.simple.api</literal>, <literal>workers</literal> MUST be set to either <literal>0</literal> or
                            <literal>1</literal>.</paragraph>
                        <paragraph>Optional. Default: The number of CPUs available will be used by default.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>max_request_id_length=LENGTH</literal></term>
                    <definition>
                        <paragraph>Limits the maximum size of the x-openstack-request-id header which is
                            logged. Affects only if context middleware is configured in pipeline.</paragraph>
                        <paragraph>Optional. Default: <literal>64</literal> (Limited by max_header_line default: 16384)</paragraph>
                    </definition>
                </definition_list_item>
            </definition_list>
            <section ids="configuring-ssl-support" names="configuring\ ssl\ support">
                <title>Configuring SSL Support</title>
                <definition_list>
                    <definition_list_item>
                        <term><literal>cert_file=PATH</literal></term>
                        <definition>
                            <paragraph>Path to the certificate file the server should use when binding to an
                                SSL-wrapped socket.</paragraph>
                            <paragraph>Optional. Default: not enabled.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>key_file=PATH</literal></term>
                        <definition>
                            <paragraph>Path to the private key file the server should use when binding to an
                                SSL-wrapped socket.</paragraph>
                            <paragraph>Optional. Default: not enabled.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>ca_file=PATH</literal></term>
                        <definition>
                            <paragraph>Path to the CA certificate file the server should use to validate client
                                certificates provided during an SSL handshake. This is ignored if
                                <literal>cert_file</literal> and ‘’key_file`` are not set.</paragraph>
                            <paragraph>Optional. Default: not enabled.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </section>
            <section ids="configuring-registry-access" names="configuring\ registry\ access">
                <title>Configuring Registry Access</title>
                <paragraph>There are a number of configuration options in Glance that control how
                    the API server accesses the registry server.</paragraph>
                <definition_list>
                    <definition_list_item>
                        <term><literal>registry_client_protocol=PROTOCOL</literal></term>
                        <definition>
                            <paragraph>If you run a secure Registry server, you need to set this value to <literal>https</literal>
                                and also set <literal>registry_client_key_file</literal> and optionally
                                <literal>registry_client_cert_file</literal>.</paragraph>
                            <paragraph>Optional. Default: http</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>registry_client_key_file=PATH</literal></term>
                        <definition>
                            <paragraph>The path to the key file to use in SSL connections to the
                                registry server, if any. Alternately, you may set the
                                <literal>GLANCE_CLIENT_KEY_FILE</literal> environ variable to a filepath of the key file</paragraph>
                            <paragraph>Optional. Default: Not set.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>registry_client_cert_file=PATH</literal></term>
                        <definition>
                            <paragraph>Optional. Default: Not set.</paragraph>
                            <paragraph>The path to the cert file to use in SSL connections to the
                                registry server, if any. Alternately, you may set the
                                <literal>GLANCE_CLIENT_CERT_FILE</literal> environ variable to a filepath of the cert file</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>registry_client_ca_file=PATH</literal></term>
                        <definition>
                            <paragraph>Optional. Default: Not set.</paragraph>
                            <paragraph>The path to a Certifying Authority’s cert file to use in SSL connections to the
                                registry server, if any. Alternately, you may set the
                                <literal>GLANCE_CLIENT_CA_FILE</literal> environ variable to a filepath of the CA cert file</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>registry_client_insecure=False</literal></term>
                        <definition>
                            <paragraph>Optional. Default: False.</paragraph>
                            <paragraph>When using SSL in connections to the registry server, do not require
                                validation via a certifying authority. This is the registry’s equivalent of
                                specifying –insecure on the command line using glanceclient for the API</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>registry_client_timeout=SECONDS</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>600</literal>.</paragraph>
                            <paragraph>The period of time, in seconds, that the API server will wait for a registry
                                request to complete. A value of ‘0’ implies no timeout.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
                <note>
                    <paragraph><literal>use_user_token</literal>, <literal>admin_user</literal>, <literal>admin_password</literal>,
                        <literal>admin_tenant_name</literal>, <literal>auth_url</literal>, <literal>auth_strategy</literal> and <literal>auth_region</literal>
                        options were considered harmful and have been deprecated in M release.
                        They will be removed in O release. For more information read
                        <reference name="OSSN-0060" refuri="https://wiki.openstack.org/wiki/OSSN/OSSN-0060">OSSN-0060</reference><target ids="ossn-0060" names="ossn-0060" refuri="https://wiki.openstack.org/wiki/OSSN/OSSN-0060"></target>.
                        Related functionality with uploading big images has been implemented with
                        Keystone trusts support.</paragraph>
                </note>
                <definition_list>
                    <definition_list_item>
                        <term><literal>use_user_token=True</literal></term>
                        <definition>
                            <paragraph>Optional. Default: True</paragraph>
                            <paragraph>DEPRECATED. This option will be removed in O release.</paragraph>
                            <paragraph>Pass the user token through for API requests to the registry.</paragraph>
                            <paragraph>If ‘use_user_token’ is not in effect then admin credentials can be
                                specified (see below). If admin credentials are specified then they are
                                used to generate a token; this token rather than the original user’s
                                token is used for requests to the registry.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>admin_user=USER</literal></term>
                        <definition>
                            <paragraph>DEPRECATED. This option will be removed in O release.</paragraph>
                            <paragraph>If ‘use_user_token’ is not in effect then admin credentials can be
                                specified. Use this parameter to specify the username.</paragraph>
                            <paragraph>Optional. Default: None</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>admin_password=PASSWORD</literal></term>
                        <definition>
                            <paragraph>DEPRECATED. This option will be removed in O release.</paragraph>
                            <paragraph>If ‘use_user_token’ is not in effect then admin credentials can be
                                specified. Use this parameter to specify the password.</paragraph>
                            <paragraph>Optional. Default: None</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>admin_tenant_name=TENANTNAME</literal></term>
                        <definition>
                            <paragraph>DEPRECATED. This option will be removed in O release.</paragraph>
                            <paragraph>If ‘use_user_token’ is not in effect then admin credentials can be
                                specified. Use this parameter to specify the tenant name.</paragraph>
                            <paragraph>Optional. Default: None</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>auth_url=URL</literal></term>
                        <definition>
                            <paragraph>DEPRECATED. This option will be removed in O release.</paragraph>
                            <paragraph>If ‘use_user_token’ is not in effect then admin credentials can be
                                specified. Use this parameter to specify the Keystone endpoint.</paragraph>
                            <paragraph>Optional. Default: None</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>auth_strategy=STRATEGY</literal></term>
                        <definition>
                            <paragraph>DEPRECATED. This option will be removed in O release.</paragraph>
                            <paragraph>If ‘use_user_token’ is not in effect then admin credentials can be
                                specified. Use this parameter to specify the auth strategy.</paragraph>
                            <paragraph>Optional. Default: noauth</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>auth_region=REGION</literal></term>
                        <definition>
                            <paragraph>DEPRECATED. This option will be removed in O release.</paragraph>
                            <paragraph>If ‘use_user_token’ is not in effect then admin credentials can be
                                specified. Use this parameter to specify the region.</paragraph>
                            <paragraph>Optional. Default: None</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </section>
        </section>
        <section ids="configuring-logging-in-glance" names="configuring\ logging\ in\ glance">
            <title>Configuring Logging in Glance</title>
            <paragraph>There are a number of configuration options in Glance that control how Glance
                servers log messages.</paragraph>
            <definition_list>
                <definition_list_item>
                    <term><literal>--log-config=PATH</literal></term>
                    <definition>
                        <paragraph>Optional. Default: <literal>None</literal></paragraph>
                        <paragraph>Specified on the command line only.</paragraph>
                        <paragraph>Takes a path to a configuration file to use for configuring logging.</paragraph>
                    </definition>
                </definition_list_item>
            </definition_list>
            <section ids="logging-options-available-only-in-configuration-files" names="logging\ options\ available\ only\ in\ configuration\ files">
                <title>Logging Options Available Only in Configuration Files</title>
                <paragraph>You will want to place the different logging options in the <strong>[DEFAULT]</strong> section
                    in your application configuration file. As an example, you might do the following
                    for the API server, in a configuration file called <literal>etc/glance-api.conf</literal>:</paragraph>
                <literal_block xml:space="preserve">[DEFAULT]
log_file = /var/log/glance/api.log</literal_block>
                <definition_list>
                    <definition_list_item>
                        <term><literal>log_file</literal></term>
                        <definition>
                            <paragraph>The filepath of the file to use for logging messages from Glance’s servers. If
                                missing, the default is to output messages to <literal>stdout</literal>, so if you are running
                                Glance servers in a daemon mode (using <literal>glance-control</literal>) you should make
                                sure that the <literal>log_file</literal> option is set appropriately.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>log_dir</literal></term>
                        <definition>
                            <paragraph>The filepath of the directory to use for log files. If not specified (the default)
                                the <literal>log_file</literal> is used as an absolute filepath.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>log_date_format</literal></term>
                        <definition>
                            <paragraph>The format string for timestamps in the log output.</paragraph>
                            <paragraph>Defaults to <literal>%Y-%m-%d %H:%M:%S</literal>. See the
                                <reference name="logging module" refuri="http://docs.python.org/library/logging.html">logging module</reference><target ids="logging-module" names="logging\ module" refuri="http://docs.python.org/library/logging.html"></target> documentation for
                                more information on setting this format string.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>log_use_syslog</literal></term>
                        <definition>
                            <paragraph>Use syslog logging functionality.</paragraph>
                            <paragraph>Defaults to False.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </section>
        </section>
        <section ids="configuring-glance-storage-backends" names="configuring\ glance\ storage\ backends">
            <title>Configuring Glance Storage Backends</title>
            <paragraph>There are a number of configuration options in Glance that control how Glance
                stores disk images. These configuration options are specified in the
                <literal>glance-api.conf</literal> configuration file in the section <literal>[glance_store]</literal>.</paragraph>
            <definition_list>
                <definition_list_item>
                    <term><literal>default_store=STORE</literal></term>
                    <definition>
                        <paragraph>Optional. Default: <literal>file</literal></paragraph>
                        <paragraph>Can only be specified in configuration files.</paragraph>
                        <paragraph>Sets the storage backend to use by default when storing images in Glance.
                            Available options for this option are (<literal>file</literal>, <literal>swift</literal>, <literal>rbd</literal>,
                            <literal>sheepdog</literal>, <literal>cinder</literal> or <literal>vsphere</literal>). In order to select a default store
                            it must also be listed in the <literal>stores</literal> list described below.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>stores=STORES</literal></term>
                    <definition>
                        <paragraph>Optional. Default: <literal>file, http</literal></paragraph>
                        <paragraph>A comma separated list of enabled glance stores. Some available options for
                            this option are (<literal>filesystem</literal>, <literal>http</literal>, <literal>rbd</literal>, <literal>swift</literal>,
                            <literal>sheepdog</literal>, <literal>cinder</literal>, <literal>vmware</literal>)</paragraph>
                    </definition>
                </definition_list_item>
            </definition_list>
            <section ids="configuring-the-filesystem-storage-backend" names="configuring\ the\ filesystem\ storage\ backend">
                <title>Configuring the Filesystem Storage Backend</title>
                <definition_list>
                    <definition_list_item>
                        <term><literal>filesystem_store_datadir=PATH</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>/var/lib/glance/images/</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the filesystem storage backend.</title_reference></paragraph>
                            <paragraph>Sets the path where the filesystem storage backend write disk images. Note that
                                the filesystem storage backend will attempt to create this directory if it does
                                not exist. Ensure that the user that <literal>glance-api</literal> runs under has write
                                permissions to this directory.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>filesystem_store_file_perm=PERM_MODE</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>0</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the filesystem storage backend.</title_reference></paragraph>
                            <paragraph>The required permission value, in octal representation, for the created image file.
                                You can use this value to specify the user of the consuming service (such as Nova) as
                                the only member of the group that owns the created files. To keep the default value,
                                assign a permission value that is less than or equal to 0.  Note that the file owner
                                must maintain read permission; if this value removes that permission an error message
                                will be logged and the BadStoreConfiguration exception will be raised.  If the Glance
                                service has insufficient privileges to change file access permissions, a file will still
                                be saved, but a warning message will appear in the Glance log.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </section>
            <section ids="configuring-the-filesystem-storage-backend-with-multiple-stores" names="configuring\ the\ filesystem\ storage\ backend\ with\ multiple\ stores">
                <title>Configuring the Filesystem Storage Backend with multiple stores</title>
                <definition_list>
                    <definition_list_item>
                        <term><literal>filesystem_store_datadirs=PATH:PRIORITY</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>/var/lib/glance/images/:1</literal></paragraph>
                            <paragraph>Example:</paragraph>
                            <literal_block xml:space="preserve">filesystem_store_datadirs = /var/glance/store
filesystem_store_datadirs = /var/glance/store1:100
filesystem_store_datadirs = /var/glance/store2:200</literal_block>
                            <paragraph>This option can only be specified in configuration file and is specific
                                to the filesystem storage backend only.</paragraph>
                            <paragraph>filesystem_store_datadirs option allows administrators to configure
                                multiple store directories to save glance image in filesystem storage backend.
                                Each directory can be coupled with its priority.</paragraph>
                            <paragraph><strong>NOTE</strong>:</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph>This option can be specified multiple times to specify multiple stores.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>Either filesystem_store_datadir or filesystem_store_datadirs option must be
                                        specified in glance-api.conf</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>Store with priority 200 has precedence over store with priority 100.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>If no priority is specified, default priority ‘0’ is associated with it.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>If two filesystem stores have same priority store with maximum free space
                                        will be chosen to store the image.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>If same store is specified multiple times then BadStoreConfiguration
                                        exception will be raised.</paragraph>
                                </list_item>
                            </bullet_list>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </section>
            <section ids="configuring-the-swift-storage-backend" names="configuring\ the\ swift\ storage\ backend">
                <title>Configuring the Swift Storage Backend</title>
                <definition_list>
                    <definition_list_item>
                        <term><literal>swift_store_auth_address=URL</literal></term>
                        <definition>
                            <paragraph>Required when using the Swift storage backend.</paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>Deprecated. Use <literal>auth_address</literal> in the Swift back-end configuration file instead.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>Sets the authentication URL supplied to Swift when making calls to its storage
                                system. For more information about the Swift authentication system, please
                                see the <reference name="Swift auth" refuri="https://docs.openstack.org/swift/latest/overview_auth.html">Swift auth</reference><target ids="swift-auth" names="swift\ auth" refuri="https://docs.openstack.org/swift/latest/overview_auth.html"></target>
                                documentation.</paragraph>
                            <paragraph><strong>IMPORTANT NOTE</strong>: Swift authentication addresses use HTTPS by default. This
                                means that if you are running Swift with authentication over HTTP, you need
                                to set your <literal>swift_store_auth_address</literal> to the full URL, including the <literal>http://</literal>.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_user=USER</literal></term>
                        <definition>
                            <paragraph>Required when using the Swift storage backend.</paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>Deprecated. Use <literal>user</literal> in the Swift back-end configuration file instead.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>Sets the user to authenticate against the <literal>swift_store_auth_address</literal> with.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_key=KEY</literal></term>
                        <definition>
                            <paragraph>Required when using the Swift storage backend.</paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>Deprecated. Use <literal>key</literal> in the Swift back-end configuration file instead.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>Sets the authentication key to authenticate against the
                                <literal>swift_store_auth_address</literal> with for the user <literal>swift_store_user</literal>.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_container=CONTAINER</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>glance</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>Sets the name of the container to use for Glance images in Swift.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_create_container_on_put</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>False</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>If true, Glance will attempt to create the container <literal>swift_store_container</literal>
                                if it does not exist.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_large_object_size=SIZE_IN_MB</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>5120</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>What size, in MB, should Glance start chunking image files
                                and do a large object manifest in Swift? By default, this is
                                the maximum object size in Swift, which is 5GB</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_large_object_chunk_size=SIZE_IN_MB</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>200</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>When doing a large object manifest, what size, in MB, should
                                Glance write chunks to Swift?  The default is 200MB.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_multi_tenant=False</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>False</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>If set to True enables multi-tenant storage mode which causes Glance images
                                to be stored in tenant specific Swift accounts. When set to False Glance
                                stores all images in a single Swift account.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_multiple_containers_seed</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>0</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>When set to 0, a single-tenant store will only use one container to store all
                                images. When set to an integer value between 1 and 32, a single-tenant store
                                will use multiple containers to store images, and this value will determine
                                how many characters from an image UUID are checked when determining what
                                container to place the image in. The maximum number of containers that will be
                                created is approximately equal to 16^N. This setting is used only when
                                swift_store_multi_tenant is disabled.</paragraph>
                            <paragraph>Example: if this config option is set to 3 and
                                swift_store_container = ‘glance’, then an image with UUID
                                ‘fdae39a1-bac5-4238-aba4-69bcc726e848’ would be placed in the container
                                ‘glance_fda’. All dashes in the UUID are included when creating the container
                                name but do not count toward the character limit, so in this example with N=10
                                the container name would be ‘glance_fdae39a1-ba’.</paragraph>
                            <paragraph>When choosing the value for swift_store_multiple_containers_seed, deployers
                                should discuss a suitable value with their swift operations team. The authors
                                of this option recommend that large scale deployments use a value of ‘2’,
                                which will create a maximum of ~256 containers. Choosing a higher number than
                                this, even in extremely large scale deployments, may not have any positive
                                impact on performance and could lead to a large number of empty, unused
                                containers. The largest of deployments could notice an increase in performance
                                if swift rate limits are throttling on single container. Note: If dynamic
                                container creation is turned off, any value for this configuration option
                                higher than ‘1’ may be unreasonable as the deployer would have to manually
                                create each container.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_admin_tenants</literal></term>
                        <definition>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>Optional. Default: Not set.</paragraph>
                            <paragraph>A list of swift ACL strings that will be applied as both read and
                                write ACLs to the containers created by Glance in multi-tenant
                                mode. This grants the specified tenants/users read and write access
                                to all newly created image objects. The standard swift ACL string
                                formats are allowed, including:</paragraph>
                            <paragraph>&lt;tenant_id&gt;:&lt;username&gt;
                                &lt;tenant_name&gt;:&lt;username&gt;
                                *:&lt;username&gt;</paragraph>
                            <paragraph>Multiple ACLs can be combined using a comma separated list, for
                                example: swift_store_admin_tenants = <reference refuri="service:glance,*:admin">service:glance,*:admin</reference></paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_auth_version</literal></term>
                        <definition>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>Deprecated. Use <literal>auth_version</literal> in the Swift back-end configuration
                                file instead.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>Optional. Default: <literal>2</literal></paragraph>
                            <paragraph>A string indicating which version of Swift OpenStack authentication
                                to use. See the project
                                <reference name="python-swiftclient" refuri="https://docs.openstack.org/python-swiftclient/latest/">python-swiftclient</reference><target ids="python-swiftclient" names="python-swiftclient" refuri="https://docs.openstack.org/python-swiftclient/latest/"></target>
                                for more details.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_service_type</literal></term>
                        <definition>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>Optional. Default: <literal>object-store</literal></paragraph>
                            <paragraph>A string giving the service type of the swift service to use. This
                                setting is only used if swift_store_auth_version is <literal>2</literal>.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_region</literal></term>
                        <definition>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>Optional. Default: Not set.</paragraph>
                            <paragraph>A string giving the region of the swift service endpoint to use. This
                                setting is only used if swift_store_auth_version is <literal>2</literal>. This
                                setting is especially useful for disambiguation if multiple swift
                                services might appear in a service catalog during authentication.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_endpoint_type</literal></term>
                        <definition>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>Optional. Default: <literal>publicURL</literal></paragraph>
                            <paragraph>A string giving the endpoint type of the swift service endpoint to
                                use. This setting is only used if swift_store_auth_version is <literal>2</literal>.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_ssl_compression</literal></term>
                        <definition>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            <paragraph>Optional. Default: True.</paragraph>
                            <paragraph>If set to False, disables SSL layer compression of https swift
                                requests. Setting to ‘False’ may improve performance for images which
                                are already in a compressed format, e.g. qcow2. If set to True then
                                compression will be enabled (provided it is supported by the swift
                                proxy).</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_cacert</literal></term>
                        <definition>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>Optional. Default: <literal>None</literal></paragraph>
                            <paragraph>A string giving the path to a CA certificate bundle that will allow Glance’s
                                services to perform SSL verification when communicating with Swift.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>swift_store_retry_get_count</literal></term>
                        <definition>
                            <paragraph>The number of times a Swift download will be retried before the request
                                fails.
                                Optional. Default: <literal>0</literal></paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
                <section ids="configuring-multiple-swift-accounts-stores" names="configuring\ multiple\ swift\ accounts/stores">
                    <title>Configuring Multiple Swift Accounts/Stores</title>
                    <paragraph>In order to not store Swift account credentials in the database, and to
                        have support for multiple accounts (or multiple Swift backing stores), a
                        reference is stored in the database and the corresponding configuration
                        (credentials/ parameters) details are stored in the configuration file.
                        Optional.  Default: not enabled.</paragraph>
                    <paragraph>The location for this file is specified using the <literal>swift_store_config_file</literal>
                        configuration file in the section <literal>[DEFAULT]</literal>. <strong>If an incorrect value is
                            specified, Glance API Swift store service will not be configured.</strong></paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term><literal>swift_store_config_file=PATH</literal></term>
                            <definition>
                                <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                            </definition>
                        </definition_list_item>
                        <definition_list_item>
                            <term><literal>default_swift_reference=DEFAULT_REFERENCE</literal></term>
                            <definition>
                                <paragraph>Required when multiple Swift accounts/backing stores are configured.</paragraph>
                                <paragraph>Can only be specified in configuration files.</paragraph>
                                <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                                <paragraph>It is the default swift reference that is used to add any new images.</paragraph>
                            </definition>
                        </definition_list_item>
                        <definition_list_item>
                            <term><literal>swift_store_auth_insecure</literal></term>
                            <definition>
                                <paragraph>If True, bypass SSL certificate verification for Swift.</paragraph>
                                <paragraph>Can only be specified in configuration files.</paragraph>
                                <paragraph><title_reference>This option is specific to the Swift storage backend.</title_reference></paragraph>
                                <paragraph>Optional. Default: <literal>False</literal></paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </section>
                <section ids="configuring-swift-configuration-file" names="configuring\ swift\ configuration\ file">
                    <title>Configuring Swift configuration file</title>
                    <paragraph>If <literal>swift_store_config_file</literal> is set, Glance will use information
                        from the file specified under this parameter.</paragraph>
                    <note>
                        <paragraph>The <literal>swift_store_config_file</literal> is currently used only for single-tenant
                            Swift store configurations. If you configure a multi-tenant Swift store
                            back end (<literal>swift_store_multi_tenant=True</literal>), ensure that both
                            <literal>swift_store_config_file</literal> and <literal>default_swift_reference</literal> are <emphasis>not</emphasis> set.</paragraph>
                    </note>
                    <paragraph>The file contains a set of references like:</paragraph>
                    <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[ref1]
user = tenant:user1
key = key1
auth_version = 2
auth_address = http://localhost:5000/v2.0

[ref2]
user = project_name:user_name2
key = key2
user_domain_id = default
project_domain_id = default
auth_version = 3
auth_address = http://localhost:5000/v3</literal_block>
                    <paragraph>A default reference must be configured. Its parameters will be used when
                        creating new images. For example, to specify <literal>ref2</literal> as the default
                        reference, add the following value to the [glance_store] section of
                        <literal classes="file" role="file">glance-api.conf</literal> file:</paragraph>
                    <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">default_swift_reference = ref2</literal_block>
                    <paragraph>In the reference, a user can specify the following parameters:</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term><literal>user</literal></term>
                            <definition>
                                <paragraph>A <emphasis>project_name user_name</emphasis> pair in the <literal>project_name:user_name</literal> format
                                    to authenticate against the Swift authentication service.</paragraph>
                            </definition>
                        </definition_list_item>
                        <definition_list_item>
                            <term><literal>key</literal></term>
                            <definition>
                                <paragraph>An authentication key for a user authenticating against the Swift
                                    authentication service.</paragraph>
                            </definition>
                        </definition_list_item>
                        <definition_list_item>
                            <term><literal>auth_address</literal></term>
                            <definition>
                                <paragraph>An address where the Swift authentication service is located.</paragraph>
                            </definition>
                        </definition_list_item>
                        <definition_list_item>
                            <term><literal>auth_version</literal></term>
                            <definition>
                                <paragraph>A version of the authentication service to use.
                                    Valid versions are <literal>2</literal> and <literal>3</literal> for Keystone and <literal>1</literal>
                                    (deprecated) for Swauth and Rackspace.</paragraph>
                                <paragraph>Optional. Default: <literal>2</literal></paragraph>
                            </definition>
                        </definition_list_item>
                        <definition_list_item>
                            <term><literal>project_domain_id</literal></term>
                            <definition>
                                <paragraph>A domain ID of the project which is the requested project-level
                                    authorization scope.</paragraph>
                                <paragraph>Optional. Default: <literal>None</literal></paragraph>
                                <paragraph><title_reference>This option can be specified if ``auth_version`</title_reference> is <literal>3</literal> .`</paragraph>
                            </definition>
                        </definition_list_item>
                        <definition_list_item>
                            <term><literal>project_domain_name</literal></term>
                            <definition>
                                <paragraph>A domain name of the project which is the requested project-level
                                    authorization scope.</paragraph>
                                <paragraph>Optional. Default: <literal>None</literal></paragraph>
                                <paragraph><title_reference>This option can be specified if ``auth_version`</title_reference> is <literal>3</literal> .`</paragraph>
                            </definition>
                        </definition_list_item>
                        <definition_list_item>
                            <term><literal>user_domain_id</literal></term>
                            <definition>
                                <paragraph>A domain ID of the user which is the requested domain-level
                                    authorization scope.</paragraph>
                                <paragraph>Optional. Default: <literal>None</literal></paragraph>
                                <paragraph><title_reference>This option can be specified if ``auth_version`</title_reference> is <literal>3</literal> .`</paragraph>
                            </definition>
                        </definition_list_item>
                        <definition_list_item>
                            <term><literal>user_domain_name</literal></term>
                            <definition>
                                <paragraph>A domain name of the user which is the requested domain-level
                                    authorization scope.</paragraph>
                                <paragraph>Optional. Default: <literal>None</literal></paragraph>
                                <paragraph><title_reference>This option can be specified if ``auth_version`</title_reference> is <literal>3</literal>. `</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </section>
            </section>
            <section ids="configuring-the-rbd-storage-backend" names="configuring\ the\ rbd\ storage\ backend">
                <title>Configuring the RBD Storage Backend</title>
                <paragraph><strong>Note</strong>: the RBD storage backend requires the python bindings for
                    librados and librbd. These are in the python-ceph package on
                    Debian-based distributions.</paragraph>
                <definition_list>
                    <definition_list_item>
                        <term><literal>rbd_store_pool=POOL</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>rbd</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the RBD storage backend.</title_reference></paragraph>
                            <paragraph>Sets the RADOS pool in which images are stored.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>rbd_store_chunk_size=CHUNK_SIZE_MB</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>4</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the RBD storage backend.</title_reference></paragraph>
                            <paragraph>Images will be chunked into objects of this size (in megabytes).
                                For best performance, this should be a power of two.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>rados_connect_timeout</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>0</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the RBD storage backend.</title_reference></paragraph>
                            <paragraph>Prevents glance-api hangups during the connection to RBD. Sets the time
                                to wait (in seconds) for glance-api before closing the connection.
                                Setting <literal>rados_connect_timeout&lt;=0</literal> means no timeout.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>rbd_store_ceph_conf=PATH</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>/etc/ceph/ceph.conf</literal>, <literal>~/.ceph/config</literal>, and
                                <literal>./ceph.conf</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the RBD storage backend.</title_reference></paragraph>
                            <paragraph>Sets the Ceph configuration file to use.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>rbd_store_user=NAME</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>admin</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the RBD storage backend.</title_reference></paragraph>
                            <paragraph>Sets the RADOS user to authenticate as. This is only needed
                                when <reference name="RADOS authentication" refuri="http://ceph.newdream.net/wiki/Cephx">RADOS authentication</reference><target ids="rados-authentication" names="rados\ authentication" refuri="http://ceph.newdream.net/wiki/Cephx"></target>
                                is <reference name="enabled." refuri="http://ceph.newdream.net/wiki/Cluster_configuration#Cephx_auth">enabled.</reference><target ids="enabled" names="enabled." refuri="http://ceph.newdream.net/wiki/Cluster_configuration#Cephx_auth"></target></paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
                <paragraph>A keyring must be set for this user in the Ceph
                    configuration file, e.g. with a user <literal>glance</literal>:</paragraph>
                <literal_block xml:space="preserve">[client.glance]
keyring=/etc/glance/rbd.keyring</literal_block>
                <paragraph>To set up a user named <literal>glance</literal> with minimal permissions, using a pool called
                    <literal>images</literal>, run:</paragraph>
                <literal_block xml:space="preserve">rados mkpool images
ceph-authtool --create-keyring /etc/glance/rbd.keyring
ceph-authtool --gen-key --name client.glance --cap mon 'allow r' --cap osd 'allow rwx pool=images' /etc/glance/rbd.keyring
ceph auth add client.glance -i /etc/glance/rbd.keyring</literal_block>
            </section>
            <section ids="configuring-the-sheepdog-storage-backend" names="configuring\ the\ sheepdog\ storage\ backend">
                <title>Configuring the Sheepdog Storage Backend</title>
                <definition_list>
                    <definition_list_item>
                        <term><literal>sheepdog_store_address=ADDR</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>localhost</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Sheepdog storage backend.</title_reference></paragraph>
                            <paragraph>Sets the IP address of the sheep daemon</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>sheepdog_store_port=PORT</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>7000</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Sheepdog storage backend.</title_reference></paragraph>
                            <paragraph>Sets the IP port of the sheep daemon</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>sheepdog_store_chunk_size=SIZE_IN_MB</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>64</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Sheepdog storage backend.</title_reference></paragraph>
                            <paragraph>Images will be chunked into objects of this size (in megabytes).
                                For best performance, this should be a power of two.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </section>
            <section ids="configuring-the-cinder-storage-backend" names="configuring\ the\ cinder\ storage\ backend">
                <title>Configuring the Cinder Storage Backend</title>
                <paragraph><strong>Note</strong>: Currently Cinder store is experimental. Current deployers should be
                    aware that the use of it in production right now may be risky. It is expected
                    to work well with most iSCSI Cinder backends such as LVM iSCSI, but will not
                    work with some backends especially if they don’t support host-attach.</paragraph>
                <paragraph><strong>Note</strong>: To create a Cinder volume from an image in this store quickly, additional
                    settings are required. Please see the
                    <reference name="Volume-backed image" refuri="http://docs.openstack.org/admin-guide/blockstorage_volume_backed_image.html">Volume-backed image</reference><target ids="volume-backed-image" names="volume-backed\ image" refuri="http://docs.openstack.org/admin-guide/blockstorage_volume_backed_image.html"></target>
                    documentation for more information.</paragraph>
                <definition_list>
                    <definition_list_item>
                        <term><literal>cinder_catalog_info=&lt;service_type&gt;:&lt;service_name&gt;:&lt;endpoint_type&gt;</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>volumev2::publicURL</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>Sets the info to match when looking for cinder in the service catalog.
                                Format is : separated values of the form: &lt;service_type&gt;:&lt;service_name&gt;:&lt;endpoint_type&gt;</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>cinder_endpoint_template=http://ADDR:PORT/VERSION/%(tenant)s</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>None</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>Override service catalog lookup with template for cinder endpoint.
                                <literal>%(...)s</literal> parts are replaced by the value in the request context.
                                e.g. <reference refuri="http://localhost:8776/v2/%(tenant)s">http://localhost:8776/v2/%(tenant)s</reference></paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>os_region_name=REGION_NAME</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>None</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>Region name of this node.</paragraph>
                            <paragraph>Deprecated. Use <literal>cinder_os_region_name</literal> instead.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>cinder_os_region_name=REGION_NAME</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>None</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>Region name of this node.  If specified, it is used to locate cinder from
                                the service catalog.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>cinder_ca_certificates_file=CA_FILE_PATH</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>None</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>Location of ca certificates file to use for cinder client requests.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>cinder_http_retries=TIMES</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>3</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>Number of cinderclient retries on failed http calls.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>cinder_state_transition_timeout</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>300</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>Time period, in seconds, to wait for a cinder volume transition to complete.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>cinder_api_insecure=ON_OFF</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>False</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>Allow to perform insecure SSL requests to cinder.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>cinder_store_user_name=NAME</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>None</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>User name to authenticate against Cinder. If &lt;None&gt;, the user of current
                                context is used.</paragraph>
                            <paragraph><strong>NOTE</strong>: This option is applied only if all of <literal>cinder_store_user_name</literal>,
                                <literal>cinder_store_password</literal>, <literal>cinder_store_project_name</literal> and
                                <literal>cinder_store_auth_address</literal> are set.
                                These options are useful to put image volumes into the internal service
                                project in order to hide the volume from users, and to make the image
                                sharable among projects.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>cinder_store_password=PASSWORD</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>None</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>Password for the user authenticating against Cinder. If &lt;None&gt;, the current
                                context auth token is used.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>cinder_store_project_name=NAME</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>None</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>Project name where the image is stored in Cinder. If &lt;None&gt;, the project
                                in current context is used.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>cinder_store_auth_address=URL</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>None</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>The address where the Cinder authentication service is listening. If &lt;None&gt;,
                                the cinder endpoint in the service catalog is used.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>rootwrap_config=NAME</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>/etc/glance/rootwrap.conf</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph><title_reference>This option is specific to the Cinder storage backend.</title_reference></paragraph>
                            <paragraph>Path to the rootwrap configuration file to use for running commands as root.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </section>
            <section ids="configuring-the-vmware-storage-backend" names="configuring\ the\ vmware\ storage\ backend">
                <title>Configuring the VMware Storage Backend</title>
                <definition_list>
                    <definition_list_item>
                        <term><literal>vmware_server_host=ADDRESS</literal></term>
                        <definition>
                            <paragraph>Required when using the VMware storage backend.</paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>Sets the address of the ESX/ESXi or vCenter Server target system.
                                The address can contain an IP (<literal>127.0.0.1</literal>), an IP and port
                                (<literal>127.0.0.1:443</literal>), a DNS name (<literal>www.my-domain.com</literal>) or DNS and port.</paragraph>
                            <paragraph><title_reference>This option is specific to the VMware storage backend.</title_reference></paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>vmware_server_username=USERNAME</literal></term>
                        <definition>
                            <paragraph>Required when using the VMware storage backend.</paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>Username for authenticating with VMware ESX/ESXi or vCenter Server.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>vmware_server_password=PASSWORD</literal></term>
                        <definition>
                            <paragraph>Required when using the VMware storage backend.</paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>Password for authenticating with VMware ESX/ESXi or vCenter Server.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>vmware_datastores</literal></term>
                        <definition>
                            <paragraph>Required when using the VMware storage backend.</paragraph>
                            <paragraph>This option can only be specified in configuration file and is specific
                                to the VMware storage backend.</paragraph>
                            <paragraph>vmware_datastores allows administrators to configure multiple datastores to
                                save glance image in the VMware store backend. The required format for the
                                option is: &lt;datacenter_path&gt;:&lt;datastore_name&gt;:&lt;optional_weight&gt;.</paragraph>
                            <paragraph>where datacenter_path is the inventory path to the datacenter where the
                                datastore is located. An optional weight can be given to specify the priority.</paragraph>
                            <paragraph>Example:</paragraph>
                            <literal_block xml:space="preserve">vmware_datastores = datacenter1:datastore1
vmware_datastores = dc_folder/datacenter2:datastore2:100
vmware_datastores = datacenter1:datastore3:200</literal_block>
                            <paragraph><strong>NOTE</strong>:</paragraph>
                            <block_quote>
                                <bullet_list bullet="-">
                                    <list_item>
                                        <paragraph>This option can be specified multiple times to specify multiple datastores.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>Either vmware_datastore_name or vmware_datastores option must be specified
                                            in glance-api.conf</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>Datastore with weight 200 has precedence over datastore with weight 100.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>If no weight is specified, default weight ‘0’ is associated with it.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>If two datastores have same weight, the datastore with maximum free space
                                            will be chosen to store the image.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>If the datacenter path or datastore name contains a colon (:) symbol, it
                                            must be escaped with a backslash.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </block_quote>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>vmware_api_retry_count=TIMES</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>10</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>The number of times VMware ESX/VC server API must be
                                retried upon connection related issues.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>vmware_task_poll_interval=SECONDS</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>5</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>The interval used for polling remote tasks invoked on VMware ESX/VC server.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>vmware_store_image_dir</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>/openstack_glance</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>The path to access the folder where the images will be stored in the datastore.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>vmware_api_insecure=ON_OFF</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>False</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>Allow to perform insecure SSL requests to ESX/VC server.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </section>
            <section ids="configuring-the-storage-endpoint" names="configuring\ the\ storage\ endpoint">
                <title>Configuring the Storage Endpoint</title>
                <definition_list>
                    <definition_list_item>
                        <term><literal>swift_store_endpoint=URL</literal></term>
                        <definition>
                            <paragraph>Optional. Default: <literal>None</literal></paragraph>
                            <paragraph>Can only be specified in configuration files.</paragraph>
                            <paragraph>Overrides the storage URL returned by auth. The URL should include the
                                path up to and excluding the container. The location of an object is
                                obtained by appending the container and object to the configured URL.
                                e.g. <literal>https://www.my-domain.com/v1/path_up_to_container</literal></paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </section>
        </section>
        <section ids="configuring-glance-image-size-limit" names="configuring\ glance\ image\ size\ limit">
            <title>Configuring Glance Image Size Limit</title>
            <paragraph>The following configuration option is specified in the
                <literal>glance-api.conf</literal> configuration file in the section <literal>[DEFAULT]</literal>.</paragraph>
            <definition_list>
                <definition_list_item>
                    <term><literal>image_size_cap=SIZE</literal></term>
                    <definition>
                        <paragraph>Optional. Default: <literal>1099511627776</literal> (1 TB)</paragraph>
                        <paragraph>Maximum image size, in bytes, which can be uploaded through the Glance API server.</paragraph>
                        <paragraph><strong>IMPORTANT NOTE</strong>: this value should only be increased after careful consideration
                            and must be set to a value under 8 EB (9223372036854775808).</paragraph>
                    </definition>
                </definition_list_item>
            </definition_list>
        </section>
        <section ids="configuring-glance-user-storage-quota" names="configuring\ glance\ user\ storage\ quota">
            <title>Configuring Glance User Storage Quota</title>
            <paragraph>The following configuration option is specified in the
                <literal>glance-api.conf</literal> configuration file in the section <literal>[DEFAULT]</literal>.</paragraph>
            <definition_list>
                <definition_list_item>
                    <term><literal>user_storage_quota</literal></term>
                    <definition>
                        <paragraph>Optional. Default: 0 (Unlimited).</paragraph>
                        <paragraph>This value specifies the maximum amount of storage that each user can use
                            across all storage systems. Optionally unit can be specified for the value.
                            Values are accepted in B, KB, MB, GB or TB which are for Bytes, KiloBytes,
                            MegaBytes, GigaBytes and TeraBytes respectively. Default unit is Bytes.</paragraph>
                        <definition_list>
                            <definition_list_item>
                                <term>Example values would be,</term>
                                <definition>
                                    <paragraph>user_storage_quota=20GB</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                    </definition>
                </definition_list_item>
            </definition_list>
        </section>
        <section ids="configuring-the-image-cache" names="configuring\ the\ image\ cache">
            <title>Configuring the Image Cache</title>
            <paragraph>Glance API servers can be configured to have a local image cache. Caching of
                image files is transparent and happens using a piece of middleware that can
                optionally be placed in the server application pipeline.</paragraph>
            <paragraph>This pipeline is configured in the PasteDeploy configuration file,
                &lt;component&gt;-paste.ini. You should not generally have to edit this file
                directly, as it ships with ready-made pipelines for all common deployment
                flavors.</paragraph>
            <section ids="enabling-the-image-cache-middleware" names="enabling\ the\ image\ cache\ middleware">
                <title>Enabling the Image Cache Middleware</title>
                <paragraph>To enable the image cache middleware, the cache middleware must occur in
                    the application pipeline <strong>after</strong> the appropriate context middleware.</paragraph>
                <paragraph>The cache middleware should be in your <literal>glance-api-paste.ini</literal> in a section
                    titled <literal>[filter:cache]</literal>. It should look like this:</paragraph>
                <literal_block xml:space="preserve">[filter:cache]
paste.filter_factory = glance.api.middleware.cache:CacheFilter.factory</literal_block>
                <paragraph>A ready-made application pipeline including this filter is defined in
                    the <literal>glance-api-paste.ini</literal> file, looking like so:</paragraph>
                <literal_block xml:space="preserve">[pipeline:glance-api-caching]
pipeline = versionnegotiation context cache apiv1app</literal_block>
                <paragraph>To enable the above application pipeline, in your main <literal>glance-api.conf</literal>
                    configuration file, select the appropriate deployment flavor like so:</paragraph>
                <literal_block xml:space="preserve">[paste_deploy]
flavor = caching</literal_block>
            </section>
            <section ids="enabling-the-image-cache-management-middleware" names="enabling\ the\ image\ cache\ management\ middleware">
                <title>Enabling the Image Cache Management Middleware</title>
                <paragraph>There is an optional <literal>cachemanage</literal> middleware that allows you to
                    directly interact with cache images. Use this flavor in place of the
                    <literal>cache</literal> flavor in your API configuration file. There are three types you
                    can chose: <literal>cachemanagement</literal>, <literal>keystone+cachemanagement</literal> and
                    <literal>trusted-auth+cachemanagement</literal>.:</paragraph>
                <literal_block xml:space="preserve">[paste_deploy]
flavor = keystone+cachemanagement</literal_block>
            </section>
            <section ids="configuration-options-affecting-the-image-cache" names="configuration\ options\ affecting\ the\ image\ cache">
                <title>Configuration Options Affecting the Image Cache</title>
                <note>
                    <paragraph>These configuration options must be set in both the glance-cache
                        and glance-api configuration files.</paragraph>
                </note>
                <paragraph>One main configuration file option affects the image cache.</paragraph>
                <definition_list>
                    <definition_list_item>
                        <term><literal>image_cache_dir=PATH</literal></term>
                        <definition>
                            <paragraph>Required when image cache middleware is enabled.</paragraph>
                            <paragraph>Default: <literal>/var/lib/glance/image-cache</literal></paragraph>
                            <paragraph>This is the base directory the image cache can write files to.
                                Make sure the directory is writable by the user running the
                                <literal>glance-api</literal> server</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>image_cache_driver=DRIVER</literal></term>
                        <definition>
                            <paragraph>Optional. Choice of <literal>sqlite</literal> or <literal>xattr</literal></paragraph>
                            <paragraph>Default: <literal>sqlite</literal></paragraph>
                            <paragraph>The default <literal>sqlite</literal> cache driver has no special dependencies, other
                                than the <literal>python-sqlite3</literal> library, which is installed on virtually
                                all operating systems with modern versions of Python. It stores
                                information about the cached files in a SQLite database.</paragraph>
                            <paragraph>The <literal>xattr</literal> cache driver required the <literal>python-xattr&gt;=0.6.0</literal> library
                                and requires that the filesystem containing <literal>image_cache_dir</literal> have
                                access times tracked for all files (in other words, the noatime option
                                CANNOT be set for that filesystem). In addition, <literal>user_xattr</literal> must be
                                set on the filesystem’s description line in fstab. Because of these
                                requirements, the <literal>xattr</literal> cache driver is not available on Windows.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>image_cache_sqlite_db=DB_FILE</literal></term>
                        <definition>
                            <paragraph>Optional.</paragraph>
                            <paragraph>Default: <literal>cache.db</literal></paragraph>
                            <paragraph>When using the <literal>sqlite</literal> cache driver, you can set the name of the database
                                that will be used to store the cached images information. The database
                                is always contained in the <literal>image_cache_dir</literal>.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>image_cache_max_size=SIZE</literal></term>
                        <definition>
                            <paragraph>Optional.</paragraph>
                            <paragraph>Default: <literal>10737418240</literal> (10 GB)</paragraph>
                            <paragraph>Size, in bytes, that the image cache should be constrained to. Images files
                                are cached automatically in the local image cache, even if the writing of that
                                image file would put the total cache size over this size. The
                                <literal>glance-cache-pruner</literal> executable is what prunes the image cache to be equal
                                to or less than this value. The <literal>glance-cache-pruner</literal> executable is designed
                                to be run via cron on a regular basis. See more about this executable in
                                <reference internal="True" refuri="../admin/cache#image-cache"><inline classes="std std-ref">Controlling the Growth of the Image Cache</inline></reference></paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
                <target refid="configuring-the-glance-registry"></target>
            </section>
        </section>
        <section ids="configuring-the-glance-registry id2" names="configuring\ the\ glance\ registry configuring-the-glance-registry">
            <title>Configuring the Glance Registry</title>
            <paragraph>There are a number of configuration options in Glance that control how
                this registry server operates. These configuration options are specified in the
                <literal>glance-registry.conf</literal> configuration file in the section <literal>[DEFAULT]</literal>.</paragraph>
            <paragraph><strong>IMPORTANT NOTE</strong>: The glance-registry service is only used in conjunction
                with the glance-api service when clients are using the v1 REST API. See
                <reference name="Configuring Glance APIs" refid="configuring-glance-apis">Configuring Glance APIs</reference> for more info.</paragraph>
            <paragraph><literal>sql_connection=CONNECTION_STRING</literal> (<literal>--sql-connection</literal> when specified
                on command line)</paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>None</literal></paragraph>
                <paragraph>Can be specified in configuration files. Can also be specified on the
                    command-line for the <literal>glance-manage</literal> program.</paragraph>
                <paragraph>Sets the SQLAlchemy connection string to use when connecting to the registry
                    database. Please see the documentation for
                    <reference name="SQLAlchemy connection strings" refuri="http://www.sqlalchemy.org/docs/05/reference/sqlalchemy/connections.html">SQLAlchemy connection strings</reference><target ids="sqlalchemy-connection-strings" names="sqlalchemy\ connection\ strings" refuri="http://www.sqlalchemy.org/docs/05/reference/sqlalchemy/connections.html"></target>
                    online. You must urlencode any special characters in CONNECTION_STRING.</paragraph>
            </block_quote>
            <paragraph><literal>sql_timeout=SECONDS</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>3600</literal></paragraph>
                <paragraph>Can only be specified in configuration files.</paragraph>
                <paragraph>Sets the number of seconds after which SQLAlchemy should reconnect to the
                    datastore if no activity has been made on the connection.</paragraph>
            </block_quote>
            <paragraph><literal>enable_v1_registry=&lt;True|False&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>True</literal></paragraph>
            </block_quote>
            <paragraph><literal>enable_v2_registry=&lt;True|False&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>True</literal></paragraph>
                <paragraph>Defines which version(s) of the Registry API will be enabled.
                    If the Glance API server parameter <literal>enable_v1_api</literal> has been set to <literal>True</literal> the
                    <literal>enable_v1_registry</literal> has to be <literal>True</literal> as well.
                    If the Glance API server parameter <literal>enable_v2_api</literal> has been
                    set to <literal>True</literal> and the parameter <literal>data_api</literal> has been set to
                    <literal>glance.db.registry.api</literal> the <literal>enable_v2_registry</literal> has to be set to <literal>True</literal></paragraph>
            </block_quote>
        </section>
        <section ids="configuring-notifications" names="configuring\ notifications">
            <title>Configuring Notifications</title>
            <paragraph>Glance can optionally generate notifications to be logged or sent to a message
                queue. The configuration options are specified in the <literal>glance-api.conf</literal>
                configuration file.</paragraph>
            <paragraph><literal>[oslo_messaging_notifications]/driver</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>noop</literal></paragraph>
                <paragraph>Sets the notification driver used by oslo.messaging. Options include
                    <literal>messaging</literal>, <literal>messagingv2</literal>, <literal>log</literal> and <literal>routing</literal>.</paragraph>
                <paragraph><strong>NOTE</strong>
                    In M release, the``[DEFAULT]/notification_driver`` option has been deprecated in favor
                    of <literal>[oslo_messaging_notifications]/driver</literal>.</paragraph>
                <paragraph>For more information see <reference internal="True" refuri="../admin/notifications#notifications"><inline classes="std std-ref">Glance notifications</inline></reference> and
                    <reference name="oslo.messaging" refuri="https://docs.openstack.org/oslo.messaging/latest/">oslo.messaging</reference><target ids="oslo-messaging" names="oslo.messaging" refuri="https://docs.openstack.org/oslo.messaging/latest/"></target>.</paragraph>
            </block_quote>
            <paragraph><literal>[DEFAULT]/disabled_notifications</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>[]</literal></paragraph>
                <paragraph>List of disabled notifications. A notification can be given either as a
                    notification type to disable a single event, or as a notification group prefix
                    to disable all events within a group.</paragraph>
                <paragraph>Example: if this config option is set to [“image.create”, “metadef_namespace”],
                    then “image.create” notification will not be sent after image is created and
                    none of the notifications for metadefinition namespaces will be sent.</paragraph>
            </block_quote>
        </section>
        <section ids="configuring-glance-property-protections" names="configuring\ glance\ property\ protections">
            <title>Configuring Glance Property Protections</title>
            <paragraph>Access to image meta properties may be configured using a
                <reference internal="True" refuri="../admin/property-protections#property-protections"><inline classes="std std-ref">Property Protections Configuration file</inline></reference>.  The
                location for this file can be specified in the <literal>glance-api.conf</literal>
                configuration file in the section <literal>[DEFAULT]</literal>. <strong>If an incorrect value is
                    specified, glance API service will not start.</strong></paragraph>
            <paragraph><literal>property_protection_file=PATH</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: not enabled.</paragraph>
                <paragraph>If property_protection_file is set, the file may use either roles or policies
                    to specify property protections.</paragraph>
            </block_quote>
            <paragraph><literal>property_protection_rule_format=&lt;roles|policies&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>roles</literal>.</paragraph>
            </block_quote>
        </section>
        <section ids="configuring-glance-apis" names="configuring\ glance\ apis">
            <title>Configuring Glance APIs</title>
            <paragraph>The glance-api service implements versions 1 and 2 of
                the OpenStack Images API. Disable any version of
                the Images API using the following options:</paragraph>
            <paragraph><literal>enable_v1_api=&lt;True|False&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>True</literal></paragraph>
            </block_quote>
            <paragraph><literal>enable_v2_api=&lt;True|False&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>True</literal></paragraph>
                <paragraph><strong>IMPORTANT NOTE</strong>: To use v2 registry in v2 API, you must set
                    <literal>data_api</literal> to glance.db.registry.api in glance-api.conf.</paragraph>
            </block_quote>
        </section>
        <section ids="configuring-glance-tasks" names="configuring\ glance\ tasks">
            <title>Configuring Glance Tasks</title>
            <paragraph>Glance Tasks are implemented only for version 2 of the OpenStack Images API.</paragraph>
            <paragraph>The config value <literal>task_time_to_live</literal> is used to determine how long a task
                would be visible to the user after transitioning to either the <literal>success</literal> or
                the <literal>failure</literal> state.</paragraph>
            <paragraph><literal>task_time_to_live=&lt;Time_in_hours&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>48</literal></paragraph>
                <paragraph>The config value <literal>task_executor</literal> is used to determine which executor
                    should be used by the Glance service to process the task. The currently
                    available implementation is: <literal>taskflow</literal>.</paragraph>
            </block_quote>
            <paragraph><literal>task_executor=&lt;executor_type&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>taskflow</literal></paragraph>
                <paragraph>The <literal>taskflow</literal> engine has its own set of configuration options,
                    under the <literal>taskflow_executor</literal> section, that can be tuned to improve
                    the task execution process. Among the available options, you may find
                    <literal>engine_mode</literal> and <literal>max_workers</literal>. The former allows for selecting
                    an execution model and the available options are <literal>serial</literal>,
                    <literal>parallel</literal> and <literal>worker-based</literal>. The <literal>max_workers</literal> option,
                    instead, allows for controlling the number of workers that will be
                    instantiated per executor instance.</paragraph>
                <paragraph>The default value for the <literal>engine_mode</literal> is <literal>parallel</literal>, whereas
                    the default number of <literal>max_workers</literal> is <literal>10</literal>.</paragraph>
            </block_quote>
        </section>
        <section ids="configuring-glance-performance-profiling" names="configuring\ glance\ performance\ profiling">
            <title>Configuring Glance performance profiling</title>
            <paragraph>Glance supports using osprofiler to trace the performance of each key internal
                handling, including RESTful API calling, DB operation and etc.</paragraph>
            <paragraph><literal>Please be aware that Glance performance profiling is currently a work in
progress feature.</literal> Although, some trace points is available, e.g. API
                execution profiling at wsgi main entry and SQL execution profiling at DB
                module, the more fine-grained trace point is being worked on.</paragraph>
            <paragraph>The config value <literal>enabled</literal> is used to determine whether fully enable
                profiling feature for glance-api and glance-registry service.</paragraph>
            <paragraph><literal>enabled=&lt;True|False&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>False</literal></paragraph>
                <paragraph>There is one more configuration option that needs to be defined to enable
                    Glance services profiling. The config value <literal>hmac_keys</literal> is used for
                    encrypting context data for performance profiling.</paragraph>
            </block_quote>
            <paragraph><literal>hmac_keys=&lt;secret_key_string&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>SECRET_KEY</literal></paragraph>
                <paragraph><strong>IMPORTANT NOTE</strong>: in order to make profiling work as designed operator needs
                    to make those values of HMAC key be consistent for all services in their
                    deployment. Without HMAC key the profiling will not be triggered even profiling
                    feature is enabled.</paragraph>
                <paragraph><strong>IMPORTANT NOTE</strong>: previously HMAC keys (as well as enabled parameter) were
                    placed at <title_reference>/etc/glance/api-paste.ini</title_reference> and <title_reference>/etc/glance/registry-paste.ini</title_reference> files
                    for Glance API and Glance Registry services respectively. Starting with
                    osprofiler 0.3.1 release there is no need to set these arguments in the
                    <title_reference>*-paste.ini</title_reference> files. This functionality is still supported, although the
                    config values are having larger priority.</paragraph>
                <paragraph>The config value <literal>trace_sqlalchemy</literal> is used to determine whether fully enable
                    sqlalchemy engine based SQL execution profiling feature for glance-api and
                    glance-registry services.</paragraph>
            </block_quote>
            <paragraph><literal>trace_sqlalchemy=&lt;True|False&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>False</literal></paragraph>
            </block_quote>
        </section>
        <section ids="configuring-glance-public-endpoint" names="configuring\ glance\ public\ endpoint">
            <title>Configuring Glance public endpoint</title>
            <paragraph>This setting allows an operator to configure the endpoint URL that will
                appear in the Glance “versions” response (that is, the response to
                <literal>GET /</literal> ).  This can be necessary when the Glance API service is run
                behind a proxy because the default endpoint displayed in the versions
                response is that of the host actually running the API service.  If
                Glance is being run behind a load balancer, for example, direct access
                to individual hosts running the Glance API may not be allowed, hence the
                load balancer URL would be used for this value.</paragraph>
            <paragraph><literal>public_endpoint=&lt;None|URL&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>None</literal></paragraph>
            </block_quote>
        </section>
        <section ids="configuring-glance-digest-algorithm" names="configuring\ glance\ digest\ algorithm">
            <title>Configuring Glance digest algorithm</title>
            <paragraph>Digest algorithm that will be used for digital signature. The default
                is sha256. Use the command:</paragraph>
            <literal_block xml:space="preserve">openssl list-message-digest-algorithms</literal_block>
            <paragraph>to get the available algorithms supported by the version of OpenSSL on the
                platform. Examples are “sha1”, “sha256”, “sha512”, etc. If an invalid
                digest algorithm is configured, all digital signature operations will fail and
                return a ValueError exception with “No such digest method” error.</paragraph>
            <paragraph><literal>digest_algorithm=&lt;algorithm&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>sha256</literal></paragraph>
            </block_quote>
        </section>
        <section ids="configuring-http-keepalive-option" names="configuring\ http_keepalive\ option">
            <title>Configuring http_keepalive option</title>
            <paragraph><literal>http_keepalive=&lt;True|False&gt;</literal></paragraph>
            <block_quote>
                <paragraph>If False, server will return the header “Connection: close”, If True, server
                    will return “Connection: Keep-Alive” in its responses. In order to close the
                    client socket connection explicitly after the response is sent and read
                    successfully by the client, you simply have to set this option to False when
                    you create a wsgi server.</paragraph>
            </block_quote>
        </section>
        <section ids="configuring-the-health-check" names="configuring\ the\ health\ check">
            <title>Configuring the Health Check</title>
            <paragraph>This setting allows an operator to configure the endpoint URL that will
                provide information to load balancer if given API endpoint at the node should
                be available or not. Both Glance API and Glance Registry servers can be
                configured to expose a health check URL.</paragraph>
            <paragraph>To enable the health check middleware, it must occur in the beginning of the
                application pipeline.</paragraph>
            <paragraph>The health check middleware should be placed in your
                <literal>glance-api-paste.ini</literal> / <literal>glance-registry-paste.ini</literal> in a section
                titled <literal>[filter:healthcheck]</literal>. It should look like this:</paragraph>
            <literal_block xml:space="preserve">[filter:healthcheck]
paste.filter_factory = oslo_middleware:Healthcheck.factory
backends = disable_by_file
disable_by_file_path = /etc/glance/healthcheck_disable</literal_block>
            <paragraph>A ready-made application pipeline including this filter is defined e.g. in
                the <literal>glance-api-paste.ini</literal> file, looking like so:</paragraph>
            <literal_block xml:space="preserve">[pipeline:glance-api]
pipeline = healthcheck versionnegotiation osprofiler unauthenticated-context rootapp</literal_block>
            <paragraph>For more information see
                <reference name="oslo.middleware" refuri="https://docs.openstack.org/oslo.middleware/latest/reference/api.html#oslo_middleware.Healthcheck">oslo.middleware</reference><target ids="oslo-middleware" names="oslo.middleware" refuri="https://docs.openstack.org/oslo.middleware/latest/reference/api.html#oslo_middleware.Healthcheck"></target>.</paragraph>
        </section>
        <section ids="configuring-supported-disk-formats" names="configuring\ supported\ disk\ formats">
            <title>Configuring supported disk formats</title>
            <paragraph>Each image in Glance has an associated disk format property.
                When creating an image the user specifies a disk format. They must
                select a format from the set that the Glance service supports. This
                supported set can be seen by querying the <literal>/v2/schemas/images</literal> resource.
                An operator can add or remove disk formats to the supported set.  This is
                done by setting the <literal>disk_formats</literal> parameter which is found in the
                <literal>[image_formats]</literal> section of <literal>glance-api.conf</literal>.</paragraph>
            <paragraph><literal>disk_formats=&lt;Comma separated list of disk formats&gt;</literal></paragraph>
            <block_quote>
                <paragraph>Optional. Default: <literal>ami,ari,aki,vhd,vhdx,vmdk,raw,qcow2,vdi,iso,ploop</literal></paragraph>
            </block_quote>
        </section>
    </section>
</document>
