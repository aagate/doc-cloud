<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/user/glancemetadefcatalogapi.rst">
    <comment xml:space="preserve">Copyright (c) 2014 Hewlett-Packard Development Company, L.P.


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied.
See the License for the specific language governing permissions and
limitations under the License.</comment>
    <section ids="using-glance-s-metadata-definitions-catalog-public-apis" names="using\ glance's\ metadata\ definitions\ catalog\ public\ apis">
        <title>Using Glance’s Metadata Definitions Catalog Public APIs</title>
        <paragraph>A common API hosted by the Glance service for vendors, admins, services, and
            users to meaningfully define available key / value pair and tag metadata.
            The intent is to enable better metadata collaboration across artifacts,
            services, and projects for OpenStack users.</paragraph>
        <paragraph>This is about the definition of the available metadata that can be used on
            different types of resources (images, artifacts, volumes, flavors, aggregates,
            etc). A definition includes the properties type, its key, it’s description,
            and it’s constraints. This catalog will not store the values for specific
            instance properties.</paragraph>
        <paragraph>For example, a definition of a virtual CPU topology property for number of
            cores will include the key to use, a description, and value constraints like
            requiring it to be an integer. So, a user, potentially through Horizon, would
            be able to search this catalog to list the available properties they can add to
            a flavor or image. They will see the virtual CPU topology property in the list
            and know that it must be an integer. In the Horizon example, when the user adds
            the property, its key and value will be stored in the service that owns that
            resource (Nova for flavors and in Glance for images).</paragraph>
        <paragraph>Diagram: <reference refuri="https://wiki.openstack.org/w/images/b/bb/Glance-Metadata-API.png">https://wiki.openstack.org/w/images/b/bb/Glance-Metadata-API.png</reference></paragraph>
        <paragraph>Glance Metadata Definitions Catalog implementation started with API version v2.</paragraph>
        <section ids="authentication" names="authentication">
            <title>Authentication</title>
            <paragraph>Glance depends on Keystone and the OpenStack Identity API to handle
                authentication of clients. You must obtain an authentication token from
                Keystone send it along with all API requests to Glance through the
                <literal>X-Auth-Token</literal> header. Glance will communicate back to Keystone to verify
                the token validity and obtain your identity credentials.</paragraph>
            <paragraph>See <reference internal="True" refuri="../admin/authentication#authentication"><inline classes="std std-ref">Authentication With Keystone</inline></reference> for more information on integrating with Keystone.</paragraph>
        </section>
        <section ids="using-v2-x" names="using\ v2.x">
            <title>Using v2.X</title>
            <paragraph>For the purpose of examples, assume there is a Glance API server running
                at the URL <literal>http://glance.openstack.example.org</literal> on the default port 80.</paragraph>
            <section ids="list-available-namespaces" names="list\ available\ namespaces">
                <title>List Available Namespaces</title>
                <paragraph>We want to see a list of available namespaces that the authenticated user
                    has access to. This includes namespaces owned by the user,
                    namespaces shared with the user and public namespaces.</paragraph>
                <paragraph>We issue a <literal>GET</literal> request to <literal>http://glance.openstack.example.org/v2/metadefs/namespaces</literal>
                    to retrieve this list of available namespaces.
                    The data is returned as a JSON-encoded mapping in the following format:</paragraph>
                <literal_block xml:space="preserve">{
  "namespaces": [
      {
          "namespace": "MyNamespace",
          "display_name": "My User Friendly Namespace",
          "description": "My description",
          "visibility": "public",
          "protected": true,
          "owner": "The Test Owner",
          "self": "/v2/metadefs/namespaces/MyNamespace",
          "schema": "/v2/schemas/metadefs/namespace",
          "created_at": "2014-08-28T17:13:06Z",
          "updated_at": "2014-08-28T17:13:06Z",
          "resource_type_associations": [
              {
                  "name": "OS::Nova::Aggregate",
                  "created_at": "2014-08-28T17:13:06Z",
                  "updated_at": "2014-08-28T17:13:06Z"
              },
              {
                  "name": "OS::Nova::Flavor",
                  "prefix": "aggregate_instance_extra_specs:",
                  "created_at": "2014-08-28T17:13:06Z",
                  "updated_at": "2014-08-28T17:13:06Z"
              }
          ]
      }
  ],
  "first": "/v2/metadefs/namespaces?sort_key=created_at&amp;sort_dir=asc",
  "schema": "/v2/schemas/metadefs/namespaces"
}</literal_block>
                <note>
                    <paragraph>Listing namespaces will only show the summary of each namespace including
                        counts and resource type associations. Detailed response including all its
                        objects definitions, property definitions etc. will only be available on
                        each individual GET namespace request.</paragraph>
                </note>
            </section>
            <section ids="filtering-namespaces-lists" names="filtering\ namespaces\ lists">
                <title>Filtering Namespaces Lists</title>
                <paragraph><literal>GET /v2/metadefs/namespaces</literal> requests take query parameters that serve to
                    filter the returned list of namespaces. The following
                    list details these query parameters.</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><literal>resource_types=RESOURCE_TYPES</literal></paragraph>
                        <paragraph>Filters namespaces having a <literal>resource_types</literal> within the list of
                            comma separated <literal>RESOURCE_TYPES</literal>.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>GET resource also accepts additional query parameters:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><literal>sort_key=KEY</literal></paragraph>
                        <paragraph>Results will be ordered by the specified sort attribute <literal>KEY</literal>. Accepted
                            values include <literal>namespace</literal>, <literal>created_at</literal> (default) and <literal>updated_at</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>sort_dir=DIR</literal></paragraph>
                        <paragraph>Results will be sorted in the direction <literal>DIR</literal>. Accepted values are <literal>asc</literal>
                            for ascending or <literal>desc</literal> (default) for descending.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>marker=NAMESPACE</literal></paragraph>
                        <paragraph>A namespace identifier marker may be specified. When present only
                            namespaces which occur after the identifier <literal>NAMESPACE</literal> will be listed,
                            i.e. the namespaces which have a <title_reference>sort_key</title_reference> later than that of the marker
                            <literal>NAMESPACE</literal> in the <title_reference>sort_dir</title_reference> direction.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>limit=LIMIT</literal></paragraph>
                        <paragraph>When present the maximum number of results returned will not exceed <literal>LIMIT</literal>.</paragraph>
                    </list_item>
                </bullet_list>
                <note>
                    <paragraph>If the specified <literal>LIMIT</literal> exceeds the operator defined limit (api_limit_max)
                        then the number of results returned may be less than <literal>LIMIT</literal>.</paragraph>
                </note>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><literal>visibility=PUBLIC</literal></paragraph>
                        <paragraph>An admin user may use the <title_reference>visibility</title_reference> parameter to control which results are
                            returned (PRIVATE or PUBLIC).</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="retrieve-namespace" names="retrieve\ namespace">
                <title>Retrieve Namespace</title>
                <paragraph>We want to see a more detailed information about a namespace that the
                    authenticated user has access to. The detail includes the properties, objects,
                    and resource type associations.</paragraph>
                <paragraph>We issue a <literal>GET</literal> request to <literal>http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}</literal>
                    to retrieve the namespace details.
                    The data is returned as a JSON-encoded mapping in the following format:</paragraph>
                <literal_block xml:space="preserve">{
  "namespace": "MyNamespace",
  "display_name": "My User Friendly Namespace",
  "description": "My description",
  "visibility": "public",
  "protected": true,
  "owner": "The Test Owner",
  "schema": "/v2/schemas/metadefs/namespace",
  "resource_type_associations": [
      {
          "name": "OS::Glance::Image",
          "prefix": "hw_",
          "created_at": "2014-08-28T17:13:06Z",
          "updated_at": "2014-08-28T17:13:06Z"
      },
      {
          "name": "OS::Cinder::Volume",
          "prefix": "hw_",
          "properties_target": "image",
          "created_at": "2014-08-28T17:13:06Z",
          "updated_at": "2014-08-28T17:13:06Z"
      },
      {
          "name": "OS::Nova::Flavor",
          "prefix": "filter1:",
          "created_at": "2014-08-28T17:13:06Z",
          "updated_at": "2014-08-28T17:13:06Z"
      }
  ],
  "properties": {
      "nsprop1": {
          "title": "My namespace property1",
          "description": "More info here",
          "type": "boolean",
          "default": true
      },
      "nsprop2": {
          "title": "My namespace property2",
          "description": "More info here",
          "type": "string",
          "default": "value1"
      }
  },
  "objects": [
      {
          "name": "object1",
          "description": "my-description",
          "self": "/v2/metadefs/namespaces/MyNamespace/objects/object1",
          "schema": "/v2/schemas/metadefs/object",
          "created_at": "2014-08-28T17:13:06Z",
          "updated_at": "2014-08-28T17:13:06Z",
          "required": [],
          "properties": {
              "prop1": {
                  "title": "My object1 property1",
                  "description": "More info here",
                  "type": "array",
                  "items": {
                      "type": "string"
                  }
              }
          }
      },
      {
          "name": "object2",
          "description": "my-description",
          "self": "/v2/metadefs/namespaces/MyNamespace/objects/object2",
          "schema": "/v2/schemas/metadefs/object",
          "created_at": "2014-08-28T17:13:06Z",
          "updated_at": "2014-08-28T17:13:06Z",
          "properties": {
              "prop1": {
                  "title": "My object2 property1",
                  "description": "More info here",
                  "type": "integer",
                  "default": 20
              }
          }
      }
  ]
}</literal_block>
            </section>
            <section ids="retrieve-available-resource-types" names="retrieve\ available\ resource\ types">
                <title>Retrieve available Resource Types</title>
                <paragraph>We want to see the list of all resource types that are available in Glance</paragraph>
                <paragraph>We issue a <literal>GET</literal> request to <literal>http://glance.openstack.example.org/v2/metadefs/resource_types</literal>
                    to retrieve all resource types.</paragraph>
                <paragraph>The data is returned as a JSON-encoded mapping in the following format:</paragraph>
                <literal_block xml:space="preserve">{
  "resource_types": [
      {
          "created_at": "2014-08-28T17:13:04Z",
          "name": "OS::Glance::Image",
          "updated_at": "2014-08-28T17:13:04Z"
      },
      {
          "created_at": "2014-08-28T17:13:04Z",
          "name": "OS::Cinder::Volume",
          "updated_at": "2014-08-28T17:13:04Z"
      },
      {
          "created_at": "2014-08-28T17:13:04Z",
          "name": "OS::Nova::Flavor",
          "updated_at": "2014-08-28T17:13:04Z"
      },
      {
          "created_at": "2014-08-28T17:13:04Z",
          "name": "OS::Nova::Aggregate",
          "updated_at": "2014-08-28T17:13:04Z"
      },
      {
          "created_at": "2014-08-28T17:13:04Z",
          "name": "OS::Nova::Server",
          "updated_at": "2014-08-28T17:13:04Z"
      }
  ]
}</literal_block>
            </section>
            <section ids="retrieve-resource-types-associated-with-a-namespace" names="retrieve\ resource\ types\ associated\ with\ a\ namespace">
                <title>Retrieve Resource Types associated with a Namespace</title>
                <paragraph>We want to see the list of resource types that are associated for a specific
                    namespace</paragraph>
                <paragraph>We issue a <literal>GET</literal> request to <literal>http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}/resource_types</literal>
                    to retrieve resource types.</paragraph>
                <paragraph>The data is returned as a JSON-encoded mapping in the following format:</paragraph>
                <literal_block xml:space="preserve">{
  "resource_type_associations" : [
      {
         "name" : "OS::Glance::Image",
         "prefix" : "hw_",
         "created_at": "2014-08-28T17:13:04Z",
         "updated_at": "2014-08-28T17:13:04Z"
      },
      {
         "name" :"OS::Cinder::Volume",
         "prefix" : "hw_",
         "properties_target" : "image",
         "created_at": "2014-08-28T17:13:04Z",
         "updated_at": "2014-08-28T17:13:04Z"
      },
      {
         "name" : "OS::Nova::Flavor",
         "prefix" : "hw:",
         "created_at": "2014-08-28T17:13:04Z",
         "updated_at": "2014-08-28T17:13:04Z"
      }
  ]
}</literal_block>
            </section>
            <section ids="add-namespace" names="add\ namespace">
                <title>Add Namespace</title>
                <paragraph>We want to create a new namespace that can contain the properties, objects,
                    etc.</paragraph>
                <paragraph>We issue a <literal>POST</literal> request to add an namespace to Glance:</paragraph>
                <literal_block xml:space="preserve">POST http://glance.openstack.example.org/v2/metadefs/namespaces/</literal_block>
                <paragraph>The input data is an JSON-encoded mapping in the following format:</paragraph>
                <literal_block xml:space="preserve">{
  "namespace": "MyNamespace",
  "display_name": "My User Friendly Namespace",
  "description": "My description",
  "visibility": "public",
  "protected": true
}</literal_block>
                <note>
                    <paragraph>Optionally properties, objects and resource type associations could be
                        added in the same input. See GET Namespace output above(input will be
                        similar).</paragraph>
                </note>
            </section>
            <section ids="update-namespace" names="update\ namespace">
                <title>Update Namespace</title>
                <paragraph>We want to update an existing namespace</paragraph>
                <paragraph>We issue a <literal>PUT</literal> request to update an namespace to Glance:</paragraph>
                <literal_block xml:space="preserve">PUT http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}</literal_block>
                <paragraph>The input data is similar to Add Namespace</paragraph>
            </section>
            <section ids="delete-namespace" names="delete\ namespace">
                <title>Delete Namespace</title>
                <paragraph>We want to delete an existing namespace including all its objects,
                    properties etc.</paragraph>
                <paragraph>We issue a <literal>DELETE</literal> request to delete an namespace to Glance:</paragraph>
                <literal_block xml:space="preserve">DELETE http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}</literal_block>
            </section>
            <section ids="associate-resource-type-with-namespace" names="associate\ resource\ type\ with\ namespace">
                <title>Associate Resource Type with Namespace</title>
                <paragraph>We want to associate a resource type with an existing namespace</paragraph>
                <paragraph>We issue a <literal>POST</literal> request to associate resource type to Glance:</paragraph>
                <literal_block xml:space="preserve">POST http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}/resource_types</literal_block>
                <paragraph>The input data is an JSON-encoded mapping in the following format:</paragraph>
                <literal_block xml:space="preserve">{
        "name" :"OS::Cinder::Volume",
        "prefix" : "hw_",
        "properties_target" : "image",
        "created_at": "2014-08-28T17:13:04Z",
        "updated_at": "2014-08-28T17:13:04Z"
}</literal_block>
            </section>
            <section ids="remove-resource-type-associated-with-a-namespace" names="remove\ resource\ type\ associated\ with\ a\ namespace">
                <title>Remove Resource Type associated with a Namespace</title>
                <paragraph>We want to de-associate namespace from a resource type</paragraph>
                <paragraph>We issue a <literal>DELETE</literal> request to de-associate namespace resource type to
                    Glance:</paragraph>
                <literal_block xml:space="preserve">DELETE http://glance.openstack.example.org/v2//metadefs/namespaces/{namespace}/resource_types/{resource_type}</literal_block>
            </section>
            <section ids="list-objects-in-namespace" names="list\ objects\ in\ namespace">
                <title>List Objects in Namespace</title>
                <paragraph>We want to see the list of meta definition objects in a specific namespace</paragraph>
                <paragraph>We issue a <literal>GET</literal> request to <literal>http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}/objects</literal>
                    to retrieve objects.</paragraph>
                <paragraph>The data is returned as a JSON-encoded mapping in the following format:</paragraph>
                <literal_block xml:space="preserve">{
      "objects": [
      {
          "name": "object1",
          "description": "my-description",
          "self": "/v2/metadefs/namespaces/MyNamespace/objects/object1",
          "schema": "/v2/schemas/metadefs/object",
          "created_at": "2014-08-28T17:13:06Z",
          "updated_at": "2014-08-28T17:13:06Z",
          "required": [],
          "properties": {
              "prop1": {
                  "title": "My object1 property1",
                  "description": "More info here",
                  "type": "array",
                  "items": {
                      "type": "string"
                  }
              }
          }
      },
      {
          "name": "object2",
          "description": "my-description",
          "self": "/v2/metadefs/namespaces/MyNamespace/objects/object2",
          "schema": "/v2/schemas/metadefs/object",
          "created_at": "2014-08-28T17:13:06Z",
          "updated_at": "2014-08-28T17:13:06Z",
          "properties": {
              "prop1": {
                  "title": "My object2 property1",
                  "description": "More info here",
                  "type": "integer",
                  "default": 20
              }
          }
      }
  ],
  "schema": "/v2/schemas/metadefs/objects"
}</literal_block>
            </section>
            <section ids="add-object-in-a-specific-namespace" names="add\ object\ in\ a\ specific\ namespace">
                <title>Add object in a specific namespace</title>
                <paragraph>We want to create a new object which can group the properties</paragraph>
                <paragraph>We issue a <literal>POST</literal> request to add object to a namespace in Glance:</paragraph>
                <literal_block xml:space="preserve">POST http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}/objects</literal_block>
                <paragraph>The input data is an JSON-encoded mapping in the following format:</paragraph>
                <literal_block xml:space="preserve">{
  "name": "StorageQOS",
  "description": "Our available storage QOS.",
  "required": [
      "minIOPS"
  ],
  "properties": {
      "minIOPS": {
          "type": "integer",
          "description": "The minimum IOPs required",
          "default": 100,
          "minimum": 100,
          "maximum": 30000369
      },
      "burstIOPS": {
          "type": "integer",
          "description": "The expected burst IOPs",
          "default": 1000,
          "minimum": 100,
          "maximum": 30000377
      }
  }
}</literal_block>
            </section>
            <section ids="update-object-in-a-specific-namespace" names="update\ object\ in\ a\ specific\ namespace">
                <title>Update Object in a specific namespace</title>
                <paragraph>We want to update an existing object</paragraph>
                <paragraph>We issue a <literal>PUT</literal> request to update an object to Glance:</paragraph>
                <literal_block xml:space="preserve">PUT http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}/objects/{object_name}</literal_block>
                <paragraph>The input data is similar to Add Object</paragraph>
            </section>
            <section ids="delete-object-in-a-specific-namespace" names="delete\ object\ in\ a\ specific\ namespace">
                <title>Delete Object in a specific namespace</title>
                <paragraph>We want to delete an existing object.</paragraph>
                <paragraph>We issue a <literal>DELETE</literal> request to delete object in a namespace to Glance:</paragraph>
                <literal_block xml:space="preserve">DELETE http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}/objects/{object_name}</literal_block>
            </section>
            <section ids="add-property-definition-in-a-specific-namespace" names="add\ property\ definition\ in\ a\ specific\ namespace">
                <title>Add property definition in a specific namespace</title>
                <paragraph>We want to create a new property definition in a namespace</paragraph>
                <paragraph>We issue a <literal>POST</literal> request to add property definition to a namespace in
                    Glance:</paragraph>
                <literal_block xml:space="preserve">POST http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}/properties</literal_block>
                <paragraph>The input data is an JSON-encoded mapping in the following format:</paragraph>
                <literal_block xml:space="preserve">{
  "name": "hypervisor_type",
  "title" : "Hypervisor",
  "type": "array",
  "description": "The type of hypervisor required",
  "items": {
      "type": "string",
      "enum": [
          "hyperv",
          "qemu",
          "kvm"
      ]
  }
}</literal_block>
            </section>
            <section ids="update-property-definition-in-a-specific-namespace" names="update\ property\ definition\ in\ a\ specific\ namespace">
                <title>Update property definition in a specific namespace</title>
                <paragraph>We want to update an existing object</paragraph>
                <paragraph>We issue a <literal>PUT</literal> request to update an property definition in a namespace to
                    Glance:</paragraph>
                <literal_block xml:space="preserve">PUT http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}/properties/{property_name}</literal_block>
                <paragraph>The input data is similar to Add property definition</paragraph>
            </section>
            <section ids="delete-property-definition-in-a-specific-namespace" names="delete\ property\ definition\ in\ a\ specific\ namespace">
                <title>Delete property definition in a specific namespace</title>
                <paragraph>We want to delete an existing object.</paragraph>
                <paragraph>We issue a <literal>DELETE</literal> request to delete property definition in a namespace to
                    Glance:</paragraph>
                <literal_block xml:space="preserve">DELETE http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}/properties/{property_name}</literal_block>
            </section>
        </section>
        <section ids="api-message-localization" names="api\ message\ localization">
            <title>API Message Localization</title>
            <paragraph>Glance supports HTTP message localization. For example, an HTTP client can
                receive API messages in Chinese even if the locale language of the server is
                English.</paragraph>
            <section ids="how-to-use-it" names="how\ to\ use\ it">
                <title>How to use it</title>
                <paragraph>To receive localized API messages, the HTTP client needs to specify the
                    <strong>Accept-Language</strong> header to indicate the language to use to translate the
                    message. For more info about Accept-Language, please refer <reference refuri="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html</reference></paragraph>
                <paragraph>A typical curl API request will be like below:</paragraph>
                <literal_block xml:space="preserve">curl -i -X GET -H 'Accept-Language: zh' -H 'Content-Type: application/json'
http://glance.openstack.example.org/v2/metadefs/namespaces/{namespace}</literal_block>
                <paragraph>Then the response will be like the following:</paragraph>
                <literal_block xml:space="preserve">HTTP/1.1 404 Not Found
Content-Length: 234
Content-Type: text/html; charset=UTF-8
X-Openstack-Request-Id: req-54d403a0-064e-4544-8faf-4aeef086f45a
Date: Sat, 22 Feb 2014 06:26:26 GMT

&lt;html&gt;
&lt;head&gt;
&lt;title&gt;404 Not Found&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;404 Not Found&lt;/h1&gt;
&amp;#25214;&amp;#19981;&amp;#21040;&amp;#20219;&amp;#20309;&amp;#20855;&amp;#26377;&amp;#26631;&amp;#35782; aaa &amp;#30340;&amp;#26144;&amp;#20687;&lt;br /&gt;&lt;br /&gt;
&lt;/body&gt;
&lt;/html&gt;</literal_block>
                <note>
                    <paragraph>Be sure there is the language package under /usr/share/locale-langpack/ on
                        the target Glance server.</paragraph>
                </note>
            </section>
        </section>
    </section>
</document>
