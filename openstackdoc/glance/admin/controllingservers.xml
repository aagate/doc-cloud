<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/admin/controllingservers.rst">
    <comment xml:space="preserve">Copyright 2011 OpenStack Foundation
All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</comment>
    <target refid="controlling-servers"></target>
    <section ids="controlling-glance-servers controlling-servers" names="controlling\ glance\ servers controlling-servers">
        <title>Controlling Glance Servers</title>
        <paragraph>This section describes the ways to start, stop, and reload Glance’s server
            programs.</paragraph>
        <section ids="starting-a-server" names="starting\ a\ server">
            <title>Starting a server</title>
            <paragraph>There are two ways to start a Glance server (either the API server or the
                registry server):</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Manually calling the server program</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Using the <literal>glance-control</literal> server daemon wrapper program</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>We recommend using the second method.</paragraph>
            <section ids="manually-starting-the-server" names="manually\ starting\ the\ server">
                <title>Manually starting the server</title>
                <paragraph>The first is by directly calling the server program, passing in command-line
                    options and a single argument for a <literal>paste.deploy</literal> configuration file to
                    use when configuring the server application.</paragraph>
                <note>
                    <paragraph>Glance ships with an <literal>etc/</literal> directory that contains sample <literal>paste.deploy</literal>
                        configuration files that you can copy to a standard configuration directory and
                        adapt for your own uses. Specifically, bind_host must be set properly.</paragraph>
                </note>
                <paragraph>If you do <title_reference>not</title_reference> specify a configuration file on the command line, Glance will
                    do its best to locate a configuration file in one of the
                    following directories, stopping at the first config file it finds:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><literal>$CWD</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>~/.glance</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>~/</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>/etc/glance</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>/etc</literal></paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>The filename that is searched for depends on the server application name. So,
                    if you are starting up the API server, <literal>glance-api.conf</literal> is searched for,
                    otherwise <literal>glance-registry.conf</literal>.</paragraph>
                <paragraph>If no configuration file is found, you will see an error, like:</paragraph>
                <literal_block xml:space="preserve">$&gt; glance-api
ERROR: Unable to locate any configuration file. Cannot load application glance-api</literal_block>
                <paragraph>Here is an example showing how you can manually start the <literal>glance-api</literal> server and <literal>glance-registry</literal> in a shell.:</paragraph>
                <literal_block xml:space="preserve">$ sudo glance-api --config-file glance-api.conf --debug &amp;
jsuh@mc-ats1:~$ 2011-04-13 14:50:12    DEBUG [glance-api] ********************************************************************************
2011-04-13 14:50:12    DEBUG [glance-api] Configuration options gathered from config file:
2011-04-13 14:50:12    DEBUG [glance-api] /home/jsuh/glance-api.conf
2011-04-13 14:50:12    DEBUG [glance-api] ================================================
2011-04-13 14:50:12    DEBUG [glance-api] bind_host                      65.114.169.29
2011-04-13 14:50:12    DEBUG [glance-api] bind_port                      9292
2011-04-13 14:50:12    DEBUG [glance-api] debug                          True
2011-04-13 14:50:12    DEBUG [glance-api] default_store                  file
2011-04-13 14:50:12    DEBUG [glance-api] filesystem_store_datadir       /home/jsuh/images/
2011-04-13 14:50:12    DEBUG [glance-api] registry_host                  65.114.169.29
2011-04-13 14:50:12    DEBUG [glance-api] registry_port                  9191
2011-04-13 14:50:12    DEBUG [glance-api] ********************************************************************************
2011-04-13 14:50:12    DEBUG [routes.middleware] Initialized with method overriding = True, and path info altering = True
2011-04-13 14:50:12    DEBUG [eventlet.wsgi.server] (21354) wsgi starting up on http://65.114.169.29:9292/

$ sudo glance-registry --config-file glance-registry.conf &amp;
jsuh@mc-ats1:~$ 2011-04-13 14:51:16     INFO [sqlalchemy.engine.base.Engine.0x...feac] PRAGMA table_info("images")
2011-04-13 14:51:16     INFO [sqlalchemy.engine.base.Engine.0x...feac] ()
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Col ('cid', 'name', 'type', 'notnull', 'dflt_value', 'pk')
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (0, u'created_at', u'DATETIME', 1, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (1, u'updated_at', u'DATETIME', 0, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (2, u'deleted_at', u'DATETIME', 0, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (3, u'deleted', u'BOOLEAN', 1, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (4, u'id', u'INTEGER', 1, None, 1)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (5, u'name', u'VARCHAR(255)', 0, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (6, u'disk_format', u'VARCHAR(20)', 0, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (7, u'container_format', u'VARCHAR(20)', 0, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (8, u'size', u'INTEGER', 0, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (9, u'status', u'VARCHAR(30)', 1, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (10, u'is_public', u'BOOLEAN', 1, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (11, u'location', u'TEXT', 0, None, 0)
2011-04-13 14:51:16     INFO [sqlalchemy.engine.base.Engine.0x...feac] PRAGMA table_info("image_properties")
2011-04-13 14:51:16     INFO [sqlalchemy.engine.base.Engine.0x...feac] ()
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Col ('cid', 'name', 'type', 'notnull', 'dflt_value', 'pk')
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (0, u'created_at', u'DATETIME', 1, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (1, u'updated_at', u'DATETIME', 0, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (2, u'deleted_at', u'DATETIME', 0, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (3, u'deleted', u'BOOLEAN', 1, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (4, u'id', u'INTEGER', 1, None, 1)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (5, u'image_id', u'INTEGER', 1, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (6, u'key', u'VARCHAR(255)', 1, None, 0)
2011-04-13 14:51:16    DEBUG [sqlalchemy.engine.base.Engine.0x...feac] Row (7, u'value', u'TEXT', 0, None, 0)

$ ps aux | grep glance
root     20009  0.7  0.1  12744  9148 pts/1    S    12:47   0:00 /usr/bin/python /usr/bin/glance-api glance-api.conf --debug
root     20012  2.0  0.1  25188 13356 pts/1    S    12:47   0:00 /usr/bin/python /usr/bin/glance-registry glance-registry.conf
jsuh     20017  0.0  0.0   3368   744 pts/1    S+   12:47   0:00 grep glance</literal_block>
                <paragraph>Simply supply the configuration file as the parameter to the <literal>--config-file</literal> option
                    (the <literal>etc/glance-api.conf</literal> and  <literal>etc/glance-registry.conf</literal> sample configuration
                    files were used in the above example) and then any other options
                    you want to use. (<literal>--debug</literal> was used above to show some of the debugging
                    output that the server shows when starting up. Call the server program
                    with <literal>--help</literal> to see all available options you can specify on the
                    command line.)</paragraph>
                <paragraph>For more information on configuring the server via the <literal>paste.deploy</literal>
                    configuration files, see the section entitled
                    <reference internal="True" refuri="../configuration/index#configuring"><inline classes="std std-ref">Configuring Glance servers</inline></reference></paragraph>
                <paragraph>Note that the server <title_reference>daemonizes</title_reference> itself by using the standard
                    shell backgrounding indicator, <literal>&amp;</literal>, in the previous example. For most use cases, we recommend
                    using the <literal>glance-control</literal> server daemon wrapper for daemonizing. See below
                    for more details on daemonization with <literal>glance-control</literal>.</paragraph>
            </section>
            <section ids="using-the-glance-control-program-to-start-the-server" names="using\ the\ glance-control\ program\ to\ start\ the\ server">
                <title>Using the <literal>glance-control</literal> program to start the server</title>
                <paragraph>The second way to start up a Glance server is to use the <literal>glance-control</literal>
                    program. <literal>glance-control</literal> is a wrapper script that allows the user to
                    start, stop, restart, and reload the other Glance server programs in
                    a fashion that is more conducive to automation and scripting.</paragraph>
                <paragraph>Servers started via the <literal>glance-control</literal> program are always <title_reference>daemonized</title_reference>,
                    meaning that the server program process runs in the background.</paragraph>
                <paragraph>To start a Glance server with <literal>glance-control</literal>, simply call
                    <literal>glance-control</literal> with a server and the word “start”, followed by
                    any command-line options you wish to provide. Start the server with <literal>glance-control</literal>
                    in the following way:</paragraph>
                <literal_block xml:space="preserve">$&gt; sudo glance-control [OPTIONS] &lt;SERVER&gt; start [CONFPATH]</literal_block>
                <note>
                    <paragraph>You must use the <literal>sudo</literal> program to run <literal>glance-control</literal> currently, as the
                        pid files for the server programs are written to /var/run/glance/</paragraph>
                </note>
                <paragraph>Here is an example that shows how to start the <literal>glance-registry</literal> server
                    with the <literal>glance-control</literal> wrapper script.</paragraph>
                <literal_block xml:space="preserve">$ sudo glance-control api start glance-api.conf
Starting glance-api with /home/jsuh/glance.conf

$ sudo glance-control registry start glance-registry.conf
Starting glance-registry with /home/jsuh/glance.conf

$ ps aux | grep glance
root     20038  4.0  0.1  12728  9116 ?        Ss   12:51   0:00 /usr/bin/python /usr/bin/glance-api /home/jsuh/glance-api.conf
root     20039  6.0  0.1  25188 13356 ?        Ss   12:51   0:00 /usr/bin/python /usr/bin/glance-registry /home/jsuh/glance-registry.conf
jsuh     20042  0.0  0.0   3368   744 pts/1    S+   12:51   0:00 grep glance</literal_block>
                <paragraph>The same configuration files are used by <literal>glance-control</literal> to start the
                    Glance server programs, and you can specify (as the example above shows)
                    a configuration file when starting the server.</paragraph>
                <paragraph>In order for your launched glance service to be monitored for unexpected death
                    and respawned if necessary, use the following option:</paragraph>
                <block_quote>
                    <paragraph>$ sudo glance-control [service] start –respawn …</paragraph>
                </block_quote>
                <paragraph>Note that this will cause <literal>glance-control</literal> itself to remain running. Also note
                    that deliberately stopped services are not respawned, neither are rapidly bouncing
                    services (where process death occurred within one second of the last launch).</paragraph>
                <paragraph>By default, output from glance services is discarded when launched with <literal>glance-control</literal>.
                    In order to capture such output via syslog, use the following option:</paragraph>
                <block_quote>
                    <paragraph>$ sudo glance-control –capture-output …</paragraph>
                </block_quote>
            </section>
        </section>
        <section ids="stopping-a-server" names="stopping\ a\ server">
            <title>Stopping a server</title>
            <paragraph>If you started a Glance server manually and did not use the <literal>&amp;</literal> backgrounding
                function, simply send a terminate signal to the server process by typing
                <literal>Ctrl-C</literal></paragraph>
            <paragraph>If you started the Glance server using the <literal>glance-control</literal> program, you can
                use the <literal>glance-control</literal> program to stop it. Simply do the following:</paragraph>
            <literal_block xml:space="preserve">$&gt; sudo glance-control &lt;SERVER&gt; stop</literal_block>
            <paragraph>as this example shows:</paragraph>
            <literal_block xml:space="preserve">$&gt; sudo glance-control registry stop
Stopping glance-registry  pid: 17602  signal: 15</literal_block>
        </section>
        <section ids="restarting-a-server" names="restarting\ a\ server">
            <title>Restarting a server</title>
            <paragraph>You can restart a server with the <literal>glance-control</literal> program, as demonstrated
                here:</paragraph>
            <literal_block xml:space="preserve">$&gt; sudo glance-control registry restart etc/glance-registry.conf
Stopping glance-registry  pid: 17611  signal: 15
Starting glance-registry with /home/jpipes/repos/glance/trunk/etc/glance-registry.conf</literal_block>
        </section>
        <section ids="reloading-a-server" names="reloading\ a\ server">
            <title>Reloading a server</title>
            <paragraph>You can reload a server with the <literal>glance-control</literal> program, as demonstrated
                here:</paragraph>
            <literal_block xml:space="preserve">$&gt; sudo glance-control api reload
Reloading glance-api (pid 18506) with signal(1)</literal_block>
            <paragraph>A reload sends a SIGHUP signal to the master process and causes new configuration
                settings to be picked up without any interruption to the running service (provided
                neither bind_host or bind_port has changed).</paragraph>
        </section>
    </section>
</document>
