<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/admin/db.rst">
    <comment xml:space="preserve">Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</comment>
    <target refid="database-management"></target>
    <section ids="database-management id1" names="database\ management database-management">
        <title>Database Management</title>
        <paragraph>The default metadata driver for Glance uses <reference name="SQLAlchemy" refuri="http://www.sqlalchemy.org/">SQLAlchemy</reference>, which implies there
            exists a backend database which must be managed. The <literal>glance-manage</literal> binary
            provides a set of commands for making this easier.</paragraph>
        <paragraph>The commands should be executed as a subcommand of ‘db’:</paragraph>
        <block_quote>
            <paragraph>glance-manage db &lt;cmd&gt; &lt;args&gt;</paragraph>
        </block_quote>
        <note>
            <paragraph>In the Ocata release (14.0.0), the database migration engine was changed
                from <emphasis>SQLAlchemy Migrate</emphasis> to <emphasis>Alembic</emphasis>.  This necessitated some changes in
                the <literal>glance-manage</literal> tool.  While the user interface has been kept as
                similar as possible, the <literal>glance-manage</literal> tool included with the Ocata and
                more recent releases is incompatible with the “legacy” tool.  If you are
                consulting these documents for information about the <literal>glance-manage</literal> tool
                in the Newton or earlier releases, please see the
                <reference internal="True" refuri="db-sqlalchemy-migrate#legacy-database-management"><inline classes="std std-ref">Legacy Database Management</inline></reference> page.</paragraph>
        </note>
        <target ids="sqlalchemy" names="sqlalchemy" refuri="http://www.sqlalchemy.org/"></target>
        <section ids="migration-scripts" names="migration\ scripts">
            <title>Migration Scripts</title>
            <paragraph>The migration scripts are stored in the directory:
                <literal>glance/db/sqlalchemy/alembic_migrations/versions</literal></paragraph>
            <paragraph>As mentioned above, these scripts utilize the Alembic migration engine, which
                was first introduced in the Ocata release.  All database migrations up through
                the Liberty release are consolidated into one Alembic migration script named
                <literal>liberty_initial</literal>.  Mitaka migrations are retained, but have been rewritten
                for Alembic and named using the new naming convention.</paragraph>
            <paragraph>A fresh Glance installation will apply the following
                migrations:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><literal>liberty-initial</literal></paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>mitaka01</literal></paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>mitaka02</literal></paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>ocata01</literal></paragraph>
                </list_item>
            </bullet_list>
            <note>
                <paragraph>The “old-style” migration scripts have been retained in their <reference name="current directory" refuri="http://git.openstack.org/cgit/openstack/glance/tree/glance/db/sqlalchemy/migrate_repo/versions?h=stable/ocata">current
                        directory</reference> in the Ocata release so that interested operators can correlate
                    them with the new migrations.  This directory will be removed in future
                    releases.</paragraph>
                <paragraph>In particular, the “old-style” script for the Ocata migration,
                    <reference name="045_add_visibility.py" refuri="http://git.openstack.org/cgit/openstack/glance/tree/glance/db/sqlalchemy/migrate_repo/versions/045_add_visibility.py?h=stable/ocata">045_add_visibility.py</reference> is retained for operators who are conversant in
                    SQLAlchemy Migrate and are interested in comparing it with a “new-style”
                    Alembic migration script.  The Alembic script, which is the one actually
                    used to do the upgrade to Ocata, is
                    <reference name="ocata01_add_visibility_remove_is_public.py" refuri="http://git.openstack.org/cgit/openstack/glance/tree/glance/db/sqlalchemy/alembic_migrations/versions/ocata01_add_visibility_remove_is_public.py?h=stable/ocata">ocata01_add_visibility_remove_is_public.py</reference>.</paragraph>
            </note>
            <target ids="current-directory" names="current\ directory" refuri="http://git.openstack.org/cgit/openstack/glance/tree/glance/db/sqlalchemy/migrate_repo/versions?h=stable/ocata"></target>
            <target ids="add-visibility-py" names="045_add_visibility.py" refuri="http://git.openstack.org/cgit/openstack/glance/tree/glance/db/sqlalchemy/migrate_repo/versions/045_add_visibility.py?h=stable/ocata"></target>
            <target ids="ocata01-add-visibility-remove-is-public-py" names="ocata01_add_visibility_remove_is_public.py" refuri="http://git.openstack.org/cgit/openstack/glance/tree/glance/db/sqlalchemy/alembic_migrations/versions/ocata01_add_visibility_remove_is_public.py?h=stable/ocata"></target>
        </section>
        <section ids="sync-the-database" names="sync\ the\ database">
            <title>Sync the Database</title>
            <block_quote>
                <paragraph>glance-manage db sync [VERSION]</paragraph>
            </block_quote>
            <paragraph>Place an existing database under migration control and upgrade it to the
                specified VERSION or to the latest migration level if VERSION is not specified.</paragraph>
            <note>
                <paragraph>Prior to Ocata release the database version was a numeric value.  For
                    example: for the Newton release, the latest migration level was <literal>44</literal>.
                    Starting with Ocata, database version is a revision name corresponding to
                    the latest migration included in the release. For the Ocata release, there
                    is only one database migration and it is identified by revision
                    <literal>ocata01</literal>. So, the database version for Ocata release is <literal>ocata01</literal>.</paragraph>
                <paragraph>This naming convention will change slightly with the introduction of
                    zero-downtime upgrades, which is EXPERIMENTAL in Ocata, but is projected to
                    be the official upgrade method beginning with the Pike release.  See
                    <reference internal="True" refid="zero-downtime"><inline classes="std std-ref">Zero-Downtime Database Upgrades</inline></reference> below for more information.</paragraph>
            </note>
        </section>
        <section ids="determining-the-database-version" names="determining\ the\ database\ version">
            <title>Determining the Database Version</title>
            <block_quote>
                <paragraph>glance-manage db version</paragraph>
            </block_quote>
            <paragraph>This will print the current migration level of a Glance database.</paragraph>
        </section>
        <section ids="upgrading-an-existing-database" names="upgrading\ an\ existing\ database">
            <title>Upgrading an Existing Database</title>
            <block_quote>
                <paragraph>glance-manage db upgrade [VERSION]</paragraph>
            </block_quote>
            <paragraph>This will take an existing database and upgrade it to the specified VERSION.</paragraph>
            <target refid="downgrades"></target>
        </section>
        <section ids="downgrading-an-existing-database downgrades" names="downgrading\ an\ existing\ database downgrades">
            <title>Downgrading an Existing Database</title>
            <paragraph>Upgrades involve complex operations and can fail. Before attempting any
                upgrade, you should make a full database backup of your production data. As of
                Kilo, database downgrades are not supported, and the only method available to
                get back to a prior database version is to restore from backup [1].</paragraph>
            <paragraph>[1]: <reference refuri="http://docs.openstack.org/ops-guide/ops-upgrades.html#perform-a-backup">http://docs.openstack.org/ops-guide/ops-upgrades.html#perform-a-backup</reference></paragraph>
            <target refid="zero-downtime"></target>
        </section>
    </section>
    <section ids="zero-downtime-database-upgrades zero-downtime" names="zero-downtime\ database\ upgrades zero-downtime">
        <title>Zero-Downtime Database Upgrades</title>
        <warning>
            <paragraph>This feature is EXPERIMENTAL in the Ocata release.  We encourage operators
                to try it out, but its use in production environments is currently NOT
                SUPPORTED.</paragraph>
        </warning>
        <paragraph>A zero-downtime database upgrade enables true rolling upgrades of the Glance
            nodes in your cloud’s control plane.  At the appropriate point in the upgrade,
            you can have a mixed deployment of release <emphasis>n</emphasis> (for example, Ocata) and release
            <emphasis>n-1</emphasis> (for example, Newton) Glance nodes, take the <emphasis>n-1</emphasis> release nodes out of
            rotation, allow them to drain, and then take them out of service permanently,
            leaving all Glance nodes in your cloud at release <emphasis>n</emphasis>.</paragraph>
        <paragraph>That’s a rough sketch of how a rolling upgrade would work.  For full details,
            see <reference internal="True" refuri="rollingupgrades#rolling-upgrades"><inline classes="std std-ref">Rolling Upgrades</inline></reference>.</paragraph>
        <note>
            <paragraph>Downgrading a database is not supported.  See <reference internal="True" refid="downgrades"><inline classes="std std-ref">Downgrading an Existing Database</inline></reference> for more
                information.</paragraph>
        </note>
        <section ids="the-expand-migrate-contract-cycle" names="the\ expand-migrate-contract\ cycle">
            <title>The Expand-Migrate-Contract Cycle</title>
            <paragraph>For Glance, a zero-downtime database upgrade has three phases:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph><strong>Expand</strong>: in this phase, new columns, tables, indexes, or triggers are
                        added to the database.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>Migrate</strong>: in this phase, data is migrated to the new columns or tables.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>Contract</strong>: in this phase, the “old” tables or columns (and any database
                        triggers used during the migration), which are no longer in use, are removed
                        from the database.</paragraph>
                </list_item>
            </enumerated_list>
            <paragraph>The above phases are abbreviated as an <strong>E-M-C</strong> database upgrade.</paragraph>
        </section>
        <section ids="new-database-version-identifiers" names="new\ database\ version\ identifiers">
            <title>New Database Version Identifiers</title>
            <paragraph>In order to perform zero-downtime upgrades, the version identifier of a
                database becomes more complicated since it must reflect knowledge of what point
                in the E-M-C cycle the upgrade has reached.  To make this evident, the
                identifier explicitly contains ‘expand’ or ‘contract’ as part of its name.</paragraph>
            <paragraph>Thus the <literal>ocata01</literal> migration (that is, the migration that’s currently used in
                the fully supported upgrade path) has two identifiers associated with it for
                zero-downtime upgrades: <literal>ocata_expand01</literal> and <literal>ocata_contract01</literal>.</paragraph>
            <paragraph>During the upgrade process, the database is initially marked with
                <literal>ocata_expand01</literal>.  Eventually, after completing the full upgrade process, the
                database will be marked with <literal>ocata_contract01</literal>. So, instead of one database
                version, an operator will see a composite database version that will have both
                expand and contract versions.  A database will be considered at Ocata version
                only when both expand and contract revisions are at the latest revisions.  For
                a successful Ocata zero-downtime upgrade, for example, the database will be
                marked with both <literal>ocata_expand01</literal>, <literal>ocata_contract01</literal>.</paragraph>
            <paragraph>In the case in which there are multiple changes in a cycle, the database
                version record would go through the following progression:</paragraph>
            <table>
                <tgroup cols="3">
                    <colspec colwidth="7"></colspec>
                    <colspec colwidth="38"></colspec>
                    <colspec colwidth="25"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>stage</paragraph>
                            </entry>
                            <entry>
                                <paragraph>database identifier</paragraph>
                            </entry>
                            <entry>
                                <paragraph>comment</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>E</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>bexar_expand01</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>upgrade begins</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>E</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>bexar_expand02</literal></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>E</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>bexar_expand03</literal></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>M</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>bexar_expand03</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>bexar_migrate01 occurs</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>M</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>bexar_expand03</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>bexar_migrate02 occurs</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>M</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>bexar_expand03</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>bexar_migrate03 occurs</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>C</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>bexar_expand03, bexar_contract01</literal></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>C</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>bexar_expand03, bexar_contract02</literal></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>C</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>bexar_expand03, bexar_contract03</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>upgrade completed</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="database-upgrade" names="database\ upgrade">
            <title>Database Upgrade</title>
            <paragraph>In order to enable the E-M-C database upgrade cycle, and to enable Glance
                rolling upgrades, the <literal>glance-manage</literal> tool has been augmented to include the
                following operations.</paragraph>
        </section>
        <section ids="expanding-the-database" names="expanding\ the\ database">
            <title>Expanding the Database</title>
            <block_quote>
                <paragraph>glance-manage db expand</paragraph>
            </block_quote>
            <paragraph>This will run the expansion phase of a rolling upgrade process.  Database
                expansion should be run as the first step in the rolling upgrade process before
                any new services are started.</paragraph>
        </section>
        <section ids="migrating-the-data" names="migrating\ the\ data">
            <title>Migrating the Data</title>
            <block_quote>
                <paragraph>glance-manage db migrate</paragraph>
            </block_quote>
            <paragraph>This will run the data migrate phase of a rolling upgrade process.  Database
                migration should be run after database expansion but before any new services
                are started.</paragraph>
        </section>
        <section ids="contracting-the-database" names="contracting\ the\ database">
            <title>Contracting the Database</title>
            <block_quote>
                <paragraph>glance-manage db contract</paragraph>
            </block_quote>
            <paragraph>This will run the contraction phase of a rolling upgrade process.
                Database contraction should be run as the last step of the rolling upgrade
                process after all old services are upgraded to new ones.</paragraph>
        </section>
    </section>
</document>
