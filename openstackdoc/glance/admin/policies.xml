<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/admin/policies.rst">
    <comment xml:space="preserve">Copyright 2012 OpenStack Foundation
All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</comment>
    <section ids="policies" names="policies">
        <title>Policies</title>
        <paragraph>Glance’s public API calls may be restricted to certain sets of users using a
            policy configuration file. This document explains exactly how policies are
            configured and what they apply to.</paragraph>
        <paragraph>A policy is composed of a set of rules that are used by the policy “Brain” in
            determining if a particular action may be performed by the authorized tenant.</paragraph>
        <section ids="constructing-a-policy-configuration-file" names="constructing\ a\ policy\ configuration\ file">
            <title>Constructing a Policy Configuration File</title>
            <paragraph>A policy configuration file is a simply JSON object that contain sets of
                rules. Each top-level key is the name of a rule. Each rule
                is a string that describes an action that may be performed in the Glance API.</paragraph>
            <paragraph>The actions that may have a rule enforced on them are:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><literal>get_images</literal> - List available image entities</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>GET /v1/images</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>GET /v1/images/detail</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>GET /v2/images</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>get_image</literal> - Retrieve a specific image entity</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>HEAD /v1/images/&lt;IMAGE_ID&gt;</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>GET /v1/images/&lt;IMAGE_ID&gt;</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>GET /v2/images/&lt;IMAGE_ID&gt;</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>download_image</literal> - Download binary image data</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>GET /v1/images/&lt;IMAGE_ID&gt;</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>GET /v2/images/&lt;IMAGE_ID&gt;/file</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>upload_image</literal> - Upload binary image data</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>POST /v1/images</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>PUT /v1/images/&lt;IMAGE_ID&gt;</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>PUT /v2/images/&lt;IMAGE_ID&gt;/file</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>copy_from</literal> - Copy binary image data from URL</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>POST /v1/images</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>PUT /v1/images/&lt;IMAGE_ID&gt;</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>add_image</literal> - Create an image entity</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>POST /v1/images</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>POST /v2/images</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>modify_image</literal> - Update an image entity</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>PUT /v1/images/&lt;IMAGE_ID&gt;</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>PUT /v2/images/&lt;IMAGE_ID&gt;</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>publicize_image</literal> - Create or update public images</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>POST /v1/images</literal> with attribute <literal>is_public</literal> = <literal>true</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>PUT /v1/images/&lt;IMAGE_ID&gt;</literal> with attribute <literal>is_public</literal> = <literal>true</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>POST /v2/images</literal> with attribute <literal>visibility</literal> = <literal>public</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>PUT /v2/images/&lt;IMAGE_ID&gt;</literal> with attribute <literal>visibility</literal> = <literal>public</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>communitize_image</literal> - Create or update community images</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>POST /v2/images</literal> with attribute <literal>visibility</literal> = <literal>community</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>PUT /v2/images/&lt;IMAGE_ID&gt;</literal> with attribute <literal>visibility</literal> = <literal>community</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>delete_image</literal> - Delete an image entity and associated binary data</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>DELETE /v1/images/&lt;IMAGE_ID&gt;</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>DELETE /v2/images/&lt;IMAGE_ID&gt;</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>add_member</literal> - Add a membership to the member repo of an image</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>POST /v2/images/&lt;IMAGE_ID&gt;/members</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>get_members</literal> - List the members of an image</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>GET /v1/images/&lt;IMAGE_ID&gt;/members</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>GET /v2/images/&lt;IMAGE_ID&gt;/members</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>delete_member</literal> - Delete a membership of an image</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>DELETE /v1/images/&lt;IMAGE_ID&gt;/members/&lt;MEMBER_ID&gt;</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>DELETE /v2/images/&lt;IMAGE_ID&gt;/members/&lt;MEMBER_ID&gt;</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>modify_member</literal> - Create or update the membership of an image</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>PUT /v1/images/&lt;IMAGE_ID&gt;/members/&lt;MEMBER_ID&gt;</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>PUT /v1/images/&lt;IMAGE_ID&gt;/members</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>POST /v2/images/&lt;IMAGE_ID&gt;/members</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>PUT /v2/images/&lt;IMAGE_ID&gt;/members/&lt;MEMBER_ID&gt;</literal></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph><literal>manage_image_cache</literal> - Allowed to use the image cache management API</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>To limit an action to a particular role or roles, you list the roles like so</paragraph>
            <literal_block xml:space="preserve">{
  "delete_image": ["role:admin", "role:superuser"]
}</literal_block>
            <paragraph>The above would add a rule that only allowed users that had roles of either
                “admin” or “superuser” to delete an image.</paragraph>
        </section>
        <section ids="writing-rules" names="writing\ rules">
            <title>Writing Rules</title>
            <paragraph>Role checks are going to continue to work exactly as they already do. If the
                role defined in the check is one that the user holds, then that will pass,
                e.g., <literal>role:admin</literal>.</paragraph>
            <paragraph>To write a generic rule, you need to know that there are three values provided
                by Glance that can be used in a rule on the left side of the colon (<literal>:</literal>).
                Those values are the current user’s credentials in the form of:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>role</paragraph>
                </list_item>
                <list_item>
                    <paragraph>tenant</paragraph>
                </list_item>
                <list_item>
                    <paragraph>owner</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The left side of the colon can also contain any value that Python can
                understand, e.g.,:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><literal>True</literal></paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>False</literal></paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>"a string"</literal></paragraph>
                </list_item>
                <list_item>
                    <paragraph>&amp;c.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Using <literal>tenant</literal> and <literal>owner</literal> will only work with images. Consider the
                following rule:</paragraph>
            <literal_block xml:space="preserve">tenant:%(owner)s</literal_block>
            <paragraph>This will use the <literal>tenant</literal> value of the currently authenticated user. It
                will also use <literal>owner</literal> from the image it is acting upon. If those two
                values are equivalent the check will pass. All attributes on an image (as well
                as extra image properties) are available for use on the right side of the
                colon. The most useful are the following:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><literal>owner</literal></paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>protected</literal></paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>is_public</literal></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Therefore, you could construct a set of rules like the following:</paragraph>
            <literal_block xml:space="preserve">{
    "not_protected": "False:%(protected)s",
    "is_owner": "tenant:%(owner)s",
    "is_owner_or_admin": "rule:is_owner or role:admin",
    "not_protected_and_is_owner": "rule:not_protected and rule:is_owner",

    "get_image": "rule:is_owner_or_admin",
    "delete_image": "rule:not_protected_and_is_owner",
    "add_member": "rule:not_protected_and_is_owner"
}</literal_block>
        </section>
        <section ids="examples" names="examples">
            <title>Examples</title>
            <paragraph>Example 1. (The default policy configuration)</paragraph>
            <block_quote>
                <literal_block xml:space="preserve">{
    "default": ""
}</literal_block>
            </block_quote>
            <paragraph>Note that an empty JSON list means that all methods of the
                Glance API are callable by anyone.</paragraph>
            <paragraph>Example 2. Disallow modification calls to non-admins</paragraph>
            <block_quote>
                <literal_block xml:space="preserve">{
    "default": "",
    "add_image": "role:admin",
    "modify_image": "role:admin",
    "delete_image": "role:admin"
}</literal_block>
            </block_quote>
        </section>
    </section>
</document>
