<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/admin/apache-httpd.rst">
    <section ids="running-glance-in-httpd" names="running\ glance\ in\ httpd">
        <title>Running Glance in HTTPD</title>
        <paragraph>Since the Pike release Glance has packaged a wsgi script entrypoint that
            enables you to run it with a real web server like Apache HTTPD or nginx. To
            deploy this there are several patterns. This doc shows two common ways of
            deploying Glance with Apache HTTPD.</paragraph>
        <note>
            <paragraph>We are experiencing some problems in the gate when the Pike release of
                Glance is configured to run in devstack following the guidelines
                recommended in this documentation. You can follow <reference name="Bug #1703856" refuri="https://bugs.launchpad.net/glance/+bug/1703856">Bug #1703856</reference> to learn more.</paragraph>
        </note>
        <section ids="uwsgi" names="uwsgi">
            <title>uwsgi</title>
            <paragraph>This is the current recommended way to deploy Glance with a real web server.
                In this deployment method we use uwsgi as a web server bound to a random local
                port. Then we configure apache using mod_proxy to forward all incoming requests
                on the specified endpoint to that local webserver. This has the advantage of
                letting apache manage all inbound http connections, but letting uwsgi manage
                running the python code. It also means when we make changes to Glance code
                or configuration we don’t need to restart all of apache (which may be running
                other services too) and just need to restart the local uwsgi daemon.</paragraph>
            <paragraph>The httpd/ directory contains sample files for configuring HTTPD to run Glance
                under uwsgi in this configuration. To use the sample configs simply copy
                <title_reference>httpd/uwsgi-glance-api.conf</title_reference> to the appropriate location for your Apache
                server. On Debian/Ubuntu systems it is:</paragraph>
            <literal_block xml:space="preserve">/etc/apache2/sites-available/uwsgi-glance-api.conf</literal_block>
            <paragraph>On Red Hat based systems it is:</paragraph>
            <literal_block xml:space="preserve">/etc/httpd/conf.d/uwsgi-glance-api.conf</literal_block>
            <paragraph>Enable mod_proxy by running <literal>sudo a2enmod proxy</literal></paragraph>
            <paragraph>Then on Ubuntu/Debian systems enable the site by creating a symlink from the
                file in <literal>sites-available</literal> to <literal>sites-enabled</literal>. (This is not required on Red
                Hat based systems):</paragraph>
            <literal_block xml:space="preserve">ln -s /etc/apache2/sites-available/uwsgi-glance-api.conf /etc/apache2/sites-enabled</literal_block>
            <paragraph>Start or restart HTTPD to pick up the new configuration.</paragraph>
            <paragraph>Now we need to configure and start the uwsgi service. Copy the
                <title_reference>httpd/glance-api-uwsgi.ini</title_reference> file to <title_reference>/etc/glance</title_reference>. Update the file to match
                your system configuration (for example, you’ll want to set the number of
                processes and threads).</paragraph>
            <paragraph>Install uwsgi and start the glance-api server using uwsgi:</paragraph>
            <literal_block xml:space="preserve">sudo pip install uwsgi
uwsgi --ini /etc/glance/glance-api-uwsgi.ini</literal_block>
            <note>
                <paragraph>In the sample configs port 60999 is used, but this doesn’t matter and is
                    just a randomly selected number. This is not a contract on the port used
                    for the local uwsgi daemon.</paragraph>
            </note>
            <note>
                <paragraph>In the sample apache config proxy-sendcl is set. This is to workaround
                    glance not leveraging uwsgi’s chunked_read() api in the Pike release.
                    Using this option means apache buffers the input chunked data in the
                    configured TEMPDIR (which defaults to /tmp) before giving the data to
                    glance. This can also be quite slow and might require increasing timeouts.</paragraph>
            </note>
            <section ids="mod-proxy-uwsgi" names="mod_proxy_uwsgi">
                <title>mod_proxy_uwsgi</title>
                <warning>
                    <paragraph>Running Glance under HTTPD in this configuration will only work on Python 2
                        if you use <literal>Transfer-Encoding: chunked</literal>. Also if running with Python 2
                        apache will be buffering the chunked encoding before passing the request
                        on to uwsgi. See bug: <reference refuri="https://github.com/unbit/uwsgi/issues/1540">https://github.com/unbit/uwsgi/issues/1540</reference></paragraph>
                </warning>
                <paragraph>Instead of running uwsgi as a webserver listening on a local port and then
                    having Apache HTTP proxy all the incoming requests with mod_proxy. The
                    normally recommended way of deploying uwsgi with Apache HTTPD is to use
                    mod_proxy_uwsgi and set up a local socket file for uwsgi to listen on. Apache
                    will send the requests using the uwsgi protocol over this local socket
                    file. However, there are issues with doing this and using chunked-encoding.</paragraph>
                <paragraph>You can work around these issues by configuring your apache proxy to buffer the
                    chunked data and send the full content length to uwsgi. You do this by adding:</paragraph>
                <literal_block xml:space="preserve">SetEnv proxy-sendcl 1</literal_block>
                <paragraph>to the apache config file using mod_proxy_uwsgi. For more details on using
                    mod_proxy_uwsgi see the official docs:
                    <reference refuri="http://uwsgi-docs.readthedocs.io/en/latest/Apache.html?highlight=mod_uwsgi_proxy#mod-proxy-uwsgi">http://uwsgi-docs.readthedocs.io/en/latest/Apache.html?highlight=mod_uwsgi_proxy#mod-proxy-uwsgi</reference></paragraph>
            </section>
        </section>
        <section ids="mod-wsgi" names="mod_wsgi">
            <title>mod_wsgi</title>
            <paragraph>This deployment method is not recommended for using Glance. The mod_wsgi
                protocol does not support <literal>Transfer-Encoding: chunked</literal> and therefore makes it
                unsuitable for use with Glance. However, you could theoretically deploy Glance
                using mod_wsgi but it will fail on any requests that use a chunked transfer
                encoding.</paragraph>
        </section>
    </section>
</document>
