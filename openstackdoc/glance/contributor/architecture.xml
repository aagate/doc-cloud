<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/contributor/architecture.rst">
    <comment xml:space="preserve">Copyright 2015 OpenStack Foundation
All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</comment>
    <section ids="basic-architecture" names="basic\ architecture">
        <title>Basic architecture</title>
        <paragraph>OpenStack Glance has a client-server architecture that provides a REST API
            to the user through which requests to the server can be performed.</paragraph>
        <paragraph>A Glance Domain Controller manages the internal server operations
            that is divided into layers. Specific tasks are implemented
            by each layer.</paragraph>
        <paragraph>All the file (Image data) operations are performed using
            glance_store library, which is responsible for interaction with external
            storage back ends and (or) local filesystem(s). The glance_store library
            provides a uniform interface to access the backend stores.</paragraph>
        <paragraph>Glance uses a central database (Glance DB) that is shared amongst all
            the components in the system and is sql-based by default. Other types
            of database backends are somewhat supported and used by operators
            but are not extensively tested upstream.</paragraph>
        <figure align="center" width="100%">
            <image alt='OpenStack Glance Architecture Diagram.&#10;Consists of 5 main blocks: "Client" "Glance" "Keystone"&#10;"Glance Store" and "Supported Storages".&#10;Glance block exposes a REST API.  The REST API makes use of the&#10;AuthZ Middleware and a Glance Domain Controller, which contains&#10;Auth, Notifier, Policy, Quota, Location and DB.  The Glance Domain&#10;Controller makes use of the Glance Store (which is external to the&#10;Glance block), and (still within the Glance block) it makes use of&#10;the Database Abstraction Layer, and (optionally) the Registry Layer.&#10;The Registry Layer makes use of the Database Abstraction Layer. The&#10;Database abstraction layer exclusively makes use of the Glance&#10;Database.&#10;The Client block makes use of the Rest API (which exists in the&#10;Glance block) and the Keystone block.&#10;The Glance Store block contains AuthN which makes use of the&#10;Keystone block, and it also contains Glance Store Drivers, which&#10;exclusively makes use of each of the storage systems in the&#10;Supported Storages block.  Within the Supported Storages block,&#10;there exist the following storage systems, none of which make use&#10;of anything else: Filesystem, Swift, Ceph, "ellipses", Sheepdog.&#10;A complete list is given by the currently  available drivers in&#10;glance_store/_drivers.' candidates="{'*': u'contributor/../images/architecture.png'}" uri="contributor/../images/architecture.png"></image>
        </figure>
        <centered>Image 1. OpenStack Glance Architecture</centered>
        <paragraph>Following components are present in the Glance architecture:</paragraph>
        <bullet_list bullet="*">
            <list_item>
                <paragraph><strong>A client</strong> - any application that makes use of a Glance server.</paragraph>
            </list_item>
            <list_item>
                <paragraph><strong>REST API</strong> - Glance functionalities are exposed via REST.</paragraph>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><strong>Database Abstraction Layer (DAL)</strong> - an application programming interface</term>
                        <definition>
                            <paragraph>(API) that unifies the communication between Glance and databases.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><strong>Glance Domain Controller</strong> - middleware that implements the main</term>
                        <definition>
                            <paragraph>Glance functionalities such as authorization, notifications, policies,
                                database connections.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><strong>Glance Store</strong> - used to organize interactions between Glance and various</term>
                        <definition>
                            <paragraph>data stores.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
            <list_item>
                <definition_list>
                    <definition_list_item>
                        <term><strong>Registry Layer</strong> - optional layer that is used to organise secure</term>
                        <definition>
                            <paragraph>communication between the domain and the DAL by using a separate service.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </list_item>
        </bullet_list>
    </section>
</document>
