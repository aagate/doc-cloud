<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/contributor/domain_implementation.rst">
    <comment xml:space="preserve">Copyright 2016 OpenStack Foundation
All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</comment>
    <section ids="glance-domain-model-implementation" names="glance\ domain\ model\ implementation">
        <title>Glance domain model implementation</title>
        <section ids="gateway-and-basic-layers" names="gateway\ and\ basic\ layers">
            <title>Gateway and basic layers</title>
            <paragraph>The domain model contains the following layers:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph><reference internal="True" refid="authorization"><inline classes="std std-ref">Authorization</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="property"><inline classes="std std-ref">Property protection</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="notifier"><inline classes="std std-ref">Notifier</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="policy"><inline classes="std std-ref">Policy</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="quota"><inline classes="std std-ref">Quota</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="location"><inline classes="std std-ref">Location</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="database"><inline classes="std std-ref">Database</inline></reference></paragraph>
                </list_item>
            </enumerated_list>
            <paragraph>The schema below shows a stack that contains the Image domain layers and
                their locations:</paragraph>
            <figure align="center" width="100%">
                <image alt="From top to bottom, the stack consists of the Router and REST API,&#10;which are above the domain implementation.  The Auth, Property&#10;Protection (optional), Notifier, Policy, Quota,&#10;Location, and Database represent the domain implementation.&#10;The Registry (optional) and Data Access sit below the domain&#10;implementation.  Further, the Client block calls the Router;&#10;the Location block calls the Glance Store, and the Data Access&#10;layer calls the DBMS.&#10;Additional information conveyed in the image is the location in&#10;the Glance code of the various components:&#10;Router: api/v2/router.py&#10;REST API: api/v2/*&#10;Auth: api/authorization.py&#10;Property Protection: api/property_protections.py&#10;Notifier: notifier.py&#10;Policy: api/policy.py&#10;Quota: quota/__init__.py&#10;Location: location.py&#10;DB: db/__init__.py&#10;Registry: registry/v2/*&#10;Data Access: db/sqlalchemy/api.py" candidates="{'*': u'contributor/../images/glance_layers.png'}" uri="contributor/../images/glance_layers.png"></image>
            </figure>
            <target refid="authorization"></target>
            <section dupnames="authorization" ids="authorization id1" names="authorization">
                <title>Authorization</title>
                <paragraph>The first layer of the domain model provides a verification of whether an
                    image itself or its property can be changed. An admin or image owner can
                    apply the changes. The information about a user is taken from the request
                    <literal>context</literal> and is compared with the image <literal>owner</literal>. If the user cannot
                    apply a change, a corresponding error message appears.</paragraph>
                <target refid="property"></target>
            </section>
            <section ids="property-protection property" names="property\ protection property">
                <title>Property protection</title>
                <paragraph>The second layer of the domain model is optional. It becomes available if you
                    set the <literal>property_protection_file</literal> parameter in the Glance configuration
                    file.</paragraph>
                <paragraph>There are two types of image properties in Glance:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><emphasis>Core properties</emphasis>, as specified in the image schema</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><emphasis>Meta properties</emphasis>, which are the arbitrary key/value pairs that can be added
                            to an image</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>The property protection layer manages access to the meta properties
                    through Glanceâ€™s public API calls. You can restrict the access in the
                    property protection configuration file.</paragraph>
                <target refid="notifier"></target>
            </section>
            <section dupnames="notifier" ids="notifier id2" names="notifier">
                <title>Notifier</title>
                <paragraph>On the third layer of the domain model, the following items are added to
                    the message queue:</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Notifications about all of the image changes</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>All of the exceptions and warnings that occurred while using an image</paragraph>
                    </list_item>
                </enumerated_list>
                <target refid="policy"></target>
            </section>
            <section dupnames="policy" ids="policy id3" names="policy">
                <title>Policy</title>
                <paragraph>The fourth layer of the domain model is responsible for:</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Defining access rules to perform actions with an image. The rules are
                            defined in the <literal classes="file" role="file">etc/policy.json</literal> file.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Monitoring of the rules implementation.</paragraph>
                    </list_item>
                </enumerated_list>
                <target refid="quota"></target>
            </section>
            <section dupnames="quota" ids="quota id4" names="quota">
                <title>Quota</title>
                <paragraph>On the fifth layer of the domain model, if a user has an admin-defined size
                    quota for all of his uploaded images, there is a check that verifies whether
                    this quota exceeds the limit during an image upload and save:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>If the quota does not exceed the limit, then the action to add an image
                            succeeds.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If the quota exceeds the limit, then the action does not succeed and a
                            corresponding error message appears.</paragraph>
                    </list_item>
                </bullet_list>
                <target refid="location"></target>
            </section>
            <section dupnames="location" ids="location id5" names="location">
                <title>Location</title>
                <paragraph>The sixth layer of the domain model is used for interaction with the store via
                    the <literal>glance_store</literal> library, like upload and download, and for managing an
                    image location. On this layer, an image is validated before the upload. If
                    the validation succeeds, an image is written to the <literal>glance_store</literal> library.</paragraph>
                <paragraph>This sixth layer of the domain model is responsible for:</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Checking whether a location URI is correct when a new location is added</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Removing image data from the store when an image location is changed</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Preventing image location duplicates</paragraph>
                    </list_item>
                </enumerated_list>
                <target refid="database"></target>
            </section>
            <section dupnames="database" ids="database id6" names="database">
                <title>Database</title>
                <paragraph>On the seventh layer of the domain model:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>The methods to interact with the database API are implemented.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Images are converted to the corresponding format to be recorded in the
                            database. And the information received from the database is
                            converted to an Image object.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
        </section>
    </section>
</document>
