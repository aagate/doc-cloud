<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/contributor/api/glance.hacking.checks.rst">
    <section ids="module-glance.hacking.checks the-glance-hacking-checks-module" names="the\ glance.hacking.checks\ module">
        <title>The <reference internal="True" refid="module-glance.hacking.checks" reftitle="glance.hacking.checks"><literal classes="xref py py-mod">glance.hacking.checks</literal></reference> Module</title>
        <index entries="['single',\ u'glance.hacking.checks\ (module)',\ u'module-glance.hacking.checks',\ '',\ None]"></index>
        <index entries="['single',\ u'assert_equal_none()\ (in\ module\ glance.hacking.checks)',\ u'glance.hacking.checks.assert_equal_none',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="assert_equal_none" ids="glance.hacking.checks.assert_equal_none" module="glance.hacking.checks" names="glance.hacking.checks.assert_equal_none"><desc_addname xml:space="preserve">glance.hacking.checks.</desc_addname><desc_name xml:space="preserve">assert_equal_none</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">logical_line</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Check for assertEqual(A, None) or assertEqual(None, A) sentences</paragraph>
                <paragraph>G318</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'assert_equal_type()\ (in\ module\ glance.hacking.checks)',\ u'glance.hacking.checks.assert_equal_type',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="assert_equal_type" ids="glance.hacking.checks.assert_equal_type" module="glance.hacking.checks" names="glance.hacking.checks.assert_equal_type"><desc_addname xml:space="preserve">glance.hacking.checks.</desc_addname><desc_name xml:space="preserve">assert_equal_type</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">logical_line</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Check for assertEqual(type(A), B) sentences</paragraph>
                <paragraph>G317</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'assert_true_instance()\ (in\ module\ glance.hacking.checks)',\ u'glance.hacking.checks.assert_true_instance',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="assert_true_instance" ids="glance.hacking.checks.assert_true_instance" module="glance.hacking.checks" names="glance.hacking.checks.assert_true_instance"><desc_addname xml:space="preserve">glance.hacking.checks.</desc_addname><desc_name xml:space="preserve">assert_true_instance</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">logical_line</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Check for assertTrue(isinstance(a, b)) sentences</paragraph>
                <paragraph>G316</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'check_no_contextlib_nested()\ (in\ module\ glance.hacking.checks)',\ u'glance.hacking.checks.check_no_contextlib_nested',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_no_contextlib_nested" ids="glance.hacking.checks.check_no_contextlib_nested" module="glance.hacking.checks" names="glance.hacking.checks.check_no_contextlib_nested"><desc_addname xml:space="preserve">glance.hacking.checks.</desc_addname><desc_name xml:space="preserve">check_no_contextlib_nested</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">logical_line</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'check_python3_no_iteritems()\ (in\ module\ glance.hacking.checks)',\ u'glance.hacking.checks.check_python3_no_iteritems',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_python3_no_iteritems" ids="glance.hacking.checks.check_python3_no_iteritems" module="glance.hacking.checks" names="glance.hacking.checks.check_python3_no_iteritems"><desc_addname xml:space="preserve">glance.hacking.checks.</desc_addname><desc_name xml:space="preserve">check_python3_no_iteritems</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">logical_line</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'check_python3_no_iterkeys()\ (in\ module\ glance.hacking.checks)',\ u'glance.hacking.checks.check_python3_no_iterkeys',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_python3_no_iterkeys" ids="glance.hacking.checks.check_python3_no_iterkeys" module="glance.hacking.checks" names="glance.hacking.checks.check_python3_no_iterkeys"><desc_addname xml:space="preserve">glance.hacking.checks.</desc_addname><desc_name xml:space="preserve">check_python3_no_iterkeys</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">logical_line</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'check_python3_no_itervalues()\ (in\ module\ glance.hacking.checks)',\ u'glance.hacking.checks.check_python3_no_itervalues',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_python3_no_itervalues" ids="glance.hacking.checks.check_python3_no_itervalues" module="glance.hacking.checks" names="glance.hacking.checks.check_python3_no_itervalues"><desc_addname xml:space="preserve">glance.hacking.checks.</desc_addname><desc_name xml:space="preserve">check_python3_no_itervalues</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">logical_line</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'check_python3_xrange()\ (in\ module\ glance.hacking.checks)',\ u'glance.hacking.checks.check_python3_xrange',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_python3_xrange" ids="glance.hacking.checks.check_python3_xrange" module="glance.hacking.checks" names="glance.hacking.checks.check_python3_xrange"><desc_addname xml:space="preserve">glance.hacking.checks.</desc_addname><desc_name xml:space="preserve">check_python3_xrange</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">logical_line</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'dict_constructor_with_list_copy()\ (in\ module\ glance.hacking.checks)',\ u'glance.hacking.checks.dict_constructor_with_list_copy',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="dict_constructor_with_list_copy" ids="glance.hacking.checks.dict_constructor_with_list_copy" module="glance.hacking.checks" names="glance.hacking.checks.dict_constructor_with_list_copy"><desc_addname xml:space="preserve">glance.hacking.checks.</desc_addname><desc_name xml:space="preserve">dict_constructor_with_list_copy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">logical_line</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'factory()\ (in\ module\ glance.hacking.checks)',\ u'glance.hacking.checks.factory',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="factory" ids="glance.hacking.checks.factory" module="glance.hacking.checks" names="glance.hacking.checks.factory"><desc_addname xml:space="preserve">glance.hacking.checks.</desc_addname><desc_name xml:space="preserve">factory</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">register</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'no_direct_use_of_unicode_function()\ (in\ module\ glance.hacking.checks)',\ u'glance.hacking.checks.no_direct_use_of_unicode_function',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="no_direct_use_of_unicode_function" ids="glance.hacking.checks.no_direct_use_of_unicode_function" module="glance.hacking.checks" names="glance.hacking.checks.no_direct_use_of_unicode_function"><desc_addname xml:space="preserve">glance.hacking.checks.</desc_addname><desc_name xml:space="preserve">no_direct_use_of_unicode_function</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">logical_line</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Check for use of unicode() builtin</paragraph>
                <paragraph>G320</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'no_translate_debug_logs()\ (in\ module\ glance.hacking.checks)',\ u'glance.hacking.checks.no_translate_debug_logs',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="no_translate_debug_logs" ids="glance.hacking.checks.no_translate_debug_logs" module="glance.hacking.checks" names="glance.hacking.checks.no_translate_debug_logs"><desc_addname xml:space="preserve">glance.hacking.checks.</desc_addname><desc_name xml:space="preserve">no_translate_debug_logs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">logical_line</desc_parameter><desc_parameter xml:space="preserve">filename</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </section>
</document>
