<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/contributor/api/glance.common.utils.rst">
    <section ids="module-glance.common.utils the-glance-common-utils-module" names="the\ glance.common.utils\ module">
        <title>The <reference internal="True" refid="module-glance.common.utils" reftitle="glance.common.utils"><literal classes="xref py py-mod">glance.common.utils</literal></reference> Module</title>
        <index entries="['single',\ u'glance.common.utils\ (module)',\ u'module-glance.common.utils',\ '',\ None]"></index>
        <paragraph>System-level utilities and helper functions.</paragraph>
        <index entries="['single',\ u'CooperativeReader\ (class\ in\ glance.common.utils)',\ u'glance.common.utils.CooperativeReader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="CooperativeReader" ids="glance.common.utils.CooperativeReader" module="glance.common.utils" names="glance.common.utils.CooperativeReader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">CooperativeReader</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">fd</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>An eventlet thread friendly class for reading in image data.</paragraph>
                <paragraph>When accessing data either through the iterator or the read method
                    we perform a sleep to allow a co-operative yield. When there is more than
                    one image being uploaded/downloaded this prevents eventlet thread
                    starvation, ie allows all threads to be scheduled periodically rather than
                    having the same thread be continuously active.</paragraph>
                <index entries="['single',\ u'read()\ (glance.common.utils.CooperativeReader\ method)',\ u'glance.common.utils.CooperativeReader.read',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="CooperativeReader" first="False" fullname="CooperativeReader.read" ids="glance.common.utils.CooperativeReader.read" module="glance.common.utils" names="glance.common.utils.CooperativeReader.read"><desc_name xml:space="preserve">read</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">length=None</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                    <desc_content>
                        <paragraph>Return the requested amount of bytes, fetching the next chunk of
                            the underlying iterator when needed.</paragraph>
                        <paragraph>This is replaced with cooperative_read in __init__ if the underlying
                            fd already supports read().</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'LimitingReader\ (class\ in\ glance.common.utils)',\ u'glance.common.utils.LimitingReader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="LimitingReader" ids="glance.common.utils.LimitingReader" module="glance.common.utils" names="glance.common.utils.LimitingReader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">LimitingReader</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">data</desc_parameter><desc_parameter xml:space="preserve">limit</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Reader designed to fail when reading image data past the configured
                    allowable amount.</paragraph>
                <index entries="['single',\ u'read()\ (glance.common.utils.LimitingReader\ method)',\ u'glance.common.utils.LimitingReader.read',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LimitingReader" first="False" fullname="LimitingReader.read" ids="glance.common.utils.LimitingReader.read" module="glance.common.utils" names="glance.common.utils.LimitingReader.read"><desc_name xml:space="preserve">read</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">i</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'chunkiter()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.chunkiter',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="chunkiter" ids="glance.common.utils.chunkiter" module="glance.common.utils" names="glance.common.utils.chunkiter"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">chunkiter</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">fp</desc_parameter><desc_parameter xml:space="preserve">chunk_size=65536</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Return an iterator to a file-like obj which yields fixed size chunks</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">fp</literal_strong> – a file-like object</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">chunk_size</literal_strong> – maximum size of chunk</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'chunkreadable()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.chunkreadable',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="chunkreadable" ids="glance.common.utils.chunkreadable" module="glance.common.utils" names="glance.common.utils.chunkreadable"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">chunkreadable</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iter</desc_parameter><desc_parameter xml:space="preserve">chunk_size=65536</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Wrap a readable iterator with a reader yielding chunks of
                    a preferred size, otherwise leave iterator unchanged.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">iter</literal_strong> – an iter which may also be readable</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">chunk_size</literal_strong> – maximum size of chunk</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'cooperative_iter()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.cooperative_iter',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="cooperative_iter" ids="glance.common.utils.cooperative_iter" module="glance.common.utils" names="glance.common.utils.cooperative_iter"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">cooperative_iter</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iter</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Return an iterator which schedules after each
                    iteration. This can prevent eventlet thread starvation.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">iter</literal_strong> – an iterator to wrap</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'cooperative_read()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.cooperative_read',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="cooperative_read" ids="glance.common.utils.cooperative_read" module="glance.common.utils" names="glance.common.utils.cooperative_read"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">cooperative_read</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">fd</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Wrap a file descriptor’s read with a partial function which schedules
                    after each read. This can prevent eventlet thread starvation.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">fd</literal_strong> – a file descriptor to wrap</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'create_mashup_dict()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.create_mashup_dict',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="create_mashup_dict" ids="glance.common.utils.create_mashup_dict" module="glance.common.utils" names="glance.common.utils.create_mashup_dict"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">create_mashup_dict</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">image_meta</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Returns a dictionary-like mashup of the image core properties
                    and the image custom properties from given image metadata.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">image_meta</literal_strong> – metadata of image with core and custom properties</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'evaluate_filter_op()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.evaluate_filter_op',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="evaluate_filter_op" ids="glance.common.utils.evaluate_filter_op" module="glance.common.utils" names="glance.common.utils.evaluate_filter_op"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">evaluate_filter_op</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">value</desc_parameter><desc_parameter xml:space="preserve">operator</desc_parameter><desc_parameter xml:space="preserve">threshold</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Evaluate a comparison operator.
                    Designed for use on a comparative-filtering query field.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">value</literal_strong> – evaluated against the operator, as left side of expression</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">operator</literal_strong> – any supported filter operation</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">threshold</literal_strong> – to compare value against, as right side of expression</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Raises</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="glance.common.exception.InvalidFilterOperatorValue" refuri="glance.common.exception#glance.common.exception.InvalidFilterOperatorValue"><literal_strong>InvalidFilterOperatorValue</literal_strong></reference> – if an unknown operator is provided</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>boolean result of applied comparison</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'get_image_meta_from_headers()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.get_image_meta_from_headers',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_image_meta_from_headers" ids="glance.common.utils.get_image_meta_from_headers" module="glance.common.utils" names="glance.common.utils.get_image_meta_from_headers"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">get_image_meta_from_headers</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">response</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Processes HTTP headers from a supplied response that
                    match the x-image-meta and x-image-meta-property and
                    returns a mapping of image metadata and properties</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">response</literal_strong> – Response to process</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'get_test_suite_socket()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.get_test_suite_socket',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_test_suite_socket" ids="glance.common.utils.get_test_suite_socket" module="glance.common.utils" names="glance.common.utils.get_test_suite_socket"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">get_test_suite_socket</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'image_meta_to_http_headers()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.image_meta_to_http_headers',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="image_meta_to_http_headers" ids="glance.common.utils.image_meta_to_http_headers" module="glance.common.utils" names="glance.common.utils.image_meta_to_http_headers"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">image_meta_to_http_headers</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">image_meta</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Returns a set of image metadata into a dict
                    of HTTP headers that can be fed to either a Webob
                    Request object or an httplib.HTTP(S)Connection object</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">image_meta</literal_strong> – Mapping of image metadata</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'is_valid_fqdn()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.is_valid_fqdn',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_valid_fqdn" ids="glance.common.utils.is_valid_fqdn" module="glance.common.utils" names="glance.common.utils.is_valid_fqdn"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">is_valid_fqdn</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">fqdn</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Verify whether a host is a valid FQDN.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'is_valid_hostname()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.is_valid_hostname',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_valid_hostname" ids="glance.common.utils.is_valid_hostname" module="glance.common.utils" names="glance.common.utils.is_valid_hostname"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">is_valid_hostname</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">hostname</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Verify whether a hostname (not an FQDN) is valid.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'mutating()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.mutating',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="mutating" ids="glance.common.utils.mutating" module="glance.common.utils" names="glance.common.utils.mutating"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">mutating</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">func</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Decorator to enforce read-only logic</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'no_4byte_params()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.no_4byte_params',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="no_4byte_params" ids="glance.common.utils.no_4byte_params" module="glance.common.utils" names="glance.common.utils.no_4byte_params"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">no_4byte_params</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Checks that no 4 byte unicode characters are allowed
                    in dicts’ keys/values and string’s parameters</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'parse_valid_host_port()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.parse_valid_host_port',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="parse_valid_host_port" ids="glance.common.utils.parse_valid_host_port" module="glance.common.utils" names="glance.common.utils.parse_valid_host_port"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">parse_valid_host_port</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">host_port</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Given a “host:port” string, attempts to parse it as intelligently as
                    possible to determine if it is valid. This includes IPv6 [host]:port form,
                    IPv4 ip:port form, and hostname:port or fqdn:port form.</paragraph>
                <paragraph>Invalid inputs will raise a ValueError, while valid inputs will return
                    a (host, port) tuple where the port will always be of type int.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'safe_mkdirs()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.safe_mkdirs',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="safe_mkdirs" ids="glance.common.utils.safe_mkdirs" module="glance.common.utils" names="glance.common.utils.safe_mkdirs"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">safe_mkdirs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'setup_remote_pydev_debug()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.setup_remote_pydev_debug',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="setup_remote_pydev_debug" ids="glance.common.utils.setup_remote_pydev_debug" module="glance.common.utils" names="glance.common.utils.setup_remote_pydev_debug"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">setup_remote_pydev_debug</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">port</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'split_filter_op()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.split_filter_op',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="split_filter_op" ids="glance.common.utils.split_filter_op" module="glance.common.utils" names="glance.common.utils.split_filter_op"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">split_filter_op</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">expression</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Split operator from threshold in an expression.
                    Designed for use on a comparative-filtering query field.
                    When no operator is found, default to an equality comparison.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">expression</literal_strong> – the expression to parse</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>a tuple (operator, threshold) parsed from expression</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'split_filter_value_for_quotes()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.split_filter_value_for_quotes',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="split_filter_value_for_quotes" ids="glance.common.utils.split_filter_value_for_quotes" module="glance.common.utils" names="glance.common.utils.split_filter_value_for_quotes"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">split_filter_value_for_quotes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">value</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Split filter values</paragraph>
                <paragraph>Split values by commas and quotes for ‘in’ operator, according api-wg.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stash_conf_values()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.stash_conf_values',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stash_conf_values" ids="glance.common.utils.stash_conf_values" module="glance.common.utils" names="glance.common.utils.stash_conf_values"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">stash_conf_values</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Make a copy of some of the current global CONF’s settings.
                    Allows determining if any of these values have changed
                    when the config is reloaded.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'validate_key_cert()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.validate_key_cert',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="validate_key_cert" ids="glance.common.utils.validate_key_cert" module="glance.common.utils" names="glance.common.utils.validate_key_cert"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">validate_key_cert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">key_file</desc_parameter><desc_parameter xml:space="preserve">cert_file</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'validate_quotes()\ (in\ module\ glance.common.utils)',\ u'glance.common.utils.validate_quotes',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="validate_quotes" ids="glance.common.utils.validate_quotes" module="glance.common.utils" names="glance.common.utils.validate_quotes"><desc_addname xml:space="preserve">glance.common.utils.</desc_addname><desc_name xml:space="preserve">validate_quotes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">value</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Validate filter values</paragraph>
                <paragraph>Validation opening/closing quotes in the expression.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
