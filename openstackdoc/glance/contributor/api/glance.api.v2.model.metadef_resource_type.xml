<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/contributor/api/glance.api.v2.model.metadef_resource_type.rst">
    <section ids="module-glance.api.v2.model.metadef_resource_type the-glance-api-v2-model-metadef-resource-type-module" names="the\ glance.api.v2.model.metadef_resource_type\ module">
        <title>The <reference internal="True" refid="module-glance.api.v2.model.metadef_resource_type" reftitle="glance.api.v2.model.metadef_resource_type"><literal classes="xref py py-mod">glance.api.v2.model.metadef_resource_type</literal></reference> Module</title>
        <index entries="['single',\ u'glance.api.v2.model.metadef_resource_type\ (module)',\ u'module-glance.api.v2.model.metadef_resource_type',\ '',\ None]"></index>
        <index entries="['single',\ u'ResourceType\ (class\ in\ glance.api.v2.model.metadef_resource_type)',\ u'glance.api.v2.model.metadef_resource_type.ResourceType',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ResourceType" ids="glance.api.v2.model.metadef_resource_type.ResourceType" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceType"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">glance.api.v2.model.metadef_resource_type.</desc_addname><desc_name xml:space="preserve">ResourceType</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">wsme.types.Base</literal>, <reference internal="True" reftitle="glance.common.wsme_utils.WSMEModelTransformer" refuri="glance.common.wsme_utils#glance.common.wsme_utils.WSMEModelTransformer"><literal classes="xref py py-class">glance.common.wsme_utils.WSMEModelTransformer</literal></reference></paragraph>
                <index entries="['single',\ u'created_at\ (glance.api.v2.model.metadef_resource_type.ResourceType\ attribute)',\ u'glance.api.v2.model.metadef_resource_type.ResourceType.created_at',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ResourceType" first="False" fullname="ResourceType.created_at" ids="glance.api.v2.model.metadef_resource_type.ResourceType.created_at" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceType.created_at"><desc_name xml:space="preserve">created_at</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'name\ (glance.api.v2.model.metadef_resource_type.ResourceType\ attribute)',\ u'glance.api.v2.model.metadef_resource_type.ResourceType.name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ResourceType" first="False" fullname="ResourceType.name" ids="glance.api.v2.model.metadef_resource_type.ResourceType.name" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceType.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'updated_at\ (glance.api.v2.model.metadef_resource_type.ResourceType\ attribute)',\ u'glance.api.v2.model.metadef_resource_type.ResourceType.updated_at',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ResourceType" first="False" fullname="ResourceType.updated_at" ids="glance.api.v2.model.metadef_resource_type.ResourceType.updated_at" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceType.updated_at"><desc_name xml:space="preserve">updated_at</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ResourceTypeAssociation\ (class\ in\ glance.api.v2.model.metadef_resource_type)',\ u'glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ResourceTypeAssociation" ids="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">glance.api.v2.model.metadef_resource_type.</desc_addname><desc_name xml:space="preserve">ResourceTypeAssociation</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">wsme.types.Base</literal>, <reference internal="True" reftitle="glance.common.wsme_utils.WSMEModelTransformer" refuri="glance.common.wsme_utils#glance.common.wsme_utils.WSMEModelTransformer"><literal classes="xref py py-class">glance.common.wsme_utils.WSMEModelTransformer</literal></reference></paragraph>
                <index entries="['single',\ u'created_at\ (glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation\ attribute)',\ u'glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.created_at',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ResourceTypeAssociation" first="False" fullname="ResourceTypeAssociation.created_at" ids="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.created_at" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.created_at"><desc_name xml:space="preserve">created_at</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'name\ (glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation\ attribute)',\ u'glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ResourceTypeAssociation" first="False" fullname="ResourceTypeAssociation.name" ids="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.name" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'prefix\ (glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation\ attribute)',\ u'glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.prefix',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ResourceTypeAssociation" first="False" fullname="ResourceTypeAssociation.prefix" ids="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.prefix" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.prefix"><desc_name xml:space="preserve">prefix</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'properties_target\ (glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation\ attribute)',\ u'glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.properties_target',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ResourceTypeAssociation" first="False" fullname="ResourceTypeAssociation.properties_target" ids="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.properties_target" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.properties_target"><desc_name xml:space="preserve">properties_target</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'updated_at\ (glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation\ attribute)',\ u'glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.updated_at',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ResourceTypeAssociation" first="False" fullname="ResourceTypeAssociation.updated_at" ids="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.updated_at" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociation.updated_at"><desc_name xml:space="preserve">updated_at</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ResourceTypeAssociations\ (class\ in\ glance.api.v2.model.metadef_resource_type)',\ u'glance.api.v2.model.metadef_resource_type.ResourceTypeAssociations',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ResourceTypeAssociations" ids="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociations" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociations"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">glance.api.v2.model.metadef_resource_type.</desc_addname><desc_name xml:space="preserve">ResourceTypeAssociations</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">wsme.types.Base</literal>, <reference internal="True" reftitle="glance.common.wsme_utils.WSMEModelTransformer" refuri="glance.common.wsme_utils#glance.common.wsme_utils.WSMEModelTransformer"><literal classes="xref py py-class">glance.common.wsme_utils.WSMEModelTransformer</literal></reference></paragraph>
                <index entries="['single',\ u'resource_type_associations\ (glance.api.v2.model.metadef_resource_type.ResourceTypeAssociations\ attribute)',\ u'glance.api.v2.model.metadef_resource_type.ResourceTypeAssociations.resource_type_associations',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ResourceTypeAssociations" first="False" fullname="ResourceTypeAssociations.resource_type_associations" ids="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociations.resource_type_associations" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceTypeAssociations.resource_type_associations"><desc_name xml:space="preserve">resource_type_associations</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ResourceTypes\ (class\ in\ glance.api.v2.model.metadef_resource_type)',\ u'glance.api.v2.model.metadef_resource_type.ResourceTypes',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ResourceTypes" ids="glance.api.v2.model.metadef_resource_type.ResourceTypes" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceTypes"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">glance.api.v2.model.metadef_resource_type.</desc_addname><desc_name xml:space="preserve">ResourceTypes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">wsme.types.Base</literal>, <reference internal="True" reftitle="glance.common.wsme_utils.WSMEModelTransformer" refuri="glance.common.wsme_utils#glance.common.wsme_utils.WSMEModelTransformer"><literal classes="xref py py-class">glance.common.wsme_utils.WSMEModelTransformer</literal></reference></paragraph>
                <index entries="['single',\ u'resource_types\ (glance.api.v2.model.metadef_resource_type.ResourceTypes\ attribute)',\ u'glance.api.v2.model.metadef_resource_type.ResourceTypes.resource_types',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ResourceTypes" first="False" fullname="ResourceTypes.resource_types" ids="glance.api.v2.model.metadef_resource_type.ResourceTypes.resource_types" module="glance.api.v2.model.metadef_resource_type" names="glance.api.v2.model.metadef_resource_type.ResourceTypes.resource_types"><desc_name xml:space="preserve">resource_types</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
