<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/contributor/api/glance.api.v2.model.metadef_namespace.rst">
    <section ids="module-glance.api.v2.model.metadef_namespace the-glance-api-v2-model-metadef-namespace-module" names="the\ glance.api.v2.model.metadef_namespace\ module">
        <title>The <reference internal="True" refid="module-glance.api.v2.model.metadef_namespace" reftitle="glance.api.v2.model.metadef_namespace"><literal classes="xref py py-mod">glance.api.v2.model.metadef_namespace</literal></reference> Module</title>
        <index entries="['single',\ u'glance.api.v2.model.metadef_namespace\ (module)',\ u'module-glance.api.v2.model.metadef_namespace',\ '',\ None]"></index>
        <index entries="['single',\ u'Namespace\ (class\ in\ glance.api.v2.model.metadef_namespace)',\ u'glance.api.v2.model.metadef_namespace.Namespace',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Namespace" ids="glance.api.v2.model.metadef_namespace.Namespace" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">glance.api.v2.model.metadef_namespace.</desc_addname><desc_name xml:space="preserve">Namespace</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">wsme.types.Base</literal>, <reference internal="True" reftitle="glance.common.wsme_utils.WSMEModelTransformer" refuri="glance.common.wsme_utils#glance.common.wsme_utils.WSMEModelTransformer"><literal classes="xref py py-class">glance.common.wsme_utils.WSMEModelTransformer</literal></reference></paragraph>
                <index entries="['single',\ u'created_at\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.created_at',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.created_at" ids="glance.api.v2.model.metadef_namespace.Namespace.created_at" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.created_at"><desc_name xml:space="preserve">created_at</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'description\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.description',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.description" ids="glance.api.v2.model.metadef_namespace.Namespace.description" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.description"><desc_name xml:space="preserve">description</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'display_name\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.display_name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.display_name" ids="glance.api.v2.model.metadef_namespace.Namespace.display_name" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.display_name"><desc_name xml:space="preserve">display_name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'namespace\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.namespace',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.namespace" ids="glance.api.v2.model.metadef_namespace.Namespace.namespace" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.namespace"><desc_name xml:space="preserve">namespace</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'objects\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.objects',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.objects" ids="glance.api.v2.model.metadef_namespace.Namespace.objects" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.objects"><desc_name xml:space="preserve">objects</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'owner\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.owner',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.owner" ids="glance.api.v2.model.metadef_namespace.Namespace.owner" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.owner"><desc_name xml:space="preserve">owner</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'properties\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.properties',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.properties" ids="glance.api.v2.model.metadef_namespace.Namespace.properties" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.properties"><desc_name xml:space="preserve">properties</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'protected\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.protected',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.protected" ids="glance.api.v2.model.metadef_namespace.Namespace.protected" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.protected"><desc_name xml:space="preserve">protected</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'resource_type_associations\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.resource_type_associations',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.resource_type_associations" ids="glance.api.v2.model.metadef_namespace.Namespace.resource_type_associations" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.resource_type_associations"><desc_name xml:space="preserve">resource_type_associations</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'schema\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.schema',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.schema" ids="glance.api.v2.model.metadef_namespace.Namespace.schema" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.schema"><desc_name xml:space="preserve">schema</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'self\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.self',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.self" ids="glance.api.v2.model.metadef_namespace.Namespace.self" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.self"><desc_name xml:space="preserve">self</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'tags\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.tags',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.tags" ids="glance.api.v2.model.metadef_namespace.Namespace.tags" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.tags"><desc_name xml:space="preserve">tags</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'to_model_properties()\ (glance.api.v2.model.metadef_namespace.Namespace\ static\ method)',\ u'glance.api.v2.model.metadef_namespace.Namespace.to_model_properties',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.to_model_properties" ids="glance.api.v2.model.metadef_namespace.Namespace.to_model_properties" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.to_model_properties"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">to_model_properties</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">db_property_types</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'updated_at\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.updated_at',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.updated_at" ids="glance.api.v2.model.metadef_namespace.Namespace.updated_at" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.updated_at"><desc_name xml:space="preserve">updated_at</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'visibility\ (glance.api.v2.model.metadef_namespace.Namespace\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespace.visibility',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespace" first="False" fullname="Namespace.visibility" ids="glance.api.v2.model.metadef_namespace.Namespace.visibility" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespace.visibility"><desc_name xml:space="preserve">visibility</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'Namespaces\ (class\ in\ glance.api.v2.model.metadef_namespace)',\ u'glance.api.v2.model.metadef_namespace.Namespaces',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Namespaces" ids="glance.api.v2.model.metadef_namespace.Namespaces" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespaces"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">glance.api.v2.model.metadef_namespace.</desc_addname><desc_name xml:space="preserve">Namespaces</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">wsme.types.Base</literal>, <reference internal="True" reftitle="glance.common.wsme_utils.WSMEModelTransformer" refuri="glance.common.wsme_utils#glance.common.wsme_utils.WSMEModelTransformer"><literal classes="xref py py-class">glance.common.wsme_utils.WSMEModelTransformer</literal></reference></paragraph>
                <index entries="['single',\ u'first\ (glance.api.v2.model.metadef_namespace.Namespaces\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespaces.first',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespaces" first="False" fullname="Namespaces.first" ids="glance.api.v2.model.metadef_namespace.Namespaces.first" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespaces.first"><desc_name xml:space="preserve">first</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'namespaces\ (glance.api.v2.model.metadef_namespace.Namespaces\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespaces.namespaces',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespaces" first="False" fullname="Namespaces.namespaces" ids="glance.api.v2.model.metadef_namespace.Namespaces.namespaces" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespaces.namespaces"><desc_name xml:space="preserve">namespaces</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'next\ (glance.api.v2.model.metadef_namespace.Namespaces\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespaces.next',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespaces" first="False" fullname="Namespaces.next" ids="glance.api.v2.model.metadef_namespace.Namespaces.next" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespaces.next"><desc_name xml:space="preserve">next</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'schema\ (glance.api.v2.model.metadef_namespace.Namespaces\ attribute)',\ u'glance.api.v2.model.metadef_namespace.Namespaces.schema',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Namespaces" first="False" fullname="Namespaces.schema" ids="glance.api.v2.model.metadef_namespace.Namespaces.schema" module="glance.api.v2.model.metadef_namespace" names="glance.api.v2.model.metadef_namespace.Namespaces.schema"><desc_name xml:space="preserve">schema</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
