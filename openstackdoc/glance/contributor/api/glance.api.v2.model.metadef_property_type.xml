<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/contributor/api/glance.api.v2.model.metadef_property_type.rst">
    <section ids="module-glance.api.v2.model.metadef_property_type the-glance-api-v2-model-metadef-property-type-module" names="the\ glance.api.v2.model.metadef_property_type\ module">
        <title>The <reference internal="True" refid="module-glance.api.v2.model.metadef_property_type" reftitle="glance.api.v2.model.metadef_property_type"><literal classes="xref py py-mod">glance.api.v2.model.metadef_property_type</literal></reference> Module</title>
        <index entries="['single',\ u'glance.api.v2.model.metadef_property_type\ (module)',\ u'module-glance.api.v2.model.metadef_property_type',\ '',\ None]"></index>
        <index entries="['single',\ u'PropertyType\ (class\ in\ glance.api.v2.model.metadef_property_type)',\ u'glance.api.v2.model.metadef_property_type.PropertyType',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="PropertyType" ids="glance.api.v2.model.metadef_property_type.PropertyType" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">glance.api.v2.model.metadef_property_type.</desc_addname><desc_name xml:space="preserve">PropertyType</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">wsme.types.Base</literal>, <reference internal="True" reftitle="glance.common.wsme_utils.WSMEModelTransformer" refuri="glance.common.wsme_utils#glance.common.wsme_utils.WSMEModelTransformer"><literal classes="xref py py-class">glance.common.wsme_utils.WSMEModelTransformer</literal></reference></paragraph>
                <index entries="['single',\ u'additionalItems\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.additionalItems',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.additionalItems" ids="glance.api.v2.model.metadef_property_type.PropertyType.additionalItems" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.additionalItems"><desc_name xml:space="preserve">additionalItems</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'confidential\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.confidential',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.confidential" ids="glance.api.v2.model.metadef_property_type.PropertyType.confidential" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.confidential"><desc_name xml:space="preserve">confidential</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'default\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.default',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.default" ids="glance.api.v2.model.metadef_property_type.PropertyType.default" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.default"><desc_name xml:space="preserve">default</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'description\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.description',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.description" ids="glance.api.v2.model.metadef_property_type.PropertyType.description" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.description"><desc_name xml:space="preserve">description</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'enum\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.enum',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.enum" ids="glance.api.v2.model.metadef_property_type.PropertyType.enum" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.enum"><desc_name xml:space="preserve">enum</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'items\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.items',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.items" ids="glance.api.v2.model.metadef_property_type.PropertyType.items" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.items"><desc_name xml:space="preserve">items</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'maxItems\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.maxItems',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.maxItems" ids="glance.api.v2.model.metadef_property_type.PropertyType.maxItems" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.maxItems"><desc_name xml:space="preserve">maxItems</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'maxLength\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.maxLength',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.maxLength" ids="glance.api.v2.model.metadef_property_type.PropertyType.maxLength" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.maxLength"><desc_name xml:space="preserve">maxLength</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'maximum\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.maximum',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.maximum" ids="glance.api.v2.model.metadef_property_type.PropertyType.maximum" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.maximum"><desc_name xml:space="preserve">maximum</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'minItems\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.minItems',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.minItems" ids="glance.api.v2.model.metadef_property_type.PropertyType.minItems" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.minItems"><desc_name xml:space="preserve">minItems</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'minLength\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.minLength',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.minLength" ids="glance.api.v2.model.metadef_property_type.PropertyType.minLength" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.minLength"><desc_name xml:space="preserve">minLength</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'minimum\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.minimum',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.minimum" ids="glance.api.v2.model.metadef_property_type.PropertyType.minimum" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.minimum"><desc_name xml:space="preserve">minimum</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'name\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.name" ids="glance.api.v2.model.metadef_property_type.PropertyType.name" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'operators\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.operators',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.operators" ids="glance.api.v2.model.metadef_property_type.PropertyType.operators" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.operators"><desc_name xml:space="preserve">operators</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'pattern\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.pattern',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.pattern" ids="glance.api.v2.model.metadef_property_type.PropertyType.pattern" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.pattern"><desc_name xml:space="preserve">pattern</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'readonly\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.readonly',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.readonly" ids="glance.api.v2.model.metadef_property_type.PropertyType.readonly" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.readonly"><desc_name xml:space="preserve">readonly</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'title\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.title',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.title" ids="glance.api.v2.model.metadef_property_type.PropertyType.title" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.title"><desc_name xml:space="preserve">title</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'type\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.type" ids="glance.api.v2.model.metadef_property_type.PropertyType.type" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.type"><desc_name xml:space="preserve">type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'uniqueItems\ (glance.api.v2.model.metadef_property_type.PropertyType\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyType.uniqueItems',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyType" first="False" fullname="PropertyType.uniqueItems" ids="glance.api.v2.model.metadef_property_type.PropertyType.uniqueItems" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyType.uniqueItems"><desc_name xml:space="preserve">uniqueItems</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'PropertyTypes\ (class\ in\ glance.api.v2.model.metadef_property_type)',\ u'glance.api.v2.model.metadef_property_type.PropertyTypes',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="PropertyTypes" ids="glance.api.v2.model.metadef_property_type.PropertyTypes" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyTypes"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">glance.api.v2.model.metadef_property_type.</desc_addname><desc_name xml:space="preserve">PropertyTypes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">wsme.types.Base</literal>, <reference internal="True" reftitle="glance.common.wsme_utils.WSMEModelTransformer" refuri="glance.common.wsme_utils#glance.common.wsme_utils.WSMEModelTransformer"><literal classes="xref py py-class">glance.common.wsme_utils.WSMEModelTransformer</literal></reference></paragraph>
                <index entries="['single',\ u'properties\ (glance.api.v2.model.metadef_property_type.PropertyTypes\ attribute)',\ u'glance.api.v2.model.metadef_property_type.PropertyTypes.properties',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PropertyTypes" first="False" fullname="PropertyTypes.properties" ids="glance.api.v2.model.metadef_property_type.PropertyTypes.properties" module="glance.api.v2.model.metadef_property_type" names="glance.api.v2.model.metadef_property_type.PropertyTypes.properties"><desc_name xml:space="preserve">properties</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
