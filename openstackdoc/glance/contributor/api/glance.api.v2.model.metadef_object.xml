<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/contributor/api/glance.api.v2.model.metadef_object.rst">
    <section ids="module-glance.api.v2.model.metadef_object the-glance-api-v2-model-metadef-object-module" names="the\ glance.api.v2.model.metadef_object\ module">
        <title>The <reference internal="True" refid="module-glance.api.v2.model.metadef_object" reftitle="glance.api.v2.model.metadef_object"><literal classes="xref py py-mod">glance.api.v2.model.metadef_object</literal></reference> Module</title>
        <index entries="['single',\ u'glance.api.v2.model.metadef_object\ (module)',\ u'module-glance.api.v2.model.metadef_object',\ '',\ None]"></index>
        <index entries="['single',\ u'MetadefObject\ (class\ in\ glance.api.v2.model.metadef_object)',\ u'glance.api.v2.model.metadef_object.MetadefObject',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="MetadefObject" ids="glance.api.v2.model.metadef_object.MetadefObject" module="glance.api.v2.model.metadef_object" names="glance.api.v2.model.metadef_object.MetadefObject"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">glance.api.v2.model.metadef_object.</desc_addname><desc_name xml:space="preserve">MetadefObject</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">wsme.types.Base</literal>, <reference internal="True" reftitle="glance.common.wsme_utils.WSMEModelTransformer" refuri="glance.common.wsme_utils#glance.common.wsme_utils.WSMEModelTransformer"><literal classes="xref py py-class">glance.common.wsme_utils.WSMEModelTransformer</literal></reference></paragraph>
                <index entries="['single',\ u'created_at\ (glance.api.v2.model.metadef_object.MetadefObject\ attribute)',\ u'glance.api.v2.model.metadef_object.MetadefObject.created_at',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadefObject" first="False" fullname="MetadefObject.created_at" ids="glance.api.v2.model.metadef_object.MetadefObject.created_at" module="glance.api.v2.model.metadef_object" names="glance.api.v2.model.metadef_object.MetadefObject.created_at"><desc_name xml:space="preserve">created_at</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'description\ (glance.api.v2.model.metadef_object.MetadefObject\ attribute)',\ u'glance.api.v2.model.metadef_object.MetadefObject.description',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadefObject" first="False" fullname="MetadefObject.description" ids="glance.api.v2.model.metadef_object.MetadefObject.description" module="glance.api.v2.model.metadef_object" names="glance.api.v2.model.metadef_object.MetadefObject.description"><desc_name xml:space="preserve">description</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'name\ (glance.api.v2.model.metadef_object.MetadefObject\ attribute)',\ u'glance.api.v2.model.metadef_object.MetadefObject.name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadefObject" first="False" fullname="MetadefObject.name" ids="glance.api.v2.model.metadef_object.MetadefObject.name" module="glance.api.v2.model.metadef_object" names="glance.api.v2.model.metadef_object.MetadefObject.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'properties\ (glance.api.v2.model.metadef_object.MetadefObject\ attribute)',\ u'glance.api.v2.model.metadef_object.MetadefObject.properties',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadefObject" first="False" fullname="MetadefObject.properties" ids="glance.api.v2.model.metadef_object.MetadefObject.properties" module="glance.api.v2.model.metadef_object" names="glance.api.v2.model.metadef_object.MetadefObject.properties"><desc_name xml:space="preserve">properties</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'required\ (glance.api.v2.model.metadef_object.MetadefObject\ attribute)',\ u'glance.api.v2.model.metadef_object.MetadefObject.required',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadefObject" first="False" fullname="MetadefObject.required" ids="glance.api.v2.model.metadef_object.MetadefObject.required" module="glance.api.v2.model.metadef_object" names="glance.api.v2.model.metadef_object.MetadefObject.required"><desc_name xml:space="preserve">required</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'schema\ (glance.api.v2.model.metadef_object.MetadefObject\ attribute)',\ u'glance.api.v2.model.metadef_object.MetadefObject.schema',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadefObject" first="False" fullname="MetadefObject.schema" ids="glance.api.v2.model.metadef_object.MetadefObject.schema" module="glance.api.v2.model.metadef_object" names="glance.api.v2.model.metadef_object.MetadefObject.schema"><desc_name xml:space="preserve">schema</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'self\ (glance.api.v2.model.metadef_object.MetadefObject\ attribute)',\ u'glance.api.v2.model.metadef_object.MetadefObject.self',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadefObject" first="False" fullname="MetadefObject.self" ids="glance.api.v2.model.metadef_object.MetadefObject.self" module="glance.api.v2.model.metadef_object" names="glance.api.v2.model.metadef_object.MetadefObject.self"><desc_name xml:space="preserve">self</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'updated_at\ (glance.api.v2.model.metadef_object.MetadefObject\ attribute)',\ u'glance.api.v2.model.metadef_object.MetadefObject.updated_at',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadefObject" first="False" fullname="MetadefObject.updated_at" ids="glance.api.v2.model.metadef_object.MetadefObject.updated_at" module="glance.api.v2.model.metadef_object" names="glance.api.v2.model.metadef_object.MetadefObject.updated_at"><desc_name xml:space="preserve">updated_at</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'MetadefObjects\ (class\ in\ glance.api.v2.model.metadef_object)',\ u'glance.api.v2.model.metadef_object.MetadefObjects',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="MetadefObjects" ids="glance.api.v2.model.metadef_object.MetadefObjects" module="glance.api.v2.model.metadef_object" names="glance.api.v2.model.metadef_object.MetadefObjects"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">glance.api.v2.model.metadef_object.</desc_addname><desc_name xml:space="preserve">MetadefObjects</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">wsme.types.Base</literal>, <reference internal="True" reftitle="glance.common.wsme_utils.WSMEModelTransformer" refuri="glance.common.wsme_utils#glance.common.wsme_utils.WSMEModelTransformer"><literal classes="xref py py-class">glance.common.wsme_utils.WSMEModelTransformer</literal></reference></paragraph>
                <index entries="['single',\ u'objects\ (glance.api.v2.model.metadef_object.MetadefObjects\ attribute)',\ u'glance.api.v2.model.metadef_object.MetadefObjects.objects',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadefObjects" first="False" fullname="MetadefObjects.objects" ids="glance.api.v2.model.metadef_object.MetadefObjects.objects" module="glance.api.v2.model.metadef_object" names="glance.api.v2.model.metadef_object.MetadefObjects.objects"><desc_name xml:space="preserve">objects</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'schema\ (glance.api.v2.model.metadef_object.MetadefObjects\ attribute)',\ u'glance.api.v2.model.metadef_object.MetadefObjects.schema',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadefObjects" first="False" fullname="MetadefObjects.schema" ids="glance.api.v2.model.metadef_object.MetadefObjects.schema" module="glance.api.v2.model.metadef_object" names="glance.api.v2.model.metadef_object.MetadefObjects.schema"><desc_name xml:space="preserve">schema</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Complex type attribute definition.</paragraph>
                        <paragraph>Example:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = int
    mandatoryvalue = wsattr(int, mandatory=True)
    named_value = wsattr(int, name='named.value')</literal_block>
                        <paragraph>After inspection, the non-wsattr attributes will be replaced, and
                            the above class will be equivalent to:</paragraph>
                        <literal_block xml:space="preserve">class MyComplexType(wsme.types.Base):
    optionalvalue = wsattr(int)
    mandatoryvalue = wsattr(int, mandatory=True)</literal_block>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
