<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/glance/doc/source/contributor/release-cpl.rst">
    <section ids="glance-release-cpl" names="glance\ release\ cpl">
        <title>Glance Release CPL</title>
        <paragraph>So you’ve volunteered to be the Glance Release Cross-Project Liaison (CPL) and
            now you’re worried about what you’ve gotten yourself into. Well, here are some
            tips for you from former release CPLs.</paragraph>
        <paragraph>You will be doing vital and important work both for Glance and OpenStack.
            Releases have to be available at the scheduled milestones and RC dates because
            end users, other OpenStack projects, and packagers rely on releases being
            available so they can begin their work. Missing a date can have a cascading
            effect on all the people who are depending on the release being available at
            its scheduled time. Sounds scary, I know, but you’ll also get a lot of
            satisfaction out of having a key role in keeping OpenStack running smoothly.</paragraph>
        <section ids="who-you-have-to-be" names="who\ you\ have\ to\ be">
            <title>Who You Have to Be</title>
            <paragraph>You do <strong>not</strong> have to be:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>The PTL</paragraph>
                </list_item>
                <list_item>
                    <paragraph>A core reviewer</paragraph>
                </list_item>
                <list_item>
                    <paragraph>A stable-branch core reviewer/maintainer</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>You <strong>do</strong> have to be:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>A member of the Glance community</paragraph>
                </list_item>
                <list_item>
                    <paragraph>A person who has signed the OpenStack CLA (or whatever is in use at the time
                        you are reading this)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Someone familiar with or willing to learn git, gerrit, etc.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Someone who will be comfortable saying “No” when colleagues want to sneak
                        just one more thing in before a deadline.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Someone willing to work with the release team on a regular basis and attend
                        their <reference name="weekly meeting" refuri="http://eavesdrop.openstack.org/#Release_Team_Meeting">weekly meeting</reference>.</paragraph>
                    <paragraph>Just as the stable maintenance team is responsible for the stability and
                        quality of the stable branches, the release CPL must take on responsibility
                        for the stability and quality of every release artifact of Glance. If you
                        are too lenient with your colleagues, you might be responsible for
                        introducing a catastrophic or destabilizing release. Suppose someone,
                        possibly even the PTL, shows up right before RC1 with a large but probably
                        innocuous change. Even if this passes the gate, you should err on the side
                        of caution and ask to not allow it to merge.
                        (This has happened <reference name="before" refuri="https://review.openstack.org/#/c/427535/">before</reference><target ids="before" names="before" refuri="https://review.openstack.org/#/c/427535/"></target> )</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>A Release CPL has authority within the Glance project. They have authority
                through two measures:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Being the person who volunteered to do this hard work</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Maintaining a healthy relationship with the PTL and their Glance colleagues.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Use this authority to ensure that each Glance release is the best possible.
                The PTL’s job is to lead technical direction, your job is to shepherd cats and
                help them focus on the priorities for each release.</paragraph>
        </section>
        <section ids="what-this-does-not-grant-you" names="what\ this\ does\ not\ grant\ you">
            <title>What This Does Not Grant You</title>
            <paragraph>Volunteering to be Release CPL does not give you the right to be a Glance Core
                Reviewer. That is a separate role that is determined based on the quality of
                your reviews. You should be primarily motivated by wanting to help the team
                ship an excellent release.</paragraph>
        </section>
        <section ids="get-to-know-the-release-team" names="get\ to\ know\ the\ release\ team">
            <title>Get To Know The Release Team</title>
            <paragraph>OpenStack has teams for most projects and efforts. In that vein, the release
                team works on tooling to make releasing projects easier as well as verifying
                releases. As CPL it is your job to work with this team. At the time of this
                writing, the team organizes in <literal>#openstack-release</literal> and has a <reference name="weekly meeting" refuri="http://eavesdrop.openstack.org/#Release_Team_Meeting">weekly
                    meeting</reference>. Idling in their team channel and attending the meeting are two very
                strongly suggested (if not required) actions for the CPL. You should introduce
                yourself well in advance of the release deadlines. You should also take the
                time to research what actions you may need to take in advance of those
                deadlines as the release team becomes very busy around those deadlines.</paragraph>
        </section>
        <section ids="familiarize-yourself-with-community-goals" names="familiarize\ yourself\ with\ community\ goals">
            <title>Familiarize Yourself with Community Goals</title>
            <paragraph>Community Goals <strong>are</strong> Glance Goals. They are documented and tracked in the
                <reference name="openstack/governance" refuri="https://git.openstack.org/cgit/openstack/governance">openstack/governance</reference> repository. In Ocata, for example, the CPL assumed the
                responsibility of monitoring those goals and reporting back to the TC when
                we completed them.</paragraph>
            <paragraph>In my opinion, it makes sense for the Release CPL to perform this task because
                they are the ones who are keenly aware of the deadlines in the release
                schedule and can remind the assigned developers of those deadlines.</paragraph>
            <paragraph>It also is important for the Release CPL to coordinate with the PTL to ensure
                that there are project-specific deadlines for the goals. This will ensure the
                work is completed and reviewed in a timely fashion and hopefully early enough
                to catch any bugs that shake out of the work.</paragraph>
        </section>
        <section ids="familiarize-yourself-with-the-release-tooling" names="familiarize\ yourself\ with\ the\ release\ tooling">
            <title>Familiarize Yourself with the Release Tooling</title>
            <paragraph>The Release Team has worked to automate much of the release process over the
                last several development cycles. Much of the tooling is controlled by updating
                certain YAML files in the <reference name="openstack/releases" refuri="https://git.openstack.org/cgit/openstack/releases">openstack/releases</reference> repository.</paragraph>
            <paragraph>To release a Glance project, look in the <literal>deliverables</literal> directory for the
                cycle’s codename, e.g., <literal>pike</literal>, and then look for the project inside of
                that. Update that using the appropriate syntax and after the release team has
                reviewed your request and approved it, the rest will be automated for you.</paragraph>
            <paragraph>For more information on release management process and tooling, refer to
                <reference name="release management process guide" refuri="https://docs.openstack.org/project-team-guide/release-management.html">release management process guide</reference> and <reference name="release management tooling guide" refuri="http://git.openstack.org/cgit/openstack/releases/tree/README.rst">release management tooling guide</reference>.</paragraph>
        </section>
        <section ids="familiarize-yourself-with-the-bug-tracker" names="familiarize\ yourself\ with\ the\ bug\ tracker">
            <title>Familiarize Yourself with the Bug Tracker</title>
            <paragraph>The <reference name="bug tracker" refuri="https://bugs.launchpad.net/glance">bug tracker</reference> is the best way to determine what items are slated to get
                in for each particular milestone or cycle release. Use it to the best of its
                capabilities.</paragraph>
        </section>
        <section ids="release-stability-and-the-gate" names="release\ stability\ and\ the\ gate">
            <title>Release Stability and the Gate</title>
            <paragraph>As you may know at this point, OpenStack’s Integrated Gate will begin to
                experience longer queue times and more frequent unrelated failures around
                milestones and release deadlines (as other projects attempt to sneak things
                in at the last minute).</paragraph>
            <paragraph>You may help your colleagues (and yourself) if you advocate for deadlines on
                features, etc., at least a week in advance of the actual release deadline.
                This can apply to all release deadlines (milestone, release candidate, final).
                If you can stabilize your project prior to the flurry of activity, you will
                ship a better product. You can also then focus on bug fixing reviews in the
                interim between your project priorities deadline and the actual release
                deadline.</paragraph>
        </section>
        <section ids="checklist" names="checklist">
            <title>Checklist</title>
            <paragraph>The release team will set dates for all the milestones for each release. The
                release schedule can be found from this page:
                <reference refuri="https://releases.openstack.org/index.html">https://releases.openstack.org/index.html</reference>
                There are checklists to follow for various important release aspects:</paragraph>
            <section ids="glance-specific-goals" names="glance\ specific\ goals">
                <title>Glance Specific Goals</title>
                <paragraph>While the release team sets dates for community-wide releases, you should work
                    with the PTL to set Glance specific deadlines/events such spec proposal freeze,
                    spec freeze, mid-cycle, bug squash and review squash etc. Also, you can set
                    additional deadlines for Glance priorities to ensure work is on-track for a
                    timely release.</paragraph>
                <paragraph>You are also responsible for ensuring PTL and other concerned individuals are
                    aware and reminded of the events/deadlines to ensure timely release.</paragraph>
            </section>
            <section ids="milestone-release" names="milestone\ release">
                <title>Milestone Release</title>
                <paragraph>The release schedule for the current cycle will give you a range of dates for
                    each milestone release. It is your job to propose the release for Glance
                    sometime during that range and ensure the release is created. This means the
                    following:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Showing up at meetings to announce the planned date weeks in advance.</paragraph>
                        <paragraph>Your colleagues on the Glance team will need at least 4 weeks notice so they
                            can plan and prioritize what work should be included in the milestone.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Reminding your colleagues what the stated priorities for that milestone
                            were, their progress, etc.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Being inflexible in the release date. As soon as you pick your date, stick
                            to it. If a feature slips a milestone to the next, it is not the end of the
                            world. It is not ideal, but Glance <emphasis>needs</emphasis> to release its milestone as soon
                            as possible.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Proposing the release in a timely and correct fashion on the day you stated.
                            You may have colleagues try to argue their case to the release team. This is
                            when your collaboration with the PTL will be necessary. The PTL needs to
                            help affirm your decision to release the version of the project you can on
                            the day you decide it.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Release <literal>glance_store</literal> and <literal>python-glanceclient</literal> at least once per
                            milestone.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Write <reference name="release notes" refuri="https://docs.openstack.org/project-team-guide/release-management.html#managing-release-notes">release notes</reference></paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="release-candidate-releases" names="release\ candidate\ releases">
                <title>Release Candidate Releases</title>
                <paragraph>The release candidate release period is similarly scoped to a few days. It is
                    even more important that Glance release during that period. To help your
                    colleagues, try to schedule this release as close to the end of that range as
                    possible. Once RC1 is released, only bugs introduced since the last milestone
                    that are going to compromise the integrity of the release should be merged.
                    Again, your duties include all of the Milestone Release duties plus the
                    following:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>When proposing the release, you need to appropriately configure the release
                            tooling to create a stable branch. If you do not, then you have not
                            appropriately created the release candidate.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Keeping a <emphasis>very</emphasis> watchful eye on what is proposed to and approved for master
                            as well as your new stable branch. Again, automated updates from release
                            tooling and <emphasis>release critical</emphasis> bugs are the only things that should be
                            merged to either.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>If release critical bugs are found and fixed, proposing a new release
                            candidate from the SHA on the stable branch.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Write <reference name="release notes" refuri="https://docs.openstack.org/project-team-guide/release-management.html#managing-release-notes">release notes</reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Announce that any non-release-critical changes won’t be accepted from this
                            point onwards until the final Glance release is made. Consider adding -2 on such
                            reviews  with good description to prevent further updates. This also helps in
                            keeping the gate relatively free to process the release-critical changes.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="final-releases" names="final\ releases">
                <title>Final Releases</title>
                <paragraph>The release team usually proposes all of the projects’ final releases in one
                    patch based off the final release candidate. After those are created, some
                    things in Glance need to be updated immediately.</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Right after cutting the stable branch, Glance release version (not the API
                            version) must be bumped so that all further development is attributed to the
                            next release version. This could be done by adding an empty commit with commit
                            message containing the flag <literal>Sem-Ver: api-break</literal> to indicate a version. Here
                            is a sample commit attempting to <reference name="bump the release version" refuri="https://review.openstack.org/#q,I21480e186a2aab6c54f7ea798c215660bddf9e4c,n,z">bump the release version</reference>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The migration tooling that Glance uses relies on some constants defined in
                            <reference name="glance/db/migration.py" refuri="https://github.com/openstack/glance/blob/master/glance/db/migration.py">glance/db/migration.py</reference>. Post final release, those need <emphasis>immediate</emphasis>
                            updating.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="acknowledgements" names="acknowledgements">
                <title>Acknowledgements</title>
                <paragraph>This document was originally written by Ian Cordasco.  It’s maintained and
                    revised by the Glance Release CPLs:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Ian Cordasco, Release CPL for Ocata</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Hemanth Makkapati, Release CPL for Pike</paragraph>
                    </list_item>
                </bullet_list>
                <comment xml:space="preserve">links</comment>
                <target ids="weekly-meeting" names="weekly\ meeting" refuri="http://eavesdrop.openstack.org/#Release_Team_Meeting"></target>
                <target ids="openstack-governance" names="openstack/governance" refuri="https://git.openstack.org/cgit/openstack/governance"></target>
                <target ids="openstack-releases" names="openstack/releases" refuri="https://git.openstack.org/cgit/openstack/releases"></target>
                <target ids="storyboard" names="storyboard" refuri="https://storyboard.openstack.org/"></target>
                <target ids="glance-db-migration-py" names="glance/db/migration.py" refuri="https://github.com/openstack/glance/blob/master/glance/db/migration.py"></target>
                <target ids="release-management-process-guide" names="release\ management\ process\ guide" refuri="https://docs.openstack.org/project-team-guide/release-management.html"></target>
                <target ids="release-management-tooling-guide" names="release\ management\ tooling\ guide" refuri="http://git.openstack.org/cgit/openstack/releases/tree/README.rst"></target>
                <target ids="bug-tracker" names="bug\ tracker" refuri="https://bugs.launchpad.net/glance"></target>
                <target ids="release-notes" names="release\ notes" refuri="https://docs.openstack.org/project-team-guide/release-management.html#managing-release-notes"></target>
                <target ids="bump-the-release-version" names="bump\ the\ release\ version" refuri="https://review.openstack.org/#q,I21480e186a2aab6c54f7ea798c215660bddf9e4c,n,z"></target>
            </section>
        </section>
    </section>
</document>
