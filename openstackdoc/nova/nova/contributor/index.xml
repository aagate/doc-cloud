<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/nova/doc/source/contributor/index.rst">
    <section ids="contributor-documentation" names="contributor\ documentation">
        <title>Contributor Documentation</title>
        <paragraph>Contributing to nova gives you the power to help add features, fix bugs,
            enhance documentation, and increase testing. Contributions of any type are
            valuable, and part of what keeps the project going. Here are a list of
            resources to get your started.</paragraph>
        <section ids="getting-started" names="getting\ started">
            <title>Getting Started</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference internal="True" refuri="how-to-get-involved"><inline classes="doc">How to get (more) involved with Nova</inline></reference>: Overview of engaging in the project</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="development-environment"><inline classes="doc">Development Quickstart</inline></reference>: Get your computer setup to
                        contribute</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="nova-process" names="nova\ process">
            <title>Nova Process</title>
            <paragraph>The nova community is a large community. We have lots of users, and they all
                have a lot of expectations around upgrade and backwards compatibility.  For
                example, having a good stable API, with discoverable versions and capabilities
                is important for maintaining the strong ecosystem around Nova.</paragraph>
            <paragraph>Our process is always evolving, just as nova and the community around Nova
                evolves over time. If there are things that seem strange, or you have ideas on
                how to improve things, please bring them forward on IRC or the openstack-dev
                mailing list, so we continue to improve how the nova community operates.</paragraph>
            <paragraph>This section looks at the processes and why. The main aim behind all the
                process is to aid communication between all members of the nova community,
                while keeping users happy and keeping developers productive.</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference internal="True" refuri="project-scope"><inline classes="doc">Scope of the Nova project</inline></reference>: The focus is on features and bug fixes
                        that make nova work better within this scope</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="policies"><inline classes="doc">Development policies</inline></reference>: General guidelines about what's supported</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="process"><inline classes="doc">Nova team process</inline></reference>: The processes we follow around feature and bug
                        submission, including how the release calendar works, and the freezes we go
                        under</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="blueprints"><inline classes="doc">Blueprints, Specs and Priorities</inline></reference>: An overview of our tracking artifacts.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="for-reviewers" names="for\ reviewers">
            <title>For Reviewers</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference internal="True" refuri="releasenotes"><inline classes="doc">Release Notes</inline></reference>: When we need a release note for a
                        contribution.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="code-review"><inline classes="doc">Code Review Guide for Nova</inline></reference>: important cheat sheet for what's important
                        when doing code review in Nova, especially some things that are hard to test
                        for, but need human eyes.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="../reference/i18n"><inline classes="doc">Internationalization</inline></reference>: what we require for i18n in patches</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="testing" names="testing">
            <title>Testing</title>
            <paragraph>Because Python is a dynamic language, code that is not testing might not even
                be python code. All new code needs to be validated somehow.</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference internal="True" refuri="testing"><inline classes="doc">Test Strategy</inline></reference>: An overview of our test taxonomy, and the kinds
                        of testing we do and expect.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>Testing Guides</strong>: There are also specific testing guides for features that are
                        hard to test in our gate.</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><reference internal="True" refuri="testing/libvirt-numa"><inline classes="doc">Testing NUMA related hardware setup with libvirt</inline></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" refuri="testing/serial-console"><inline classes="doc">Testing Serial Console</inline></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" refuri="testing/zero-downtime-upgrade"><inline classes="doc">Testing Zero Downtime Upgrade Process</inline></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
            </bullet_list>
        </section>
        <section ids="the-nova-api" names="the\ nova\ api">
            <title>The Nova API</title>
            <paragraph>Because we have many consumers of our API, we're extremely careful about
                changes done to the API, as the impact can be very wide.</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference internal="True" refuri="api"><inline classes="doc">Extending the API</inline></reference>: How the code is structured inside the API layer</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="api-2"><inline classes="doc">Adding a Method to the OpenStack API</inline></reference>: (needs update)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="microversions"><inline classes="doc">API Microversions</inline></reference>: we use microversions to version our API,
                        this walks you through what you need to do when adding an API exposed feature
                        that needs one.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="nova-major-subsystems" names="nova\ major\ subsystems">
            <title>Nova Major Subsystems</title>
            <paragraph>Major subsystems in Nova have different needs, some of those are documented
                here. If you are contributing to one of these please read the subsystem guide
                before diving in.</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference internal="True" refuri="placement"><inline classes="doc">Placement API Developer Notes</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="../user/conductor"><inline classes="doc">Conductor as a place for orchestrating tasks</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
    </section>
</document>
