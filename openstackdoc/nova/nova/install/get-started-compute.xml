<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/nova/doc/source/install/get-started-compute.rst">
    <section ids="compute-service-overview" names="compute\ service\ overview">
        <title>Compute service overview</title>
        <target refid="index-0"></target>
        <todo_node classes="admonition-todo" ids="index-0">
            <title>Todo</title>
            <paragraph>Update a lot of the links in here.</paragraph>
        </todo_node>
        <paragraph>Use OpenStack Compute to host and manage cloud computing systems.  OpenStack
            Compute is a major part of an Infrastructure-as-a-Service (IaaS) system. The
            main modules are implemented in Python.</paragraph>
        <paragraph>OpenStack Compute interacts with OpenStack Identity for authentication;
            OpenStack Image service for disk and server images; and OpenStack Dashboard for
            the user and administrative interface. Image access is limited by projects, and
            by users; quotas are limited per project (the number of instances, for
            example). OpenStack Compute can scale horizontally on standard hardware, and
            download images to launch instances.</paragraph>
        <paragraph>OpenStack Compute consists of the following areas and their components:</paragraph>
        <definition_list>
            <definition_list_item>
                <term><literal>nova-api</literal> service</term>
                <definition>
                    <paragraph>Accepts and responds to end user compute API calls. The service supports the
                        OpenStack Compute API, the Amazon EC2 API, and a special Admin API for
                        privileged users to perform administrative actions. It enforces some policies
                        and initiates most orchestration activities, such as running an instance.</paragraph>
                </definition>
            </definition_list_item>
            <definition_list_item>
                <term><literal>nova-api-metadata</literal> service</term>
                <definition>
                    <paragraph>Accepts metadata requests from instances. The <literal>nova-api-metadata</literal> service
                        is generally used when you run in multi-host mode with <literal>nova-network</literal>
                        installations. For details, see <reference internal="True" refuri="../admin/networking-nova#metadata-service"><inline classes="std std-ref">Metadata service</inline></reference>
                        in the Compute Administrator Guide.</paragraph>
                </definition>
            </definition_list_item>
            <definition_list_item>
                <term><literal>nova-compute</literal> service</term>
                <definition>
                    <paragraph>A worker daemon that creates and terminates virtual machine instances through
                        hypervisor APIs. For example:</paragraph>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>XenAPI for XenServer/XCP</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>libvirt for KVM or QEMU</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>VMwareAPI for VMware</paragraph>
                        </list_item>
                    </bullet_list>
                    <paragraph>Processing is fairly complex. Basically, the daemon accepts actions from the
                        queue and performs a series of system commands such as launching a KVM
                        instance and updating its state in the database.</paragraph>
                </definition>
            </definition_list_item>
            <definition_list_item>
                <term><literal>nova-placement-api</literal> service</term>
                <definition>
                    <paragraph>Tracks the inventory and usage of each provider. For details, see <reference name="Placement API" refuri="https://docs.openstack.org/developer/nova/placement.html">Placement
                            API</reference>.</paragraph>
                </definition>
            </definition_list_item>
            <definition_list_item>
                <term><literal>nova-scheduler</literal> service</term>
                <definition>
                    <paragraph>Takes a virtual machine instance request from the queue and determines on
                        which compute server host it runs.</paragraph>
                </definition>
            </definition_list_item>
            <definition_list_item>
                <term><literal>nova-conductor</literal> module</term>
                <definition>
                    <paragraph>Mediates interactions between the <literal>nova-compute</literal> service and the database.
                        It eliminates direct accesses to the cloud database made by the
                        <literal>nova-compute</literal> service. The <literal>nova-conductor</literal> module scales horizontally.
                        However, do not deploy it on nodes where the <literal>nova-compute</literal> service runs.
                        For more information, see the <literal>conductor</literal> section in the
                        <reference internal="True" refuri="../configuration/config"><inline classes="doc">Configuration Options</inline></reference>.</paragraph>
                </definition>
            </definition_list_item>
            <definition_list_item>
                <term><literal>nova-consoleauth</literal> daemon</term>
                <definition>
                    <paragraph>Authorizes tokens for users that console proxies provide. See
                        <literal>nova-novncproxy</literal> and <literal>nova-xvpvncproxy</literal>. This service must be running
                        for console proxies to work. You can run proxies of either type against a
                        single nova-consoleauth service in a cluster configuration. For information,
                        see <reference internal="True" refuri="../admin/remote-console-access#about-nova-consoleauth"><inline classes="std std-ref">About nova-consoleauth</inline></reference>.</paragraph>
                </definition>
            </definition_list_item>
            <definition_list_item>
                <term><literal>nova-novncproxy</literal> daemon</term>
                <definition>
                    <paragraph>Provides a proxy for accessing running instances through a VNC connection.
                        Supports browser-based novnc clients.</paragraph>
                </definition>
            </definition_list_item>
            <definition_list_item>
                <term><literal>nova-spicehtml5proxy</literal> daemon</term>
                <definition>
                    <paragraph>Provides a proxy for accessing running instances through a SPICE connection.
                        Supports browser-based HTML5 client.</paragraph>
                </definition>
            </definition_list_item>
            <definition_list_item>
                <term><literal>nova-xvpvncproxy</literal> daemon</term>
                <definition>
                    <paragraph>Provides a proxy for accessing running instances through a VNC connection.
                        Supports an OpenStack-specific Java client.</paragraph>
                </definition>
            </definition_list_item>
            <definition_list_item>
                <term>The queue</term>
                <definition>
                    <paragraph>A central hub for passing messages between daemons. Usually implemented with
                        <reference name="RabbitMQ" refuri="https://www.rabbitmq.com/">RabbitMQ</reference>, also can be implemented with
                        another AMQP message queue, such as <reference name="ZeroMQ" refuri="http://www.zeromq.org/">ZeroMQ</reference>.</paragraph>
                </definition>
            </definition_list_item>
            <definition_list_item>
                <term>SQL database</term>
                <definition>
                    <paragraph>Stores most build-time and run-time states for a cloud infrastructure,
                        including:</paragraph>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>Available instance types</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Instances in use</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Available networks</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Projects</paragraph>
                        </list_item>
                    </bullet_list>
                    <paragraph>Theoretically, OpenStack Compute can support any database that SQLAlchemy
                        supports. Common databases are SQLite3 for test and development work, MySQL,
                        MariaDB, and PostgreSQL.</paragraph>
                </definition>
            </definition_list_item>
        </definition_list>
    </section>
</document>
