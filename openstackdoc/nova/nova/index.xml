<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/nova/doc/source/index.rst">
    <comment xml:space="preserve">Copyright 2010-2012 United States Government as represented by the
Administrator of the National Aeronautics and Space Administration.
All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</comment>
    <section ids="openstack-compute-nova" names="openstack\ compute\ (nova)">
        <title>OpenStack Compute (nova)</title>
        <section ids="what-is-nova" names="what\ is\ nova?">
            <title>What is nova?</title>
            <paragraph>Nova is the OpenStack project that provides a way to provision compute
                instances (aka virtual servers). Nova supports creating virtual machines,
                baremetal servers (through the use of ironic), and has limited support for
                system containers. Nova runs as a set of daemons on top of existing Linux
                servers to provide that service.</paragraph>
            <paragraph>It requires the following additional OpenStack services for basic function:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference name="Keystone" refuri="https://docs.openstack.org/keystone/latest/">Keystone</reference>: This provides
                        identity and authentication for all OpenStack services.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="Glance" refuri="https://docs.openstack.org/glance/latest/">Glance</reference>: This provides the
                        compute image repository. All compute instances launch from glance images.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="Neutron" refuri="https://docs.openstack.org/neutron/latest/">Neutron</reference>: This is
                        responsible for provisioning the virtual or physical networks that compute
                        instances connect to on boot.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>It can also integrate with other services to include: persistent block
                storage, encrypted disks, and baremetal compute instances.</paragraph>
        </section>
        <section ids="for-end-users" names="for\ end\ users">
            <title>For End Users</title>
            <paragraph>As an end user of nova, you'll use nova to create and manage servers with
                either tools or the API directly.</paragraph>
            <section ids="tools-for-using-nova" names="tools\ for\ using\ nova">
                <title>Tools for using Nova</title>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><reference name="Horizon" refuri="https://docs.openstack.org/horizon/latest/user/launch-instances.html">Horizon</reference><target ids="horizon" names="horizon" refuri="https://docs.openstack.org/horizon/latest/user/launch-instances.html"></target>: The
                            official web ui for the OpenStack Project.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference name="OpenStack Client" refuri="https://docs.openstack.org/python-openstackclient/latest/">OpenStack Client</reference><target ids="openstack-client" names="openstack\ client" refuri="https://docs.openstack.org/python-openstackclient/latest/"></target>: The official
                            CLI for OpenStack Projects. You should use this as your CLI for most things,
                            it includes not just nova commands but also commands for most of the projects
                            in OpenStack.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference name="Nova Client" refuri="https://docs.openstack.org/python-novaclient/latest/user/shell.html">Nova Client</reference><target ids="nova-client" names="nova\ client" refuri="https://docs.openstack.org/python-novaclient/latest/user/shell.html"></target>: For
                            some very advanced features (or administrative commands) of nova you may need
                            to use nova client. It is still supported, but the <literal>openstack</literal> cli is
                            recommended.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="writing-to-the-api" names="writing\ to\ the\ api">
                <title>Writing to the API</title>
                <paragraph>All end user (and some administrative) features of nova are exposed via a REST
                    API, which can be used to build more complicated logic or automation with
                    nova. This can be consumed directly, or via various SDKs. The following
                    resources will help you get started with consuming the API directly.</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><reference name="Compute API Guide:" refuri="https://developer.openstack.org/api-guide/compute/">Compute API Guide:</reference><target ids="compute-api-guide" names="compute\ api\ guide:" refuri="https://developer.openstack.org/api-guide/compute/"></target>: The
                            concept guide for the API. This helps lay out the concepts behind the API to
                            make consuming the API reference easier.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference name="Compute API Reference" refuri="http://developer.openstack.org/api-ref/compute/">Compute API Reference</reference><target ids="compute-api-reference" names="compute\ api\ reference" refuri="http://developer.openstack.org/api-ref/compute/"></target>:
                            The complete reference for the API, including all methods and request /
                            response parameters and their meaning.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="reference/api-microversion-history"><inline classes="doc">API Microversion History</inline></reference>: The
                            compute API evolves over time through <reference name="Microversions" refuri="https://developer.openstack.org/api-guide/compute/microversions.html">Microversions</reference><target ids="microversions" names="microversions" refuri="https://developer.openstack.org/api-guide/compute/microversions.html"></target>. This
                            provides the history of all those changes. Consider it a "what's new" in the
                            compute API.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="user/block-device-mapping"><inline classes="doc">Block Device Mapping</inline></reference>: One of the trickier
                            parts to understand is the Block Device Mapping parameters used to connect
                            specific block devices to computes. This deserves its own deep dive.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="user/config-drive"><inline classes="doc">Configuration drive</inline></reference>: Provide information to the
                            guest instance when it is created.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
        </section>
        <section ids="for-operators" names="for\ operators">
            <title>For Operators</title>
            <section ids="architecture-overview" names="architecture\ overview">
                <title>Architecture Overview</title>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><reference internal="True" refuri="user/architecture"><inline classes="doc">Nova architecture</inline></reference>: An overview of how all the parts in
                            nova fit together.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="installation" names="installation">
                <title>Installation</title>
                <comment xml:space="preserve">TODO(sdague): links to all the rest of the install guide pieces.</comment>
                <paragraph>The detailed install guide for nova. A functioning nova will also require
                    having installed <reference name="keystone" refuri="https://docs.openstack.org/keystone/latest/install/">keystone</reference>, <reference name="glance" refuri="https://docs.openstack.org/glance/latest/install/">glance</reference>, and <reference name="neutron" refuri="https://docs.openstack.org/neutron/latest/install/">neutron</reference>. Please ensure that you
                    follow their install guides first.</paragraph>
                <compound classes="toctree-wrapper">
                    <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="install/index">Compute service</reference></compact_paragraph><bullet_list><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="" internal="True" refuri="install/overview">Overview</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="" internal="True" refuri="install/get-started-compute">Compute service overview</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="" internal="True" refuri="install/controller-install">Install and configure controller node</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="" internal="True" refuri="install/compute-install">Install and configure a compute node</reference></compact_paragraph></list_item><list_item classes="toctree-l2"><compact_paragraph classes="toctree-l2"><reference anchorname="" internal="True" refuri="install/verify">Verify operation</reference></compact_paragraph></list_item></bullet_list></list_item></bullet_list></compact_paragraph>
                </compound>
            </section>
            <section ids="deployment-considerations" names="deployment\ considerations">
                <title>Deployment Considerations</title>
                <paragraph>There is information you might want to consider before doing your deployment,
                    especially if it is going to be a larger deployment. For smaller deployments
                    the defaults from the <reference internal="True" refuri="install/index"><inline classes="doc">install guide</inline></reference> will be sufficient.</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><strong>Compute Driver Features Supported</strong>: While the majority of nova deployments use
                            libvirt/kvm, you can use nova with other compute drivers. Nova attempts to
                            provide a unified feature set across these, however, not all features are
                            implemented on all backends, and not all features are equally well tested.</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><reference internal="True" refuri="user/feature-classification"><inline classes="doc">Feature Support by Use Case</inline></reference>: A view of
                                    what features each driver supports based on what's important to some large
                                    use cases (General Purpose Cloud, NFV Cloud, HPC Cloud).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><reference internal="True" refuri="user/support-matrix"><inline classes="doc">Feature Support full list</inline></reference>: A detailed dive through
                                    features in each compute driver backend.</paragraph>
                            </list_item>
                        </bullet_list>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="user/cellsv2_layout"><inline classes="doc">Cells v2 Planning</inline></reference>: For large deployments, Cells v2
                            allows sharding of your compute environment. Upfront planning is key to a
                            successful Cells v2 layout.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="user/placement"><inline classes="doc">Placement service</inline></reference>: Overview of the placement
                            service, including how it fits in with the rest of nova.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="user/wsgi"><inline classes="doc">Running nova-api on wsgi</inline></reference>: Considerations for using a real
                            WSGI container instead of the baked-in eventlet web server.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="maintenance" names="maintenance">
                <title>Maintenance</title>
                <paragraph>Once you are running nova, the following information is extremely useful.</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><reference internal="True" refuri="admin/index"><inline classes="doc">Admin Guide</inline></reference>: A collection of guides for administrating
                            nova.</paragraph>
                        <warning>
                            <paragraph>This guide was imported during the Pike cycle and is a bit out of
                                date. It will be updated during Queens to be more accurate.</paragraph>
                        </warning>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="user/upgrade"><inline classes="doc">Upgrades</inline></reference>: How nova is designed to be upgraded for minimal
                            service impact, and the order you should do them in.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="user/quotas"><inline classes="doc">Quotas</inline></reference>: Managing project quotas in nova.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="user/aggregates"><inline classes="doc">Aggregates</inline></reference>: Aggregates are a useful way of grouping
                            hosts together for scheduling purposes.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="user/filter-scheduler"><inline classes="doc">Filter Scheduler</inline></reference>: How the filter scheduler is
                            configured, and how that will impact where compute instances land in your
                            environment. If you are seeing unexpected distribution of compute instances
                            in your hosts, you'll want to dive into this configuration.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="user/vendordata"><inline classes="doc">Exposing custom metadata to compute instances</inline></reference>: How and
                            when you might want to extend the basic metadata exposed to compute instances
                            (either via metadata server or config drive) for your specific purposes.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="reference-material" names="reference\ material">
                <title>Reference Material</title>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><reference internal="True" refuri="cli/index"><inline classes="doc">Nova CLI Command References</inline></reference>: the complete command reference
                            for all the daemons and admin tools that come with nova.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Configuration</strong>:</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><reference internal="True" refuri="admin/configuration/index"><inline classes="doc">Configuration Guide</inline></reference>: detailed
                                    configuration guides for various parts of you Nova system. Helpful
                                    reference for setting up specific hypervisor backends.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><reference internal="True" refuri="configuration/config"><inline classes="doc">Config Reference</inline></reference>: a complete reference of all
                                    configuration options available in the nova.conf file.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><reference internal="True" refuri="configuration/sample-config"><inline classes="doc">Sample Config File</inline></reference>: a sample config file
                                    with inline documentation.</paragraph>
                            </list_item>
                        </bullet_list>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Policy</strong>: nova, like most OpenStack projects, uses a policy language to
                            restrict permissions on REST API actions.</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><reference internal="True" refuri="configuration/policy"><inline classes="doc">Policy Reference</inline></reference>: a complete reference of all
                                    policy points in nova and what they impact.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><reference internal="True" refuri="configuration/sample-policy"><inline classes="doc">Sample Policy File</inline></reference>: a sample policy file
                                    with inline documentation.</paragraph>
                            </list_item>
                        </bullet_list>
                    </list_item>
                </bullet_list>
            </section>
        </section>
        <section ids="for-contributors" names="for\ contributors">
            <title>For Contributors</title>
            <paragraph>If you are new to Nova, this should help you start to understand what Nova
                actually does, and why.</paragraph>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="contributor/index">Contributor Documentation</reference></compact_paragraph></list_item></bullet_list></compact_paragraph>
            </compound>
            <paragraph>There are also a number of technical references on both current and future
                looking parts of our architecture. These are collected below.</paragraph>
            <compound classes="toctree-wrapper">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="reference/index">Technical Reference Deep Dives</reference></compact_paragraph></list_item></bullet_list></compact_paragraph>
            </compound>
            <comment xml:space="preserve"># NOTE(mriedem): This is the section where we hide things that we don't
# actually want in the table of contents but sphinx build would fail if
# they aren't in the toctree somewhere. For example, we hide api/autoindex
# since that's already covered with modindex below.</comment>
            <compound classes="toctree-wrapper">
            </compound>
        </section>
        <section ids="indices-and-tables" names="indices\ and\ tables">
            <title>Indices and tables</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference internal="True" refuri="search"><inline classes="std std-ref">Search Page</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
    </section>
</document>
