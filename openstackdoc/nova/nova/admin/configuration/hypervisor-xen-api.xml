<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/nova/doc/source/admin/configuration/hypervisor-xen-api.rst">
    <target refid="compute-xen-api"></target>
    <section ids="xenserver-and-other-xapi-based-xen-variants compute-xen-api" names="xenserver\ (and\ other\ xapi\ based\ xen\ variants) compute_xen_api">
        <title>XenServer (and other XAPI based Xen variants)</title>
        <paragraph>This section describes XAPI managed hypervisors, and how to use them with
            OpenStack.</paragraph>
        <section ids="terminology" names="terminology">
            <title>Terminology</title>
            <section ids="xen" names="xen">
                <title>Xen</title>
                <paragraph>A hypervisor that provides the fundamental isolation between virtual machines.
                    Xen is open source (GPLv2) and is managed by <reference name="XenProject.org" refuri="http://www.xenproject.org">XenProject.org</reference><target ids="xenproject-org" names="xenproject.org" refuri="http://www.xenproject.org"></target>, a cross-industry organization and a Linux
                    Foundation Collaborative project.</paragraph>
                <paragraph>Xen is a component of many different products and projects.  The hypervisor
                    itself is very similar across all these projects, but the way that it is
                    managed can be different, which can cause confusion if you're not clear which
                    toolstack you are using.  Make sure you know what <reference name="toolstack" refuri="http://wiki.xen.org/wiki/Choice_of_Toolstacks">toolstack</reference><target ids="toolstack" names="toolstack" refuri="http://wiki.xen.org/wiki/Choice_of_Toolstacks"></target> you want before you get
                    started. If you want to use Xen with libvirt in OpenStack Compute refer to
                    <reference internal="True" refuri="hypervisor-xen-libvirt"><inline classes="doc">Xen via libvirt</inline></reference>.</paragraph>
            </section>
            <section ids="xapi" names="xapi">
                <title>XAPI</title>
                <paragraph>XAPI is one of the toolstacks that could control a Xen based hypervisor.
                    XAPI's role is similar to libvirt's in the KVM world.  The API provided by XAPI
                    is called XenAPI.  To learn more about the provided interface, look at <reference name="XenAPI Object Model Overview" refuri="http://docs.vmd.citrix.com/XenServer/6.2.0/1.0/en_gb/sdk.html#object_model_overview">XenAPI
                        Object Model Overview</reference><target ids="xenapi-object-model-overview" names="xenapi\ object\ model\ overview" refuri="http://docs.vmd.citrix.com/XenServer/6.2.0/1.0/en_gb/sdk.html#object_model_overview"></target> for definitions of XAPI
                    specific terms such as SR, VDI, VIF and PIF.</paragraph>
                <paragraph>OpenStack has a compute driver which talks to XAPI, therefore all XAPI managed
                    servers could be used with OpenStack.</paragraph>
            </section>
            <section ids="xenapi" names="xenapi">
                <title>XenAPI</title>
                <paragraph>XenAPI is the API provided by XAPI.  This name is also used by the python
                    library that is a client for XAPI.  A set of packages to use XenAPI on existing
                    distributions can be built using the <reference name="xenserver/buildroot" refuri="https://github.com/xenserver/buildroot">xenserver/buildroot</reference><target ids="xenserver-buildroot" names="xenserver/buildroot" refuri="https://github.com/xenserver/buildroot"></target> project.</paragraph>
            </section>
            <section ids="xenserver" names="xenserver">
                <title>XenServer</title>
                <paragraph>An Open Source virtualization platform that delivers all features needed for
                    any server and datacenter implementation including the Xen hypervisor and XAPI
                    for the management. For more information and product downloads, visit
                    <reference name="xenserver.org" refuri="http://xenserver.org/">xenserver.org</reference><target ids="xenserver-org" names="xenserver.org" refuri="http://xenserver.org/"></target>.</paragraph>
            </section>
            <section ids="xcp" names="xcp">
                <title>XCP</title>
                <paragraph>XCP is not supported anymore. XCP project recommends all XCP users to upgrade
                    to the latest version of XenServer by visiting <reference name="xenserver.org" refuri="http://xenserver.org/">xenserver.org</reference><target dupnames="xenserver.org" ids="id1" refuri="http://xenserver.org/"></target>.</paragraph>
            </section>
            <section ids="privileged-and-unprivileged-domains" names="privileged\ and\ unprivileged\ domains">
                <title>Privileged and unprivileged domains</title>
                <paragraph>A Xen host runs a number of virtual machines, VMs, or domains (the terms are
                    synonymous on Xen). One of these is in charge of running the rest of the
                    system, and is known as domain 0, or dom0. It is the first domain to boot after
                    Xen, and owns the storage and networking hardware, the device drivers, and the
                    primary control software. Any other VM is unprivileged, and is known as a domU
                    or guest.  All customer VMs are unprivileged, but you should note that on
                    XenServer (and other XenAPI using hypervisors), the OpenStack Compute service
                    (<literal>nova-compute</literal>) also runs in a domU. This gives a level of security
                    isolation between the privileged system software and the OpenStack software
                    (much of which is customer-facing).  This architecture is described in more
                    detail later.</paragraph>
            </section>
            <section ids="paravirtualized-versus-hardware-virtualized-domains" names="paravirtualized\ versus\ hardware\ virtualized\ domains">
                <title>Paravirtualized versus hardware virtualized domains</title>
                <paragraph>A Xen virtual machine can be paravirtualized (PV) or hardware virtualized
                    (HVM). This refers to the interaction between Xen, domain 0, and the guest VM's
                    kernel.  PV guests are aware of the fact that they are virtualized and will
                    co-operate with Xen and domain 0; this gives them better performance
                    characteristics. HVM guests are not aware of their environment, and the
                    hardware has to pretend that they are running on an unvirtualized machine. HVM
                    guests do not need to modify the guest operating system, which is essential
                    when running Windows.</paragraph>
                <paragraph>In OpenStack, customer VMs may run in either PV or HVM mode.  However, the
                    OpenStack domU (that's the one running <literal>nova-compute</literal>) must be running in PV
                    mode.</paragraph>
            </section>
        </section>
        <section ids="xenapi-deployment-architecture" names="xenapi\ deployment\ architecture">
            <title>XenAPI deployment architecture</title>
            <paragraph>A basic OpenStack deployment on a XAPI-managed server, assuming that the
                network provider is neutron network, looks like this:</paragraph>
            <figure>
                <image candidates="{'*': u'figures/xenserver_architecture.png'}" uri="figures/xenserver_architecture.png" width="100%"></image>
            </figure>
            <paragraph>Key things to note:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>The hypervisor: Xen</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Domain 0: runs XAPI and some small pieces from OpenStack,
                        the XAPI plug-ins.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>OpenStack VM: The <literal>Compute</literal> service runs in a paravirtualized virtual
                        machine, on the host under management.  Each host runs a local instance of
                        <literal>Compute</literal>.  It is also running neutron plugin-agent
                        (<literal>neutron-openvswitch-agent</literal>) to perform local vSwitch configuration.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>OpenStack Compute uses the XenAPI Python library to talk to XAPI, and it uses
                        the Management Network to reach from the OpenStack VM to Domain 0.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Some notes on the networking:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>The above diagram assumes DHCP networking.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>There are three main OpenStack networks:</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>Management network: RabbitMQ, MySQL, inter-host communication, and
                                compute-XAPI communication. Please note that the VM images are downloaded
                                by the XenAPI plug-ins, so make sure that the OpenStack Image service is
                                accessible through this network. It usually means binding those services to
                                the management interface.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Tenant network: controlled by neutron, this is used for tenant traffic.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Public network: floating IPs, public API endpoints.</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph>The networks shown here must be connected to the corresponding physical
                        networks within the data center. In the simplest case, three individual
                        physical network cards could be used. It is also possible to use VLANs to
                        separate these networks. Please note, that the selected configuration must be
                        in line with the networking model selected for the cloud.  (In case of VLAN
                        networking, the physical channels have to be able to forward the tagged
                        traffic.)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>With the Networking service, you should enable Linux bridge in <literal>Dom0</literal> which
                        is used for Compute service. <literal>nova-compute</literal> will create Linux bridges for
                        security group and <literal>neutron-openvswitch-agent</literal> in Compute node will apply
                        security group rules on these Linux bridges. To implement this, you need to
                        remove <literal>/etc/modprobe.d/blacklist-bridge*</literal> in <literal>Dom0</literal>.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="further-reading" names="further\ reading">
            <title>Further reading</title>
            <paragraph>Here are some of the resources available to learn more about Xen:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference name="Citrix XenServer official documentation" refuri="http://docs.vmd.citrix.com/XenServer/6.2.0/1.0/en_gb/">Citrix XenServer official documentation</reference><target ids="citrix-xenserver-official-documentation" names="citrix\ xenserver\ official\ documentation" refuri="http://docs.vmd.citrix.com/XenServer/6.2.0/1.0/en_gb/"></target></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="What is Xen? by XenProject.org" refuri="http://www.xenproject.org/users/cloud.html">What is Xen? by XenProject.org</reference><target ids="what-is-xen-by-xenproject-org" names="what\ is\ xen?\ by\ xenproject.org" refuri="http://www.xenproject.org/users/cloud.html"></target></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="Xen Hypervisor project" refuri="http://www.xenproject.org/developers/teams/hypervisor.html">Xen Hypervisor project</reference><target ids="xen-hypervisor-project" names="xen\ hypervisor\ project" refuri="http://www.xenproject.org/developers/teams/hypervisor.html"></target></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="Xapi project" refuri="http://www.xenproject.org/developers/teams/xapi.html">Xapi project</reference><target ids="xapi-project" names="xapi\ project" refuri="http://www.xenproject.org/developers/teams/xapi.html"></target></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="Further XenServer and OpenStack information" refuri="http://wiki.openstack.org/XenServer">Further XenServer and OpenStack information</reference><target ids="further-xenserver-and-openstack-information" names="further\ xenserver\ and\ openstack\ information" refuri="http://wiki.openstack.org/XenServer"></target></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="install-xenserver" names="install\ xenserver">
            <title>Install XenServer</title>
            <paragraph>Before you can run OpenStack with XenServer, you must install the hypervisor on
                <reference name="an appropriate server" refuri="http://docs.vmd.citrix.com/XenServer/6.2.0/1.0/en_gb/installation.html#sys_requirements">an appropriate server</reference><target ids="an-appropriate-server" names="an\ appropriate\ server" refuri="http://docs.vmd.citrix.com/XenServer/6.2.0/1.0/en_gb/installation.html#sys_requirements"></target>.</paragraph>
            <note>
                <paragraph>Xen is a type 1 hypervisor: When your server starts, Xen is the first
                    software that runs. Consequently, you must install XenServer before you
                    install the operating system where you want to run OpenStack code. You then
                    install <literal>nova-compute</literal> into a dedicated virtual machine on the host.</paragraph>
            </note>
            <paragraph>Use the following link to download XenServer's installation media:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><reference refuri="http://xenserver.org/open-source-virtualization-download.html">http://xenserver.org/open-source-virtualization-download.html</reference></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>When you install many servers, you might find it easier to perform <reference name="PXE boot installations" refuri="http://docs.vmd.citrix.com/XenServer/6.2.0/1.0/en_gb/installation.html#pxe_boot_install">PXE boot
                    installations</reference><target ids="pxe-boot-installations" names="pxe\ boot\ installations" refuri="http://docs.vmd.citrix.com/XenServer/6.2.0/1.0/en_gb/installation.html#pxe_boot_install"></target>.  You can also package any
                post-installation changes that you want to make to your XenServer by following
                the instructions of <reference name="creating your own XenServer supplemental pack" refuri="http://docs.vmd.citrix.com/XenServer/6.2.0/1.0/en_gb/supplemental_pack_ddk.html">creating your own XenServer supplemental pack</reference><target ids="creating-your-own-xenserver-supplemental-pack" names="creating\ your\ own\ xenserver\ supplemental\ pack" refuri="http://docs.vmd.citrix.com/XenServer/6.2.0/1.0/en_gb/supplemental_pack_ddk.html"></target>.</paragraph>
            <important>
                <paragraph>Make sure you use the EXT type of storage repository (SR).  Features that
                    require access to VHD files (such as copy on write, snapshot and migration)
                    do not work when you use the LVM SR.  Storage repository (SR) is a
                    XAPI-specific term relating to the physical storage where virtual disks are
                    stored.</paragraph>
                <paragraph>On the XenServer installation screen, choose the <inline classes="guilabel" rawtext=":guilabel:`XenDesktop&#10;Optimized`">XenDesktop
                        Optimized</inline> option. If you use an answer file, make sure you use
                    <literal>srtype="ext"</literal> in the <literal>installation</literal> tag of the answer file.</paragraph>
            </important>
        </section>
        <section ids="post-installation-steps" names="post-installation\ steps">
            <title>Post-installation steps</title>
            <paragraph>The following steps need to be completed after the hypervisor's installation:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>For resize and migrate functionality, enable password-less SSH
                        authentication and set up the <literal>/images</literal> directory on dom0.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Install the XAPI plug-ins.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>To support AMI type images, you must set up <literal>/boot/guest</literal>
                        symlink/directory in dom0.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Create a paravirtualized virtual machine that can run <literal>nova-compute</literal>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Install and configure <literal>nova-compute</literal> in the above virtual machine.</paragraph>
                </list_item>
            </enumerated_list>
            <section ids="install-xapi-plug-ins" names="install\ xapi\ plug-ins">
                <title>Install XAPI plug-ins</title>
                <paragraph>When you use a XAPI managed hypervisor, you can install a Python script (or any
                    executable) on the host side, and execute that through XenAPI.  These scripts
                    are called plug-ins. The OpenStack related XAPI plug-ins live in OpenStack
                    os-xenapi code repository. These plug-ins have to be copied to dom0's
                    filesystem, to the appropriate directory, where XAPI can find them. It is
                    important to ensure that the version of the plug-ins are in line with the
                    OpenStack Compute installation you are using.</paragraph>
                <paragraph>The plugins should typically be copied from the Nova installation running in
                    the Compute's DomU (<literal>pip show os-xenapi</literal> to find its location), but if you
                    want to download the latest version the following procedure can be used.</paragraph>
                <paragraph><strong>Manually installing the plug-ins</strong></paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Create temporary files/directories:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ OS_XENAPI_TARBALL=$(mktemp)
$ OS_XENAPI_SOURCES=$(mktemp -d)</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Get the source from the openstack.org archives. The example assumes the
                            latest release is used, and the XenServer host is accessible as xenserver.
                            Match those parameters to your setup.</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ OS_XENAPI_URL=https://tarballs.openstack.org/os-xenapi/os-xenapi-0.1.1.tar.gz
$ wget -qO "$OS_XENAPI_TARBALL" "$OS_XENAPI_URL"
$ tar xvf "$OS_XENAPI_TARBALL" -d "$OS_XENAPI_SOURCES"</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Copy the plug-ins to the hypervisor:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ PLUGINPATH=$(find $OS_XENAPI_SOURCES -path '*/xapi.d/plugins' -type d -print)
$ tar -czf - -C "$PLUGINPATH" ./ |
&gt; ssh root@xenserver tar -xozf - -C /etc/xapi.d/plugins</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Remove temporary files/directories:&lt;/para&gt;</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ rm "$OS_XENAPI_TARBALL"
$ rm -rf "$OS_XENAPI_SOURCES"</literal_block>
                    </list_item>
                </enumerated_list>
            </section>
            <section ids="prepare-for-ami-type-images" names="prepare\ for\ ami\ type\ images">
                <title>Prepare for AMI type images</title>
                <paragraph>To support AMI type images in your OpenStack installation, you must create the
                    <literal>/boot/guest</literal> directory on dom0.  One of the OpenStack XAPI plugins will
                    extract the kernel and ramdisk from AKI and ARI images and put them to that
                    directory.</paragraph>
                <paragraph>OpenStack maintains the contents of this directory and its size should not
                    increase during normal operation. However, in case of power failures or
                    accidental shutdowns, some files might be left over.  To prevent these files
                    from filling up dom0's filesystem, set up this directory as a symlink that
                    points to a subdirectory of the local SR.</paragraph>
                <paragraph>Run these commands in dom0 to achieve this setup:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># LOCAL_SR=$(xe sr-list name-label="Local storage" --minimal)
# LOCALPATH="/var/run/sr-mount/$LOCAL_SR/os-guest-kernels"
# mkdir -p "$LOCALPATH"
# ln -s "$LOCALPATH" /boot/guest</literal_block>
            </section>
            <section ids="modify-dom0-for-resize-migration-support" names="modify\ dom0\ for\ resize/migration\ support">
                <title>Modify dom0 for resize/migration support</title>
                <paragraph>To resize servers with XenServer you must:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>Establish a root trust between all hypervisor nodes of your deployment:</paragraph>
                        <paragraph>To do so, generate an ssh key-pair with the <literal_strong classes="command">ssh-keygen</literal_strong> command.
                            Ensure that each of your dom0's <literal>authorized_keys</literal> file (located in
                            <literal>/root/.ssh/authorized_keys</literal>) contains the public key fingerprint (located
                            in <literal>/root/.ssh/id_rsa.pub</literal>).</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Provide a <literal>/images</literal> mount point to the dom0 for your hypervisor:</paragraph>
                        <paragraph>dom0 space is at a premium so creating a directory in dom0 is potentially
                            dangerous and likely to fail especially when you resize large servers.  The
                            least you can do is to symlink <literal>/images</literal> to your local storage SR.  The
                            following instructions work for an English-based installation of XenServer
                            and in the case of ext3-based SR (with which the resize functionality is
                            known to work correctly).</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># LOCAL_SR=$(xe sr-list name-label="Local storage" --minimal)
# IMG_DIR="/var/run/sr-mount/$LOCAL_SR/images"
# mkdir -p "$IMG_DIR"
# ln -s "$IMG_DIR" /images</literal_block>
                    </list_item>
                </bullet_list>
            </section>
        </section>
        <section ids="xenapi-configuration-reference" names="xenapi\ configuration\ reference">
            <title>XenAPI configuration reference</title>
            <paragraph>The following section discusses some commonly changed options when using the
                XenAPI driver. The table below provides a complete reference of all
                configuration options available for configuring XAPI with OpenStack.</paragraph>
            <paragraph>The recommended way to use XAPI with OpenStack is through the XenAPI driver.
                To enable the XenAPI driver, add the following configuration options to
                <literal>/etc/nova/nova.conf</literal> and restart <literal>OpenStack Compute</literal>:</paragraph>
            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">compute_driver = xenapi.XenAPIDriver
[xenserver]
connection_url = http://your_xenapi_management_ip_address
connection_username = root
connection_password = your_password
ovs_integration_bridge = br-int
vif_driver = nova.virt.xenapi.vif.XenAPIOpenVswitchDriver</literal_block>
            <paragraph>These connection details are used by OpenStack Compute service to contact your
                hypervisor and are the same details you use to connect XenCenter, the XenServer
                management console, to your XenServer node.</paragraph>
            <note>
                <paragraph>The <literal>connection_url</literal> is generally the management network IP
                    address of the XenServer.</paragraph>
            </note>
            <section ids="networking-configuration" names="networking\ configuration">
                <title>Networking configuration</title>
                <paragraph>The Networking service in the Compute node is running
                    <literal>neutron-openvswitch-agent</literal>, this manages dom0's OVS. You can refer
                    Networking <reference anonymous="1" name="openvswitch_agent.ini sample" refuri="https://docs.openstack.org/neutron/latest/configuration/samples/openvswitch-agent.html">openvswitch_agent.ini sample</reference> for details,
                    however there are several specific items to look out for.</paragraph>
                <target anonymous="1" ids="id2" refuri="https://docs.openstack.org/neutron/latest/configuration/samples/openvswitch-agent.html"></target>
                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[agent]
minimize_polling = False
root_helper_daemon = xenapi_root_helper

[ovs]
of_listen_address = management_ip_address
ovsdb_connection = tcp:your_xenapi_management_ip_address:6640
bridge_mappings = &lt;physical_network&gt;:&lt;physical_bridge&gt;, ...
integration_bridge = br-int

[xenapi]
connection_url = http://your_xenapi_management_ip_address
connection_username = root
connection_password = your_pass_word</literal_block>
                <note>
                    <paragraph>The <literal>ovsdb_connection</literal> is the connection string for the native OVSDB
                        backend, you need to enable port 6640 in dom0.</paragraph>
                </note>
            </section>
            <section ids="agent" names="agent">
                <title>Agent</title>
                <paragraph>The agent is a piece of software that runs on the instances, and communicates
                    with OpenStack. In case of the XenAPI driver, the agent communicates with
                    OpenStack through XenStore (see <reference name="the Xen Project Wiki" refuri="http://wiki.xenproject.org/wiki/XenStore">the Xen Project Wiki</reference><target ids="the-xen-project-wiki" names="the\ xen\ project\ wiki" refuri="http://wiki.xenproject.org/wiki/XenStore"></target> for more information on XenStore).</paragraph>
                <paragraph>If you don't have the guest agent on your VMs, it takes a long time for
                    OpenStack Compute to detect that the VM has successfully started.  Generally a
                    large timeout is required for Windows instances, but you may want to adjust:
                    <literal>agent_version_timeout</literal> within the <literal>[xenserver]</literal> section.</paragraph>
            </section>
            <section ids="vnc-proxy-address" names="vnc\ proxy\ address">
                <title>VNC proxy address</title>
                <paragraph>Assuming you are talking to XAPI through a management network, and XenServer is
                    on the address: 10.10.1.34 specify the same address for the vnc proxy address:
                    <literal>vncserver_proxyclient_address=10.10.1.34</literal></paragraph>
            </section>
            <section ids="storage" names="storage">
                <title>Storage</title>
                <paragraph>You can specify which Storage Repository to use with nova by editing the
                    following flag. To use the local-storage setup by the default installer:</paragraph>
                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">sr_matching_filter = "other-config:i18n-key=local-storage"</literal_block>
                <paragraph>Another alternative is to use the "default" storage (for example if you have
                    attached NFS or any other shared storage):</paragraph>
                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">sr_matching_filter = "default-sr:true"</literal_block>
            </section>
            <section ids="image-upload-in-tgz-compressed-format" names="image\ upload\ in\ tgz\ compressed\ format">
                <title>Image upload in TGZ compressed format</title>
                <paragraph>To start uploading <literal>tgz</literal> compressed raw disk images to the Image service,
                    configure <literal>xenapi_image_upload_handler</literal> by replacing <literal>GlanceStore</literal> with
                    <literal>VdiThroughDevStore</literal>.</paragraph>
                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">xenapi_image_upload_handler=nova.virt.xenapi.image.vdi_through_dev.VdiThroughDevStore</literal_block>
                <paragraph>As opposed to:</paragraph>
                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">xenapi_image_upload_handler=nova.virt.xenapi.image.glance.GlanceStore</literal_block>
            </section>
        </section>
    </section>
</document>
