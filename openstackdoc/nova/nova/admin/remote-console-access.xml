<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/nova/doc/source/admin/remote-console-access.rst">
    <section ids="configure-remote-console-access" names="configure\ remote\ console\ access">
        <title>Configure remote console access</title>
        <paragraph>To provide a remote console or remote desktop access to guest virtual machines,
            use VNC or SPICE HTML5 through either the OpenStack dashboard or the command
            line. Best practice is to select one or the other to run.</paragraph>
        <target refid="about-nova-consoleauth"></target>
        <section ids="about-nova-consoleauth id1" names="about\ nova-consoleauth about-nova-consoleauth">
            <title>About nova-consoleauth</title>
            <paragraph>Both client proxies leverage a shared service to manage token authentication
                called <literal>nova-consoleauth</literal>. This service must be running for either proxy to
                work. Many proxies of either type can be run against a single
                <literal>nova-consoleauth</literal> service in a cluster configuration.</paragraph>
            <paragraph>Do not confuse the <literal>nova-consoleauth</literal> shared service with <literal>nova-console</literal>,
                which is a XenAPI-specific service that most recent VNC proxy architectures do
                not use.</paragraph>
        </section>
        <section ids="spice-console" names="spice\ console">
            <title>SPICE console</title>
            <paragraph>OpenStack Compute supports VNC consoles to guests. The VNC protocol is fairly
                limited, lacking support for multiple monitors, bi-directional audio, reliable
                cut-and-paste, video streaming and more. SPICE is a new protocol that aims to
                address the limitations in VNC and provide good remote desktop support.</paragraph>
            <paragraph>SPICE support in OpenStack Compute shares a similar architecture to the VNC
                implementation. The OpenStack dashboard uses a SPICE-HTML5 widget in its
                console tab that communicates to the <literal>nova-spicehtml5proxy</literal> service by using
                SPICE-over-websockets. The <literal>nova-spicehtml5proxy</literal> service communicates
                directly with the hypervisor process by using SPICE.</paragraph>
            <paragraph>VNC must be explicitly disabled to get access to the SPICE console. Set the
                <literal>vnc_enabled</literal> option to <literal>False</literal> in the <literal>[DEFAULT]</literal> section to disable the
                VNC console.</paragraph>
            <paragraph>Use the following options to configure SPICE as the console for OpenStack
                Compute:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">[spice]
agent_enabled = False
enabled = True
html5proxy_base_url = http://IP_ADDRESS:6082/spice_auto.html
html5proxy_host = 0.0.0.0
html5proxy_port = 6082
keymap = en-us
server_listen = 127.0.0.1
server_proxyclient_address = 127.0.0.1</literal_block>
            <paragraph>Replace <literal>IP_ADDRESS</literal> with the management interface IP address of the
                controller or the VIP.</paragraph>
        </section>
        <section ids="vnc-console-proxy" names="vnc\ console\ proxy">
            <title>VNC console proxy</title>
            <paragraph>The VNC proxy is an OpenStack component that enables compute service users to
                access their instances through VNC clients.</paragraph>
            <note>
                <paragraph>The web proxy console URLs do not support the websocket protocol scheme
                    (ws://) on python versions less than 2.7.4.</paragraph>
            </note>
            <paragraph>The VNC console connection works as follows:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>A user connects to the API and gets an <literal>access_url</literal> such as,
                        <literal>http://ip:port/?token=xyz</literal>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>The user pastes the URL in a browser or uses it as a client
                        parameter.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>The browser or client connects to the proxy.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>The proxy talks to <literal>nova-consoleauth</literal> to authorize the token for the user,
                        and maps the token to the <emphasis>private</emphasis> host and port of the VNC server for an
                        instance.</paragraph>
                    <paragraph>The compute host specifies the address that the proxy should use to connect
                        through the <literal>nova.conf</literal> file option, <literal>vncserver_proxyclient_address</literal>. In
                        this way, the VNC proxy works as a bridge between the public network and
                        private host network.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>The proxy initiates the connection to VNC server and continues to proxy
                        until the session ends.</paragraph>
                </list_item>
            </enumerated_list>
            <paragraph>The proxy also tunnels the VNC protocol over WebSockets so that the <literal>noVNC</literal>
                client can talk to VNC servers. In general, the VNC proxy:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Bridges between the public network where the clients live and the private
                        network where VNC servers live.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Mediates token authentication.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Transparently deals with hypervisor-specific connection details to provide a
                        uniform client experience.</paragraph>
                </list_item>
            </bullet_list>
            <figure>
                <image alt="noVNC process" candidates="{'*': u'admin/figures/SCH_5009_V00_NUAC-VNC_OpenStack.png'}" uri="admin/figures/SCH_5009_V00_NUAC-VNC_OpenStack.png" width="95%"></image>
            </figure>
            <section ids="vnc-configuration-options" names="vnc\ configuration\ options">
                <title>VNC configuration options</title>
                <paragraph>To customize the VNC console, use the following configuration options in your
                    <literal>nova.conf</literal> file:</paragraph>
                <note>
                    <paragraph>To support <reference internal="True" refuri="configuring-migrations#section-configuring-compute-migrations"><inline classes="std std-ref">live migration</inline></reference>,
                        you cannot specify a specific IP address for <literal>vncserver_listen</literal>, because
                        that IP address does not exist on the destination host.</paragraph>
                </note>
                <table classes="colwidths-given" ids="id2">
                    <title><strong>Description of VNC configuration options</strong></title>
                    <tgroup cols="2">
                        <colspec colwidth="25"></colspec>
                        <colspec colwidth="25"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>Configuration option = Default value</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Description</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><strong>[DEFAULT]</strong></paragraph>
                                </entry>
                                <entry>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>daemon = False</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(BoolOpt) Become a daemon (background process)</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>key = None</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(StrOpt) SSL key file (if separate from cert)</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>novncproxy_host = 0.0.0.0</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(StrOpt) Host on which to listen for incoming requests</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>novncproxy_port = 6080</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(IntOpt) Port on which to listen for incoming requests</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>record = False</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(BoolOpt) Record sessions to FILE.[session_number]</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>source_is_ipv6 = False</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(BoolOpt) Source is ipv6</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>ssl_only = False</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(BoolOpt) Disallow non-encrypted connections</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>web = /usr/share/spice-html5</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(StrOpt) Run webserver on same port. Serve files from DIR.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><strong>[vmware]</strong></paragraph>
                                </entry>
                                <entry>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>vnc_port = 5900</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(IntOpt) VNC starting port</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>vnc_port_total = 10000</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>vnc_port_total = 10000</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><strong>[vnc]</strong></paragraph>
                                </entry>
                                <entry>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>enabled = True</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(BoolOpt) Enable VNC related features</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>novncproxy_base_url = <reference refuri="http://127.0.0.1:6080/vnc_auto.html">http://127.0.0.1:6080/vnc_auto.html</reference></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(StrOpt) Location of VNC console proxy, in the form
                                        "<reference refuri="http://127.0.0.1:6080/vnc_auto.html">http://127.0.0.1:6080/vnc_auto.html</reference>"</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>vncserver_listen = 127.0.0.1</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(StrOpt) IP address on which instance vncservers should listen</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>vncserver_proxyclient_address = 127.0.0.1</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(StrOpt) The address to which proxy clients (like nova-xvpvncproxy)
                                        should connect</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>xvpvncproxy_base_url = <reference refuri="http://127.0.0.1:6081/console">http://127.0.0.1:6081/console</reference></paragraph>
                                </entry>
                                <entry>
                                    <paragraph>(StrOpt) Location of nova xvp VNC console proxy, in the form
                                        "<reference refuri="http://127.0.0.1:6081/console">http://127.0.0.1:6081/console</reference>"</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <note>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>The <literal>vncserver_proxyclient_address</literal> defaults to <literal>127.0.0.1</literal>, which is
                                the address of the compute host that Compute instructs proxies to use when
                                connecting to instance servers.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>For all-in-one XenServer domU deployments, set this to <literal>169.254.0.1.</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>For multi-host XenServer domU deployments, set to a <literal>dom0 management IP</literal>
                                on the same network as the proxies.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>For multi-host libvirt deployments, set to a host management IP on the
                                same network as the proxies.</paragraph>
                        </list_item>
                    </bullet_list>
                </note>
            </section>
            <section ids="typical-deployment" names="typical\ deployment">
                <title>Typical deployment</title>
                <paragraph>A typical deployment has the following components:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>A <literal>nova-consoleauth</literal> process. Typically runs on the controller host.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>One or more <literal>nova-novncproxy</literal> services. Supports browser-based noVNC
                            clients. For simple deployments, this service typically runs on the same
                            machine as <literal>nova-api</literal> because it operates as a proxy between the public
                            network and the private compute host network.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>One or more <literal>nova-xvpvncproxy</literal> services. Supports the special Java client
                            discussed here. For simple deployments, this service typically runs on the
                            same machine as <literal>nova-api</literal> because it acts as a proxy between the public
                            network and the private compute host network.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>One or more compute hosts. These compute hosts must have correctly configured
                            options, as follows.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="nova-novncproxy-novnc" names="nova-novncproxy\ (novnc)">
                <title>nova-novncproxy (noVNC)</title>
                <paragraph>You must install the noVNC package, which contains the <literal>nova-novncproxy</literal>
                    service. As root, run the following command:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># apt-get install nova-novncproxy</literal_block>
                <paragraph>The service starts automatically on installation.</paragraph>
                <paragraph>To restart the service, run:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># service nova-novncproxy restart</literal_block>
                <paragraph>The configuration option parameter should point to your <literal>nova.conf</literal> file,
                    which includes the message queue server address and credentials.</paragraph>
                <paragraph>By default, <literal>nova-novncproxy</literal> binds on <literal>0.0.0.0:6080</literal>.</paragraph>
                <paragraph>To connect the service to your Compute deployment, add the following
                    configuration options to your <literal>nova.conf</literal> file:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>vncserver_listen=0.0.0.0</literal></paragraph>
                        <paragraph>Specifies the address on which the VNC service should bind. Make sure it is
                            assigned one of the compute node interfaces. This address is the one used by
                            your domain file.</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">&lt;graphics type="vnc" autoport="yes" keymap="en-us" listen="0.0.0.0"/&gt;</literal_block>
                        <note>
                            <paragraph>To use live migration, use the 0.0.0.0 address.</paragraph>
                        </note>
                    </list_item>
                    <list_item>
                        <paragraph><literal>vncserver_proxyclient_address=127.0.0.1</literal></paragraph>
                        <paragraph>The address of the compute host that Compute instructs proxies to use when
                            connecting to instance <literal>vncservers</literal>.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="frequently-asked-questions-about-vnc-access-to-virtual-machines" names="frequently\ asked\ questions\ about\ vnc\ access\ to\ virtual\ machines">
                <title>Frequently asked questions about VNC access to virtual machines</title>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>Q: What is the difference between ``nova-xvpvncproxy`` and
                                ``nova-novncproxy``?</strong></paragraph>
                        <paragraph>A: <literal>nova-xvpvncproxy</literal>, which ships with OpenStack Compute, is a proxy that
                            supports a simple Java client. nova-novncproxy uses noVNC to provide VNC
                            support through a web browser.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Q: I want VNC support in the OpenStack dashboard. What services do I
                                need?</strong></paragraph>
                        <paragraph>A: You need <literal>nova-novncproxy</literal>, <literal>nova-consoleauth</literal>, and correctly
                            configured compute hosts.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Q: When I use ``nova get-vnc-console`` or click on the VNC tab of the
                                OpenStack dashboard, it hangs. Why?</strong></paragraph>
                        <paragraph>A: Make sure you are running <literal>nova-consoleauth</literal> (in addition to
                            <literal>nova-novncproxy</literal>). The proxies rely on <literal>nova-consoleauth</literal> to validate
                            tokens, and waits for a reply from them until a timeout is reached.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Q: My VNC proxy worked fine during my all-in-one test, but now it doesn't
                                work on multi host. Why?</strong></paragraph>
                        <paragraph>A: The default options work for an all-in-one install, but changes must be
                            made on your compute hosts once you start to build a cluster.  As an example,
                            suppose you have two servers:</paragraph>
                        <literal_block highlight_args="{}" language="bash" linenos="False" xml:space="preserve">PROXYSERVER (public_ip=172.24.1.1, management_ip=192.168.1.1)
COMPUTESERVER (management_ip=192.168.1.2)</literal_block>
                        <paragraph>Your <literal>nova-compute</literal> configuration file must set the following values:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># These flags help construct a connection data structure
vncserver_proxyclient_address=192.168.1.2
novncproxy_base_url=http://172.24.1.1:6080/vnc_auto.html
xvpvncproxy_base_url=http://172.24.1.1:6081/console

# This is the address where the underlying vncserver (not the proxy)
# will listen for connections.
vncserver_listen=192.168.1.2</literal_block>
                        <note>
                            <paragraph><literal>novncproxy_base_url</literal> and <literal>xvpvncproxy_base_url</literal> use a public IP; this
                                is the URL that is ultimately returned to clients, which generally do not
                                have access to your private network. Your PROXYSERVER must be able to
                                reach <literal>vncserver_proxyclient_address</literal>, because that is the address over
                                which the VNC connection is proxied.</paragraph>
                        </note>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Q: My noVNC does not work with recent versions of web browsers. Why?</strong></paragraph>
                        <paragraph>A: Make sure you have installed <literal>python-numpy</literal>, which is required to
                            support a newer version of the WebSocket protocol (HyBi-07+).</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Q: How do I adjust the dimensions of the VNC window image in the OpenStack
                                dashboard?</strong></paragraph>
                        <paragraph>A: These values are hard-coded in a Django HTML template. To alter them, edit
                            the <literal>_detail_vnc.html</literal> template file. The location of this file varies
                            based on Linux distribution. On Ubuntu 14.04, the file is at
                            <literal>/usr/share/pyshared/horizon/dashboards/nova/instances/templates/instances/_detail_vnc.html</literal>.</paragraph>
                        <paragraph>Modify the <literal>width</literal> and <literal>height</literal> options, as follows:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">&lt;iframe src="{{ vnc_url }}" width="720" height="430"&gt;&lt;/iframe&gt;</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Q: My noVNC connections failed with ValidationError: Origin header protocol
                                does not match. Why?</strong></paragraph>
                        <paragraph>A: Make sure the <literal>base_url</literal> match your TLS setting. If you are using https
                            console connections, make sure that the value of <literal>novncproxy_base_url</literal> is
                            set explicitly where the <literal>nova-novncproxy</literal> service is running.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
        </section>
    </section>
</document>
