<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/nova/doc/source/user/config-drive.rst">
    <section ids="store-metadata-on-a-configuration-drive" names="store\ metadata\ on\ a\ configuration\ drive">
        <title>Store metadata on a configuration drive</title>
        <paragraph>You can configure OpenStack to write metadata to a special configuration drive
            that attaches to the instance when it boots. The instance can mount this drive
            and read files from it to get information that is normally available through
            the <reference internal="True" refuri="../admin/networking-nova#metadata-service"><inline classes="std std-ref">metadata service</inline></reference>.
            This metadata is different from the user data.</paragraph>
        <paragraph>One use case for using the configuration drive is to pass a networking
            configuration when you do not use DHCP to assign IP addresses to
            instances. For example, you might pass the IP address configuration for
            the instance through the configuration drive, which the instance can
            mount and access before you configure the network settings for the
            instance.</paragraph>
        <paragraph>Any modern guest operating system that is capable of mounting an ISO
            9660 or VFAT file system can use the configuration drive.</paragraph>
        <section ids="requirements-and-guidelines" names="requirements\ and\ guidelines">
            <title>Requirements and guidelines</title>
            <paragraph>To use the configuration drive, you must follow the following
                requirements for the compute host and image.</paragraph>
            <paragraph><strong>Compute host requirements</strong></paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>The following hypervisors support the configuration drive: libvirt,
                        XenServer, Hyper-V, and VMware.</paragraph>
                    <paragraph>Also, the Bare Metal service supports the configuration drive.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>To use configuration drive with libvirt, XenServer, or VMware, you
                        must first install the genisoimage package on each compute host.
                        Otherwise, instances do not boot properly.</paragraph>
                    <paragraph>Use the <literal>mkisofs_cmd</literal> flag to set the path where you install the
                        genisoimage program. If genisoimage is in same path as the
                        <literal>nova-compute</literal> service, you do not need to set this flag.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>To use configuration drive with Hyper-V, you must set the
                        <literal>mkisofs_cmd</literal> value to the full path to an <literal>mkisofs.exe</literal>
                        installation. Additionally, you must set the <literal>qemu_img_cmd</literal> value
                        in the <literal>hyperv</literal> configuration section to the full path to an
                        <literal_strong classes="command">qemu-img</literal_strong> command installation.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>To use configuration drive with the Bare Metal service,
                        you do not need to prepare anything because the Bare Metal
                        service treats the configuration drive properly.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><strong>Image requirements</strong></paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>An image built with a recent version of the cloud-init package can
                        automatically access metadata passed through the configuration drive.
                        The cloud-init package version 0.7.1 works with Ubuntu, Fedora
                        based images (such as Red Hat Enterprise Linux) and openSUSE based
                        images (such as SUSE Linux Enterprise Server).</paragraph>
                </list_item>
                <list_item>
                    <paragraph>If an image does not have the cloud-init package installed, you must
                        customize the image to run a script that mounts the configuration
                        drive on boot, reads the data from the drive, and takes appropriate
                        action such as adding the public key to an account. You can read more
                        details about how data is organized on the configuration drive.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>If you use Xen with a configuration drive, use the
                        <literal>xenapi_disable_agent</literal> configuration parameter to disable the
                        agent.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><strong>Guidelines</strong></paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Do not rely on the presence of the EC2 metadata in the configuration
                        drive, because this content might be removed in a future release. For
                        example, do not rely on files in the <literal>ec2</literal> directory.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>When you create images that access configuration drive data and
                        multiple directories are under the <literal>openstack</literal> directory, always
                        select the highest API version by date that your consumer supports.
                        For example, if your guest image supports the 2012-03-05, 2012-08-05,
                        and 2013-04-13 versions, try 2013-04-13 first and fall back to a
                        previous version if 2013-04-13 is not present.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="enable-and-access-the-configuration-drive" names="enable\ and\ access\ the\ configuration\ drive">
            <title>Enable and access the configuration drive</title>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>To enable the configuration drive, pass the <literal>--config-drive true</literal>
                        parameter to the <literal_strong classes="command">openstack server create</literal_strong> command.</paragraph>
                    <paragraph>The following example enables the configuration drive and passes user
                        data, two files, and two key/value metadata pairs, all of which are
                        accessible from the configuration drive:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack server create --config-drive true --image my-image-name \
  --flavor 1 --key-name mykey --user-data ./my-user-data.txt \
  --file /etc/network/interfaces=/home/myuser/instance-interfaces \
  --file known_hosts=/home/myuser/.ssh/known_hosts \
  --property role=webservers --property essential=false MYINSTANCE</literal_block>
                    <paragraph>You can also configure the Compute service to always create a
                        configuration drive by setting the following option in the
                        <literal>/etc/nova/nova.conf</literal> file:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">force_config_drive = true</literal_block>
                    <note>
                        <paragraph>If a user passes the <literal>--config-drive true</literal> flag to the <literal_strong classes="command">nova
                                boot</literal_strong> command, an administrator cannot disable the configuration
                            drive.</paragraph>
                    </note>
                </list_item>
                <list_item>
                    <paragraph>If your guest operating system supports accessing disk by label, you
                        can mount the configuration drive as the
                        <literal>/dev/disk/by-label/configurationDriveVolumeLabel</literal> device. In the
                        following example, the configuration drive has the <literal>config-2</literal>
                        volume label:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># mkdir -p /mnt/config
# mount /dev/disk/by-label/config-2 /mnt/config</literal_block>
                </list_item>
            </enumerated_list>
            <note>
                <paragraph>Ensure that you use at least version 0.3.1 of CirrOS for
                    configuration drive support.</paragraph>
                <paragraph>If your guest operating system does not use <literal>udev</literal>, the
                    <literal>/dev/disk/by-label</literal> directory is not present.</paragraph>
                <paragraph>You can use the <literal_strong classes="command">blkid</literal_strong> command to identify the block device that
                    corresponds to the configuration drive. For example, when you boot
                    the CirrOS image with the <literal>m1.tiny</literal> flavor, the device is
                    <literal>/dev/vdb</literal>:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># blkid -t LABEL="config-2" -odevice</literal_block>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">/dev/vdb</literal_block>
                <paragraph>Once identified, you can mount the device:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># mkdir -p /mnt/config
# mount /dev/vdb /mnt/config</literal_block>
            </note>
            <section ids="configuration-drive-contents" names="configuration\ drive\ contents">
                <title>Configuration drive contents</title>
                <paragraph>In this example, the contents of the configuration drive are as follows:</paragraph>
                <literal_block xml:space="preserve">ec2/2009-04-04/meta-data.json
ec2/2009-04-04/user-data
ec2/latest/meta-data.json
ec2/latest/user-data
openstack/2012-08-10/meta_data.json
openstack/2012-08-10/user_data
openstack/content
openstack/content/0000
openstack/content/0001
openstack/latest/meta_data.json
openstack/latest/user_data</literal_block>
                <paragraph>The files that appear on the configuration drive depend on the arguments
                    that you pass to the <literal_strong classes="command">openstack server create</literal_strong> command.</paragraph>
            </section>
            <section ids="openstack-metadata-format" names="openstack\ metadata\ format">
                <title>OpenStack metadata format</title>
                <paragraph>The following example shows the contents of the
                    <literal>openstack/2012-08-10/meta_data.json</literal> and
                    <literal>openstack/latest/meta_data.json</literal> files. These files are identical.
                    The file contents are formatted for readability.</paragraph>
                <literal_block highlight_args="{}" language="json" linenos="False" xml:space="preserve">{
    "availability_zone": "nova",
    "files": [
        {
            "content_path": "/content/0000",
            "path": "/etc/network/interfaces"
        },
        {
            "content_path": "/content/0001",
            "path": "known_hosts"
        }
    ],
    "hostname": "test.novalocal",
    "launch_index": 0,
    "name": "test",
    "meta": {
        "role": "webservers",
        "essential": "false"
    },
    "public_keys": {
        "mykey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDBqUfVvCSez0/Wfpd8dLLgZXV9GtXQ7hnMN+Z0OWQUyebVEHey1CXuin0uY1cAJMhUq8j98SiW+cU0sU4J3x5l2+xi1bodDm1BtFWVeLIOQINpfV1n8fKjHB+ynPpe1F6tMDvrFGUlJs44t30BrujMXBe8Rq44cCk6wqyjATA3rQ== Generated by Nova\n"
    },
    "uuid": "83679162-1378-4288-a2d4-70e13ec132aa"
}</literal_block>
                <paragraph>Note the effect of the
                    <literal>--file /etc/network/interfaces=/home/myuser/instance-interfaces</literal>
                    argument that was passed to the <literal_strong classes="command">openstack server create</literal_strong> command.
                    The contents of this file are contained in the <literal>openstack/content/0000</literal>
                    file on the configuration drive, and the path is specified as
                    <literal>/etc/network/interfaces</literal> in the <literal>meta_data.json</literal> file.</paragraph>
            </section>
            <section ids="ec2-metadata-format" names="ec2\ metadata\ format">
                <title>EC2 metadata format</title>
                <paragraph>The following example shows the contents of the
                    <literal>ec2/2009-04-04/meta-data.json</literal> and the <literal>ec2/latest/meta-data.json</literal>
                    files. These files are identical. The file contents are formatted to
                    improve readability.</paragraph>
                <literal_block highlight_args="{}" language="json" linenos="False" xml:space="preserve">{
    "ami-id": "ami-00000001",
    "ami-launch-index": 0,
    "ami-manifest-path": "FIXME",
    "block-device-mapping": {
        "ami": "sda1",
        "ephemeral0": "sda2",
        "root": "/dev/sda1",
        "swap": "sda3"
    },
    "hostname": "test.novalocal",
    "instance-action": "none",
    "instance-id": "i-00000001",
    "instance-type": "m1.tiny",
    "kernel-id": "aki-00000002",
    "local-hostname": "test.novalocal",
    "local-ipv4": null,
    "placement": {
        "availability-zone": "nova"
    },
    "public-hostname": "test.novalocal",
    "public-ipv4": "",
    "public-keys": {
        "0": {
            "openssh-key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDBqUfVvCSez0/Wfpd8dLLgZXV9GtXQ7hnMN+Z0OWQUyebVEHey1CXuin0uY1cAJMhUq8j98SiW+cU0sU4J3x5l2+xi1bodDm1BtFWVeLIOQINpfV1n8fKjHB+ynPpe1F6tMDvrFGUlJs44t30BrujMXBe8Rq44cCk6wqyjATA3rQ== Generated by Nova\n"
        }
    },
    "ramdisk-id": "ari-00000003",
    "reservation-id": "r-7lfps8wj",
    "security-groups": [
        "default"
    ]
}</literal_block>
            </section>
            <section ids="user-data" names="user\ data">
                <title>User data</title>
                <paragraph>The <literal>openstack/2012-08-10/user_data</literal>, <literal>openstack/latest/user_data</literal>,
                    <literal>ec2/2009-04-04/user-data</literal>, and <literal>ec2/latest/user-data</literal> file are
                    present only if the <literal>--user-data</literal> flag and the contents of the user
                    data file are passed to the <literal_strong classes="command">openstack server create</literal_strong> command.</paragraph>
            </section>
            <section ids="configuration-drive-format" names="configuration\ drive\ format">
                <title>Configuration drive format</title>
                <paragraph>The default format of the configuration drive as an ISO 9660 file
                    system. To explicitly specify the ISO 9660 format, add the following
                    line to the <literal>/etc/nova/nova.conf</literal> file:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">config_drive_format=iso9660</literal_block>
                <paragraph>By default, you cannot attach the configuration drive image as a CD
                    drive instead of as a disk drive. To attach a CD drive, add the
                    following line to the <literal>/etc/nova/nova.conf</literal> file:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">config_drive_cdrom=true</literal_block>
                <paragraph>For legacy reasons, you can configure the configuration drive to use
                    VFAT format instead of ISO 9660. It is unlikely that you would require
                    VFAT format because ISO 9660 is widely supported across operating
                    systems. However, to use the VFAT format, add the following line to the
                    <literal>/etc/nova/nova.conf</literal> file:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">config_drive_format=vfat</literal_block>
                <paragraph>If you choose VFAT, the configuration drive is 64 MB.</paragraph>
            </section>
        </section>
    </section>
</document>
