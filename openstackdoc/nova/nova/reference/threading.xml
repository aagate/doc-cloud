<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/nova/doc/source/reference/threading.rst">
    <section ids="threading-model" names="threading\ model">
        <title>Threading model</title>
        <paragraph>All OpenStack services use <emphasis>green thread</emphasis> model of threading, implemented
            through using the Python <reference name="eventlet" refuri="http://eventlet.net/">eventlet</reference><target ids="eventlet" names="eventlet" refuri="http://eventlet.net/"></target> and
            <reference name="greenlet" refuri="http://packages.python.org/greenlet/">greenlet</reference><target ids="greenlet" names="greenlet" refuri="http://packages.python.org/greenlet/"></target> libraries.</paragraph>
        <paragraph>Green threads use a cooperative model of threading: thread context
            switches can only occur when specific eventlet or greenlet library calls are
            made (e.g., sleep, certain I/O calls). From the operating system's point of
            view, each OpenStack service runs in a single thread.</paragraph>
        <paragraph>The use of green threads reduces the likelihood of race conditions, but does
            not completely eliminate them. In some cases, you may need to use the
            <literal>@lockutils.synchronized(...)</literal> decorator to avoid races.</paragraph>
        <paragraph>In addition, since there is only one operating system thread, a call that
            blocks that main thread will block the entire process.</paragraph>
        <section ids="yielding-the-thread-in-long-running-tasks" names="yielding\ the\ thread\ in\ long-running\ tasks">
            <title>Yielding the thread in long-running tasks</title>
            <paragraph>If a code path takes a long time to execute and does not contain any methods
                that trigger an eventlet context switch, the long-running thread will block
                any pending threads.</paragraph>
            <paragraph>This scenario can be avoided by adding calls to the eventlet sleep method
                in the long-running code path. The sleep call will trigger a context switch
                if there are pending threads, and using an argument of 0 will avoid introducing
                delays in the case that there is only a single green thread:</paragraph>
            <literal_block xml:space="preserve">from eventlet import greenthread
...
greenthread.sleep(0)</literal_block>
            <paragraph>In current code, time.sleep(0ï¼‰does the same thing as greenthread.sleep(0) if
                time module is patched through eventlet.monkey_patch(). To be explicit, we recommend
                contributors use <literal>greenthread.sleep()</literal> instead of <literal>time.sleep()</literal>.</paragraph>
        </section>
        <section ids="mysql-access-and-eventlet" names="mysql\ access\ and\ eventlet">
            <title>MySQL access and eventlet</title>
            <paragraph>There are some MySQL DB API drivers for oslo.db, like <reference name="PyMySQL" refuri="https://wiki.openstack.org/wiki/PyMySQL_evaluation">PyMySQL</reference>, MySQL-python
                etc. PyMySQL is the default MySQL DB API driver for oslo.db, and it works well with
                eventlet. MySQL-python uses an external C library for accessing the MySQL database.
                Since eventlet cannot use monkey-patching to intercept blocking calls in a C library,
                so queries to the MySQL database will block the main thread of a service.</paragraph>
            <paragraph>The Diablo release contained a thread-pooling implementation that did not
                block, but this implementation resulted in a <reference name="bug" refuri="https://bugs.launchpad.net/nova/+bug/838581">bug</reference> and was removed.</paragraph>
            <paragraph>See this <reference name="mailing list thread" refuri="https://lists.launchpad.net/openstack/msg08118.html">mailing list thread</reference> for a discussion of this issue, including
                a discussion of the <reference name="impact on performance" refuri="https://lists.launchpad.net/openstack/msg08217.html">impact on performance</reference>.</paragraph>
            <target ids="bug" names="bug" refuri="https://bugs.launchpad.net/nova/+bug/838581"></target>
            <target ids="mailing-list-thread" names="mailing\ list\ thread" refuri="https://lists.launchpad.net/openstack/msg08118.html"></target>
            <target ids="impact-on-performance" names="impact\ on\ performance" refuri="https://lists.launchpad.net/openstack/msg08217.html"></target>
            <target ids="pymysql" names="pymysql" refuri="https://wiki.openstack.org/wiki/PyMySQL_evaluation"></target>
        </section>
    </section>
</document>
