<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/nova/doc/source/admin/service-groups.rst">
    <section ids="configure-compute-service-groups" names="configure\ compute\ service\ groups">
        <title>Configure Compute service groups</title>
        <paragraph>The Compute service must know the status of each compute node to effectively
            manage and use them. This can include events like a user launching a new VM,
            the scheduler sending a request to a live node, or a query to the ServiceGroup
            API to determine if a node is live.</paragraph>
        <paragraph>When a compute worker running the nova-compute daemon starts, it calls the join
            API to join the compute group. Any service (such as the scheduler) can query
            the group's membership and the status of its nodes.  Internally, the
            ServiceGroup client driver automatically updates the compute worker status.</paragraph>
        <target refid="database-servicegroup-driver"></target>
        <section ids="database-servicegroup-driver id1" names="database\ servicegroup\ driver database-servicegroup-driver">
            <title>Database ServiceGroup driver</title>
            <paragraph>By default, Compute uses the database driver to track if a node is live.  In a
                compute worker, this driver periodically sends a <literal>db update</literal> command to the
                database, saying “I'm OK” with a timestamp. Compute uses a pre-defined
                timeout (<literal>service_down_time</literal>) to determine if a node is dead.</paragraph>
            <paragraph>The driver has limitations, which can be problematic depending on your
                environment. If a lot of compute worker nodes need to be checked, the database
                can be put under heavy load, which can cause the timeout to trigger, and a live
                node could incorrectly be considered dead. By default, the timeout is 60
                seconds. Reducing the timeout value can help in this situation, but you must
                also make the database update more frequently, which again increases the
                database workload.</paragraph>
            <paragraph>The database contains data that is both transient (such as whether the node is
                alive) and persistent (such as entries for VM owners). With the ServiceGroup
                abstraction, Compute can treat each type separately.</paragraph>
            <target refid="memcache-servicegroup-driver"></target>
        </section>
        <section ids="memcache-servicegroup-driver id2" names="memcache\ servicegroup\ driver memcache-servicegroup-driver">
            <title>Memcache ServiceGroup driver</title>
            <paragraph>The memcache ServiceGroup driver uses memcached, a distributed memory object
                caching system that is used to increase site performance. For more details, see
                <reference name="memcached.org" refuri="http://memcached.org/">memcached.org</reference><target ids="memcached-org" names="memcached.org" refuri="http://memcached.org/"></target>.</paragraph>
            <paragraph>To use the memcache driver, you must install memcached. You might already have
                it installed, as the same driver is also used for the OpenStack Object Storage
                and OpenStack dashboard. To install memcached, see the <emphasis>Environment -&gt;
                    Memcached</emphasis> section in the <reference name="Installation Tutorials and Guides" refuri="https://docs.openstack.org/project-install-guide/ocata">Installation Tutorials and Guides</reference><target ids="installation-tutorials-and-guides" names="installation\ tutorials\ and\ guides" refuri="https://docs.openstack.org/project-install-guide/ocata"></target> depending on your
                distribution.</paragraph>
            <paragraph>These values in the <literal>/etc/nova/nova.conf</literal> file are required on every node for
                the memcache driver:</paragraph>
            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve"># Driver for the ServiceGroup service
servicegroup_driver = "mc"

# Memcached servers. Use either a list of memcached servers to use for caching (list value),
# or "&lt;None&gt;" for in-process caching (default).
memcached_servers = &lt;None&gt;

# Timeout; maximum time since last check-in for up service (integer value).
# Helps to define whether a node is dead
service_down_time = 60</literal_block>
        </section>
    </section>
</document>
