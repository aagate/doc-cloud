<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/nova/doc/source/admin/configuration/hypervisor-hyper-v.rst">
    <section ids="hyper-v-virtualization-platform" names="hyper-v\ virtualization\ platform">
        <title>Hyper-V virtualization platform</title>
        <target refid="index-0"></target>
        <todo_node classes="admonition-todo" ids="index-0">
            <title>Todo</title>
            <paragraph>This is really installation guide material and should probably be
                moved.</paragraph>
        </todo_node>
        <paragraph>It is possible to use Hyper-V as a compute node within an OpenStack Deployment.
            The <literal>nova-compute</literal> service runs as <literal>openstack-compute</literal>, a 32-bit service
            directly upon the Windows platform with the Hyper-V role enabled. The necessary
            Python components as well as the <literal>nova-compute</literal> service are installed
            directly onto the Windows platform. Windows Clustering Services are not needed
            for functionality within the OpenStack infrastructure.  The use of the Windows
            Server 2012 platform is recommend for the best experience and is the platform
            for active development.  The following Windows platforms have been tested as
            compute nodes:</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph>Windows Server 2012</paragraph>
            </list_item>
            <list_item>
                <paragraph>Windows Server 2012 R2 Server and Core (with the Hyper-V role enabled)</paragraph>
            </list_item>
            <list_item>
                <paragraph>Hyper-V Server</paragraph>
            </list_item>
        </bullet_list>
        <section ids="hyper-v-configuration" names="hyper-v\ configuration">
            <title>Hyper-V configuration</title>
            <paragraph>The only OpenStack services required on a Hyper-V node are <literal>nova-compute</literal> and
                <literal>neutron-hyperv-agent</literal>. Regarding the resources needed for this host you have
                to consider that Hyper-V will require 16 GB - 20 GB of disk space for the OS
                itself, including updates. Two NICs are required, one connected to the
                management network and one to the guest data network.</paragraph>
            <paragraph>The following sections discuss how to prepare the Windows Hyper-V node for
                operation as an OpenStack compute node. Unless stated otherwise, any
                configuration information should work for the Windows 2012 and 2012 R2
                platforms.</paragraph>
            <section ids="local-storage-considerations" names="local\ storage\ considerations">
                <title>Local storage considerations</title>
                <paragraph>The Hyper-V compute node needs to have ample storage for storing the virtual
                    machine images running on the compute nodes. You may use a single volume for
                    all, or partition it into an OS volume and VM volume.</paragraph>
                <target refid="configure-ntp-windows"></target>
            </section>
            <section ids="configure-ntp configure-ntp-windows" names="configure\ ntp configure-ntp-windows">
                <title>Configure NTP</title>
                <paragraph>Network time services must be configured to ensure proper operation of the
                    OpenStack nodes. To set network time on your Windows host you must run the
                    following commands:</paragraph>
                <literal_block highlight_args="{}" language="bat" linenos="False" xml:space="preserve">C:\&gt;net stop w32time
C:\&gt;w32tm /config /manualpeerlist:pool.ntp.org,0x8 /syncfromflags:MANUAL
C:\&gt;net start w32time</literal_block>
                <paragraph>Keep in mind that the node will have to be time synchronized with the other
                    nodes of your OpenStack environment, so it is important to use the same NTP
                    server. Note that in case of an Active Directory environment, you may do this
                    only for the AD Domain Controller.</paragraph>
            </section>
            <section ids="configure-hyper-v-virtual-switching" names="configure\ hyper-v\ virtual\ switching">
                <title>Configure Hyper-V virtual switching</title>
                <paragraph>Information regarding the Hyper-V virtual Switch can be found in the <reference anonymous="1" name="Hyper-V Virtual Switch Overview" refuri="https://technet.microsoft.com/en-us/library/hh831823.aspx">Hyper-V
                        Virtual Switch Overview</reference>.</paragraph>
                <paragraph>To quickly enable an interface to be used as a Virtual Interface the
                    following PowerShell may be used:</paragraph>
                <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; $if = Get-NetIPAddress -IPAddress 192* | Get-NetIPInterface
PS C:\&gt; New-VMSwitch -NetAdapterName $if.ifAlias -Name YOUR_BRIDGE_NAME -AllowManagementOS $false</literal_block>
                <note>
                    <paragraph>It is very important to make sure that when you are using a Hyper-V node
                        with only 1 NIC the -AllowManagementOS option is set on <literal>True</literal>, otherwise
                        you will lose connectivity to the Hyper-V node.</paragraph>
                </note>
                <target anonymous="1" ids="id1" refuri="https://technet.microsoft.com/en-us/library/hh831823.aspx"></target>
            </section>
            <section ids="enable-iscsi-initiator-service" names="enable\ iscsi\ initiator\ service">
                <title>Enable iSCSI initiator service</title>
                <paragraph>To prepare the Hyper-V node to be able to attach to volumes provided by cinder
                    you must first make sure the Windows iSCSI initiator service is running and
                    started automatically.</paragraph>
                <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; Set-Service -Name MSiSCSI -StartupType Automatic
PS C:\&gt; Start-Service MSiSCSI</literal_block>
            </section>
            <section ids="configure-shared-nothing-live-migration" names="configure\ shared\ nothing\ live\ migration">
                <title>Configure shared nothing live migration</title>
                <paragraph>Detailed information on the configuration of live migration can be found in
                    <reference anonymous="1" name="this guide" refuri="https://docs.microsoft.com/en-us/windows-server/virtualization/hyper-v/manage/Use-live-migration-without-Failover-Clustering-to-move-a-virtual-machine">this guide</reference></paragraph>
                <paragraph>The following outlines the steps of shared nothing live migration.</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>The target host ensures that live migration is enabled and properly
                            configured in Hyper-V.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The target host checks if the image to be migrated requires a base VHD and
                            pulls it from the Image service if not already available on the target host.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The source host ensures that live migration is enabled and properly
                            configured in Hyper-V.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The source host initiates a Hyper-V live migration.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The source host communicates to the manager the outcome of the operation.</paragraph>
                    </list_item>
                </enumerated_list>
                <paragraph>The following three configuration options are needed in order to support
                    Hyper-V live migration and must be added to your <literal>nova.conf</literal> on the Hyper-V
                    compute node:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>This is needed to support shared nothing Hyper-V live migrations.  It is used
                            in <literal>nova/compute/manager.py</literal>.</paragraph>
                        <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">instances_shared_storage = False</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>This flag is needed to support live migration to hosts with different CPU
                            features. This flag is checked during instance creation in order to limit the
                            CPU features used by the VM.</paragraph>
                        <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">limit_cpu_features = True</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>This option is used to specify where instances are stored on disk.</paragraph>
                        <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">instances_path = DRIVELETTER:\PATH\TO\YOUR\INSTANCES</literal_block>
                    </list_item>
                </bullet_list>
                <paragraph>Additional Requirements:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>Hyper-V 2012 R2 or Windows Server 2012 R2 with Hyper-V role enabled</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A Windows domain controller with the Hyper-V compute nodes as domain members</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The instances_path command-line option/flag needs to be the same on all hosts</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The <literal>openstack-compute</literal> service deployed with the setup must run with
                            domain credentials. You can set the service credentials with:</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="bat" linenos="False" xml:space="preserve">C:\&gt;sc config openstack-compute obj="DOMAIN\username" password="password"</literal_block>
                <target anonymous="1" ids="id2" refuri="https://docs.microsoft.com/en-us/windows-server/virtualization/hyper-v/manage/Use-live-migration-without-Failover-Clustering-to-move-a-virtual-machine"></target>
            </section>
            <section ids="how-to-setup-live-migration-on-hyper-v" names="how\ to\ setup\ live\ migration\ on\ hyper-v">
                <title>How to setup live migration on Hyper-V</title>
                <paragraph>To enable 'shared nothing live' migration, run the 3 instructions below on each
                    Hyper-V host:</paragraph>
                <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; Enable-VMMigration
PS C:\&gt; Set-VMMigrationNetwork IP_ADDRESS
PS C:\&gt; Set-VMHost -VirtualMachineMigrationAuthenticationTypeKerberos</literal_block>
                <note>
                    <paragraph>Replace the <literal>IP_ADDRESS</literal> with the address of the interface which will
                        provide live migration.</paragraph>
                </note>
            </section>
            <section ids="additional-reading" names="additional\ reading">
                <title>Additional Reading</title>
                <paragraph>This article clarifies the various live migration options in Hyper-V:</paragraph>
                <paragraph><reference name="Hyper-V Live Migration of Yesterday" refuri="https://ariessysadmin.blogspot.ro/2012/04/hyper-v-live-migration-of-windows.html">Hyper-V Live Migration of Yesterday</reference><target ids="hyper-v-live-migration-of-yesterday" names="hyper-v\ live\ migration\ of\ yesterday" refuri="https://ariessysadmin.blogspot.ro/2012/04/hyper-v-live-migration-of-windows.html"></target></paragraph>
            </section>
        </section>
        <section ids="install-nova-compute-using-openstack-hyper-v-installer" names="install\ nova-compute\ using\ openstack\ hyper-v\ installer">
            <title>Install nova-compute using OpenStack Hyper-V installer</title>
            <paragraph>In case you want to avoid all the manual setup, you can use Cloudbase
                Solutions' installer. You can find it here:</paragraph>
            <paragraph><reference name="HyperVNovaCompute_Beta download" refuri="https://www.cloudbase.it/downloads/HyperVNovaCompute_Beta.msi">HyperVNovaCompute_Beta download</reference><target ids="hypervnovacompute-beta-download" names="hypervnovacompute_beta\ download" refuri="https://www.cloudbase.it/downloads/HyperVNovaCompute_Beta.msi"></target></paragraph>
            <paragraph>The tool installs an independent Python environment in order to avoid conflicts
                with existing applications, and dynamically generates a <literal>nova.conf</literal> file
                based on the parameters provided by you.</paragraph>
            <paragraph>The tool can also be used for an automated and unattended mode for deployments
                on a massive number of servers. More details about how to use the installer and
                its features can be found here:</paragraph>
            <paragraph><reference name="Cloudbase" refuri="https://www.cloudbase.it">Cloudbase</reference><target ids="cloudbase" names="cloudbase" refuri="https://www.cloudbase.it"></target></paragraph>
            <target refid="windows-requirements"></target>
        </section>
        <section ids="requirements windows-requirements" names="requirements windows-requirements">
            <title>Requirements</title>
            <section ids="python" names="python">
                <title>Python</title>
                <paragraph>Python 2.7 32bit must be installed as most of the libraries are not working
                    properly on the 64bit version.</paragraph>
                <paragraph><strong>Setting up Python prerequisites</strong></paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Download and install Python 2.7 using the MSI installer from here:</paragraph>
                        <paragraph><reference name="python-2.7.3.msi download" refuri="https://www.python.org/ftp/python/2.7.3/python-2.7.3.msi">python-2.7.3.msi download</reference><target ids="python-2-7-3-msi-download" names="python-2.7.3.msi\ download" refuri="https://www.python.org/ftp/python/2.7.3/python-2.7.3.msi"></target></paragraph>
                        <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; $src = "https://www.python.org/ftp/python/2.7.3/python-2.7.3.msi"
PS C:\&gt; $dest = "$env:temp\python-2.7.3.msi"
PS C:\&gt; Invoke-WebRequest –Uri $src –OutFile $dest
PS C:\&gt; Unblock-File $dest
PS C:\&gt; Start-Process $dest</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Make sure that the <literal>Python</literal> and <literal>Python\Scripts</literal> paths are set up in the
                            <literal>PATH</literal> environment variable.</paragraph>
                        <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; $oldPath = [System.Environment]::GetEnvironmentVariable("Path")
PS C:\&gt; $newPath = $oldPath + ";C:\python27\;C:\python27\Scripts\"
PS C:\&gt; [System.Environment]::SetEnvironmentVariable("Path", $newPath, [System.EnvironmentVariableTarget]::User</literal_block>
                    </list_item>
                </enumerated_list>
            </section>
            <section ids="python-dependencies" names="python\ dependencies">
                <title>Python dependencies</title>
                <paragraph>The following packages need to be downloaded and manually installed:</paragraph>
                <definition_list>
                    <definition_list_item>
                        <term><literal>setuptools</literal></term>
                        <definition>
                            <paragraph><reference refuri="https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11.win32-py2.7.exe">https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11.win32-py2.7.exe</reference></paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>pip</literal></term>
                        <definition>
                            <paragraph><reference refuri="https://pip.pypa.io/en/latest/installing/">https://pip.pypa.io/en/latest/installing/</reference></paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>PyMySQL</literal></term>
                        <definition>
                            <paragraph><reference refuri="http://codegood.com/download/10/">http://codegood.com/download/10/</reference></paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>PyWin32</literal></term>
                        <definition>
                            <paragraph><reference refuri="https://sourceforge.net/projects/pywin32/files/pywin32/Build%20217/pywin32-217.win32-py2.7.exe">https://sourceforge.net/projects/pywin32/files/pywin32/Build%20217/pywin32-217.win32-py2.7.exe</reference></paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>Greenlet</literal></term>
                        <definition>
                            <paragraph><reference refuri="http://www.lfd.uci.edu/~gohlke/pythonlibs/#greenlet">http://www.lfd.uci.edu/~gohlke/pythonlibs/#greenlet</reference></paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term><literal>PyCryto</literal></term>
                        <definition>
                            <paragraph><reference refuri="http://www.voidspace.org.uk/downloads/pycrypto26/pycrypto-2.6.win32-py2.7.exe">http://www.voidspace.org.uk/downloads/pycrypto26/pycrypto-2.6.win32-py2.7.exe</reference></paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
                <paragraph>The following packages must be installed with pip:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><literal>ecdsa</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>amqp</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>wmi</literal></paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; pip install ecdsa
PS C:\&gt; pip install amqp
PS C:\&gt; pip install wmi</literal_block>
            </section>
            <section ids="other-dependencies" names="other\ dependencies">
                <title>Other dependencies</title>
                <paragraph><literal>qemu-img</literal> is required for some of the image related operations.  You can get
                    it from here: <reference refuri="http://qemu.weilnetz.de/">http://qemu.weilnetz.de/</reference>.  You must make sure that the
                    <literal>qemu-img</literal> path is set in the PATH environment variable.</paragraph>
                <paragraph>Some Python packages need to be compiled, so you may use MinGW or Visual
                    Studio. You can get MinGW from here: <reference refuri="http://sourceforge.net/projects/mingw/">http://sourceforge.net/projects/mingw/</reference>.
                    You must configure which compiler is to be used for this purpose by using the
                    <literal>distutils.cfg</literal> file in <literal>$Python27\Lib\distutils</literal>, which can contain:</paragraph>
                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[build]
compiler = mingw32</literal_block>
                <paragraph>As a last step for setting up MinGW, make sure that the MinGW binaries'
                    directories are set up in PATH.</paragraph>
            </section>
        </section>
        <section ids="install-nova-compute" names="install\ nova-compute">
            <title>Install nova-compute</title>
            <section ids="download-the-nova-code" names="download\ the\ nova\ code">
                <title>Download the nova code</title>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Use Git to download the necessary source code.  The installer to run Git on
                            Windows can be downloaded here:</paragraph>
                        <paragraph><reference refuri="https://github.com/msysgit/msysgit/releases/download/Git-1.9.2-preview20140411/Git-1.9.2-preview20140411.exe">https://github.com/msysgit/msysgit/releases/download/Git-1.9.2-preview20140411/Git-1.9.2-preview20140411.exe</reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Download the installer. Once the download is complete, run the installer and
                            follow the prompts in the installation wizard.  The default should be
                            acceptable for the purposes of this guide.</paragraph>
                        <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; $src = "https://github.com/msysgit/msysgit/releases/download/Git-1.9.2-preview20140411/Git-1.9.2-preview20140411.exe"
PS C:\&gt; $dest = "$env:temp\Git-1.9.2-preview20140411.exe"
PS C:\&gt; Invoke-WebRequest –Uri $src –OutFile $dest
PS C:\&gt; Unblock-File $dest
PS C:\&gt; Start-Process $dest</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Run the following to clone the nova code.</paragraph>
                        <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; git.exe clone https://git.openstack.org/openstack/nova</literal_block>
                    </list_item>
                </enumerated_list>
            </section>
            <section ids="install-nova-compute-service" names="install\ nova-compute\ service">
                <title>Install nova-compute service</title>
                <paragraph>To install <literal>nova-compute</literal>, run:</paragraph>
                <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; cd c:\nova
PS C:\&gt; python setup.py install</literal_block>
            </section>
            <section ids="configure-nova-compute" names="configure\ nova-compute">
                <title>Configure nova-compute</title>
                <paragraph>The <literal>nova.conf</literal> file must be placed in <literal>C:\etc\nova</literal> for running OpenStack
                    on Hyper-V. Below is a sample <literal>nova.conf</literal> for Windows:</paragraph>
                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[DEFAULT]
auth_strategy = keystone
image_service = nova.image.glance.GlanceImageService
compute_driver = nova.virt.hyperv.driver.HyperVDriver
volume_api_class = nova.volume.cinder.API
fake_network = true
instances_path = C:\Program Files (x86)\OpenStack\Instances
use_cow_images = true
force_config_drive = false
injected_network_template = C:\Program Files (x86)\OpenStack\Nova\etc\interfaces.template
policy_file = C:\Program Files (x86)\OpenStack\Nova\etc\policy.json
mkisofs_cmd = C:\Program Files (x86)\OpenStack\Nova\bin\mkisofs.exe
allow_resize_to_same_host = true
running_deleted_instance_action = reap
running_deleted_instance_poll_interval = 120
resize_confirm_window = 5
resume_guests_state_on_host_boot = true
rpc_response_timeout = 1800
lock_path = C:\Program Files (x86)\OpenStack\Log\
rpc_backend = nova.openstack.common.rpc.impl_kombu
rabbit_host = IP_ADDRESS
rabbit_port = 5672
rabbit_userid = guest
rabbit_password = Passw0rd
logdir = C:\Program Files (x86)\OpenStack\Log\
logfile = nova-compute.log
instance_usage_audit = true
instance_usage_audit_period = hour
use_neutron = True
[glance]
api_servers = http://IP_ADDRESS:9292
[neutron]
url = http://IP_ADDRESS:9696
auth_strategy = keystone
admin_tenant_name = service
admin_username = neutron
admin_password = Passw0rd
admin_auth_url = http://IP_ADDRESS:35357/v2.0
[hyperv]
vswitch_name = newVSwitch0
limit_cpu_features = false
config_drive_inject_password = false
qemu_img_cmd = C:\Program Files (x86)\OpenStack\Nova\bin\qemu-img.exe
config_drive_cdrom = true
dynamic_memory_ratio = 1
enable_instance_metrics_collection = true
[rdp]
enabled = true
html5_proxy_base_url = https://IP_ADDRESS:4430</literal_block>
            </section>
            <section ids="prepare-images-for-use-with-hyper-v" names="prepare\ images\ for\ use\ with\ hyper-v">
                <title>Prepare images for use with Hyper-V</title>
                <paragraph>Hyper-V currently supports only the VHD and VHDX file format for virtual
                    machine instances. Detailed instructions for installing virtual machines on
                    Hyper-V can be found here:</paragraph>
                <paragraph><reference name="Create Virtual Machines" refuri="http://technet.microsoft.com/en-us/library/cc772480.aspx">Create Virtual Machines</reference><target ids="create-virtual-machines" names="create\ virtual\ machines" refuri="http://technet.microsoft.com/en-us/library/cc772480.aspx"></target></paragraph>
                <paragraph>Once you have successfully created a virtual machine, you can then upload the
                    image to <title_reference>glance</title_reference> using the <title_reference>openstack-client</title_reference>:</paragraph>
                <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; openstack image create --name "VM_IMAGE_NAME" --property hypervisor_type=hyperv --public \
          --container-format bare --disk-format vhd</literal_block>
                <note>
                    <paragraph>VHD and VHDX files sizes can be bigger than their maximum internal size,
                        as such you need to boot instances using a flavor with a slightly bigger
                        disk size than the internal size of the disk file.
                        To create VHDs, use the following PowerShell cmdlet:</paragraph>
                    <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; New-VHD DISK_NAME.vhd -SizeBytes VHD_SIZE</literal_block>
                </note>
            </section>
            <section ids="inject-interfaces-and-routes" names="inject\ interfaces\ and\ routes">
                <title>Inject interfaces and routes</title>
                <paragraph>The <literal>interfaces.template</literal> file describes the network interfaces and routes
                    available on your system and how to activate them. You can specify the location
                    of the file with the <literal>injected_network_template</literal> configuration option in
                    <literal>/etc/nova/nova.conf</literal>.</paragraph>
                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">injected_network_template = PATH_TO_FILE</literal_block>
                <paragraph>A default template exists in <literal>nova/virt/interfaces.template</literal>.</paragraph>
            </section>
            <section ids="run-compute-with-hyper-v" names="run\ compute\ with\ hyper-v">
                <title>Run Compute with Hyper-V</title>
                <paragraph>To start the <literal>nova-compute</literal> service, run this command from a console in the
                    Windows server:</paragraph>
                <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; C:\Python27\python.exe c:\Python27\Scripts\nova-compute --config-file c:\etc\nova\nova.conf</literal_block>
            </section>
        </section>
        <section ids="troubleshoot-hyper-v-configuration" names="troubleshoot\ hyper-v\ configuration">
            <title>Troubleshoot Hyper-V configuration</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>I ran the <literal_strong classes="command">nova-manage service list</literal_strong> command from my controller;
                        however, I'm not seeing smiley faces for Hyper-V compute nodes, what do I do?</paragraph>
                    <paragraph>Verify that you are synchronized with a network time source.  For
                        instructions about how to configure NTP on your Hyper-V compute node, see
                        <reference internal="True" refid="configure-ntp-windows"><inline classes="std std-ref">Configure NTP</inline></reference>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>How do I restart the compute service?</paragraph>
                    <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; net stop nova-compute &amp;&amp; net start nova-compute</literal_block>
                </list_item>
                <list_item>
                    <paragraph>How do I restart the iSCSI initiator service?</paragraph>
                    <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">PS C:\&gt; net stop msiscsi &amp;&amp; net start msiscsi</literal_block>
                </list_item>
            </bullet_list>
        </section>
    </section>
</document>
