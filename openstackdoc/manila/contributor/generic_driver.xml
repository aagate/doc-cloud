<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/manila/doc/source/contributor/generic_driver.rst">
    <comment xml:space="preserve">Copyright 2014 Mirantis Inc.
All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</comment>
    <section ids="generic-approach-for-share-provisioning" names="generic\ approach\ for\ share\ provisioning">
        <title>Generic approach for share provisioning</title>
        <paragraph>The Shared File Systems service can be configured to use Nova
            VMs and Cinder volumes. There are two modules that handle them in manila:
            1) ‘service_instance’ module creates VMs in Nova with predefined image called
            service image. This module can be used by any backend driver for provisioning
            of service VMs to be able to separate share resources among tenants.
            2) ‘generic’ module operates with Cinder volumes and VMs created by
            ‘service_instance’ module, then creates shared filesystems based on volumes
            attached to VMs.</paragraph>
        <section ids="network-configurations" names="network\ configurations">
            <title>Network configurations</title>
            <paragraph>Each backend driver can handle networking in its own way,
                see: <reference refuri="https://wiki.openstack.org/wiki/Manila/Networking">https://wiki.openstack.org/wiki/Manila/Networking</reference></paragraph>
            <definition_list>
                <definition_list_item>
                    <term>One of two possible configurations can be chosen for share provisioning</term>
                    <definition>
                        <paragraph>using ‘service_instance’ module:</paragraph>
                    </definition>
                </definition_list_item>
            </definition_list>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Service VM has one net interface from net that is connected to public router.
                        For successful creation of share, user network should be connected to public
                        router too.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Service VM has two net interfaces, first one connected to service network,
                        second one connected directly to user’s network.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="requirements-for-service-image" names="requirements\ for\ service\ image">
            <title>Requirements for service image</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Linux based distro</paragraph>
                </list_item>
                <list_item>
                    <paragraph>NFS server</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Samba server &gt;=3.2.0, that can be configured by data stored in registry</paragraph>
                </list_item>
                <list_item>
                    <paragraph>SSH server</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Two net interfaces configured to DHCP (see network approaches)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>‘exportfs’ and ‘net conf’ libraries used for share actions</paragraph>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>Following files will be used, so if their paths differ one needs to create at</term>
                            <definition>
                                <paragraph>least symlinks for them:</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>/etc/exports (permanent file with NFS exports)</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>/var/lib/nfs/etab (temporary file with NFS exports used by ‘exportfs’)</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>/etc/fstab (permanent file with mounted filesystems)</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>/etc/mtab (temporary file with mounted filesystems used by ‘mount’)</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
            </bullet_list>
        </section>
        <section ids="supported-shared-filesystems" names="supported\ shared\ filesystems">
            <title>Supported shared filesystems</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>NFS (access by IP)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>CIFS (access by IP)</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="known-restrictions" names="known\ restrictions">
            <title>Known restrictions</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>One of Nova’s configurations only allows 26 shares per server. This limit
                        comes from the maximum number of virtual PCI interfaces that are used for
                        block device attaching. There are 28 virtual PCI interfaces, in this
                        configuration, two of them are used for server needs and other 26 are used
                        for attaching block devices that are used for shares.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Juno version works only with Neutron. Each share should be created with
                        neutron-net and neutron-subnet IDs provided via share-network entity.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Juno version handles security group, flavor, image, keypair for Nova VM and
                        also creates service networks, but does not use availability zones for
                        Nova VMs and volume types for Cinder block devices.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Juno version does not use security services data provided with share-network.
                        These data will be just ignored.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Liberty version adds a share extend capability. Share access will be briefly
                        interrupted during an extend operation.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Liberty version adds a share shrink capability, but this capability is not
                        effective because generic driver shrinks only filesystem size and doesn’t
                        shrink the size of Cinder volume.</paragraph>
                </list_item>
            </bullet_list>
            <section ids="the-manila-share-drivers-generic-module" names="the\ manila.share.drivers.generic\ module">
                <title>The <literal classes="xref py py-mod">manila.share.drivers.generic</literal> Module</title>
                <paragraph>Generic Driver for shares.</paragraph>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="GenericShareDriver" module="manila.share.drivers.generic"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">GenericShareDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">manila.share.driver.ExecuteMixin</literal>, <reference internal="True" reftitle="manila.share.driver.ShareDriver" refuri="share_replication#manila.share.driver.ShareDriver"><literal classes="xref py py-class">manila.share.driver.ShareDriver</literal></reference></paragraph>
                        <paragraph>Executes commands relating to Shares.</paragraph>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.check_for_setup_error" module="manila.share.drivers.generic"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Returns an error if prerequisites aren’t met.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.create_share" module="manila.share.drivers.generic"><desc_name xml:space="preserve">create_share</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.create_share_from_snapshot" module="manila.share.drivers.generic"><desc_name xml:space="preserve">create_share_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.create_snapshot" module="manila.share.drivers.generic"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">share_server=None</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Creates a snapshot.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.delete_share" module="manila.share.drivers.generic"><desc_name xml:space="preserve">delete_share</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">share</desc_parameter><desc_parameter xml:space="preserve">share_server=None</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Deletes share.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.delete_snapshot" module="manila.share.drivers.generic"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">share_server=None</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Deletes a snapshot.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.do_setup" module="manila.share.drivers.generic"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Any initialization the generic driver does while starting.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.ensure_share" module="manila.share.drivers.generic"><desc_name xml:space="preserve">ensure_share</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.extend_share" module="manila.share.drivers.generic"><desc_name xml:space="preserve">extend_share</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.get_network_allocations_number" module="manila.share.drivers.generic"><desc_name xml:space="preserve">get_network_allocations_number</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Get number of network interfaces to be created.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.manage_existing" module="manila.share.drivers.generic"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">share</desc_parameter><desc_parameter xml:space="preserve">driver_options</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Manage existing share to manila.</paragraph>
                                <paragraph>Generic driver accepts only one driver_option ‘volume_id’.
                                    If an administrator provides this option, then appropriate Cinder
                                    volume will be managed by Manila as well.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>Parameters</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong refspecific="True">share</literal_strong> – share data</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph><literal_strong refspecific="True">driver_options</literal_strong> – Empty dict or dict with ‘volume_id’ option.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>Returns</field_name>
                                        <field_body>
                                            <paragraph>dict with share size, example: {‘size’: 1}</paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.manage_existing_snapshot" module="manila.share.drivers.generic"><desc_name xml:space="preserve">manage_existing_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">driver_options</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Manage existing share snapshot with manila.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>Parameters</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong refspecific="True">snapshot</literal_strong> – Snapshot data</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph><literal_strong refspecific="True">driver_options</literal_strong> – Not used by the Generic driver currently</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>Returns</field_name>
                                        <field_body>
                                            <paragraph>dict with share snapshot size, example: {‘size’: 1}</paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.shrink_share" module="manila.share.drivers.generic"><desc_name xml:space="preserve">shrink_share</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.unmanage_snapshot" module="manila.share.drivers.generic"><desc_name xml:space="preserve">unmanage_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Unmanage share snapshot with manila.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GenericShareDriver" first="False" fullname="GenericShareDriver.update_access" module="manila.share.drivers.generic"><desc_name xml:space="preserve">update_access</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="function" domain="py" noindex="True" objtype="function">
                    <desc_signature class="" first="False" fullname="ensure_server" module="manila.share.drivers.generic"><desc_name xml:space="preserve">ensure_server</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </section>
            <section ids="the-manila-share-drivers-service-instance-module" names="the\ manila.share.drivers.service_instance\ module">
                <title>The <literal classes="xref py py-mod">manila.share.drivers.service_instance</literal> Module</title>
                <paragraph>Module for managing nova instances for share drivers.</paragraph>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="BaseNetworkhelper" module="manila.share.drivers.service_instance"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">BaseNetworkhelper</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">service_instance_manager</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="BaseNetworkhelper" first="False" fullname="BaseNetworkhelper.NAME" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">NAME</desc_name></desc_signature>
                            <desc_content>
                                <paragraph>Returns code name of network helper.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="BaseNetworkhelper" first="False" fullname="BaseNetworkhelper.get_network_name" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">get_network_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">network_info</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Returns name of network for service instance.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="BaseNetworkhelper" first="False" fullname="BaseNetworkhelper.setup_connectivity_with_service_instances" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">setup_connectivity_with_service_instances</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Sets up connectivity between Manila host and service instances.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="BaseNetworkhelper" first="False" fullname="BaseNetworkhelper.setup_network" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">setup_network</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">network_info</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Sets up network for service instance.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="BaseNetworkhelper" first="False" fullname="BaseNetworkhelper.teardown_network" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">teardown_network</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">server_details</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Teardowns network resources provided for service instance.</paragraph>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="NeutronNetworkHelper" module="manila.share.drivers.service_instance"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NeutronNetworkHelper</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">service_instance_manager</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">manila.share.drivers.service_instance.BaseNetworkhelper</literal></paragraph>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="NeutronNetworkHelper" first="False" fullname="NeutronNetworkHelper.NAME" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">NAME</desc_name></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="NeutronNetworkHelper" first="False" fullname="NeutronNetworkHelper.admin_project_id" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">admin_project_id</desc_name></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NeutronNetworkHelper" first="False" fullname="NeutronNetworkHelper.get_network_name" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">get_network_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">network_info</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Returns name of network for service instance.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="NeutronNetworkHelper" first="False" fullname="NeutronNetworkHelper.neutron_api" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">neutron_api</desc_name></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="NeutronNetworkHelper" first="False" fullname="NeutronNetworkHelper.service_network_id" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">service_network_id</desc_name></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NeutronNetworkHelper" first="False" fullname="NeutronNetworkHelper.setup_connectivity_with_service_instances" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">setup_connectivity_with_service_instances</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Sets up connectivity with service instances.</paragraph>
                                <paragraph>Creates host port in service network and/or admin network, creating
                                    and setting up required network devices.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NeutronNetworkHelper" first="False" fullname="NeutronNetworkHelper.setup_network" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">setup_network</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">network_info</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NeutronNetworkHelper" first="False" fullname="NeutronNetworkHelper.teardown_network" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">teardown_network</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">server_details</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="ServiceInstanceManager" module="manila.share.drivers.service_instance"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ServiceInstanceManager</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">driver_config=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                        <paragraph>Manages nova instances for various share drivers.</paragraph>
                        <paragraph>This class provides following external methods:</paragraph>
                        <enumerated_list enumtype="arabic" prefix="" suffix=".">
                            <list_item>
                                <paragraph>set_up_service_instance: creates instance and sets up share
                                    infrastructure.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>ensure_service_instance: ensure service instance is available.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>delete_service_instance: removes service instance and network
                                    infrastructure.</paragraph>
                            </list_item>
                        </enumerated_list>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ServiceInstanceManager" first="False" fullname="ServiceInstanceManager.delete_service_instance" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">delete_service_instance</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">server_details</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Removes share infrastructure.</paragraph>
                                <paragraph>Deletes service vm and subnet, associated to share network.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ServiceInstanceManager" first="False" fullname="ServiceInstanceManager.ensure_service_instance" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">ensure_service_instance</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">server</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Ensures that server exists and active.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ServiceInstanceManager" first="False" fullname="ServiceInstanceManager.get_common_server" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">get_common_server</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ServiceInstanceManager" first="False" fullname="ServiceInstanceManager.get_config_option" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">get_config_option</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">key</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Returns value of config option.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>Parameters</field_name>
                                        <field_body>
                                            <paragraph><literal_strong refspecific="True">key</literal_strong> – key of config’ option.</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>Returns</field_name>
                                        <field_body>
                                            <paragraph>str – value of config’s option.
                                                first priority is driver’s config,
                                                second priority is global config.</paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="ServiceInstanceManager" first="False" fullname="ServiceInstanceManager.network_helper" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">network_helper</desc_name></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ServiceInstanceManager" first="False" fullname="ServiceInstanceManager.reboot_server" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">reboot_server</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">server</desc_parameter><desc_parameter xml:space="preserve">soft_reboot=False</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ServiceInstanceManager" first="False" fullname="ServiceInstanceManager.set_up_service_instance" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">set_up_service_instance</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">network_info</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Finds or creates and sets up service vm.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>Parameters</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong refspecific="True">context</literal_strong> – defines context, that should be used</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph><literal_strong refspecific="True">network_info</literal_strong> – network info for getting allocations</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>Returns</field_name>
                                        <field_body>
                                            <paragraph>dict with service instance details</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>Raises</field_name>
                                        <field_body>
                                            <paragraph>exception.ServiceInstanceException</paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ServiceInstanceManager" first="False" fullname="ServiceInstanceManager.wait_for_instance_to_be_active" module="manila.share.drivers.service_instance"><desc_name xml:space="preserve">wait_for_instance_to_be_active</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">instance_id</desc_parameter><desc_parameter xml:space="preserve">timeout</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
            </section>
        </section>
    </section>
</document>
