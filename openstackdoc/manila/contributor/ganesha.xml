<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/manila/doc/source/contributor/ganesha.rst">
    <comment xml:space="preserve">Copyright 2015 Red Hat, Inc.
All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</comment>
    <section ids="ganesha-library" names="ganesha\ library">
        <title>Ganesha Library</title>
        <paragraph>The Ganesha Library provides base classes that can be used by drivers to
            provision shares via NFS (NFSv3 and NFSv4), utilizing the NFS-Ganesha NFS
            server.</paragraph>
        <section ids="supported-operations" names="supported\ operations">
            <title>Supported operations</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Allow NFS Share access</paragraph>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>Only IP access type is supported.</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph>Deny NFS Share access</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="requirements" names="requirements">
            <title>Requirements</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Preferred:</paragraph>
                    <paragraph><reference name="NFS-Ganesha" refuri="https://github.com/nfs-ganesha/nfs-ganesha/wiki">NFS-Ganesha</reference><target ids="nfs-ganesha" names="nfs-ganesha" refuri="https://github.com/nfs-ganesha/nfs-ganesha/wiki"></target> v2.4 or
                        later, which allows dynamic update of access rules. And use manila’s
                        <literal>ganesha.GaneshaNASHelper2</literal> class as described later in
                        <reference internal="True" refid="ganesha-using-library"><inline classes="std std-ref">Using Ganesha Library in drivers</inline></reference>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>For use with limitations documented in <reference internal="True" refid="ganesha-known-issues"><inline classes="std std-ref">Known Issues</inline></reference>:</paragraph>
                    <paragraph><reference name="NFS-Ganesha" refuri="https://github.com/nfs-ganesha/nfs-ganesha/wiki">NFS-Ganesha</reference><target dupnames="nfs-ganesha" ids="id1" refuri="https://github.com/nfs-ganesha/nfs-ganesha/wiki"></target> v2.1 to
                        v2.3. And use manila’s <literal>ganesha.GaneshaNASHelper</literal> class as described later
                        in <reference internal="True" refid="ganesha-using-library"><inline classes="std std-ref">Using Ganesha Library in drivers</inline></reference>.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="nfs-ganesha-configuration" names="nfs-ganesha\ configuration">
            <title>NFS-Ganesha configuration</title>
            <paragraph>The library has just modest requirements against general NFS-Ganesha (in the
                following: Ganesha) configuration; a best effort was made to remain agnostic
                towards it as much as possible. This section describes the few requirements.</paragraph>
            <paragraph>Note that Ganesha’s concept of storage backend modules is called FSAL (“File
                System Abstraction Layer”). The FSAL the driver intends to leverage needs to be
                enabled in Ganesha config.</paragraph>
            <paragraph>Beyond that (with default manila config) the following line is needed to be
                present in the Ganesha config file (that defaults to
                /etc/ganesha/ganesha.conf):</paragraph>
            <paragraph><literal>%include /etc/ganesha/export.d/INDEX.conf</literal></paragraph>
            <paragraph>The above paths can be customized through manila configuration as follows:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term><title_reference>ganesha_config_dir</title_reference> = toplevel directory for Ganesha configuration,</term>
                            <definition>
                                <paragraph>defaults to /etc/ganesha</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term><title_reference>ganesha_config_path</title_reference> = location of the Ganesha config file, defaults</term>
                            <definition>
                                <paragraph>to ganesha.conf in <title_reference>ganesha_config_dir</title_reference></paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term><title_reference>ganesha_export_dir</title_reference> = directory where manila generated config bits are</term>
                            <definition>
                                <paragraph>stored, defaults to <title_reference>export.d</title_reference> in <title_reference>ganesha_config_dir</title_reference>. The following
                                    line is required to be included (with value expanded) in the Ganesha
                                    config file (at <title_reference>ganesha_config_path</title_reference>):</paragraph>
                                <paragraph><literal>%include &lt;ganesha_export_dir&gt;/INDEX.conf</literal></paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
            </bullet_list>
        </section>
        <section ids="further-ganesha-related-manila-configuration" names="further\ ganesha\ related\ manila\ configuration">
            <title>Further Ganesha related manila configuration</title>
            <paragraph>There are further Ganesha related options in manila (which affect the
                behavior of Ganesha, but do not affect how to set up the Ganesha service
                itself).</paragraph>
            <paragraph>These are:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term><title_reference>ganesha_service_name</title_reference> = name of the system service representing Ganesha,</term>
                            <definition>
                                <paragraph>defaults to ganesha.nfsd</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term><title_reference>ganesha_db_path</title_reference> = location of on-disk database storing permanent Ganesha</term>
                            <definition>
                                <paragraph>state</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term><title_reference>ganesha_export_template_dir</title_reference> = directory from where Ganesha loads</term>
                            <definition>
                                <paragraph>export customizations (cf. “Customizing Ganesha exports”).</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
            </bullet_list>
            <target refid="ganesha-using-library"></target>
        </section>
        <section ids="using-ganesha-library-in-drivers ganesha-using-library" names="using\ ganesha\ library\ in\ drivers ganesha_using_library">
            <title>Using Ganesha Library in drivers</title>
            <paragraph>A driver that wants to use the Ganesha Library has to inherit
                from <literal>driver.GaneshaMixin</literal>.</paragraph>
            <paragraph>The driver has to contain a subclass of <literal>ganesha.GaneshaNASHelper2</literal>,
                instantiate it along with the driver instance and delegate
                <literal>update_access</literal> method to it (when appropriate, i.e., when <literal>access_proto</literal>
                is NFS).</paragraph>
            <note>
                <paragraph>You can also subclass <literal>ganesha.GaneshaNASHelper</literal>. It works with
                    NFS-Ganesha v2.1 to v2.3 that doesn’t support dynamic update of exports.
                    To update access rules without having to restart NFS-Ganesha server, the
                    class manipulates exports created per share access rule (rather than per
                    share) introducing limitations documented in <reference internal="True" refid="ganesha-known-issues"><inline classes="std std-ref">Known Issues</inline></reference>.</paragraph>
            </note>
            <paragraph>In the following we explain what has to be implemented by the
                <literal>ganesha.GaneshaNASHelper2</literal> subclass (to which we refer as “helper
                class”).</paragraph>
            <paragraph>Ganesha exports are described by so-called <emphasis>Ganesha export blocks</emphasis>
                (introduced in the 2.* release series), that is, snippets of Ganesha
                config specifying key-pair values.</paragraph>
            <paragraph>The Ganesha Library generates sane default export blocks for the
                exports it manages, with one thing left blank, the so-called <emphasis>FSAL
                    subblock</emphasis>. The helper class has to implement the <literal>_fsal_hook</literal>
                method which returns the FSAL subblock (in Python represented as
                a dict with string keys and values). It has one mandatory key,
                <literal>Name</literal>, to which the value should be the name of the FSAL
                (eg.: <literal>{"Name": "CEPH"}</literal>). Further content of it is
                optional and FSAL specific.</paragraph>
        </section>
        <section ids="customizing-ganesha-exports" names="customizing\ ganesha\ exports">
            <title>Customizing Ganesha exports</title>
            <paragraph>As noted, the Ganesha Library provides sane general defaults.</paragraph>
            <paragraph>However, the driver is allowed to:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>customize defaults</paragraph>
                </list_item>
                <list_item>
                    <paragraph>allow users to customize exports</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The config format for Ganesha Library is called <emphasis>export block
                    template</emphasis>. They are syntactically either Ganesha export blocks,
                (please consult the Ganesha documentation about the format),
                or isomorphic JSON (as Ganesha export blocks are by-and-large
                equivalent to arrayless JSON), with two special placeholders
                for values: <literal>@config</literal> and <literal>@runtime</literal>. <literal>@config</literal> means a
                value that shall be filled from manila config, and <literal>@runtime</literal>
                means a value that’s filled at runtime with dynamic data.</paragraph>
            <paragraph>As an example, we show the library’s defaults in JSON format
                (also valid Python literal):</paragraph>
            <block_quote>
                <literal_block xml:space="preserve">{
  "EXPORT": {
    "Export_Id": "@runtime",
    "Path": "@runtime",
    "FSAL": {
      "Name": "@config"
    },
    "Pseudo": "@runtime",
    "SecType": "sys",
    "Tag": "@runtime",
    "CLIENT": {
      "Clients": "@runtime",
      "Access_Type": "RW"
    },
    "Squash": "None"
  }
}</literal_block>
            </block_quote>
            <paragraph>The Ganesha Library takes these values from</paragraph>
            <paragraph><emphasis>manila/share/drivers/ganesha/conf/00-base-export-template.conf</emphasis></paragraph>
            <paragraph>where the same data is stored in Ganesha conf format (also supplied with
                comments).</paragraph>
            <paragraph>For customization, the driver has to extend the <literal>_default_config_hook</literal>
                method as follows:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>take the result of the super method (a dict representing an export
                        block template)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>set up another export block dict that include your custom values,
                        either by</paragraph>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>using a predefined export block dict stored in code</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>loading a predefined export block from the manila source tree</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>loading an export block from an user exposed location (to allow
                                user configuration)</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph>merge the two export block dict using the <literal>ganesha_utils.patch</literal>
                        method</paragraph>
                </list_item>
                <list_item>
                    <paragraph>return the result</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>With respect to <emphasis>loading export blocks</emphasis>, that can be done through the
                utility method <literal>_load_conf_dir</literal>.</paragraph>
        </section>
        <section ids="known-restrictions" names="known\ restrictions">
            <title>Known Restrictions</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>The library does not support network segmented multi-tenancy model but
                        instead works over a flat network, where the tenants share a network.</paragraph>
                </list_item>
            </bullet_list>
            <target refid="ganesha-known-issues"></target>
        </section>
        <section ids="known-issues ganesha-known-issues" names="known\ issues ganesha_known_issues">
            <title>Known Issues</title>
            <paragraph>Following issues concern only users of <title_reference>ganesha.GaneshaNASHelper</title_reference> class that
                works with NFS-Ganesha v2.1 to v2.3.</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>The export location for shares of a driver that uses the Ganesha Library
                        will be of the format <literal>&lt;ganesha-server&gt;:/share-&lt;share-id&gt;</literal>. However,
                        this is incomplete information, because it pertains only to NFSv3
                        access, which is partially broken. NFSv4 mounts work well but the
                        actual NFSv4 export paths differ from the above. In detail:</paragraph>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>The export location is usable only for NFSv3 mounts.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>The export location works only for the first access
                                rule that’s added for the given share. Tenants that
                                should be allowed to access according to a further
                                access rule will be refused (cf.
                                <reference refuri="https://bugs.launchpad.net/manila/+bug/1513061">https://bugs.launchpad.net/manila/+bug/1513061</reference>).</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>The share is, however, exported through NFSv4, just
                                on paths that differ from the one indicated by
                                the export location, namely at:
                                <literal>&lt;ganesha-server&gt;:/share-&lt;share-id&gt;--&lt;access-id&gt;</literal>,
                                where <literal>&lt;access-id&gt;</literal> ranges over the ID-s of access
                                rules of the share (and the export with <literal>&lt;access-id&gt;</literal>
                                is accessible according to the access rule of that ID).</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>NFSv4 access also works with pseudofs. That is, the
                                tenant can do a v4 mount of``&lt;ganesha-server&gt;:/`` and
                                access the shares allowed for her at the respective
                                <literal>share-&lt;share-id&gt;--&lt;access-id&gt;</literal> subdirectories.</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
            </bullet_list>
            <section ids="the-manila-share-drivers-ganesha-module" names="the\ manila.share.drivers.ganesha\ module">
                <title>The <literal classes="xref py py-mod">manila.share.drivers.ganesha</literal> Module</title>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="GaneshaNASHelper" module="manila.share.drivers.ganesha"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">GaneshaNASHelper</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">execute</desc_parameter><desc_parameter xml:space="preserve">config</desc_parameter><desc_parameter xml:space="preserve">tag='&lt;no name&gt;'</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">manila.share.drivers.ganesha.NASHelperBase</literal></paragraph>
                        <paragraph>Perform share access changes using Ganesha version &lt; 2.4.</paragraph>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GaneshaNASHelper" first="False" fullname="GaneshaNASHelper.init_helper" module="manila.share.drivers.ganesha"><desc_name xml:space="preserve">init_helper</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Initializes protocol-specific NAS drivers.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="GaneshaNASHelper" first="False" fullname="GaneshaNASHelper.supported_access_levels" module="manila.share.drivers.ganesha"><desc_name xml:space="preserve">supported_access_levels</desc_name><desc_annotation xml:space="preserve"> = ('rw',)</desc_annotation></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="GaneshaNASHelper" first="False" fullname="GaneshaNASHelper.supported_access_types" module="manila.share.drivers.ganesha"><desc_name xml:space="preserve">supported_access_types</desc_name><desc_annotation xml:space="preserve"> = ('ip',)</desc_annotation></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GaneshaNASHelper" first="False" fullname="GaneshaNASHelper.update_access" module="manila.share.drivers.ganesha"><desc_name xml:space="preserve">update_access</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">share</desc_parameter><desc_parameter xml:space="preserve">access_rules</desc_parameter><desc_parameter xml:space="preserve">add_rules</desc_parameter><desc_parameter xml:space="preserve">delete_rules</desc_parameter><desc_parameter xml:space="preserve">share_server=None</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Update access rules of share.</paragraph>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="GaneshaNASHelper2" module="manila.share.drivers.ganesha"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">GaneshaNASHelper2</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">execute</desc_parameter><desc_parameter xml:space="preserve">config</desc_parameter><desc_parameter xml:space="preserve">tag='&lt;no name&gt;'</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">manila.share.drivers.ganesha.GaneshaNASHelper</literal></paragraph>
                        <paragraph>Perform share access changes using Ganesha version &gt;= 2.4.</paragraph>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="GaneshaNASHelper2" first="False" fullname="GaneshaNASHelper2.update_access" module="manila.share.drivers.ganesha"><desc_name xml:space="preserve">update_access</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">share</desc_parameter><desc_parameter xml:space="preserve">access_rules</desc_parameter><desc_parameter xml:space="preserve">add_rules</desc_parameter><desc_parameter xml:space="preserve">delete_rules</desc_parameter><desc_parameter xml:space="preserve">share_server=None</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Update access rules of share.</paragraph>
                                <paragraph>Creates an export per share. Modifies access rules of shares by
                                    dynamically updating exports via DBUS.</paragraph>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="NASHelperBase" module="manila.share.drivers.ganesha"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NASHelperBase</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">execute</desc_parameter><desc_parameter xml:space="preserve">config</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                        <paragraph>Interface to work with share.</paragraph>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NASHelperBase" first="False" fullname="NASHelperBase.init_helper" module="manila.share.drivers.ganesha"><desc_name xml:space="preserve">init_helper</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Initializes protocol-specific NAS drivers.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="NASHelperBase" first="False" fullname="NASHelperBase.supported_access_levels" module="manila.share.drivers.ganesha"><desc_name xml:space="preserve">supported_access_levels</desc_name><desc_annotation xml:space="preserve"> = ()</desc_annotation></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="NASHelperBase" first="False" fullname="NASHelperBase.supported_access_types" module="manila.share.drivers.ganesha"><desc_name xml:space="preserve">supported_access_types</desc_name><desc_annotation xml:space="preserve"> = ()</desc_annotation></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NASHelperBase" first="False" fullname="NASHelperBase.update_access" module="manila.share.drivers.ganesha"><desc_name xml:space="preserve">update_access</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">share</desc_parameter><desc_parameter xml:space="preserve">access_rules</desc_parameter><desc_parameter xml:space="preserve">add_rules</desc_parameter><desc_parameter xml:space="preserve">delete_rules</desc_parameter><desc_parameter xml:space="preserve">share_server=None</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Update access rules of share.</paragraph>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
            </section>
        </section>
    </section>
</document>
