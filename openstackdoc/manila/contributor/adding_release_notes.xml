<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/manila/doc/source/contributor/adding_release_notes.rst">
    <target refid="adding-release-notes"></target>
    <section ids="release-notes adding-release-notes" names="release\ notes adding_release_notes">
        <title>Release Notes</title>
        <section ids="what-are-release-notes" names="what\ are\ release\ notes?">
            <title>What are release notes?</title>
            <paragraph>Release notes are important for change management within manila. Since manila
                follows a release cycle with milestones, release notes provide a way for the
                community and users to quickly grasp what changes occurred within a development
                milestone. To the OpenStack release management and documentation teams,
                release notes are a way to compile changes per milestone. These notes are
                published on the <reference name="OpenStack Releases website" refuri="http://releases.openstack.org">OpenStack Releases website</reference><target ids="openstack-releases-website" names="openstack\ releases\ website" refuri="http://releases.openstack.org"></target>.
                Automated tooling is built around <literal>releasenotes</literal> and they get appropriately
                handled per release milestone, including any back-ports to stable releases.</paragraph>
        </section>
        <section ids="what-needs-a-release-note" names="what\ needs\ a\ release\ note?">
            <title>What needs a release note?</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Changes that impact an upgrade, most importantly, those that require a
                        deployer to take some action while upgrading</paragraph>
                </list_item>
                <list_item>
                    <paragraph>API changes</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>New APIs</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Changes to the response schema of existing APIs</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Changes to request/response headers</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Non-trivial API changes such as response code changes from 2xx to 4xx</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Deprecation of APIs or response fields</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Removal of APIs</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph>A new feature is implemented, such as a new core feature in manila,
                        driver support for an existing manila feature or a new driver</paragraph>
                </list_item>
                <list_item>
                    <paragraph>An existing feature is deprecated</paragraph>
                </list_item>
                <list_item>
                    <paragraph>An existing feature is removed</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Behavior of an existing feature has changed in a discernible way to an end
                        user or administrator</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Backend driver interface changes</paragraph>
                </list_item>
                <list_item>
                    <paragraph>A security bug is fixed</paragraph>
                </list_item>
                <list_item>
                    <paragraph>New configuration option is added</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="what-does-not-need-a-release-note" names="what\ does\ not\ need\ a\ release\ note?">
            <title>What does not need a release note?</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>A code change that doesn’t change the general behavior of any
                        feature such as code refactor or logging changes. One case of this could be
                        the exercise that all drivers went through by removing <literal>allow_access</literal>
                        and <literal>deny_access</literal> interfaces in favor of an <literal>update_access</literal> interface
                        as suggested in the Mitaka release.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Tempest or unit test coverage enhancement</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Changes to response message with API failure codes 4xx and 5xx</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Any change submitted with a justified TrivialFix flag added in the commit
                        message</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Adding or changing documentation within in-tree documentation guides</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="how-do-i-add-a-release-note" names="how\ do\ i\ add\ a\ release\ note?">
            <title>How do I add a release note?</title>
            <paragraph>We use <reference name="Reno" refuri="https://docs.openstack.org/reno/latest/">Reno</reference><target ids="reno" names="reno" refuri="https://docs.openstack.org/reno/latest/"></target> to create and manage
                release notes. The new subcommand combines a random suffix with a “slug” value
                to make the new file with a unique name that is easy to identify again later.
                To create a release note for your change, use:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ reno new slug-goes-here</literal_block>
            <paragraph>If reno is not installed globally on your system, you can use it from venv
                of your manila’s tox. Prior to running the above command, run:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ source .tox/py27/bin/activate</literal_block>
            <paragraph>Or directly as a one-liner, with:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ tox -e venv -- reno new slug-goes-here</literal_block>
            <note>
                <paragraph>When you are adding a bug-fix reno, name your file using the template:
                    “bug-&lt;launchpad-bug-id&gt;-slug-goes-here”.</paragraph>
            </note>
            <paragraph>Then add the notes in <literal>yaml</literal> format in the file created. Pay attention to the
                type of section. The following are general sections to use:</paragraph>
            <paragraph>prelude</paragraph>
            <block_quote>
                <paragraph>General comments about the change. The prelude from all notes in a
                    release are combined, in note order, to produce a single prelude
                    introducing the release.</paragraph>
            </block_quote>
            <paragraph>features</paragraph>
            <block_quote>
                <paragraph>New features introduced</paragraph>
            </block_quote>
            <paragraph>issues</paragraph>
            <block_quote>
                <paragraph>A list of known issues with respect to the change being introduced. For
                    example, if the new feature in the change is experimental or known to not
                    work in some cases, it should be mentioned here.</paragraph>
            </block_quote>
            <paragraph>upgrade</paragraph>
            <block_quote>
                <paragraph>A list of upgrade notes in the release. Any removals that affect upgrades are
                    to be noted here.</paragraph>
            </block_quote>
            <paragraph>deprecations</paragraph>
            <block_quote>
                <paragraph>Any features, APIs, configuration options that the change has deprecated.
                    Deprecations are not removals. Deprecations suggest that there will be
                    support for a certain timeline. Deprecation should allow time for users
                    to make necessary changes for the removal to happen in a future release.
                    It is important to note the timeline of deprecation in this section.</paragraph>
            </block_quote>
            <paragraph>critical</paragraph>
            <block_quote>
                <paragraph>A list of <emphasis>fixed</emphasis> critical bugs (descriptions only).</paragraph>
            </block_quote>
            <paragraph>security</paragraph>
            <block_quote>
                <paragraph>A list of <emphasis>fixed</emphasis> security issues (descriptions only).</paragraph>
            </block_quote>
            <paragraph>fixes</paragraph>
            <block_quote>
                <paragraph>A list of other <emphasis>fixed</emphasis> bugs (descriptions only).</paragraph>
            </block_quote>
            <paragraph>other</paragraph>
            <block_quote>
                <paragraph>Other notes that are important but do not fall into any of the given
                    categories.</paragraph>
            </block_quote>
            <literal_block xml:space="preserve">---
prelude: &gt;
    Replace this text with content to appear at the
    top of the section for this change.
features:
  - List new features here, or remove this section.
issues:
  - List known issues here, or remove this section.
upgrade:
  - List upgrade notes here, or remove this section.
deprecations:
  - List deprecation notes here, or remove this section
critical:
  - Add critical notes here, or remove this section.
security:
  - Add security notes here, or remove this section.
fixes:
  - Add normal bug fixes here, or remove this section.
other:
  - Add other notes here, or remove this section.</literal_block>
        </section>
        <section ids="dos-and-don-ts" names="dos\ and\ don'ts">
            <title>Dos and Don’ts</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Release notes need to be succinct. Short and unambiguous descriptions are
                        preferred</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Write in past tense, unless you are writing an imperative statement</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Do not have blank sections in the file</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Do not include code or links</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Avoid special rst formatting unless absolutely necessary</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Always prefer including a release note in the same patch</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Release notes are not a replacement for developer/user/admin documentation</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Release notes are not a way of conveying behavior of any features or usage of
                        any APIs</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Limit a release note to fewer than 2-3 lines per change per section</paragraph>
                </list_item>
                <list_item>
                    <paragraph>OpenStack prefers atomic changes. So remember that your change may need the
                        fewest sections possible</paragraph>
                </list_item>
                <list_item>
                    <paragraph>General writing guidelines can be found
                        <reference name="here" refuri="http://docs.openstack.org/contributor-guide/writing-style/general-writing-guidelines.html">here</reference><target ids="here" names="here" refuri="http://docs.openstack.org/contributor-guide/writing-style/general-writing-guidelines.html"></target></paragraph>
                </list_item>
                <list_item>
                    <paragraph>Proofread your note. Pretend you are a user or a deployer who is reading
                        the note after a milestone or a release has been cut</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="examples" names="examples">
            <title>Examples</title>
            <paragraph>The following need only be considered as directions for formatting. They
                are <strong>not</strong> fixes or features in manila.</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><emphasis>fix-failing-automount-23aef89a7e98c8.yaml</emphasis></paragraph>
                </list_item>
            </bullet_list>
            <literal_block highlight_args="{}" language="yaml" linenos="False" xml:space="preserve">---
deprecations:
 - displaying mount options via the array listing API is deprecated.
fixes:
 - users can mount shares on debian systems with kernel version 32.2.41.*
   with share-mount API</literal_block>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><emphasis>add-librsync-backup-plugin-for-m-bkup-41cad17c1498a3.yaml</emphasis></paragraph>
                </list_item>
            </bullet_list>
            <literal_block highlight_args="{}" language="yaml" linenos="False" xml:space="preserve">---
features:
 - librsync support added for NFS incremental backup
upgrade:
 - Copy new rootwrap.d/librsync.filters file into /etc/manila/rootwrap.d
   directory.
issues:
 - librsync has not been tested thoroughly in all operating systems that
   manila is qualified for. m-bkup is an experimental feature.</literal_block>
        </section>
    </section>
</document>
