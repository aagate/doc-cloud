<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/manila/doc/source/contributor/zfs_on_linux_driver.rst">
    <comment xml:space="preserve">Copyright (c) 2016 Mirantis Inc.
All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</comment>
    <section ids="zfs-on-linux-driver" names="zfs\ (on\ linux)\ driver">
        <title>ZFS (on Linux) Driver</title>
        <paragraph>Manila ZFSonLinux share driver uses ZFS filesystem for exporting NFS shares.
            Written and tested using Linux version of ZFS.</paragraph>
        <section ids="requirements" names="requirements">
            <title>Requirements</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>‘NFS’ daemon that can be handled via “exportfs” app.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>‘ZFS’ filesystem packages, either Kernel or FUSE versions.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>ZFS zpools that are going to be used by Manila should exist and be
                        configured as desired. Manila will not change zpool configuration.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>For remote ZFS hosts according to manila-share service host SSH should be
                        installed.</paragraph>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>For ZFS hosts that support replication:</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>SSH access for each other should be passwordless.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>Service IP addresses should be available by ZFS hosts for each other.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
            </bullet_list>
        </section>
        <section ids="supported-operations" names="supported\ operations">
            <title>Supported Operations</title>
            <paragraph>The following operations are supported:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Create NFS Share</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Delete NFS Share</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Manage NFS Share</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Unmanage NFS Share</paragraph>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>Allow NFS Share access</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>Only IP access type is supported for NFS</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>Both access levels are supported - ‘RW’ and ‘RO’</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <paragraph>Deny NFS Share access</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Create snapshot</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Delete snapshot</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Manage snapshot</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Unmanage snapshot</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Create share from snapshot</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Extend share</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Shrink share</paragraph>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>Replication (experimental):</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>Create/update/delete/promote replica operations are supported</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <paragraph>Share migration (experimental)</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="possibilities" names="possibilities">
            <title>Possibilities</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Any amount of ZFS zpools can be used by share driver.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Allowed to configure default options for ZFS datasets that are used
                        for share creation.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Any amount of nested datasets is allowed to be used.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>All share replicas are read-only, only active one is RW.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>All share replicas are synchronized periodically, not continuously.
                        So, status ‘in_sync’ means latest sync was successful.
                        Time range between syncs equals to value of
                        config global opt ‘replica_state_update_interval’.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Driver is able to use qualified extra spec ‘zfsonlinux:compression’.
                        It can contain any value that is supported by used ZFS app.
                        But if it is disabled via config option with value ‘compression=off’,
                        then it will not be used.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="restrictions" names="restrictions">
            <title>Restrictions</title>
            <paragraph>The ZFSonLinux share driver has the following restrictions:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Only IP access type is supported for NFS.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Only FLAT network is supported.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>‘Promote share replica’ operation will switch roles of
                        current ‘secondary’ replica and ‘active’. It does not make more than
                        one active replica available.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>‘SaMBa’ based sharing is not yet implemented.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>‘Thick provisioning’ is not yet implemented.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="known-problems" names="known\ problems">
            <title>Known problems</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>‘Promote share replica’ operation will make ZFS filesystem that became
                        secondary as RO only on NFS level. On ZFS level system will
                        stay mounted as was - RW.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="backend-configuration" names="backend\ configuration">
            <title>Backend Configuration</title>
            <paragraph>The following parameters need to be configured in the manila configuration file
                for the ZFSonLinux driver:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>share_driver = manila.share.drivers.zfsonlinux.driver.ZFSonLinuxShareDriver</paragraph>
                </list_item>
                <list_item>
                    <paragraph>driver_handles_share_servers = False</paragraph>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>replication_domain = custom_str_value_as_domain_name</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>if empty, then replication will be disabled</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>if set then will be able to be used as replication peer for other
                                            backend with same value.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <paragraph>zfs_share_export_ip = &lt;user_facing IP address of ZFS host&gt;</paragraph>
                </list_item>
                <list_item>
                    <paragraph>zfs_service_ip = &lt;IP address of service network interface of ZFS host&gt;</paragraph>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>zfs_zpool_list = zpoolname1,zpoolname2/nested_dataset_for_zpool2</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>can be one or more zpools</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>can contain nested datasets</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>zfs_dataset_creation_options = &lt;list of ZFS dataset options&gt;</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>readonly,quota,sharenfs and sharesmb options will be ignored</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>zfs_dataset_name_prefix = &lt;prefix&gt;</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>Prefix to be used in each dataset name.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>zfs_dataset_snapshot_name_prefix = &lt;prefix&gt;</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>Prefix to be used in each dataset snapshot name.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>zfs_use_ssh = &lt;boolean_value&gt;</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>set ‘False’ if ZFS located on the same host as ‘manila-share’ service</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>set ‘True’ if ‘manila-share’ service should use SSH for ZFS configuration</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>zfs_ssh_username = &lt;ssh_username&gt;</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>required for replication operations</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>required for SSH’ing to ZFS host if ‘zfs_use_ssh’ is set to ‘True’</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>zfs_ssh_user_password = &lt;ssh_user_password&gt;</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>password for ‘zfs_ssh_username’ of ZFS host.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>used only if ‘zfs_use_ssh’ is set to ‘True’</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>zfs_ssh_private_key_path = &lt;path_to_private_ssh_key&gt;</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>used only if ‘zfs_use_ssh’ is set to ‘True’</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>zfs_share_helpers = NFS=manila.share.drivers.zfsonlinux.utils.NFSviaZFSHelper</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>Approach for setting up helpers is similar to various other share driver</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>At least one helper should be used.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>zfs_replica_snapshot_prefix = &lt;prefix&gt;</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>Prefix to be used in dataset snapshot names that are created
                                            by ‘update replica’ operation.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>zfs_migration_snapshot_prefix = &lt;prefix&gt;</term>
                            <definition>
                                <bullet_list bullet="*">
                                    <list_item>
                                        <paragraph>Prefix to be used in dataset snapshot names that are created
                                            for ‘migration’ operation.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
            </bullet_list>
            <paragraph>Restart of <reference internal="True" refuri="../reference/glossary#term-manila-share"><inline classes="xref std std-term">manila-share</inline></reference> service is needed for the configuration
                changes to take effect.</paragraph>
            <section ids="the-manila-share-drivers-zfsonlinux-driver-module" names="the\ manila.share.drivers.zfsonlinux.driver\ module">
                <title>The <literal classes="xref py py-mod">manila.share.drivers.zfsonlinux.driver</literal> Module</title>
                <paragraph>Module with ZFSonLinux share driver that utilizes ZFS filesystem resources
                    and exports them as shares.</paragraph>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="ZFSonLinuxShareDriver" module="manila.share.drivers.zfsonlinux.driver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ZFSonLinuxShareDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">manila.share.drivers.zfsonlinux.utils.ExecuteMixin</literal>, <reference internal="True" reftitle="manila.share.driver.ShareDriver" refuri="share_replication#manila.share.driver.ShareDriver"><literal classes="xref py py-class">manila.share.driver.ShareDriver</literal></reference></paragraph>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.create_replica" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">create_replica</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.create_replicated_snapshot" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">create_replicated_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.create_share" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">create_share</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.create_share_from_snapshot" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">create_share_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.create_snapshot" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.delete_replica" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">delete_replica</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.delete_replicated_snapshot" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">delete_replicated_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.delete_share" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">delete_share</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.delete_snapshot" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.do_setup" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Perform basic setup and checks.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.ensure_share" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">ensure_share</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.extend_share" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">extend_share</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.get_network_allocations_number" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">get_network_allocations_number</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>ZFS does not handle networking. Return 0.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.get_pool" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">get_pool</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">share</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Return pool name where the share resides on.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>Parameters</field_name>
                                        <field_body>
                                            <paragraph><literal_strong refspecific="True">share</literal_strong> – The share hosted by the driver.</paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.manage_existing" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">share</desc_parameter><desc_parameter xml:space="preserve">driver_options</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Manage existing ZFS dataset as manila share.</paragraph>
                                <paragraph>ZFSonLinux driver accepts only one driver_option ‘size’.
                                    If an administrator provides this option, then such quota will be set
                                    to dataset and used as share size. Otherwise, driver will set quota
                                    equal to nearest bigger rounded integer of usage size.
                                    Driver does not expect mountpoint to be changed (should be equal
                                    to default that is “/%(dataset_name)s”).</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>Parameters</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong refspecific="True">share</literal_strong> – share data</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph><literal_strong refspecific="True">driver_options</literal_strong> – Empty dict or dict with ‘size’ option.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>Returns</field_name>
                                        <field_body>
                                            <paragraph>dict with share size and its export locations.</paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.manage_existing_snapshot" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">manage_existing_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot_instance</desc_parameter><desc_parameter xml:space="preserve">driver_options</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Manage existing share snapshot with manila.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>Parameters</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong refspecific="True">snapshot_instance</literal_strong> – SnapshotInstance data</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph><literal_strong refspecific="True">driver_options</literal_strong> – expects only one optional key ‘size’.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>Returns</field_name>
                                        <field_body>
                                            <paragraph><paragraph>dict with share snapshot instance fields for update, example:</paragraph><literal_block xml:space="preserve">{</literal_block><block_quote><paragraph>‘size’: 1,
                                                        ‘provider_location’: <reference refuri="mailto:'path/to/some/dataset@some_snapshot_tag">‘path/to/some/dataset@some_snapshot_tag</reference>’,</paragraph></block_quote><paragraph>}</paragraph></paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.migration_cancel" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">migration_cancel</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.migration_check_compatibility" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">migration_check_compatibility</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.migration_complete" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">migration_complete</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.migration_continue" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">migration_continue</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.migration_start" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">migration_start</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.promote_replica" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">promote_replica</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.shrink_share" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">shrink_share</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.unmanage" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">share</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Removes the specified share from Manila management.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.unmanage_snapshot" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">unmanage_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot_instance</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Unmanage dataset snapshot.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.update_access" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">update_access</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.update_replica_state" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">update_replica_state</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ZFSonLinuxShareDriver" first="False" fullname="ZFSonLinuxShareDriver.update_replicated_snapshot" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">update_replicated_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="function" domain="py" noindex="True" objtype="function">
                    <desc_signature class="" first="False" fullname="ensure_share_server_not_provided" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">ensure_share_server_not_provided</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="function" domain="py" noindex="True" objtype="function">
                    <desc_signature class="" first="False" fullname="get_backend_configuration" module="manila.share.drivers.zfsonlinux.driver"><desc_name xml:space="preserve">get_backend_configuration</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backend_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </section>
            <section ids="the-manila-share-drivers-zfsonlinux-utils-module" names="the\ manila.share.drivers.zfsonlinux.utils\ module">
                <title>The <literal classes="xref py py-mod">manila.share.drivers.zfsonlinux.utils</literal> Module</title>
                <definition_list>
                    <definition_list_item>
                        <term>Module for storing ZFSonLinux driver utility stuff such as:</term>
                        <definition>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>Common ZFS code</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>Share helpers</paragraph>
                                </list_item>
                            </bullet_list>
                        </definition>
                    </definition_list_item>
                </definition_list>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="ExecuteMixin" module="manila.share.drivers.zfsonlinux.utils"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ExecuteMixin</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">manila.share.driver.ExecuteMixin</literal></paragraph>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ExecuteMixin" first="False" fullname="ExecuteMixin.execute" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*cmd</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Common interface for running shell commands.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ExecuteMixin" first="False" fullname="ExecuteMixin.execute_with_retry" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">execute_with_retry</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*cmd</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Retry wrapper over common shell interface.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ExecuteMixin" first="False" fullname="ExecuteMixin.get_zfs_option" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">get_zfs_option</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dataset_name</desc_parameter><desc_parameter xml:space="preserve">option_name</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Returns value of requested zfs dataset option.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ExecuteMixin" first="False" fullname="ExecuteMixin.get_zpool_option" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">get_zpool_option</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">zpool_name</desc_parameter><desc_parameter xml:space="preserve">option_name</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Returns value of requested zpool option.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ExecuteMixin" first="False" fullname="ExecuteMixin.init_execute_mixin" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">init_execute_mixin</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Init method for mixin called in the end of driver’s __init__().</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ExecuteMixin" first="False" fullname="ExecuteMixin.parse_zfs_answer" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">parse_zfs_answer</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">string</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Returns list of dicts with data returned by ZFS shell commands.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ExecuteMixin" first="False" fullname="ExecuteMixin.zfs" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">zfs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*cmd</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>ZFS shell commands executor.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="ExecuteMixin" first="False" fullname="ExecuteMixin.zfs_with_retry" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">zfs_with_retry</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*cmd</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>ZFS shell commands executor.</paragraph>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="NASHelperBase" module="manila.share.drivers.zfsonlinux.utils"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NASHelperBase</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">configuration</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                        <paragraph>Base class for share helpers of ‘ZFS on Linux’ driver.</paragraph>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NASHelperBase" first="False" fullname="NASHelperBase.create_exports" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">create_exports</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dataset_name</desc_parameter><desc_parameter xml:space="preserve">executor</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Creates share exports.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NASHelperBase" first="False" fullname="NASHelperBase.get_exports" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">get_exports</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dataset_name</desc_parameter><desc_parameter xml:space="preserve">service</desc_parameter><desc_parameter xml:space="preserve">executor</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Gets/reads share exports.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NASHelperBase" first="False" fullname="NASHelperBase.remove_exports" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">remove_exports</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dataset_name</desc_parameter><desc_parameter xml:space="preserve">executor</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Removes share exports.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NASHelperBase" first="False" fullname="NASHelperBase.update_access" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">update_access</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dataset_name</desc_parameter><desc_parameter xml:space="preserve">access_rules</desc_parameter><desc_parameter xml:space="preserve">add_rules</desc_parameter><desc_parameter xml:space="preserve">delete_rules</desc_parameter><desc_parameter xml:space="preserve">executor</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Update access rules for specified ZFS dataset.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NASHelperBase" first="False" fullname="NASHelperBase.verify_setup" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">verify_setup</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Performs checks for required stuff.</paragraph>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="NFSviaZFSHelper" module="manila.share.drivers.zfsonlinux.utils"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NFSviaZFSHelper</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">configuration</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">manila.share.drivers.zfsonlinux.utils.ExecuteMixin</literal>, <literal classes="xref py py-class">manila.share.drivers.zfsonlinux.utils.NASHelperBase</literal></paragraph>
                        <paragraph>Helper class for handling ZFS datasets as NFS shares.</paragraph>
                        <paragraph>Kernel and Fuse versions of ZFS have different syntax for setting up access
                            rules, and this Helper designed to satisfy both making autodetection.</paragraph>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NFSviaZFSHelper" first="False" fullname="NFSviaZFSHelper.create_exports" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">create_exports</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dataset_name</desc_parameter><desc_parameter xml:space="preserve">executor=None</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Creates NFS share exports for given ZFS dataset.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NFSviaZFSHelper" first="False" fullname="NFSviaZFSHelper.get_exports" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">get_exports</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dataset_name</desc_parameter><desc_parameter xml:space="preserve">executor=None</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Gets/reads NFS share export for given ZFS dataset.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="NFSviaZFSHelper" first="False" fullname="NFSviaZFSHelper.is_kernel_version" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">is_kernel_version</desc_name></desc_signature>
                            <desc_content>
                                <paragraph>Says whether Kernel version of ZFS is used or not.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NFSviaZFSHelper" first="False" fullname="NFSviaZFSHelper.remove_exports" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">remove_exports</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NFSviaZFSHelper" first="False" fullname="NFSviaZFSHelper.update_access" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">update_access</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="NFSviaZFSHelper" first="False" fullname="NFSviaZFSHelper.verify_setup" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">verify_setup</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Performs checks for required stuff.</paragraph>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="function" domain="py" noindex="True" objtype="function">
                    <desc_signature class="" first="False" fullname="get_remote_shell_executor" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">get_remote_shell_executor</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ip</desc_parameter><desc_parameter xml:space="preserve">port</desc_parameter><desc_parameter xml:space="preserve">conn_timeout</desc_parameter><desc_parameter xml:space="preserve">login=None</desc_parameter><desc_parameter xml:space="preserve">password=None</desc_parameter><desc_parameter xml:space="preserve">privatekey=None</desc_parameter><desc_parameter xml:space="preserve">max_size=10</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="function" domain="py" noindex="True" objtype="function">
                    <desc_signature class="" first="False" fullname="zfs_dataset_synchronized" module="manila.share.drivers.zfsonlinux.utils"><desc_name xml:space="preserve">zfs_dataset_synchronized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </section>
        </section>
    </section>
</document>
