<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/manila/doc/source/contributor/addmethod.openstackapi.rst">
    <comment xml:space="preserve">Copyright 2010-2011 OpenStack LLC
All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</comment>
    <section ids="adding-a-method-to-the-openstack-api" names="adding\ a\ method\ to\ the\ openstack\ api">
        <title>Adding a Method to the OpenStack API</title>
        <paragraph>The interface is a mostly RESTful API. REST stands for Representational State Transfer and provides an architecture “style” for distributed systems using HTTP for transport. Figure out a way to express your request and response in terms of resources that are being created, modified, read, or destroyed.</paragraph>
        <section ids="routing" names="routing">
            <title>Routing</title>
            <paragraph>To map URLs to controllers+actions, OpenStack uses the Routes package, a clone of Rails routes for Python implementations. See <reference refuri="http://routes.groovie.org/">http://routes.groovie.org/</reference> for more information.</paragraph>
            <paragraph>URLs are mapped to “action” methods on “controller” classes in <literal>manila/api/v1/router.py</literal>.</paragraph>
            <definition_list>
                <definition_list_item>
                    <term>See <reference refuri="http://routes.groovie.org/manual.html">http://routes.groovie.org/manual.html</reference> for all syntax, but you’ll probably just need these two:</term>
                    <definition>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>mapper.connect() lets you map a single URL to a single action on a controller.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>mapper.resource() connects many standard URLs to actions on a controller.</paragraph>
                            </list_item>
                        </bullet_list>
                    </definition>
                </definition_list_item>
            </definition_list>
        </section>
        <section ids="controllers-and-actions" names="controllers\ and\ actions">
            <title>Controllers and actions</title>
            <paragraph>Controllers live in <literal>manila/api/v1</literal> and <literal>manila/api/contrib</literal>.</paragraph>
            <paragraph>See <literal>manila/api/v1/shares.py</literal> for an example.</paragraph>
            <paragraph>Action methods take parameters that are sucked out of the URL by mapper.connect() or .resource().  The first two parameters are self and the WebOb request, from which you can get the req.environ, req.body, req.headers, etc.</paragraph>
        </section>
        <section ids="serialization" names="serialization">
            <title>Serialization</title>
            <paragraph>Actions return a dictionary, and wsgi.Controller serializes that to JSON or XML based on the request’s content-type.</paragraph>
            <paragraph>If you define a new controller, you’ll need to define a <literal>_serialization_metadata</literal> attribute on the class, to tell wsgi.Controller how to convert your dictionary to XML. It needs to know the singular form of any list tag (e.g. <literal>&lt;shares&gt;</literal> list contains <literal>&lt;share&gt;</literal> tags) and which dictionary keys are to be XML attributes as opposed to subtags (e.g. <literal>&lt;share id="4"/&gt;</literal> instead of <literal>&lt;share&gt;&lt;id&gt;4&lt;/id&gt;&lt;/share&gt;</literal>).</paragraph>
            <paragraph>See <title_reference>manila/api/v1/shares.py</title_reference> for an example.</paragraph>
        </section>
        <section ids="faults" names="faults">
            <title>Faults</title>
            <paragraph>If you need to return a non-200, you should
                return faults.Fault(webob.exc.HTTPNotFound())
                replacing the exception as appropriate.</paragraph>
        </section>
    </section>
</document>
