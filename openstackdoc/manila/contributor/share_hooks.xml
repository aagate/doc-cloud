<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/manila/doc/source/contributor/share_hooks.rst">
    <comment xml:space="preserve">Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</comment>
    <section ids="manila-share-driver-hooks" names="manila\ share\ driver\ hooks">
        <title>Manila share driver hooks</title>
        <paragraph>Manila share driver hooks are designed to provide additional possibilities
            for each <reference internal="True" refuri="../reference/glossary#term-manila-share"><inline classes="xref std std-term">manila-share</inline></reference> service; such as any kind of notification and
            additional actions before and after share driver calls.</paragraph>
        <section ids="possibilities" names="possibilities">
            <title>Possibilities</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Perform actions before some share driver method calls.</paragraph>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>Perform actions after some share driver method calls with results of</term>
                            <definition>
                                <paragraph>driver call and preceding hook call.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
                <list_item>
                    <paragraph>Call additional ‘periodic’ hook each ‘N’ ticks.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Possibility to update results of driver’s action by post-running hook.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="features" names="features">
            <title>Features</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Errors in hook execution can be suppressed.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Any hook can be disabled.</paragraph>
                </list_item>
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>Any amount of hook instances can be run at once for each manila-share</term>
                            <definition>
                                <paragraph>service.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
            </bullet_list>
        </section>
        <section ids="limitations" names="limitations">
            <title>Limitations</title>
            <bullet_list bullet="-">
                <list_item>
                    <definition_list>
                        <definition_list_item>
                            <term>Hooks approach is not asynchronous. That is, if we run hooks, and</term>
                            <definition>
                                <paragraph>especially, more than one hook instance, then all of them will be executed
                                    in one thread.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </list_item>
            </bullet_list>
        </section>
        <section ids="implementation-in-share-drivers" names="implementation\ in\ share\ drivers">
            <title>Implementation in share drivers</title>
            <paragraph>Share drivers can [re]define method <title_reference>get_periodic_hook_data</title_reference> that runs with
                each execution of ‘periodic’ hook and receives list of shares (as parameter)
                with existing access rules. So, each share driver, for each of its shares can
                add/update some information that will be used then in the periodic hook.</paragraph>
        </section>
        <section ids="what-is-required-for-writing-new-hook-implementation" names="what\ is\ required\ for\ writing\ new\ 'hook'\ implementation?">
            <title>What is required for writing new ‘hook’ implementation?</title>
            <paragraph>All implementations of ‘hook’ interface are expected to be in
                ‘manila/share/hooks’.
                Each implementation should inherit class ‘manila.share.hook:HookBase’ and
                redefine its abstract methods.</paragraph>
        </section>
        <section ids="how-to-use-hook-implementations" names="how\ to\ use\ 'hook'\ implementations?">
            <title>How to use ‘hook’ implementations?</title>
            <paragraph>Just set config option ‘hook_drivers’ in driver’s config group. For example:</paragraph>
            <literal_block xml:space="preserve">[MY_DRIVER]
hook_drivers=path.to:FooClass,path.to:BarClass</literal_block>
            <paragraph>Then all classes defined above will be initialized. In the same config group,
                any config option of hook modules can be redefined too.</paragraph>
            <note>
                <paragraph>More info about common config options for hooks can be found in
                    module <title_reference>manila.share.hook</title_reference></paragraph>
            </note>
        </section>
        <section ids="driver-methods-that-are-wrapped-with-hooks" names="driver\ methods\ that\ are\ wrapped\ with\ hooks">
            <title>Driver methods that are wrapped with hooks</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>allow_access</paragraph>
                </list_item>
                <list_item>
                    <paragraph>create_share_instance</paragraph>
                </list_item>
                <list_item>
                    <paragraph>create_snapshot</paragraph>
                </list_item>
                <list_item>
                    <paragraph>delete_share_instance</paragraph>
                </list_item>
                <list_item>
                    <paragraph>delete_share_server</paragraph>
                </list_item>
                <list_item>
                    <paragraph>delete_snapshot</paragraph>
                </list_item>
                <list_item>
                    <paragraph>deny_access</paragraph>
                </list_item>
                <list_item>
                    <paragraph>extend_share</paragraph>
                </list_item>
                <list_item>
                    <paragraph>init_host</paragraph>
                </list_item>
                <list_item>
                    <paragraph>manage_share</paragraph>
                </list_item>
                <list_item>
                    <paragraph>publish_service_capabilities</paragraph>
                </list_item>
                <list_item>
                    <paragraph>shrink_share</paragraph>
                </list_item>
                <list_item>
                    <paragraph>unmanage_share</paragraph>
                </list_item>
                <list_item>
                    <paragraph>create_share_replica</paragraph>
                </list_item>
                <list_item>
                    <paragraph>promote_share_replica</paragraph>
                </list_item>
                <list_item>
                    <paragraph>delete_share_replica</paragraph>
                </list_item>
                <list_item>
                    <paragraph>update_share_replica</paragraph>
                </list_item>
                <list_item>
                    <paragraph>create_replicated_snapshot</paragraph>
                </list_item>
                <list_item>
                    <paragraph>delete_replicated_snapshot</paragraph>
                </list_item>
                <list_item>
                    <paragraph>update_replicated_snapshot</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Above list with wrapped methods can be extended in future.</paragraph>
            <section ids="the-manila-share-hook-py-module" names="the\ manila.share.hook.py\ module">
                <title>The <literal classes="xref py py-mod">manila.share.hook.py</literal> Module</title>
                <paragraph>Module with hook interface for actions performed by share driver.</paragraph>
                <paragraph>All available hooks are placed in manila/share/hooks dir.</paragraph>
                <paragraph>Hooks are used by share services and can serve several use cases such as
                    any kind of notification and performing additional backend-specific actions.</paragraph>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="HookBase" module="manila.share.hook"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">HookBase</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">configuration</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="HookBase" first="False" fullname="HookBase.execute_periodic_hook" module="manila.share.hook"><desc_name xml:space="preserve">execute_periodic_hook</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">periodic_hook_data</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Hook called on periodic basis.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="HookBase" first="False" fullname="HookBase.execute_post_hook" module="manila.share.hook"><desc_name xml:space="preserve">execute_post_hook</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context=None</desc_parameter><desc_parameter xml:space="preserve">func_name=None</desc_parameter><desc_parameter xml:space="preserve">pre_hook_data=None</desc_parameter><desc_parameter xml:space="preserve">driver_action_results=None</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Hook called after driver’s action.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="HookBase" first="False" fullname="HookBase.execute_pre_hook" module="manila.share.hook"><desc_name xml:space="preserve">execute_pre_hook</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context=None</desc_parameter><desc_parameter xml:space="preserve">func_name=None</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Hook called before driver’s action.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="HookBase" first="False" fullname="HookBase.get_config_option" module="manila.share.hook"><desc_name xml:space="preserve">get_config_option</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">key</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
            </section>
        </section>
    </section>
</document>
