<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/manila/doc/source/admin/shared-file-systems-scheduling.rst">
    <target refid="shared-file-systems-scheduling"></target>
    <section ids="scheduling shared-file-systems-scheduling" names="scheduling shared_file_systems_scheduling">
        <title>Scheduling</title>
        <paragraph>The Shared File Systems service uses a scheduler to provide unified
            access for a variety of different types of shared file systems. The
            scheduler collects information from the active shared services, and
            makes decisions such as what shared services will be used to create
            a new share. To manage this process, the Shared File Systems service
            provides Share types API.</paragraph>
        <paragraph>A share type is a list from key-value pairs called extra-specs. The
            scheduler uses required and un-scoped extra-specs to look up
            the shared service most suitable for a new share with the specified share type.
            For more information about extra-specs and their type, see <reference name="Capabilities and Extra-Specs" refuri="https://docs.openstack.org/developer/manila/devref/capabilities_and_extra_specs.html">Capabilities
                and Extra-Specs</reference><target ids="capabilities-and-extra-specs" names="capabilities\ and\ extra-specs" refuri="https://docs.openstack.org/developer/manila/devref/capabilities_and_extra_specs.html"></target> section in developer documentation.</paragraph>
        <paragraph>The general scheduler workflow:</paragraph>
        <enumerated_list enumtype="arabic" prefix="" suffix=".">
            <list_item>
                <paragraph>Share services report information about their existing pool number, their
                    capacities, and their capabilities.</paragraph>
            </list_item>
            <list_item>
                <paragraph>When a request on share creation arrives, the scheduler picks a service
                    and pool that best serves the request, using share type
                    filters and back end capabilities. If back end capabilities pass through,
                    all filters request the selected back end where the target pool resides.</paragraph>
            </list_item>
            <list_item>
                <paragraph>The share driver receives a reply on the request status, and lets the
                    target pool serve the request as the scheduler instructs. The scoped
                    and un-scoped share types are available for the driver implementation
                    to use as needed.</paragraph>
            </list_item>
        </enumerated_list>
    </section>
</document>
