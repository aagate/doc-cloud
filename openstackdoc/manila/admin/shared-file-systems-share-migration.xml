<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/manila/doc/source/admin/shared-file-systems-share-migration.rst">
    <target refid="shared-file-systems-share-migration"></target>
    <section ids="share-migration shared-file-systems-share-migration" names="share\ migration shared_file_systems_share_migration">
        <title>Share migration</title>
        <paragraph>Share migration is the feature that migrates a share between different storage
            pools.</paragraph>
        <section ids="use-cases" names="use\ cases">
            <title>Use cases</title>
            <paragraph>As an administrator, you may want to migrate your share from one storage pool
                to another for several reasons. Examples include:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Maintenance or evacuation</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>Evacuate a back end for hardware or software upgrades</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Evacuate a back end experiencing failures</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Evacuate a back end which is tagged end-of-life</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph>Optimization</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>Defragment back ends to empty and be taken offline to conserve power</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Rebalance back ends to maximize available performance</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Move data and compute closer together to reduce network utilization and
                                decrease latency or increase bandwidth</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph>Moving shares</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>Migrate from old hardware generation to a newer generation</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Migrate from one vendor to another</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
            </bullet_list>
        </section>
        <section ids="migration-workflows" names="migration\ workflows">
            <title>Migration workflows</title>
            <paragraph>Moving shares across different storage pools is generally expected to be a
                disruptive operation that disconnects existing clients when the source ceases
                to exist. For this reason, share migration is implemented in a 2-phase approach
                that allows the administrator to control the timing of the disruption. The
                first phase performs data copy while users retain access to the share. When
                copying is complete, the second phase may be triggered to perform a switchover
                that may include a last sync and deleting the source, generally requiring users
                to reconnect to continue accessing the share.</paragraph>
            <paragraph>In order to migrate a share, one of two possible mechanisms may be employed,
                which provide different capabilities and affect how the disruption occurs with
                regards to user access during data copy phase and disconnection during
                switchover phase. Those two mechanisms are:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Driver-assisted migration: This mechanism is intended to make use of driver
                        optimizations to migrate shares between pools of the same storage vendor.
                        This mechanism allows migrating shares nondisruptively while the source
                        remains writable, preserving all filesystem metadata and snapshots. The
                        migration workload is performed in the storage back end.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Host-assisted migration: This mechanism is intended to migrate shares in an
                        agnostic manner between two different pools, regardless of storage vendor.
                        The implementation for this mechanism does not offer the same properties
                        found in driver-assisted migration. In host-assisted migration, the source
                        remains readable, snapshots must be deleted prior to starting the migration,
                        filesystem metadata may be lost, and the clients will get disconnected by the
                        end of migration. The migration workload is performed by the Data Service,
                        which is a dedicated manila service for intensive data operations.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>When starting a migration, driver-assisted migration is attempted first. If
                the shared file system service detects it is not possible to perform the
                driver-assisted migration, it proceeds to attempt host-assisted migration.</paragraph>
        </section>
        <section ids="using-the-migration-apis" names="using\ the\ migration\ apis">
            <title>Using the migration APIs</title>
            <paragraph>The commands to interact with the share migration API are:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><literal>migration_start</literal>: starts a migration while retaining access to the share.
                        Migration is paused and waits for <literal>migration_complete</literal> invocation when it
                        has copied all data and is ready to take down the source share.</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ manila migration-start share_1 ubuntu@generic2#GENERIC2 --writable False --preserve-snapshots False --preserve-metadata False --nondisruptive False</literal_block>
                    <note>
                        <paragraph>This command has no output.</paragraph>
                    </note>
                </list_item>
                <list_item>
                    <paragraph><literal>migration_complete</literal>: completes a migration, removing the source share and
                        setting the destination share instance to <literal>available</literal>.</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ manila migration-complete share_1</literal_block>
                    <note>
                        <paragraph>This command has no output.</paragraph>
                    </note>
                </list_item>
                <list_item>
                    <paragraph><literal>migration_get_progress</literal>: obtains migration progress information of a
                        share.</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ manila migration-get-progress share_1

+----------------+--------------------------+
| Property       | Value                    |
+----------------+--------------------------+
| task_state     | data_copying_in_progress |
| total_progress | 37                       |
+----------------+--------------------------+</literal_block>
                </list_item>
                <list_item>
                    <paragraph><literal>migration_cancel</literal>: cancels an in-progress migration of a share.</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ manila migration-cancel share_1</literal_block>
                    <note>
                        <paragraph>This command has no output.</paragraph>
                    </note>
                </list_item>
            </bullet_list>
            <section ids="the-parameters" names="the\ parameters">
                <title>The parameters</title>
                <paragraph>To start a migration, an administrator should specify several parameters. Among
                    those, two of them are key for the migration.</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><literal>share</literal>: The share that will be migrated.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>destination_pool</literal>: The destination pool to which the share should be
                            migrated to, in format <reference refuri="mailto:host@backend#pool">host@backend#pool</reference>.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>Several other parameters, referred to here as <literal>driver-assisted parameters</literal>,
                    <emphasis>must</emphasis> be specified in the <literal>migration_start</literal> API. They are:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><literal>preserve_metadata</literal>: whether preservation of filesystem metadata should be
                            enforced for this migration.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>preserve_snapshots</literal>: whether preservation of snapshots should be enforced
                            for this migration.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>writable</literal>: whether the source share remaining writable should be enforced
                            for this migration.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>nondisruptive</literal>: whether it should be enforced to keep clients connected
                            throughout the migration.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>Specifying any of the boolean parameters above as <literal>True</literal> will disallow a
                    host-assisted migration.</paragraph>
                <paragraph>In order to appropriately move a share to a different storage pool, it may be
                    required to change one or more share properties, such as the share type, share
                    network, or availability zone. To accomplish this, use the optional parameters:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><literal>new_share_type_id</literal>: Specify the ID of the share type that should be set in
                            the migrated share.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>new_share_network_id</literal>: Specify the ID of the share network that should be
                            set in the migrated share.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>If driver-assisted migration should not be attempted, you may provide the
                    optional parameter:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><literal>force_host_assisted_migration</literal>: whether driver-assisted migration attempt
                            should be skipped. If this option is set to <literal>True</literal>, all driver-assisted
                            options must be set to <literal>False</literal>.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
        </section>
        <section ids="configuration" names="configuration">
            <title>Configuration</title>
            <paragraph>For share migration to work in the cloud, there are several configuration
                requirements that need to be met:</paragraph>
            <paragraph>For driver-assisted migration: it is necessary that the configuration of all
                back end stanzas is present in the file manila.conf of all manila-share nodes.
                Also, network connectivity between the nodes running manila-share service and
                their respective storage back ends is required.</paragraph>
            <paragraph>For host-assisted migration: it is necessary that the Data Service
                (manila-data) is installed and configured in a node connected to the cloud’s
                administrator network. The drivers pertaining to the source back end and
                destination back end involved in the migration should be able to provide shares
                that can be accessed from the administrator network. This can easily be
                accomplished if the driver supports <literal>admin_only</literal> export locations, else it is
                up to the administrator to set up means of connectivity.</paragraph>
            <paragraph>In order for the Data Service to mount the source and destination instances, it
                must use manila share access APIs to grant access to mount the instances.
                The access rule type varies according to the share protocol, so there are a few
                config options to set the access value for each type:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><literal>data_node_access_ip</literal>: For IP-based access type, provide the value of the
                        IP of the Data Service node in the administrator network. For NFS shares,
                        drivers should always add rules with the “no_root_squash” property.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>data_node_access_cert</literal>: For certificate-based access type, provide the
                        value of the certificate name that grants access to the Data Service.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>data_node_access_admin_user</literal>: For user-based access type, provide the
                        value of a username that grants access and administrator privileges to the
                        files in the share.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>data_node_mount_options</literal>: Provide the value of a mapping of protocol name
                        to respective mount options. The Data Service makes use of mount command
                        templates that by default have a dedicated field to inserting mount options
                        parameter. The default value for this config option already includes the
                        username and password parameters for CIFS shares and NFS v3 enforcing
                        parameter for NFS shares.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>mount_tmp_location</literal>: Provide the value of a string representing the path
                        where the share instances used in migration should be temporarily mounted.
                        The default value is <literal>/tmp/</literal>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>check_hash</literal>: This boolean config option value determines whether the hash
                        of all files copied in migration should be validated. Setting this option
                        increases the time it takes to migrate files, and is recommended for
                        ultra-dependable systems. It defaults to disabled.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The configuration options above are respective to the Data Service only and
                should be defined the <literal>DEFAULT</literal> group of the <literal>manila.conf</literal> configuration
                file. Also, the Data Service node must have all the protocol-related libraries
                pre-installed to be able to run the mount commands for each protocol.</paragraph>
            <paragraph>You may need to change some driver-specific configuration options from their
                default value to work with specific drivers. If so, they must be set under the
                driver configuration stanza in <literal>manila.conf</literal>. See a detailed description for
                each one below:</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><literal>migration_ignore_files</literal>: Provide value as a list containing the names of
                        files or folders to be ignored during migration for a specific driver. The
                        default value is a list containing only <literal>lost+found</literal> folder.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>share_mount_template</literal>: Provide a string that defines the template for the
                        mount command for a specific driver. The template should contain the
                        following entries to be formatted by the code:</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>proto: The share protocol. Automatically formatted by the Data Service.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>options: The mount options to be formatted by the Data Service according to
                                the data_node_mount_options config option.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>export: The export path of the share. Automatically formatted by the Data
                                Service with the share’s <literal>admin_only</literal> export location.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>path: The path to mount the share. Automatically formatted by the Data
                                Serivce according to the mount_tmp_location config option.</paragraph>
                        </list_item>
                    </bullet_list>
                    <paragraph>The default value for this config option is:</paragraph>
                    <literal_block xml:space="preserve">mount -vt %(proto)s %(options)s %(export)s %(path)s.</literal_block>
                </list_item>
                <list_item>
                    <paragraph><literal>share_unmount_template</literal>: Provide the value of a string that defines the
                        template for the unmount command for a specific driver. The template should
                        contain the path of where the shares are mounted, according to the
                        <literal>mount_tmp_location</literal> config option, to be formatted automatically by the
                        Data Service. The default value for this config option is:</paragraph>
                    <literal_block xml:space="preserve">umount -v %(path)s</literal_block>
                </list_item>
                <list_item>
                    <paragraph><literal>protocol_access_mapping</literal>: Provide the value of a mapping of access rule
                        type to protocols supported. The default value specifies IP and user based
                        access types mapped to NFS and CIFS respectively, which are the combinations
                        supported by manila. If a certain driver uses a different protocol for IP or
                        user access types, or is not included in the default mapping, it should be
                        specified in this configuration option.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="other-remarks" names="other\ remarks">
            <title>Other remarks</title>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>There is no need to manually add any of the previously existing access rules
                        after a migration is complete, they will be persisted on the destination
                        after the migration.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Once migration of a share has started, the user will see the status
                        <literal>migrating</literal> and it will block other share actions, such as adding or
                        removing access rules, creating or deleting snapshots, resizing, among
                        others.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>The destination share instance export locations, although it may exist from
                        the beginning of a host-assisted migration, are not visible nor accessible as
                        access rules cannot be added.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>During a host-assisted migration, an access rule granting access to the Data
                        Service will be added and displayed by querying the <literal>access-list</literal> API. This
                        access rule should not be tampered with, it will otherwise cause migration to
                        fail.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Resources allocated are cleaned up automatically when a migration fails,
                        except if this failure occurs during the 2nd phase of a driver-assisted
                        migration. Each step in migration is saved to the field <literal>task_state</literal>
                        present in the Share model. If for any reason the state is not set to
                        <literal>migration_error</literal> during a failure, it will need to be reset using the
                        <literal>reset-task-state</literal> API.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>It is advised that the node running the Data Service is well secured, since
                        it will be mounting shares with highest privileges, temporarily exposing user
                        data to whoever has access to this node.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>The two mechanisms of migration are affected differently by service restarts:</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>If performing a host-assisted migration, all services may be restarted
                                except for the manila-data service when performing the copy (the
                                <literal>task_state</literal> field value starts with <literal>data_copying_</literal>). In other steps
                                of the host-assisted migration, both the source and destination
                                manila-share services should not be restarted.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>If performing a driver-assisted migration, the migration is affected
                                minimally by driver restarts if the <literal>task_state</literal> is
                                <literal>migration_driver_in_progress</literal>, while the copy is being done in the
                                back end. Otherwise, the source and destination manila-share services
                                should not be restarted.</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
            </bullet_list>
        </section>
    </section>
</document>
