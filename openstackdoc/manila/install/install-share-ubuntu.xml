<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/manila/doc/source/install/install-share-ubuntu.rst">
    <target refid="share-node-install-ubuntu"></target>
    <section ids="install-and-configure-a-share-node-running-ubuntu share-node-install-ubuntu" names="install\ and\ configure\ a\ share\ node\ running\ ubuntu share-node-install-ubuntu">
        <title>Install and configure a share node running Ubuntu</title>
        <paragraph>This section describes how to install and configure a share node for the
            Shared File Systems service. For simplicity, this configuration references one
            storage node with the generic driver managing the share servers. The
            generic backend manages share servers using compute, networking and block
            services for provisioning shares.</paragraph>
        <paragraph>Note that installation and configuration vary by distribution. This section
            describes the instructions for a share node running Ubuntu.</paragraph>
        <section ids="install-and-configure-components" names="install\ and\ configure\ components">
            <title>Install and configure components</title>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Install the packages:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># apt-get install manila-share python-pymysql</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Edit the <literal>/etc/manila/manila.conf</literal> file and complete the following
                        actions:</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>In the <literal>[database]</literal> section, configure database access:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[database]
...
connection = mysql+pymysql://manila:MANILA_DBPASS@controller/manila</literal_block>
                            <paragraph>Replace <literal>MANILA_DBPASS</literal> with the password you chose for
                                the Shared File Systems database.</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
            </enumerated_list>
            <enumerated_list enumtype="arabic" prefix="" start="4" suffix=".">
                <list_item>
                    <paragraph>Complete the rest of the configuration in <literal>manila.conf</literal>.</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>In the <literal>[DEFAULT]</literal> section, configure <literal>RabbitMQ</literal>
                                message queue access:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[DEFAULT]
...
transport_url = rabbit://openstack:RABBIT_PASS@controller</literal_block>
                            <paragraph>Replace <literal>RABBIT_PASS</literal> with the password you chose for the
                                <literal>openstack</literal> account in <literal>RabbitMQ</literal>.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>In the <literal>[DEFAULT]</literal> section, set the following config values:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[DEFAULT]
...
default_share_type = default_share_type
rootwrap_config = /etc/manila/rootwrap.conf</literal_block>
                            <important>
                                <paragraph>The <literal>default_share_type</literal> option specifies the default share type to
                                    be used when shares are created without specifying the share type in
                                    the request. The default share type that is specified in the
                                    configuration file has to be created with the necessary required
                                    extra-specs (such as <literal>driver_handles_share_servers</literal>) set
                                    appropriately with reference to the driver mode used. This is
                                    explained in further steps.</paragraph>
                            </important>
                        </list_item>
                        <list_item>
                            <paragraph>In the <literal>[DEFAULT]</literal> and <literal>[keystone_authtoken]</literal> sections, configure
                                Identity service access:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[DEFAULT]
...
auth_strategy = keystone

[keystone_authtoken]
...
memcached_servers = controller:11211
auth_uri = http://controller:5000
auth_url = http://controller:35357
auth_type = password
project_domain_id = default
user_domain_id = default
project_name = service
username = manila
password = MANILA_PASS</literal_block>
                            <paragraph>Replace <literal>MANILA_PASS</literal> with the password you chose for the <literal>manila</literal>
                                user in the Identity service.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>In the <literal>[DEFAULT]</literal> section, configure the <literal>my_ip</literal> option:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[DEFAULT]
...
my_ip = MANAGEMENT_INTERFACE_IP_ADDRESS</literal_block>
                            <paragraph>Replace <literal>MANAGEMENT_INTERFACE_IP_ADDRESS</literal> with the IP address of the
                                management network interface on your share node, typically 10.0.0.41 for
                                the first node in the example architecture shown below:</paragraph>
                            <figure ids="id3">
                                <image alt="Hardware requirements" candidates="{'*': 'install/figures/hwreqs.png'}" uri="install/figures/hwreqs.png"></image>
                                <caption><strong>Hardware requirements</strong></caption>
                            </figure>
                        </list_item>
                        <list_item>
                            <paragraph>In the <literal>[oslo_concurrency]</literal> section, configure the lock path:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[oslo_concurrency]
...
lock_path = /var/lib/manila/tmp</literal_block>
                        </list_item>
                    </bullet_list>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="two-driver-modes" names="two\ driver\ modes">
            <title>Two driver modes</title>
            <paragraph>The share node can support two modes, with and without the handling of
                share servers. The mode depends on driver support.</paragraph>
        </section>
        <section ids="option-1" names="option\ 1">
            <title>Option 1</title>
            <paragraph>Deploying the service without driver support for share server management.
                In this mode, the service does not do anything related to networking. The
                operator must ensure network connectivity between instances and the NAS
                protocol based server.</paragraph>
            <paragraph>This tutorial demonstrates setting up the LVM driver which creates LVM volumes
                on the share node and exports them with the help of an NFS server that is
                installed locally on the share node. It therefore requires LVM and NFS packages
                as well as an additional disk for the <literal>manila-share</literal> LVM volume group.</paragraph>
            <paragraph>This driver mode may be referred to as <literal>driver_handles_share_servers = False</literal>
                mode, or simply <literal>DHSS=False</literal> mode.</paragraph>
        </section>
        <section ids="option-2" names="option\ 2">
            <title>Option 2</title>
            <paragraph>Deploying the service with driver support for share server management. In
                this mode, the service runs with a back end driver that creates and manages
                share servers. This tutorial demonstrates setting up the <literal>Generic</literal> driver.
                This driver requires Compute service (nova), Image service (glance) and
                Networking service (neutron) for creating and managing share servers; and
                Block storage service (cinder) for creating shares.</paragraph>
            <paragraph>The information used for creating share servers is configured with the help of
                share networks.</paragraph>
            <paragraph>This driver mode may be referred to as <literal>driver_handles_share_servers = True</literal>
                mode, or simply <literal>DHSS=True</literal> mode.</paragraph>
            <warning>
                <paragraph>When running the generic driver in <literal>DHSS=True</literal> driver mode, the share
                    service should be run on the same node as the networking service.
                    However, such a service may not be able to run the LVM driver that runs
                    in <literal>DHSS=False</literal> driver mode effectively, due to a bug in some
                    distributions of Linux. For more information, see LVM Driver section in the
                    <reference name="Configuration Reference Guide" refuri="http://docs.openstack.org/ocata/config-reference/shared-file-systems.html">Configuration Reference Guide</reference><target ids="configuration-reference-guide" names="configuration\ reference\ guide" refuri="http://docs.openstack.org/ocata/config-reference/shared-file-systems.html"></target>.</paragraph>
            </warning>
            <paragraph>Choose one of the following options to configure the share driver:</paragraph>
        </section>
        <section ids="shared-file-systems-option-1-no-driver-support-for-share-servers-management" names="shared\ file\ systems\ option\ 1:\ no\ driver\ support\ for\ share\ servers\ management">
            <title>Shared File Systems Option 1: No driver support for share servers management</title>
            <paragraph>For simplicity, this configuration references the same storage node
                configuration for the Block Storage service. However, the LVM driver
                requires a separate empty local block storage device to avoid conflict
                with the Block Storage service. The instructions use <literal>/dev/sdc</literal>, but
                you can substitute a different value for your particular node.</paragraph>
        </section>
        <section dupnames="prerequisites" ids="prerequisites">
            <title>Prerequisites</title>
            <note>
                <paragraph>Perform these steps on the storage node.</paragraph>
            </note>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Install the supporting utility packages:</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>Install LVM and NFS server packages:</paragraph>
                            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># apt-get install lvm2 nfs-kernel-server</literal_block>
                        </list_item>
                    </bullet_list>
                </list_item>
            </enumerated_list>
            <enumerated_list enumtype="arabic" prefix="" start="2" suffix=".">
                <list_item>
                    <paragraph>Create the LVM physical volume <literal>/dev/sdc</literal>:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># pvcreate /dev/sdc
Physical volume "/dev/sdc" successfully created</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Create the LVM volume group <literal>manila-volumes</literal>:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># vgcreate manila-volumes /dev/sdc
Volume group "manila-volumes" successfully created</literal_block>
                    <paragraph>The Shared File Systems service creates logical volumes in this volume
                        group.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Only instances can access Shared File Systems service volumes. However,
                        the underlying operating system manages the devices associated with
                        the volumes. By default, the LVM volume scanning tool scans the
                        <literal>/dev</literal> directory for block storage devices that
                        contain volumes. If projects use LVM on their volumes, the scanning
                        tool detects these volumes and attempts to cache them which can cause
                        a variety of problems with both the underlying operating system
                        and project volumes. You must reconfigure LVM to scan only the devices
                        that contain the <literal>cinder-volume</literal> and <literal>manila-volumes</literal> volume groups.
                        Edit the <literal>/etc/lvm/lvm.conf</literal> file and complete the following actions:</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>In the <literal>devices</literal> section, add a filter that accepts the
                                <literal>/dev/sdb</literal> and <literal>/dev/sdc</literal> devices and rejects all other devices:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">devices {
...
filter = [ "a/sdb/", "a/sdc", "r/.*/"]</literal_block>
                            <warning>
                                <paragraph>If your storage nodes use LVM on the operating system disk, you
                                    must also add the associated device to the filter. For example,
                                    if the <literal>/dev/sda</literal> device contains the operating system:</paragraph>
                                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">filter = [ "a/sda/", "a/sdb/", "a/sdc", "r/.*/"]</literal_block>
                                <paragraph>Similarly, if your compute nodes use LVM on the operating
                                    system disk, you must also modify the filter in the
                                    <literal>/etc/lvm/lvm.conf</literal> file on those nodes to include only
                                    the operating system disk. For example, if the <literal>/dev/sda</literal>
                                    device contains the operating system:</paragraph>
                                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">filter = [ "a/sda/", "r/.*/"]</literal_block>
                            </warning>
                        </list_item>
                    </bullet_list>
                </list_item>
            </enumerated_list>
        </section>
        <section dupnames="configure\ components" ids="configure-components">
            <title>Configure components</title>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Edit the <literal>/etc/manila/manila.conf</literal> file and complete the following
                        actions:</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>In the <literal>[DEFAULT]</literal> section, enable the LVM driver and the NFS
                                protocol:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[DEFAULT]
...
enabled_share_backends = lvm
enabled_share_protocols = NFS</literal_block>
                            <note>
                                <paragraph>Back end names are arbitrary. As an example, this guide uses the name
                                    of the driver.</paragraph>
                            </note>
                        </list_item>
                        <list_item>
                            <paragraph>In the <literal>[lvm]</literal> section, configure the LVM driver:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[lvm]
share_backend_name = LVM
share_driver = manila.share.drivers.lvm.LVMShareDriver
driver_handles_share_servers = False
lvm_share_volume_group = manila-volumes
lvm_share_export_ip = MANAGEMENT_INTERFACE_IP_ADDRESS</literal_block>
                            <paragraph>Replace <literal>MANAGEMENT_INTERFACE_IP_ADDRESS</literal> with the IP address
                                of the management network interface on your storage node,
                                typically 10.0.0.41 for the first node in the example architecture
                                shown below:</paragraph>
                            <figure ids="id4">
                                <image alt="Hardware requirements" candidates="{'*': 'install/figures/hwreqs.png'}" uri="install/figures/hwreqs.png"></image>
                                <caption><strong>Hardware requirements</strong>.</caption>
                            </figure>
                        </list_item>
                    </bullet_list>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="shared-file-systems-option-2-driver-support-for-share-servers-management" names="shared\ file\ systems\ option\ 2:\ driver\ support\ for\ share\ servers\ management">
            <title>Shared File Systems Option 2: Driver support for share servers management</title>
            <paragraph>For simplicity, this configuration references the same storage node
                as the one used for the Block Storage service.</paragraph>
            <note>
                <paragraph>This guide describes how to configure the Shared File Systems service to
                    use the <literal>generic</literal> driver with the driver handles share server mode
                    (DHSS) enabled. This driver requires Compute service (nova), Image service
                    (glance) and Networking service (neutron) for creating and managing share
                    servers; and Block storage service (cinder) for creating shares. The
                    information used for creating share servers is configured as share
                    networks. Generic driver with DHSS enabled also requires the tenant’s
                    private network (where the compute instances are running) to be attached
                    to a public router.</paragraph>
            </note>
        </section>
        <section dupnames="prerequisites" ids="id1">
            <title>Prerequisites</title>
            <paragraph>Before you proceed, verify operation of the Compute, Networking, and Block
                Storage services. This options requires implementation of Networking option 2
                and requires installation of some Networking service components on the storage
                node.</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>Install the Networking service components:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># apt-get install neutron-plugin-linuxbridge-agent</literal_block>
                </list_item>
            </bullet_list>
        </section>
        <section dupnames="configure\ components" ids="id2">
            <title>Configure components</title>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Edit the <literal>/etc/manila/manila.conf</literal> file and complete the following
                        actions:</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>In the <literal>[DEFAULT]</literal> section, enable the generic driver and the NFS
                                protocol:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[DEFAULT]
...
enabled_share_backends = generic
enabled_share_protocols = NFS</literal_block>
                            <note>
                                <paragraph>Back end names are arbitrary. As an example, this guide uses the name
                                    of the driver.</paragraph>
                            </note>
                        </list_item>
                        <list_item>
                            <paragraph>In the <literal>[neutron]</literal>, <literal>[nova]</literal>, and <literal>[cinder]</literal> sections, enable
                                authentication for those services:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[neutron]
...
url = http://controller:9696
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = NEUTRON_PASS

[nova]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = nova
password = NOVA_PASS

[cinder]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = cinder
password = CINDER_PASS</literal_block>
                        </list_item>
                        <list_item>
                            <paragraph>In the <literal>[generic]</literal> section, configure the generic driver:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">[generic]
share_backend_name = GENERIC
share_driver = manila.share.drivers.generic.GenericShareDriver
driver_handles_share_servers = True
service_instance_flavor_id = 100
service_image_name = manila-service-image
service_instance_user = manila
service_instance_password = manila
interface_driver = manila.network.linux.interface.BridgeInterfaceDriver</literal_block>
                            <note>
                                <paragraph>You can also use SSH keys instead of password authentication for
                                    service instance credentials.</paragraph>
                            </note>
                            <important>
                                <paragraph>The <literal>service_image_name</literal>, <literal>service_instance_flavor_id</literal>,
                                    <literal>service_instance_user</literal> and <literal>service_instance_password</literal> are with
                                    reference to the service image that is used by the driver to create
                                    share servers. A sample service image for use with the <literal>generic</literal>
                                    driver is available in the <literal>manila-image-elements</literal> project. Its
                                    creation is explained in the post installation steps (See:
                                    <reference internal="True" refuri="post-install#post-install"><inline classes="std std-ref">Creating and using shared file systems</inline></reference>).</paragraph>
                            </important>
                        </list_item>
                    </bullet_list>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="finalize-installation" names="finalize\ installation">
            <title>Finalize installation</title>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Prepare manila-share as start/stop service. Start the Shared File Systems
                        service including its dependencies:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># service manila-share restart</literal_block>
                </list_item>
                <list_item>
                    <paragraph>By default, the Ubuntu packages create an SQLite database. Because this
                        configuration uses an SQL database server, remove the SQLite database
                        file:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># rm -f /var/lib/manila/manila.sqlite</literal_block>
                </list_item>
            </enumerated_list>
        </section>
    </section>
</document>
