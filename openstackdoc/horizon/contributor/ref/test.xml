<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/horizon/doc/source/contributor/ref/test.rst">
    <section ids="module-horizon.test.helpers horizon-testcase-classes" names="horizon\ testcase\ classes">
        <title>Horizon TestCase Classes</title>
        <index entries="['single',\ 'horizon.test.helpers\ (module)',\ 'module-horizon.test.helpers',\ '',\ None]"></index>
        <paragraph>Horizon provides a base test case class which provides several useful
            pre-prepared attributes for testing Horizon components.</paragraph>
        <index entries="['single',\ 'TestCase\ (class\ in\ horizon.test.helpers)',\ 'horizon.test.helpers.TestCase',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="TestCase" ids="horizon.test.helpers.TestCase" module="horizon.test.helpers" names="horizon.test.helpers.TestCase"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">horizon.test.helpers.</desc_addname><desc_name xml:space="preserve">TestCase</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">methodName='runTest'</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Base test case class for Horizon with numerous additional features.</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>The <literal>mox</literal> mocking framework via <literal>self.mox</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A <literal>RequestFactory</literal> class which supports Django’s <literal>contrib.messages</literal>
                            framework via <literal>self.factory</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A ready-to-go request object via <literal>self.request</literal>.</paragraph>
                    </list_item>
                </bullet_list>
                <index entries="['single',\ 'assertMessageCount()\ (horizon.test.helpers.TestCase\ method)',\ 'horizon.test.helpers.TestCase.assertMessageCount',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="TestCase" first="False" fullname="TestCase.assertMessageCount" ids="horizon.test.helpers.TestCase.assertMessageCount" module="horizon.test.helpers" names="horizon.test.helpers.TestCase.assertMessageCount"><desc_name xml:space="preserve">assertMessageCount</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">response=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                    <desc_content>
                        <paragraph>Asserts that the expected number of messages have been attached.</paragraph>
                        <paragraph>The expected number of messages can be specified per message type.
                            Usage would look like <literal>self.assertMessageCount(success=1)</literal>.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'assertNoMessages()\ (horizon.test.helpers.TestCase\ method)',\ 'horizon.test.helpers.TestCase.assertNoMessages',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="TestCase" first="False" fullname="TestCase.assertNoMessages" ids="horizon.test.helpers.TestCase.assertNoMessages" module="horizon.test.helpers" names="horizon.test.helpers.TestCase.assertNoMessages"><desc_name xml:space="preserve">assertNoMessages</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">response=None</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                    <desc_content>
                        <paragraph>Asserts no messages have been attached by the messages framework.</paragraph>
                        <paragraph>The expected messages framework is <literal>django.contrib.messages</literal>.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <target ids="module-openstack_dashboard.test.helpers" ismod="True"></target>
        <index entries="['single',\ 'openstack_dashboard.test.helpers\ (module)',\ 'module-openstack_dashboard.test.helpers',\ '',\ None]"></index>
        <paragraph>The OpenStack Dashboard also provides test case classes for greater
            ease-of-use when testing APIs and OpenStack-specific auth scenarios.</paragraph>
        <index entries="['single',\ 'TestCase\ (class\ in\ openstack_dashboard.test.helpers)',\ 'openstack_dashboard.test.helpers.TestCase',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="TestCase" ids="openstack_dashboard.test.helpers.TestCase" module="openstack_dashboard.test.helpers" names="openstack_dashboard.test.helpers.TestCase"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">openstack_dashboard.test.helpers.</desc_addname><desc_name xml:space="preserve">TestCase</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">methodName='runTest'</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Specialized base test case class for Horizon.</paragraph>
                <paragraph>It gives access to numerous additional features:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>A full suite of test data through various attached objects and
                            managers (e.g. <literal>self.servers</literal>, <literal>self.user</literal>, etc.). See the
                            docs for
                            <literal classes="xref py py-class">TestData</literal>
                            for more information.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The <literal>mox</literal> mocking framework via <literal>self.mox</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A set of request context data via <literal>self.context</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A <literal>RequestFactory</literal> class which supports Django’s <literal>contrib.messages</literal>
                            framework via <literal>self.factory</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>A ready-to-go request object via <literal>self.request</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The ability to override specific time data controls for easier testing.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Several handy additional assertion methods.</paragraph>
                    </list_item>
                </bullet_list>
                <index entries="['single',\ 'assertFormErrors()\ (openstack_dashboard.test.helpers.TestCase\ method)',\ 'openstack_dashboard.test.helpers.TestCase.assertFormErrors',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="TestCase" first="False" fullname="TestCase.assertFormErrors" ids="openstack_dashboard.test.helpers.TestCase.assertFormErrors" module="openstack_dashboard.test.helpers" names="openstack_dashboard.test.helpers.TestCase.assertFormErrors"><desc_name xml:space="preserve">assertFormErrors</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">response</desc_parameter><desc_parameter xml:space="preserve">count=0</desc_parameter><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">context_name='form'</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                    <desc_content>
                        <paragraph>Check for form errors.</paragraph>
                        <paragraph>Asserts that the response does contain a form in its
                            context, and that form has errors, if count were given,
                            it must match the exact numbers of errors</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'assertNoFormErrors()\ (openstack_dashboard.test.helpers.TestCase\ method)',\ 'openstack_dashboard.test.helpers.TestCase.assertNoFormErrors',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="TestCase" first="False" fullname="TestCase.assertNoFormErrors" ids="openstack_dashboard.test.helpers.TestCase.assertNoFormErrors" module="openstack_dashboard.test.helpers" names="openstack_dashboard.test.helpers.TestCase.assertNoFormErrors"><desc_name xml:space="preserve">assertNoFormErrors</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">response</desc_parameter><desc_parameter xml:space="preserve">context_name='form'</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                    <desc_content>
                        <paragraph>Checks for no form errors.</paragraph>
                        <paragraph>Asserts that the response either does not contain a form in its
                            context, or that if it does, that form has no errors.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'assertRedirectsNoFollow()\ (openstack_dashboard.test.helpers.TestCase\ method)',\ 'openstack_dashboard.test.helpers.TestCase.assertRedirectsNoFollow',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="TestCase" first="False" fullname="TestCase.assertRedirectsNoFollow" ids="openstack_dashboard.test.helpers.TestCase.assertRedirectsNoFollow" module="openstack_dashboard.test.helpers" names="openstack_dashboard.test.helpers.TestCase.assertRedirectsNoFollow"><desc_name xml:space="preserve">assertRedirectsNoFollow</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">response</desc_parameter><desc_parameter xml:space="preserve">expected_url</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                    <desc_content>
                        <paragraph>Check for redirect.</paragraph>
                        <paragraph>Asserts that the given response issued a 302 redirect without
                            processing the view which is redirected to.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'assertStatusCode()\ (openstack_dashboard.test.helpers.TestCase\ method)',\ 'openstack_dashboard.test.helpers.TestCase.assertStatusCode',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="TestCase" first="False" fullname="TestCase.assertStatusCode" ids="openstack_dashboard.test.helpers.TestCase.assertStatusCode" module="openstack_dashboard.test.helpers" names="openstack_dashboard.test.helpers.TestCase.assertStatusCode"><desc_name xml:space="preserve">assertStatusCode</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">response</desc_parameter><desc_parameter xml:space="preserve">expected_code</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
                    <desc_content>
                        <paragraph>Validates an expected status code.</paragraph>
                        <paragraph>Matches camel case of other assert functions</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'APITestCase\ (class\ in\ openstack_dashboard.test.helpers)',\ 'openstack_dashboard.test.helpers.APITestCase',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="APITestCase" ids="openstack_dashboard.test.helpers.APITestCase" module="openstack_dashboard.test.helpers" names="openstack_dashboard.test.helpers.APITestCase"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">openstack_dashboard.test.helpers.</desc_addname><desc_name xml:space="preserve">APITestCase</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">methodName='runTest'</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Testing APIs.</paragraph>
                <paragraph>For use with tests which deal with the underlying clients rather than
                    stubbing out the openstack_dashboard.api.* methods.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BaseAdminViewTests\ (class\ in\ openstack_dashboard.test.helpers)',\ 'openstack_dashboard.test.helpers.BaseAdminViewTests',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BaseAdminViewTests" ids="openstack_dashboard.test.helpers.BaseAdminViewTests" module="openstack_dashboard.test.helpers" names="openstack_dashboard.test.helpers.BaseAdminViewTests"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">openstack_dashboard.test.helpers.</desc_addname><desc_name xml:space="preserve">BaseAdminViewTests</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">methodName='runTest'</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Sets an active user with the “admin” role.</paragraph>
                <paragraph>For testing admin-only views and functionality.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
