<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/horizon/doc/source/contributor/ref/exceptions.rst">
    <section ids="module-horizon.exceptions horizon-exceptions" names="horizon\ exceptions">
        <title>Horizon Exceptions</title>
        <index entries="['single',\ 'horizon.exceptions\ (module)',\ 'module-horizon.exceptions',\ '',\ None]"></index>
        <paragraph>Exceptions raised by the Horizon code and the machinery for handling them.</paragraph>
        <index entries="['single',\ 'AlreadyExists',\ 'horizon.exceptions.AlreadyExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="AlreadyExists" ids="horizon.exceptions.AlreadyExists" module="horizon.exceptions" names="horizon.exceptions.AlreadyExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">AlreadyExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">resource_type</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>API resources tried to create already exists.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BadRequest',\ 'horizon.exceptions.BadRequest',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BadRequest" ids="horizon.exceptions.BadRequest" module="horizon.exceptions" names="horizon.exceptions.BadRequest"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">BadRequest</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Generic error to replace all “BadRequest”-type API errors.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ConfigurationError',\ 'horizon.exceptions.ConfigurationError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ConfigurationError" ids="horizon.exceptions.ConfigurationError" module="horizon.exceptions" names="horizon.exceptions.ConfigurationError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">ConfigurationError</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Exception to be raised when invalid settings have been provided.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'Conflict',\ 'horizon.exceptions.Conflict',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="Conflict" ids="horizon.exceptions.Conflict" module="horizon.exceptions" names="horizon.exceptions.Conflict"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">Conflict</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Generic error to replace all “Conflict”-type API errors.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GetFileError',\ 'horizon.exceptions.GetFileError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GetFileError" ids="horizon.exceptions.GetFileError" module="horizon.exceptions" names="horizon.exceptions.GetFileError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">GetFileError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">resource_type</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Exception to be raised when the value of get_file is not expected.</paragraph>
                <paragraph>The expected values start with <reference refuri="https://">https://</reference> or <reference refuri="http://">http://</reference>.
                    Otherwise this exception will be raised.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'HandledException',\ 'horizon.exceptions.HandledException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="HandledException" ids="horizon.exceptions.HandledException" module="horizon.exceptions" names="horizon.exceptions.HandledException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">HandledException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">wrapped</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Used internally to track exceptions that are already handled.</paragraph>
                <paragraph>It is used to track exceptions that have gone through
                    <reference internal="True" refid="horizon.exceptions.handle" reftitle="horizon.exceptions.handle"><literal classes="xref py py-func">horizon.exceptions.handle()</literal></reference> more than once.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'HorizonException',\ 'horizon.exceptions.HorizonException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="HorizonException" ids="horizon.exceptions.HorizonException" module="horizon.exceptions" names="horizon.exceptions.HorizonException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">HorizonException</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Base exception class for distinguishing our own exception classes.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'HorizonReporterFilter\ (class\ in\ horizon.exceptions)',\ 'horizon.exceptions.HorizonReporterFilter',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="HorizonReporterFilter" ids="horizon.exceptions.HorizonReporterFilter" module="horizon.exceptions" names="horizon.exceptions.HorizonReporterFilter"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">HorizonReporterFilter</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Error report filter that’s always active, even in DEBUG mode.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'Http302',\ 'horizon.exceptions.Http302',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="Http302" ids="horizon.exceptions.Http302" module="horizon.exceptions" names="horizon.exceptions.Http302"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">Http302</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">location</desc_parameter><desc_parameter xml:space="preserve">message=None</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Exception used to redirect at the middleware level.</paragraph>
                <paragraph>This error class which can be raised from within a handler to cause
                    an early bailout and redirect at the middleware level.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'MessageFailure',\ 'horizon.exceptions.MessageFailure',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="MessageFailure" ids="horizon.exceptions.MessageFailure" module="horizon.exceptions" names="horizon.exceptions.MessageFailure"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">MessageFailure</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Exception raised during message notification.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NotAuthenticated',\ 'horizon.exceptions.NotAuthenticated',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NotAuthenticated" ids="horizon.exceptions.NotAuthenticated" module="horizon.exceptions" names="horizon.exceptions.NotAuthenticated"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">NotAuthenticated</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Raised when a user is trying to make requests and they are not logged in.</paragraph>
                <paragraph>The included <reference internal="True" reftitle="horizon.middleware.HorizonMiddleware" refuri="middleware#horizon.middleware.HorizonMiddleware"><literal classes="xref py py-class">HorizonMiddleware</literal></reference> catches
                    <literal>NotAuthenticated</literal> and handles it gracefully by displaying an error
                    message and redirecting the user to a login page.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NotAuthorized',\ 'horizon.exceptions.NotAuthorized',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NotAuthorized" ids="horizon.exceptions.NotAuthorized" module="horizon.exceptions" names="horizon.exceptions.NotAuthorized"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">NotAuthorized</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>User tries to access a resource without sufficient permissions.</paragraph>
                <paragraph>Raised whenever a user attempts to access a resource which they do not
                    have permission-based access to (such as when failing the
                    <reference internal="True" reftitle="horizon.decorators.require_perms" refuri="decorators#horizon.decorators.require_perms"><literal classes="xref py py-func">require_perms()</literal></reference> decorator).</paragraph>
                <paragraph>The included <reference internal="True" reftitle="horizon.middleware.HorizonMiddleware" refuri="middleware#horizon.middleware.HorizonMiddleware"><literal classes="xref py py-class">HorizonMiddleware</literal></reference> catches
                    <literal>NotAuthorized</literal> and handles it gracefully by displaying an error
                    message and redirecting the user to a login page.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NotAvailable',\ 'horizon.exceptions.NotAvailable',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NotAvailable" ids="horizon.exceptions.NotAvailable" module="horizon.exceptions" names="horizon.exceptions.NotAvailable"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">NotAvailable</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Exception to be raised when something is not available.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NotFound',\ 'horizon.exceptions.NotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NotFound" ids="horizon.exceptions.NotFound" module="horizon.exceptions" names="horizon.exceptions.NotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">NotFound</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Generic error to replace all “Not Found”-type API errors.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'RecoverableError',\ 'horizon.exceptions.RecoverableError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="RecoverableError" ids="horizon.exceptions.RecoverableError" module="horizon.exceptions" names="horizon.exceptions.RecoverableError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">RecoverableError</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Generic error to replace any “Recoverable”-type API errors.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ServiceCatalogException',\ 'horizon.exceptions.ServiceCatalogException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ServiceCatalogException" ids="horizon.exceptions.ServiceCatalogException" module="horizon.exceptions" names="horizon.exceptions.ServiceCatalogException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">ServiceCatalogException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">service_name</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>A requested service is not available in the <literal>ServiceCatalog</literal>.</paragraph>
                <paragraph><literal>ServiceCatalog</literal> is fetched from Keystone.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'WorkflowError',\ 'horizon.exceptions.WorkflowError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="WorkflowError" ids="horizon.exceptions.WorkflowError" module="horizon.exceptions" names="horizon.exceptions.WorkflowError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">WorkflowError</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Exception to be raised when something goes wrong in a workflow.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'WorkflowValidationError',\ 'horizon.exceptions.WorkflowValidationError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="WorkflowValidationError" ids="horizon.exceptions.WorkflowValidationError" module="horizon.exceptions" names="horizon.exceptions.WorkflowValidationError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">WorkflowValidationError</desc_name><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Exception raised during workflow validation.</paragraph>
                <paragraph>It is raised if required data is missing,
                    or existing data is not valid.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_message()\ (in\ module\ horizon.exceptions)',\ 'horizon.exceptions.check_message',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_message" ids="horizon.exceptions.check_message" module="horizon.exceptions" names="horizon.exceptions.check_message"><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">check_message</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">keywords</desc_parameter><desc_parameter xml:space="preserve">message</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Checks an exception for given keywords and raises an error if found.</paragraph>
                <paragraph>It raises a new <literal>ActionError</literal> with the desired message if the
                    keywords are found. This allows selective
                    control over API error messages.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'handle()\ (in\ module\ horizon.exceptions)',\ 'horizon.exceptions.handle',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="handle" ids="horizon.exceptions.handle" module="horizon.exceptions" names="horizon.exceptions.handle"><desc_addname xml:space="preserve">horizon.exceptions.</desc_addname><desc_name xml:space="preserve">handle</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">request</desc_parameter><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">redirect=None</desc_parameter><desc_parameter xml:space="preserve">ignore=False</desc_parameter><desc_parameter xml:space="preserve">escalate=False</desc_parameter><desc_parameter xml:space="preserve">log_level=None</desc_parameter><desc_parameter xml:space="preserve">force_log=None</desc_parameter></desc_parameterlist><comment xml:space="preserve"></comment></desc_signature>
            <desc_content>
                <paragraph>Centralized error handling for Horizon.</paragraph>
                <paragraph>Because Horizon consumes so many different APIs with completely
                    different <literal>Exception</literal> types, it’s necessary to have a centralized
                    place for handling exceptions which may be raised.</paragraph>
                <paragraph>Exceptions are roughly divided into 3 types:</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph><literal>UNAUTHORIZED</literal>: Errors resulting from authentication or authorization
                            problems. These result in being logged out and sent to the login screen.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>NOT_FOUND</literal>: Errors resulting from objects which could not be
                            located via the API. These generally result in a user-facing error
                            message, but are otherwise returned to the normal code flow. Optionally
                            a redirect value may be passed to the error handler so users are
                            returned to a different view than the one requested in addition to the
                            error message.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>RECOVERABLE</literal>: Generic API errors which generate a user-facing message
                            but drop directly back to the regular code flow.</paragraph>
                    </list_item>
                </enumerated_list>
                <paragraph>All other exceptions bubble the stack as normal unless the <literal>ignore</literal>
                    argument is passed in as <literal>True</literal>, in which case only unrecognized
                    errors are bubbled.</paragraph>
                <paragraph>If the exception is not re-raised, an appropriate wrapper exception
                    class indicating the type of exception that was encountered will be
                    returned.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
