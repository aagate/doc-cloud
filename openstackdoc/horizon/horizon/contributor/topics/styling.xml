<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/horizon/doc/source/contributor/topics/styling.rst">
    <section ids="styling-in-horizon-scss" names="styling\ in\ horizon\ (scss)">
        <title>Styling in Horizon (SCSS)</title>
        <paragraph>Horizon uses <reference name="SCSS" refuri="http://sass-lang.com/guide">SCSS</reference> (not to be confused with Sass) to style its HTML. This
            guide is targeted at developers adding code to upstream Horizon. For
            information on creating your own branding/theming, see
            <reference internal="True" refuri="../../configuration/customizing#install-customizing"><inline classes="std std-ref">Customizing Horizon</inline></reference>.</paragraph>
        <target ids="scss" names="scss" refuri="http://sass-lang.com/guide"></target>
        <section ids="code-layout" names="code\ layout">
            <title>Code Layout</title>
            <paragraph>The base SCSS can be found at <literal>openstack_dashboard/static/dashboard/scss/</literal>.
                This directory should <strong>only</strong> contain the minimal styling for functionality
                code that isn’t configurable by themes. <literal>horizon.scss</literal> is a top level file
                that imports from the <literal>components/</literal> directory, as well as other base styling
                files; potentially some basic page layout rules that Horizon relies on to
                function.</paragraph>
            <note>
                <paragraph>Currently, a great deal of theming is also kept in the <literal>horizon.scss</literal> file
                    in this directory, but that will be reduced as we proceed with the new code
                    design.</paragraph>
            </note>
            <paragraph>Horizon’s <literal>default</literal> theme stylesheets can be found at
                <literal>openstack_dashboard/themes/default/</literal>.</paragraph>
            <literal_block xml:space="preserve">├── _styles.scss
├── _variables.scss
├── bootstrap/
    └── ...
└── horizon/
    └── ...</literal_block>
            <paragraph>The top level <literal>_styles.scss</literal> and <literal>_variables.scss</literal> contain imports from
                the <literal>bootstrap</literal> and <literal>horizon</literal> directories.</paragraph>
            <section ids="the-bootstrap-directory" names='the\ "bootstrap"\ directory'>
                <title>The “bootstrap” directory</title>
                <paragraph>This directory contains overrides and customization of Bootstrap variables, and
                    markup used by Bootstrap components. This should <strong>only</strong> override existing
                    Bootstrap content. For examples of these components, see the
                    <reference name="Theme Preview Panel" refid="theme-preview-panel">Theme Preview Panel</reference>.</paragraph>
                <literal_block xml:space="preserve">bootstrap/
├── _styles.scss
├── _variables.scss
└── components/
    ├── _component_0.scss
    ├── _component_1.scss
    └── ...</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>_styles.scss</literal> imports the SCSS defined for each component.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>_variables.scss</literal> contains the definitions for every Bootstrap variable.
                            These variables can be altered to affect the look and feel of Horizon’s
                            default theme.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The <literal>components</literal> directory contains overrides for Bootstrap components,
                            such as tables or navbars.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="the-horizon-directory" names='the\ "horizon"\ directory'>
                <title>The “horizon” directory</title>
                <paragraph>This directory contains SCSS that is absolutely specific to Horizon; code here
                    should <strong>not</strong> override existing Bootstrap content, such as variables and rules.</paragraph>
                <literal_block xml:space="preserve">horizon/
├── _styles.scss
├── _variables.scss
└── components/
    ├── _component_0.scss
    ├── _component_1.scss
    └── ...</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>_styles.scss</literal> imports the SCSS defined for each component. It may also
                            contain some minor styling overrides.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>_variables.scss</literal> contains variable definitions that are specific to the
                            horizon theme. This should <strong>not</strong> override any bootstrap variables, only
                            define new ones. You can however, inherit bootstrap variables for reuse
                            (and are encouraged to do so where possible).</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The <literal>components</literal> directory contains styling for each individual component
                            defined by Horizon, such as the sidebar or pie charts.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
        </section>
        <section ids="adding-new-scss" names="adding\ new\ scss">
            <title>Adding new SCSS</title>
            <paragraph>To keep Horizon easily themable, there are several code design guidelines that
                should be adhered to:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Reuse Bootstrap variables where possible. This allows themes to influence
                        styling by simply overriding a few existing variables, instead of rewriting
                        large chunks of the SCSS files.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>If you are unable to use existing variables - such as for very specific
                        functionality - keep the new rules as specific as possible to your component
                        so they do not cause issues in unexpected places.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Check if existing components suit your use case. There may be existing
                        components defined by Bootstrap or Horizon that can be reused, rather than
                        writing new ones.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="theme-preview-panel" names="theme\ preview\ panel">
            <title>Theme Preview Panel</title>
            <paragraph>The Bootstrap Theme Preview panel contains examples of all stock Bootstrap
                markup with the currently applied theme, as well as source code for replicating
                them; click the <literal>&lt;/&gt;</literal> symbol when hovering over a component.</paragraph>
            <paragraph>To enable the Developer dashboard with the Theme Preview panel:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Set <reference internal="True" refuri="../../configuration/settings#debug-setting"><inline classes="std std-ref">DEBUG</inline></reference> setting to <literal>True</literal>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Copy <literal>_9001_developer.py</literal> and <literal>_9010_preview.py</literal> from
                        <literal>openstack_dashboard/contrib/developer/enabled/</literal> to
                        <literal>openstack_dashboard/local/enabled/</literal>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Restart the web server.</paragraph>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="alternate-theme" names="alternate\ theme">
            <title>Alternate Theme</title>
            <paragraph>A second theme is provided by default at
                <literal>openstack_dashboard/themes/material/</literal>. When adding new SCSS to horizon, you
                should check that it does not interfere with the Material theme. Images of how
                the Material theme should look can be found at <reference refuri="https://bootswatch.com/paper/">https://bootswatch.com/paper/</reference>.
                This theme is now configured to run as the alternate theme within Horizon.</paragraph>
        </section>
    </section>
</document>
