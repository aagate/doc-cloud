<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/admin/blockstorage-volume-backups.rst">
    <target refid="volume-backups"></target>
    <section ids="back-up-and-restore-volumes-and-snapshots volume-backups" names="back\ up\ and\ restore\ volumes\ and\ snapshots volume_backups">
        <title>Back up and restore volumes and snapshots</title>
        <paragraph>The <literal>openstack</literal> command-line interface provides the tools for creating a
            volume backup. You can restore a volume from a backup as long as the
            backupâ€™s associated database information (or backup metadata) is intact
            in the Block Storage database.</paragraph>
        <paragraph>Run this command to create a backup of a volume:</paragraph>
        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume backup create [--incremental] [--force] VOLUME</literal_block>
        <paragraph>Where <literal>VOLUME</literal> is the name or ID of the volume, <literal>incremental</literal> is
            a flag that indicates whether an incremental backup should be performed,
            and <literal>force</literal> is a flag that allows or disallows backup of a volume
            when the volume is attached to an instance.</paragraph>
        <paragraph>Without the <literal>incremental</literal> flag, a full backup is created by default.
            With the <literal>incremental</literal> flag, an incremental backup is created.</paragraph>
        <paragraph>Without the <literal>force</literal> flag, the volume will be backed up only if its
            status is <literal>available</literal>. With the <literal>force</literal> flag, the volume will be
            backed up whether its status is <literal>available</literal> or <literal>in-use</literal>. A volume
            is <literal>in-use</literal> when it is attached to an instance. The backup of an
            <literal>in-use</literal> volume means your data is crash consistent. The <literal>force</literal>
            flag is False by default.</paragraph>
        <note>
            <paragraph>The <literal>incremental</literal> and <literal>force</literal> flags are only available for block
                storage API v2. You have to specify <literal>[--os-volume-api-version 2]</literal> in the
                <literal>cinder</literal> command-line interface to use this parameter.</paragraph>
        </note>
        <note>
            <paragraph>The <literal>force</literal> flag is new in OpenStack Liberty.</paragraph>
        </note>
        <paragraph>The incremental backup is based on a parent backup which is an existing
            backup with the latest timestamp. The parent backup can be a full backup
            or an incremental backup depending on the timestamp.</paragraph>
        <note>
            <paragraph>The first backup of a volume has to be a full backup. Attempting to do
                an incremental backup without any existing backups will fail.
                There is an <literal>is_incremental</literal> flag that indicates whether a backup is
                incremental when showing details on the backup.
                Another flag, <literal>has_dependent_backups</literal>, returned when showing backup
                details, will indicate whether the backup has dependent backups.
                If it is <literal>true</literal>, attempting to delete this backup will fail.</paragraph>
        </note>
        <paragraph>A new configure option <literal>backup_swift_block_size</literal> is introduced into
            <literal>cinder.conf</literal> for the default Swift backup driver. This is the size in
            bytes that changes are tracked for incremental backups. The existing
            <literal>backup_swift_object_size</literal> option, the size in bytes of Swift backup
            objects, has to be a multiple of <literal>backup_swift_block_size</literal>. The default
            is 32768 for <literal>backup_swift_block_size</literal>, and the default is 52428800 for
            <literal>backup_swift_object_size</literal>.</paragraph>
        <paragraph>The configuration option <literal>backup_swift_enable_progress_timer</literal> in
            <literal>cinder.conf</literal> is used when backing up the volume to Object Storage
            back end. This option enables or disables the timer. It is enabled by default
            to send the periodic progress notifications to the Telemetry service.</paragraph>
        <paragraph>This command also returns a backup ID. Use this backup ID when restoring
            the volume:</paragraph>
        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume backup restore BACKUP_ID VOLUME_ID</literal_block>
        <paragraph>When restoring from a full backup, it is a full restore.</paragraph>
        <paragraph>When restoring from an incremental backup, a list of backups is built based
            on the IDs of the parent backups. A full restore is performed based on the
            full backup first, then restore is done based on the incremental backup,
            laying on top of it in order.</paragraph>
        <paragraph>You can view a backup list with the <literal_strong classes="command">openstack volume backup list</literal_strong>
            command. Optional arguments to clarify the status of your backups
            include: running <literal>--name</literal>, <literal>--status</literal>, and
            <literal>--volume</literal> to filter through backups by the specified name,
            status, or volume-id. Search with <literal>--all-projects</literal> for details of the
            projects associated with the listed backups.</paragraph>
        <paragraph>Because volume backups are dependent on the Block Storage database, you must
            also back up your Block Storage database regularly to ensure data recovery.</paragraph>
        <note>
            <paragraph>Alternatively, you can export and save the metadata of selected volume
                backups. Doing so precludes the need to back up the entire Block Storage
                database. This is useful if you need only a small subset of volumes to
                survive a catastrophic database failure.</paragraph>
            <paragraph>If you specify a UUID encryption key when setting up the volume
                specifications, the backup metadata ensures that the key will remain valid
                when you back up and restore the volume.</paragraph>
            <paragraph>For more information about how to export and import volume backup metadata,
                see the section called <reference internal="True" refuri="blockstorage-volume-backups-export-import#volume-backups-export-import"><inline classes="std std-ref">Export and import backup metadata</inline></reference>.</paragraph>
        </note>
        <paragraph>By default, the swift object store is used for the backup repository.</paragraph>
        <paragraph>If instead you want to use an NFS export as the backup repository, add the
            following configuration options to the <literal>[DEFAULT]</literal> section of the
            <literal>cinder.conf</literal> file and restart the Block Storage services:</paragraph>
        <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">backup_driver = cinder.backup.drivers.nfs
backup_share = HOST:EXPORT_PATH</literal_block>
        <paragraph>For the <literal>backup_share</literal> option, replace <literal>HOST</literal> with the DNS resolvable
            host name or the IP address of the storage server for the NFS share, and
            <literal>EXPORT_PATH</literal> with the path to that share. If your environment requires
            that non-default mount options be specified for the share, set these as
            follows:</paragraph>
        <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">backup_mount_options = MOUNT_OPTIONS</literal_block>
        <paragraph><literal>MOUNT_OPTIONS</literal> is a comma-separated string of NFS mount options as detailed
            in the NFS man page.</paragraph>
        <paragraph>There are several other options whose default values may be overridden as
            appropriate for your environment:</paragraph>
        <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">backup_compression_algorithm = zlib
backup_sha_block_size_bytes = 32768
backup_file_size = 1999994880</literal_block>
        <paragraph>The option <literal>backup_compression_algorithm</literal> can be set to <literal>bz2</literal> or <literal>None</literal>.
            The latter can be a useful setting when the server providing the share for the
            backup repository itself performs deduplication or compression on the backup
            data.</paragraph>
        <paragraph>The option <literal>backup_file_size</literal> must be a multiple of
            <literal>backup_sha_block_size_bytes</literal>. It is effectively the maximum file size to be
            used, given your environment, to hold backup data. Volumes larger than this
            will be stored in multiple files in the backup repository. The
            <literal>backup_sha_block_size_bytes</literal> option determines the size of blocks from the
            cinder volume being backed up on which digital signatures are calculated in
            order to enable incremental backup capability.</paragraph>
        <paragraph>You also have the option of resetting the state of a backup. When creating or
            restoring a backup, sometimes it may get stuck in the creating or restoring
            states due to problems like the database or rabbitmq being down. In situations
            like these resetting the state of the backup can restore it to a functional
            status.</paragraph>
        <paragraph>Run this command to restore the state of a backup:</paragraph>
        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ cinder backup-reset-state [--state STATE] BACKUP_ID-1 BACKUP_ID-2 ...</literal_block>
        <paragraph>Run this command to create a backup of a snapshot:</paragraph>
        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume backup create [--incremental] [--force] \
  [--snapshot SNAPSHOT_ID] VOLUME</literal_block>
        <paragraph>Where <literal>VOLUME</literal> is the name or ID of the volume, <literal>SNAPSHOT_ID</literal> is the ID of
            the volumeâ€™s snapshot.</paragraph>
    </section>
</document>
