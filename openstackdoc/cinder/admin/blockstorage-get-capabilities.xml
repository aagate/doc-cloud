<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/admin/blockstorage-get-capabilities.rst">
    <target refid="get-capabilities"></target>
    <section ids="get-capabilities id1" names="get\ capabilities get_capabilities">
        <title>Get capabilities</title>
        <paragraph>When an administrator configures <literal>volume type</literal> and <literal>extra specs</literal> of storage
            on the back end, the administrator has to read the right documentation that
            corresponds to the version of the storage back end. Deep knowledge of
            storage is also required.</paragraph>
        <paragraph>OpenStack Block Storage enables administrators to configure <literal>volume type</literal>
            and <literal>extra specs</literal> without specific knowledge of the storage back end.</paragraph>
        <note>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><literal>Volume Type</literal>: A group of volume policies.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>Extra Specs</literal>: The definition of a volume type. This is a group of
                        policies. For example, provision type, QOS that will be used to
                        define a volume at creation time.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>Capabilities</literal>: What the current deployed back end in Cinder is able
                        to do. These correspond to extra specs.</paragraph>
                </list_item>
            </bullet_list>
        </note>
        <section ids="usage-of-cinder-client" names="usage\ of\ cinder\ client">
            <title>Usage of cinder client</title>
            <paragraph>When an administrator wants to define new volume types for their
                OpenStack cloud, the administrator would fetch a list of <literal>capabilities</literal>
                for a particular back end using the cinder client.</paragraph>
            <paragraph>First, get a list of the services:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume service list
+------------------+-------------------+------+---------+-------+----------------------------+
| Binary           | Host              | Zone | Status  | State | Updated At                 |
+------------------+-------------------+------+---------+-------+----------------------------+
| cinder-scheduler | controller        | nova | enabled | up    | 2016-10-24T13:53:35.000000 |
| cinder-volume    | block1@ABC-driver | nova | enabled | up    | 2016-10-24T13:53:35.000000 |
+------------------+-------------------+------+---------+-------+----------------------------+</literal_block>
            <paragraph>With one of the listed hosts, pass that to <literal>get-capabilities</literal>, then
                the administrator can obtain volume stats and also back end <literal>capabilities</literal>
                as listed below.</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ cinder get-capabilities block1@ABC-driver
+---------------------+----------------------------------------------+
|     Volume stats    |                    Value                     |
+---------------------+----------------------------------------------+
|     description     |                     None                     |
|     display_name    |   Capabilities of Cinder Vendor ABC driver   |
|    driver_version   |                    2.0.0                     |
|      namespace      | OS::Storage::Capabilities::block1@ABC-driver |
|      pool_name      |                     None                     |
| replication_targets |                      []                      |
|   storage_protocol  |                    iSCSI                     |
|     vendor_name     |                  Vendor ABC                  |
|      visibility     |                     pool                     |
| volume_backend_name |                  ABC-driver                  |
+---------------------+----------------------------------------------+
+----------------------+-----------------------------------------------------+
|  Backend properties  |                     Value                           |
+----------------------+-----------------------------------------------------+
|      compression     | {u'type':u'boolean', u'title':u'Compression',  ...} |
| ABC:compression_type | {u'enum':u'['lossy', 'lossless', 'special']',  ...} |
|         qos          | {u'type':u'boolean', u'title':u'QoS',          ...} |
|     replication      | {u'type':u'boolean', u'title':u'Replication',  ...} |
|  thin_provisioning   | {u'type':u'boolean', u'title':u'Thin Provisioning'} |
|     ABC:minIOPS      | {u'type':u'integer', u'title':u'Minimum IOPS QoS',} |
|     ABC:maxIOPS      | {u'type':u'integer', u'title':u'Maximum IOPS QoS',} |
|    ABC:burstIOPS     | {u'type':u'integer', u'title':u'Burst IOPS QoS',..} |
+----------------------+-----------------------------------------------------+</literal_block>
        </section>
        <section ids="disable-a-service" names="disable\ a\ service">
            <title>Disable a service</title>
            <paragraph>When an administrator wants to disable a service, identify the Binary
                and the Host of the service. Use the :command:` openstack volume service set`
                command combined with the Binary and Host to disable the service:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Determine the binary and host of the service you want to remove
                        initially.</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume service list
+------------------+----------------------+------+---------+-------+----------------------------+
| Binary           | Host                 | Zone | Status  | State | Updated At                 |
+------------------+----------------------+------+---------+-------+----------------------------+
| cinder-scheduler | devstack             | nova | enabled | up    | 2016-10-24T13:53:35.000000 |
| cinder-volume    | devstack@lvmdriver-1 | nova | enabled | up    | 2016-10-24T13:53:35.000000 |
+------------------+----------------------+------+---------+-------+----------------------------+</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Disable the service using the Binary and Host name, placing the Host
                        before the Binary name.</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume service set --disable HOST_NAME BINARY_NAME</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Remove the service from the database.</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ cinder-manage service remove BINARY_NAME HOST_NAME</literal_block>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="usage-of-rest-api" names="usage\ of\ rest\ api">
            <title>Usage of REST API</title>
            <paragraph>New endpoint to <literal>get capabilities</literal> list for specific storage back end
                is also available. For more details, refer to the Block Storage API reference.</paragraph>
            <paragraph>API request:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">GET /v2/{tenant_id}/capabilities/{hostname}</literal_block>
            <paragraph>Example of return value:</paragraph>
            <literal_block highlight_args="{}" language="json" linenos="False" xml:space="preserve">{
  "namespace": "OS::Storage::Capabilities::block1@ABC-driver",
  "volume_backend_name": "ABC-driver",
  "pool_name": "pool",
  "driver_version": "2.0.0",
  "storage_protocol": "iSCSI",
  "display_name": "Capabilities of Cinder Vendor ABC driver",
  "description": "None",
  "visibility": "public",
  "properties": {
   "thin_provisioning": {
      "title": "Thin Provisioning",
      "description": "Sets thin provisioning.",
      "type": "boolean"
    },
    "compression": {
      "title": "Compression",
      "description": "Enables compression.",
      "type": "boolean"
    },
    "ABC:compression_type": {
      "title": "Compression type",
      "description": "Specifies compression type.",
      "type": "string",
      "enum": [
        "lossy", "lossless", "special"
      ]
    },
    "replication": {
      "title": "Replication",
      "description": "Enables replication.",
      "type": "boolean"
    },
    "qos": {
      "title": "QoS",
      "description": "Enables QoS.",
      "type": "boolean"
    },
    "ABC:minIOPS": {
      "title": "Minimum IOPS QoS",
      "description": "Sets minimum IOPS if QoS is enabled.",
      "type": "integer"
    },
    "ABC:maxIOPS": {
      "title": "Maximum IOPS QoS",
      "description": "Sets maximum IOPS if QoS is enabled.",
      "type": "integer"
    },
    "ABC:burstIOPS": {
      "title": "Burst IOPS QoS",
      "description": "Sets burst IOPS if QoS is enabled.",
      "type": "integer"
    },
  }
}</literal_block>
        </section>
        <section ids="usage-of-volume-type-access-extension" names="usage\ of\ volume\ type\ access\ extension">
            <title>Usage of volume type access extension</title>
            <paragraph>Some volume types should be restricted only. For example, test volume types
                where you are testing a new technology or ultra high performance volumes
                (for special cases) where you do not want most users to be able to select
                these volumes. An administrator/operator can then define private volume types
                using cinder client.
                Volume type access extension adds the ability to manage volume type access.
                Volume types are public by default. Private volume types can be created by
                setting the <literal>--private</literal> parameter at creation time. Access to a
                private volume type can be controlled by adding or removing a project from it.
                Private volume types without projects are only visible by users with the
                admin role/context.</paragraph>
            <paragraph>Create a public volume type by setting <literal>--public</literal> parameter:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume type create vol_Type1 --description test1 --public
+-------------+--------------------------------------+
| Field       | Value                                |
+-------------+--------------------------------------+
| description | test1                                |
| id          | b7dbed9e-de78-49f8-a840-651ae7308592 |
| is_public   | True                                 |
| name        | vol_Type1                            |
+-------------+--------------------------------------+</literal_block>
            <paragraph>Create a private volume type by setting <literal>--private</literal> parameter:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume type create vol_Type2 --description test2 --private
+-------------+--------------------------------------+
| Field       | Value                                |
+-------------+--------------------------------------+
| description | test2                                |
| id          | 154baa73-d2c4-462f-8258-a2df251b0d39 |
| is_public   | False                                |
| name        | vol_Type2                            |
+-------------+--------------------------------------+</literal_block>
            <paragraph>Get a list of the volume types:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume type list
+--------------------------------------+-------------+
| ID                                   | Name        |
+--------------------------------------+-------------+
| 0a948c84-bad5-4fba-88a2-c062006e4f6b | vol_Type1   |
| 87e5be6f-9491-4ea5-9906-9ac56494bb91 | lvmdriver-1 |
| fd508846-213f-4a07-aaf2-40518fb9a23f | vol_Type2   |
+--------------------------------------+-------------+</literal_block>
            <paragraph>Get a list of the projects:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack project list
+----------------------------------+--------------------+
| ID                               | Name               |
+----------------------------------+--------------------+
| 4105ead90a854100ab6b121266707f2b | alt_demo           |
| 4a22a545cedd4fcfa9836eb75e558277 | admin              |
| 71f9cdb1a3ab4b8e8d07d347a2e146bb | service            |
| c4860af62ffe465e99ed1bc08ef6082e | demo               |
| e4b648ba5108415cb9e75bff65fa8068 | invisible_to_admin |
+----------------------------------+--------------------+</literal_block>
            <paragraph>Add volume type access for the given demo project, using its project-id:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume type set --project c4860af62ffe465e99ed1bc08ef6082e \
  vol_Type2</literal_block>
            <paragraph>List the access information about the given volume type:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume type show vol_Type2
+--------------------+--------------------------------------+
| Field              | Value                                |
+--------------------+--------------------------------------+
| access_project_ids | c4860af62ffe465e99ed1bc08ef6082e     |
| description        |                                      |
| id                 | fd508846-213f-4a07-aaf2-40518fb9a23f |
| is_public          | False                                |
| name               | vol_Type2                            |
| properties         |                                      |
| qos_specs_id       | None                                 |
+--------------------+--------------------------------------+</literal_block>
            <paragraph>Remove volume type access for the given project:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume type unset --project c4860af62ffe465e99ed1bc08ef6082e \
  vol_Type2
$ openstack volume type show vol_Type2
+--------------------+--------------------------------------+
| Field              | Value                                |
+--------------------+--------------------------------------+
| access_project_ids |                                      |
| description        |                                      |
| id                 | fd508846-213f-4a07-aaf2-40518fb9a23f |
| is_public          | False                                |
| name               | vol_Type2                            |
| properties         |                                      |
| qos_specs_id       | None                                 |
+--------------------+--------------------------------------+</literal_block>
        </section>
    </section>
</document>
