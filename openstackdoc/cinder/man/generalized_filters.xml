<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/man/generalized_filters.rst">
    <section ids="generalized-filters" names="generalized\ filters">
        <title>Generalized filters</title>
        <section ids="background" names="background">
            <title>Background</title>
            <paragraph>Cinder introduced generalized resource filters since Pike, it has the
                same purpose as <literal>query_volume_filters</literal> option, but it’s more convenient
                and can be applied to more cinder resources, administrator can control the
                allowed filter keys for <strong>non-admin</strong> user by editing the filter
                configuration file. Also since this feature, cinder will raise
                <literal>400 BadRequest</literal> if any invalid query filter is specified.</paragraph>
        </section>
        <section ids="how-do-i-configure-the-filter-keys" names="how\ do\ i\ configure\ the\ filter\ keys?">
            <title>How do I configure the filter keys?</title>
            <paragraph><literal>resource_query_filters_file</literal> is introduced to cinder to represent the
                filter config file path, and the config file accepts the valid filter keys
                for <strong>non-admin</strong> user with json format:</paragraph>
            <literal_block highlight_args="{}" language="json" linenos="False" xml:space="preserve">{
   "volume": ["name", "status", "metadata"]
}</literal_block>
            <paragraph>the key <literal>volume</literal> (singular) here stands for the resource you want to apply and the value
                accepts an list which contains the allowed filters collection, once the configuration
                file is changed and API service is restarted, cinder will only recognize this filter
                keys, <strong>NOTE</strong>: the default configuration file will include all the filters we already
                enabled.</paragraph>
        </section>
        <section ids="which-filter-keys-are-supported" names="which\ filter\ keys\ are\ supported?">
            <title>Which filter keys are supported?</title>
            <paragraph>Not all the attributes are supported at present, so we add this table below to
                indicate which filter keys are valid and can be used in the configuration.</paragraph>
            <paragraph>Since v3.34 we could use ‘~’ to indicate supporting querying resource by inexact match,
                for example, if we have a configuration file as below:</paragraph>
            <literal_block highlight_args="{}" language="json" linenos="False" xml:space="preserve">{
   "volume": ["name~"]
}</literal_block>
            <paragraph>User can query volume both by <literal>name=volume</literal> and <literal>name~=volume</literal>, and the volumes
                named <literal>volume123</literal> and <literal>a_volume123</literal> are both valid for second input while neither are
                valid for first. The supported APIs are marked with “*” below in the table.</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="17"></colspec>
                    <colspec colwidth="73"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>API</paragraph>
                            </entry>
                            <entry>
                                <paragraph>Valid filter keys</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>list volume*</paragraph>
                            </entry>
                            <entry>
                                <paragraph>id, group_id, name, status, bootable, migration_status, metadata, host,
                                    image_metadata, availability_zone, user_id, volume_type_id, project_id,
                                    size, description, replication_status, multiattach</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>list snapshot*</paragraph>
                            </entry>
                            <entry>
                                <paragraph>id, volume_id, user_id, project_id, status, volume_size, name,
                                    description, volume_type_id, group_snapshot_id, metadata</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>list backup*</paragraph>
                            </entry>
                            <entry>
                                <paragraph>id, name, status, container, availability_zone, description,
                                    volume_id, is_incremental, size, host, parent_id</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>list group*</paragraph>
                            </entry>
                            <entry>
                                <paragraph>id, user_id, status, availability_zone, group_type, name, description,
                                    host</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>list g-snapshot*</paragraph>
                            </entry>
                            <entry>
                                <paragraph>id, name, description, group_id, group_type_id, status</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>list attachment*</paragraph>
                            </entry>
                            <entry>
                                <paragraph>id, volume_id, instance_id, attach_status, attach_mode,
                                    connection_info, mountpoint, attached_host</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>list message*</paragraph>
                            </entry>
                            <entry>
                                <paragraph>id, event_id, resource_uuid, resource_type, request_id, message_level,
                                    project_id</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>get pools</paragraph>
                            </entry>
                            <entry>
                                <paragraph>name, volume_type</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
    </section>
</document>
