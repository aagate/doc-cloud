<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.utils.rst">
    <section ids="module-cinder.volume.utils the-cinder-volume-utils-module" names="the\ cinder.volume.utils\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.utils" reftitle="cinder.volume.utils"><literal classes="xref py py-mod">cinder.volume.utils</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.utils\ (module)',\ 'module-cinder.volume.utils',\ '',\ None]"></index>
        <paragraph>Volume-related Utilities and helpers.</paragraph>
        <index entries="['single',\ 'append_host()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.append_host',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="append_host" ids="cinder.volume.utils.append_host" module="cinder.volume.utils" names="cinder.volume.utils.append_host"><desc_name xml:space="preserve">append_host</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">pool</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Encode pool into host info.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_already_managed_volume()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.check_already_managed_volume',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_already_managed_volume" ids="cinder.volume.utils.check_already_managed_volume" module="cinder.volume.utils" names="cinder.volume.utils.check_already_managed_volume"><desc_name xml:space="preserve">check_already_managed_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vol_id</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Check cinder db for already managed volume.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">vol_id</literal_strong> – volume id parameter</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>bool – return True, if db entry with specified
                                volume id exists, otherwise return False</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_for_odirect_support()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.check_for_odirect_support',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_for_odirect_support" ids="cinder.volume.utils.check_for_odirect_support" module="cinder.volume.utils" names="cinder.volume.utils.check_for_odirect_support"><desc_name xml:space="preserve">check_for_odirect_support</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">src</desc_parameter><desc_parameter xml:space="preserve">dest</desc_parameter><desc_parameter xml:space="preserve">flag='oflag=direct'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'clear_volume()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.clear_volume',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="clear_volume" ids="cinder.volume.utils.clear_volume" module="cinder.volume.utils" names="cinder.volume.utils.clear_volume"><desc_name xml:space="preserve">clear_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_size</desc_parameter><desc_parameter xml:space="preserve">volume_path</desc_parameter><desc_parameter xml:space="preserve">volume_clear=None</desc_parameter><desc_parameter xml:space="preserve">volume_clear_size=None</desc_parameter><desc_parameter xml:space="preserve">volume_clear_ionice=None</desc_parameter><desc_parameter xml:space="preserve">throttle=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Unprovision old volumes to prevent data leaking between users.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'convert_config_string_to_dict()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.convert_config_string_to_dict',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="convert_config_string_to_dict" ids="cinder.volume.utils.convert_config_string_to_dict" module="cinder.volume.utils" names="cinder.volume.utils.convert_config_string_to_dict"><desc_name xml:space="preserve">convert_config_string_to_dict</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">config_string</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Convert config file replication string to a dict.</paragraph>
                <paragraph>The only supported form is as follows:
                    “{‘key-1’=’val-1’ ‘key-2’=’val-2’…}”</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">config_string</literal_strong> – Properly formatted string to convert to dict.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Response</field_name>
                        <field_body>
                            <paragraph>dict of string values</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'copy_volume()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.copy_volume',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="copy_volume" ids="cinder.volume.utils.copy_volume" module="cinder.volume.utils" names="cinder.volume.utils.copy_volume"><desc_name xml:space="preserve">copy_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">src</desc_parameter><desc_parameter xml:space="preserve">dest</desc_parameter><desc_parameter xml:space="preserve">size_in_m</desc_parameter><desc_parameter xml:space="preserve">blocksize</desc_parameter><desc_parameter xml:space="preserve">sync=False</desc_parameter><desc_parameter xml:space="preserve">execute=&lt;function execute&gt;</desc_parameter><desc_parameter xml:space="preserve">ionice=None</desc_parameter><desc_parameter xml:space="preserve">throttle=None</desc_parameter><desc_parameter xml:space="preserve">sparse=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Copy data from the source volume to the destination volume.</paragraph>
                <paragraph>The parameters ‘src’ and ‘dest’ are both typically of type str, which
                    represents the path to each volume on the filesystem.  Connectors can
                    optionally return a volume handle of type RawIOBase for volumes that are
                    not available on the local filesystem for open/close operations.</paragraph>
                <paragraph>If either ‘src’ or ‘dest’ are not of type str, then they are assumed to be
                    of type RawIOBase or any derivative that supports file operations such as
                    read and write.  In this case, the handles are treated as file handles
                    instead of file paths and, at present moment, throttling is unavailable.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'create_encryption_key()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.create_encryption_key',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="create_encryption_key" ids="cinder.volume.utils.create_encryption_key" module="cinder.volume.utils" names="cinder.volume.utils.create_encryption_key"><desc_name xml:space="preserve">create_encryption_key</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">key_manager</desc_parameter><desc_parameter xml:space="preserve">volume_type_id</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'extract_host()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.extract_host',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="extract_host" ids="cinder.volume.utils.extract_host" module="cinder.volume.utils" names="cinder.volume.utils.extract_host"><desc_name xml:space="preserve">extract_host</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">level='backend'</desc_parameter><desc_parameter xml:space="preserve">default_pool_name=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Extract Host, Backend or Pool information from host string.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">host</literal_strong> – String for host, which could include <reference refuri="mailto:host@backend#pool">host@backend#pool</reference> info</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">level</literal_strong> – Indicate which level of information should be extracted
                                        from host string. Level can be ‘host’, ‘backend’ or ‘pool’,
                                        default value is ‘backend’</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">default_pool_name</literal_strong> – this flag specify what to do if level == ‘pool’
                                        and there is no ‘pool’ info encoded in host
                                        string.  default_pool_name=True will return
                                        DEFAULT_POOL_NAME, otherwise we return None.
                                        Default value of this parameter is False.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>expected information, string or None</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Raises</field_name>
                        <field_body>
                            <paragraph>exception.InvalidVolume</paragraph>
                        </field_body>
                    </field>
                </field_list>
                <definition_list>
                    <definition_list_item>
                        <term>For example:</term>
                        <definition>
                            <paragraph>host = <reference refuri="mailto:'HostA@BackendB#PoolC">‘HostA@BackendB#PoolC</reference>’
                                ret = extract_host(host, ‘host’)
                                # ret is ‘HostA’
                                ret = extract_host(host, ‘backend’)
                                # ret is <reference refuri="mailto:'HostA@BackendB">‘HostA@BackendB</reference>’
                                ret = extract_host(host, ‘pool’)
                                # ret is ‘PoolC’</paragraph>
                            <paragraph>host = <reference refuri="mailto:'HostX@BackendY">‘HostX@BackendY</reference>’
                                ret = extract_host(host, ‘pool’)
                                # ret is None
                                ret = extract_host(host, ‘pool’, True)
                                # ret is ‘_pool0’</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'extract_id_from_snapshot_name()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.extract_id_from_snapshot_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="extract_id_from_snapshot_name" ids="cinder.volume.utils.extract_id_from_snapshot_name" module="cinder.volume.utils" names="cinder.volume.utils.extract_id_from_snapshot_name"><desc_name xml:space="preserve">extract_id_from_snapshot_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snap_name</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a snapshot’s ID from its name on the backend.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'extract_id_from_volume_name()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.extract_id_from_volume_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="extract_id_from_volume_name" ids="cinder.volume.utils.extract_id_from_volume_name" module="cinder.volume.utils" names="cinder.volume.utils.extract_id_from_volume_name"><desc_name xml:space="preserve">extract_id_from_volume_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vol_name</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'generate_password()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.generate_password',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="generate_password" ids="cinder.volume.utils.generate_password" module="cinder.volume.utils" names="cinder.volume.utils.generate_password"><desc_name xml:space="preserve">generate_password</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">length=16</desc_parameter><desc_parameter xml:space="preserve">symbolgroups=('23456789'</desc_parameter><desc_parameter xml:space="preserve">'ABCDEFGHJKLMNPQRSTUVWXYZ'</desc_parameter><desc_parameter xml:space="preserve">'abcdefghijkmnopqrstuvwxyz')</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Generate a random password from the supplied symbol groups.</paragraph>
                <paragraph>At least one symbol from each group will be included. Unpredictable
                    results if length is less than the number of symbol groups.</paragraph>
                <paragraph>Believed to be reasonably secure (with a reasonable password length!)</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'generate_username()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.generate_username',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="generate_username" ids="cinder.volume.utils.generate_username" module="cinder.volume.utils" names="cinder.volume.utils.generate_username"><desc_name xml:space="preserve">generate_username</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">length=20</desc_parameter><desc_parameter xml:space="preserve">symbolgroups=('23456789'</desc_parameter><desc_parameter xml:space="preserve">'ABCDEFGHJKLMNPQRSTUVWXYZ'</desc_parameter><desc_parameter xml:space="preserve">'abcdefghijkmnopqrstuvwxyz')</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_all_physical_volumes()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.get_all_physical_volumes',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_all_physical_volumes" ids="cinder.volume.utils.get_all_physical_volumes" module="cinder.volume.utils" names="cinder.volume.utils.get_all_physical_volumes"><desc_name xml:space="preserve">get_all_physical_volumes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vg_name=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_all_volume_groups()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.get_all_volume_groups',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_all_volume_groups" ids="cinder.volume.utils.get_all_volume_groups" module="cinder.volume.utils" names="cinder.volume.utils.get_all_volume_groups"><desc_name xml:space="preserve">get_all_volume_groups</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vg_name=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'group_get_by_id()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.group_get_by_id',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="group_get_by_id" ids="cinder.volume.utils.group_get_by_id" module="cinder.volume.utils" names="cinder.volume.utils.group_get_by_id"><desc_name xml:space="preserve">group_get_by_id</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">group_id</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'hosts_are_equivalent()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.hosts_are_equivalent',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="hosts_are_equivalent" ids="cinder.volume.utils.hosts_are_equivalent" module="cinder.volume.utils" names="cinder.volume.utils.hosts_are_equivalent"><desc_name xml:space="preserve">hosts_are_equivalent</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">host_1</desc_parameter><desc_parameter xml:space="preserve">host_2</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'is_group_a_cg_snapshot_type()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.is_group_a_cg_snapshot_type',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_group_a_cg_snapshot_type" ids="cinder.volume.utils.is_group_a_cg_snapshot_type" module="cinder.volume.utils" names="cinder.volume.utils.is_group_a_cg_snapshot_type"><desc_name xml:space="preserve">is_group_a_cg_snapshot_type</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">group_or_snap</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'is_group_a_type()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.is_group_a_type',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_group_a_type" ids="cinder.volume.utils.is_group_a_type" module="cinder.volume.utils" names="cinder.volume.utils.is_group_a_type"><desc_name xml:space="preserve">is_group_a_type</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">key</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'is_replicated_spec()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.is_replicated_spec',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_replicated_spec" ids="cinder.volume.utils.is_replicated_spec" module="cinder.volume.utils" names="cinder.volume.utils.is_replicated_spec"><desc_name xml:space="preserve">is_replicated_spec</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">extra_specs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'is_replicated_str()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.is_replicated_str',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_replicated_str" ids="cinder.volume.utils.is_replicated_str" module="cinder.volume.utils" names="cinder.volume.utils.is_replicated_str"><desc_name xml:space="preserve">is_replicated_str</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">str</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'matching_backend_name()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.matching_backend_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="matching_backend_name" ids="cinder.volume.utils.matching_backend_name" module="cinder.volume.utils" names="cinder.volume.utils.matching_backend_name"><desc_name xml:space="preserve">matching_backend_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">src_volume_type</desc_parameter><desc_parameter xml:space="preserve">volume_type</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'notify_about_backup_usage()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.notify_about_backup_usage',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="notify_about_backup_usage" ids="cinder.volume.utils.notify_about_backup_usage" module="cinder.volume.utils" names="cinder.volume.utils.notify_about_backup_usage"><desc_name xml:space="preserve">notify_about_backup_usage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">backup</desc_parameter><desc_parameter xml:space="preserve">event_suffix</desc_parameter><desc_parameter xml:space="preserve">extra_usage_info=None</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'notify_about_capacity_usage()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.notify_about_capacity_usage',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="notify_about_capacity_usage" ids="cinder.volume.utils.notify_about_capacity_usage" module="cinder.volume.utils" names="cinder.volume.utils.notify_about_capacity_usage"><desc_name xml:space="preserve">notify_about_capacity_usage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">capacity</desc_parameter><desc_parameter xml:space="preserve">suffix</desc_parameter><desc_parameter xml:space="preserve">extra_usage_info=None</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'notify_about_cgsnapshot_usage()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.notify_about_cgsnapshot_usage',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="notify_about_cgsnapshot_usage" ids="cinder.volume.utils.notify_about_cgsnapshot_usage" module="cinder.volume.utils" names="cinder.volume.utils.notify_about_cgsnapshot_usage"><desc_name xml:space="preserve">notify_about_cgsnapshot_usage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">cgsnapshot</desc_parameter><desc_parameter xml:space="preserve">event_suffix</desc_parameter><desc_parameter xml:space="preserve">extra_usage_info=None</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'notify_about_consistencygroup_usage()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.notify_about_consistencygroup_usage',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="notify_about_consistencygroup_usage" ids="cinder.volume.utils.notify_about_consistencygroup_usage" module="cinder.volume.utils" names="cinder.volume.utils.notify_about_consistencygroup_usage"><desc_name xml:space="preserve">notify_about_consistencygroup_usage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">event_suffix</desc_parameter><desc_parameter xml:space="preserve">extra_usage_info=None</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'notify_about_group_snapshot_usage()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.notify_about_group_snapshot_usage',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="notify_about_group_snapshot_usage" ids="cinder.volume.utils.notify_about_group_snapshot_usage" module="cinder.volume.utils" names="cinder.volume.utils.notify_about_group_snapshot_usage"><desc_name xml:space="preserve">notify_about_group_snapshot_usage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter><desc_parameter xml:space="preserve">event_suffix</desc_parameter><desc_parameter xml:space="preserve">extra_usage_info=None</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'notify_about_group_usage()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.notify_about_group_usage',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="notify_about_group_usage" ids="cinder.volume.utils.notify_about_group_usage" module="cinder.volume.utils" names="cinder.volume.utils.notify_about_group_usage"><desc_name xml:space="preserve">notify_about_group_usage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">event_suffix</desc_parameter><desc_parameter xml:space="preserve">extra_usage_info=None</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'notify_about_replication_error()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.notify_about_replication_error',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="notify_about_replication_error" ids="cinder.volume.utils.notify_about_replication_error" module="cinder.volume.utils" names="cinder.volume.utils.notify_about_replication_error"><desc_name xml:space="preserve">notify_about_replication_error</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">suffix</desc_parameter><desc_parameter xml:space="preserve">extra_error_info=None</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'notify_about_replication_usage()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.notify_about_replication_usage',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="notify_about_replication_usage" ids="cinder.volume.utils.notify_about_replication_usage" module="cinder.volume.utils" names="cinder.volume.utils.notify_about_replication_usage"><desc_name xml:space="preserve">notify_about_replication_usage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">suffix</desc_parameter><desc_parameter xml:space="preserve">extra_usage_info=None</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'notify_about_snapshot_usage()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.notify_about_snapshot_usage',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="notify_about_snapshot_usage" ids="cinder.volume.utils.notify_about_snapshot_usage" module="cinder.volume.utils" names="cinder.volume.utils.notify_about_snapshot_usage"><desc_name xml:space="preserve">notify_about_snapshot_usage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">event_suffix</desc_parameter><desc_parameter xml:space="preserve">extra_usage_info=None</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'notify_about_volume_usage()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.notify_about_volume_usage',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="notify_about_volume_usage" ids="cinder.volume.utils.notify_about_volume_usage" module="cinder.volume.utils" names="cinder.volume.utils.notify_about_volume_usage"><desc_name xml:space="preserve">notify_about_volume_usage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">event_suffix</desc_parameter><desc_parameter xml:space="preserve">extra_usage_info=None</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'null_safe_str()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.null_safe_str',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="null_safe_str" ids="cinder.volume.utils.null_safe_str" module="cinder.volume.utils" names="cinder.volume.utils.null_safe_str"><desc_name xml:space="preserve">null_safe_str</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">s</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'paginate_entries_list()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.paginate_entries_list',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="paginate_entries_list" ids="cinder.volume.utils.paginate_entries_list" module="cinder.volume.utils" names="cinder.volume.utils.paginate_entries_list"><desc_name xml:space="preserve">paginate_entries_list</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">entries</desc_parameter><desc_parameter xml:space="preserve">marker</desc_parameter><desc_parameter xml:space="preserve">limit</desc_parameter><desc_parameter xml:space="preserve">offset</desc_parameter><desc_parameter xml:space="preserve">sort_keys</desc_parameter><desc_parameter xml:space="preserve">sort_dirs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Paginate a list of entries.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">entries</literal_strong> – list of dictionaries</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Marker</field_name>
                        <field_body>
                            <paragraph>The last element previously returned</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Limit</field_name>
                        <field_body>
                            <paragraph>The maximum number of items to return</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Offset</field_name>
                        <field_body>
                            <paragraph>The number of items to skip from the marker or from the first
                                element.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Sort_keys</field_name>
                        <field_body>
                            <paragraph>A list of keys in the dictionaries to sort by</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Sort_dirs</field_name>
                        <field_body>
                            <paragraph>A list of sort directions, where each is either ‘asc’ or ‘dec’</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'read_proc_mounts()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.read_proc_mounts',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="read_proc_mounts" ids="cinder.volume.utils.read_proc_mounts" module="cinder.volume.utils" names="cinder.volume.utils.read_proc_mounts"><desc_name xml:space="preserve">read_proc_mounts</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Read the /proc/mounts file.</paragraph>
                <paragraph>It’s a dummy function but it eases the writing of unit tests as mocking
                    __builtin__open() for a specific file only is not trivial.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'supports_thin_provisioning()\ (in\ module\ cinder.volume.utils)',\ 'cinder.volume.utils.supports_thin_provisioning',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="supports_thin_provisioning" ids="cinder.volume.utils.supports_thin_provisioning" module="cinder.volume.utils" names="cinder.volume.utils.supports_thin_provisioning"><desc_name xml:space="preserve">supports_thin_provisioning</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </section>
</document>
