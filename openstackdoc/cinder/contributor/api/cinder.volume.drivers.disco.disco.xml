<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.disco.disco.rst">
    <section ids="module-cinder.volume.drivers.disco.disco the-cinder-volume-drivers-disco-disco-module" names="the\ cinder.volume.drivers.disco.disco\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.disco.disco" reftitle="cinder.volume.drivers.disco.disco"><literal classes="xref py py-mod">cinder.volume.drivers.disco.disco</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.disco.disco\ (module)',\ 'module-cinder.volume.drivers.disco.disco',\ '',\ None]"></index>
        <paragraph>DISCO Block device Driver.</paragraph>
        <index entries="['single',\ 'DISCOCheck\ (class\ in\ cinder.volume.drivers.disco.disco)',\ 'cinder.volume.drivers.disco.disco.DISCOCheck',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="DISCOCheck" ids="cinder.volume.drivers.disco.disco.DISCOCheck" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DISCOCheck"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">DISCOCheck</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">client</desc_parameter><desc_parameter xml:space="preserve">param</desc_parameter><desc_parameter xml:space="preserve">start_time</desc_parameter><desc_parameter xml:space="preserve">function</desc_parameter><desc_parameter xml:space="preserve">configuration</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Used to monitor DISCO operations.</paragraph>
                <index entries="['single',\ 'is_timeout()\ (DISCOCheck\ method)',\ 'cinder.volume.drivers.disco.disco.DISCOCheck.is_timeout',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DISCOCheck" first="False" fullname="DISCOCheck.is_timeout" ids="cinder.volume.drivers.disco.disco.DISCOCheck.is_timeout" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DISCOCheck.is_timeout"><desc_name xml:space="preserve">is_timeout</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">start_time</desc_parameter><desc_parameter xml:space="preserve">timeout</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check whether we reach the timeout.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DiscoDriver\ (class\ in\ cinder.volume.drivers.disco.disco)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="DiscoDriver" ids="cinder.volume.drivers.disco.disco.DiscoDriver" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">DiscoDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.driver.VolumeDriver" refuri="cinder.volume.driver#cinder.volume.driver.VolumeDriver"><literal classes="xref py py-class">cinder.volume.driver.VolumeDriver</literal></reference></paragraph>
                <paragraph>Execute commands related to DISCO Volumes.</paragraph>
                <literal_block classes="code text" xml:space="preserve">Version history:
    1.0 - disco volume driver using SOAP
    1.1 - disco volume driver using REST and only compatible
          with version greater than disco-1.6.4</literal_block>
                <index entries="['single',\ 'CI_WIKI_NAME\ (DiscoDriver\ attribute)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.disco.disco.DiscoDriver.CI_WIKI_NAME" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'ITRI_DISCO_CI'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (DiscoDriver\ attribute)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.VERSION" ids="cinder.volume.drivers.disco.disco.DiscoDriver.VERSION" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '1.1'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_setup_error()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.check_for_setup_error',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.check_for_setup_error" ids="cinder.volume.drivers.disco.disco.DiscoDriver.check_for_setup_error" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.check_for_setup_error"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Make sure we have the pre-requisites.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_image_to_volume()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.copy_image_to_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.copy_image_to_volume" ids="cinder.volume.drivers.disco.disco.DiscoDriver.copy_image_to_volume" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.copy_image_to_volume"><desc_name xml:space="preserve">copy_image_to_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter><desc_parameter xml:space="preserve">image_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Fetch the image from image_service and write it to the volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_volume_to_image()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.copy_volume_to_image',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.copy_volume_to_image" ids="cinder.volume.drivers.disco.disco.DiscoDriver.copy_volume_to_image" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.copy_volume_to_image"><desc_name xml:space="preserve">copy_volume_to_image</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter><desc_parameter xml:space="preserve">image_meta</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Copy a  volume to a new image.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.create_cloned_volume" ids="cinder.volume.drivers.disco.disco.DiscoDriver.create_cloned_volume" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a clone of the specified volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_export()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.create_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.create_export" ids="cinder.volume.drivers.disco.disco.DiscoDriver.create_export" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.create_export"><desc_name xml:space="preserve">create_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Export the volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.create_snapshot" ids="cinder.volume.drivers.disco.disco.DiscoDriver.create_snapshot" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a disco snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.create_volume" ids="cinder.volume.drivers.disco.disco.DiscoDriver.create_volume" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a disco volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.create_volume_from_snapshot" ids="cinder.volume.drivers.disco.disco.DiscoDriver.create_volume_from_snapshot" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a volume from a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.delete_snapshot" ids="cinder.volume.drivers.disco.disco.DiscoDriver.delete_snapshot" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete a disco snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.delete_volume" ids="cinder.volume.drivers.disco.disco.DiscoDriver.delete_volume" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.do_setup" ids="cinder.volume.drivers.disco.disco.DiscoDriver.do_setup" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create client for DISCO request manager.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ensure_export()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.ensure_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.ensure_export" ids="cinder.volume.drivers.disco.disco.DiscoDriver.ensure_export" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.ensure_export"><desc_name xml:space="preserve">ensure_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Ensure an export.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.extend_volume" ids="cinder.volume.drivers.disco.disco.DiscoDriver.extend_volume" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend an existing volume’s size.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.get_volume_stats" ids="cinder.volume.drivers.disco.disco.DiscoDriver.get_volume_stats" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get backend information.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.initialize_connection" ids="cinder.volume.drivers.disco.disco.DiscoDriver.initialize_connection" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Function called before attaching a volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'local_path()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.local_path',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.local_path" ids="cinder.volume.drivers.disco.disco.DiscoDriver.local_path" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.local_path"><desc_name xml:space="preserve">local_path</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the path to the DISCO volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.manage_existing" ids="cinder.volume.drivers.disco.disco.DiscoDriver.manage_existing" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Manage an existing volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_get_size()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.manage_existing_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.manage_existing_get_size" ids="cinder.volume.drivers.disco.disco.DiscoDriver.manage_existing_get_size" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.manage_existing_get_size"><desc_name xml:space="preserve">manage_existing_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return size of an existing volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove_export()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.remove_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.remove_export" ids="cinder.volume.drivers.disco.disco.DiscoDriver.remove_export" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.remove_export"><desc_name xml:space="preserve">remove_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Remove an export for a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.terminate_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.terminate_connection" ids="cinder.volume.drivers.disco.disco.DiscoDriver.terminate_connection" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.terminate_connection"><desc_name xml:space="preserve">terminate_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Function called after attaching a volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage()\ (DiscoDriver\ method)',\ 'cinder.volume.drivers.disco.disco.DiscoDriver.unmanage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DiscoDriver" first="False" fullname="DiscoDriver.unmanage" ids="cinder.volume.drivers.disco.disco.DiscoDriver.unmanage" module="cinder.volume.drivers.disco.disco" names="cinder.volume.drivers.disco.disco.DiscoDriver.unmanage"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Unmanage an existing volume.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
