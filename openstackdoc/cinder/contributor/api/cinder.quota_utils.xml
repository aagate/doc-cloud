<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.quota_utils.rst">
    <section ids="module-cinder.quota_utils the-cinder-quota-utils-module" names="the\ cinder.quota_utils\ module">
        <title>The <reference internal="True" refid="module-cinder.quota_utils" reftitle="cinder.quota_utils"><literal classes="xref py py-mod">cinder.quota_utils</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.quota_utils\ (module)',\ 'module-cinder.quota_utils',\ '',\ None]"></index>
        <index entries="['single',\ 'GenericProjectInfo\ (class\ in\ cinder.quota_utils)',\ 'cinder.quota_utils.GenericProjectInfo',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="GenericProjectInfo" ids="cinder.quota_utils.GenericProjectInfo" module="cinder.quota_utils" names="cinder.quota_utils.GenericProjectInfo"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">GenericProjectInfo</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">project_id</desc_parameter><desc_parameter xml:space="preserve">project_keystone_api_version</desc_parameter><desc_parameter xml:space="preserve">project_parent_id=None</desc_parameter><desc_parameter xml:space="preserve">project_subtree=None</desc_parameter><desc_parameter xml:space="preserve">project_parent_tree=None</desc_parameter><desc_parameter xml:space="preserve">is_admin_project=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Abstraction layer for Keystone V2 and V3 project objects</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_all_projects()\ (in\ module\ cinder.quota_utils)',\ 'cinder.quota_utils.get_all_projects',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_all_projects" ids="cinder.quota_utils.get_all_projects" module="cinder.quota_utils" names="cinder.quota_utils.get_all_projects"><desc_name xml:space="preserve">get_all_projects</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_all_root_project_ids()\ (in\ module\ cinder.quota_utils)',\ 'cinder.quota_utils.get_all_root_project_ids',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_all_root_project_ids" ids="cinder.quota_utils.get_all_root_project_ids" module="cinder.quota_utils" names="cinder.quota_utils.get_all_root_project_ids"><desc_name xml:space="preserve">get_all_root_project_ids</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_parent_project_id()\ (in\ module\ cinder.quota_utils)',\ 'cinder.quota_utils.get_parent_project_id',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_parent_project_id" ids="cinder.quota_utils.get_parent_project_id" module="cinder.quota_utils" names="cinder.quota_utils.get_parent_project_id"><desc_name xml:space="preserve">get_parent_project_id</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">project_id</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_project_hierarchy()\ (in\ module\ cinder.quota_utils)',\ 'cinder.quota_utils.get_project_hierarchy',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_project_hierarchy" ids="cinder.quota_utils.get_project_hierarchy" module="cinder.quota_utils" names="cinder.quota_utils.get_project_hierarchy"><desc_name xml:space="preserve">get_project_hierarchy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">project_id</desc_parameter><desc_parameter xml:space="preserve">subtree_as_ids=False</desc_parameter><desc_parameter xml:space="preserve">parents_as_ids=False</desc_parameter><desc_parameter xml:space="preserve">is_admin_project=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>A Helper method to get the project hierarchy.</paragraph>
                <paragraph>Along with hierarchical multitenancy in keystone API v3, projects can be
                    hierarchically organized. Therefore, we need to know the project
                    hierarchy, if any, in order to do nested quota operations properly.
                    If the domain is being used as the top most parent, it is filtered out from
                    the parent tree and parent_id.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_volume_type_reservation()\ (in\ module\ cinder.quota_utils)',\ 'cinder.quota_utils.get_volume_type_reservation',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_volume_type_reservation" ids="cinder.quota_utils.get_volume_type_reservation" module="cinder.quota_utils" names="cinder.quota_utils.get_volume_type_reservation"><desc_name xml:space="preserve">get_volume_type_reservation</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">type_id</desc_parameter><desc_parameter xml:space="preserve">reserve_vol_type_only=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'process_reserve_over_quota()\ (in\ module\ cinder.quota_utils)',\ 'cinder.quota_utils.process_reserve_over_quota',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="process_reserve_over_quota" ids="cinder.quota_utils.process_reserve_over_quota" module="cinder.quota_utils" names="cinder.quota_utils.process_reserve_over_quota"><desc_name xml:space="preserve">process_reserve_over_quota</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">over_quota_exception</desc_parameter><desc_parameter xml:space="preserve">resource</desc_parameter><desc_parameter xml:space="preserve">size=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Handle OverQuota exception.</paragraph>
                <paragraph>Analyze OverQuota exception, and raise new exception related to
                    resource type. If there are unexpected items in overs,
                    UnexpectedOverQuota is raised.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">context</literal_strong> – security context</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">over_quota_exception</literal_strong> – OverQuota exception</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">resource</literal_strong> – can be backups, snapshots, and volumes</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">size</literal_strong> – requested size in reservation</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'update_alloc_to_next_hard_limit()\ (in\ module\ cinder.quota_utils)',\ 'cinder.quota_utils.update_alloc_to_next_hard_limit',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="update_alloc_to_next_hard_limit" ids="cinder.quota_utils.update_alloc_to_next_hard_limit" module="cinder.quota_utils" names="cinder.quota_utils.update_alloc_to_next_hard_limit"><desc_name xml:space="preserve">update_alloc_to_next_hard_limit</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">resources</desc_parameter><desc_parameter xml:space="preserve">deltas</desc_parameter><desc_parameter xml:space="preserve">res</desc_parameter><desc_parameter xml:space="preserve">expire</desc_parameter><desc_parameter xml:space="preserve">project_id</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'validate_setup_for_nested_quota_use()\ (in\ module\ cinder.quota_utils)',\ 'cinder.quota_utils.validate_setup_for_nested_quota_use',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="validate_setup_for_nested_quota_use" ids="cinder.quota_utils.validate_setup_for_nested_quota_use" module="cinder.quota_utils" names="cinder.quota_utils.validate_setup_for_nested_quota_use"><desc_name xml:space="preserve">validate_setup_for_nested_quota_use</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">resources</desc_parameter><desc_parameter xml:space="preserve">nested_quota_driver</desc_parameter><desc_parameter xml:space="preserve">fix_allocated_quotas=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Validates the setup supports using nested quotas.</paragraph>
                <paragraph>Ensures that Keystone v3 or greater is being used, that the current
                    user is of the cloud admin role, and that the existing quotas make sense to
                    nest in the current hierarchy (e.g. that no child quota would be larger
                    than it’s parent).</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">resources</literal_strong> – the quota resources to validate</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">nested_quota_driver</literal_strong> – nested quota driver used to validate each tree</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">fix_allocated_quotas</literal_strong> – if True, parent projects “allocated” total
                                        will be calculated based on the existing child limits and the DB will
                                        be updated. If False, an exception is raised reporting any parent
                                        allocated quotas are currently incorrect.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
    </section>
</document>
