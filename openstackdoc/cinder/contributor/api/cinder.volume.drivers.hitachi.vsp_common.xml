<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.hitachi.vsp_common.rst">
    <section ids="module-cinder.volume.drivers.hitachi.vsp_common the-cinder-volume-drivers-hitachi-vsp-common-module" names="the\ cinder.volume.drivers.hitachi.vsp_common\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.hitachi.vsp_common" reftitle="cinder.volume.drivers.hitachi.vsp_common"><literal classes="xref py py-mod">cinder.volume.drivers.hitachi.vsp_common</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.hitachi.vsp_common\ (module)',\ 'module-cinder.volume.drivers.hitachi.vsp_common',\ '',\ None]"></index>
        <paragraph>Common module for Hitachi VSP Driver.</paragraph>
        <index entries="['single',\ 'VSPCommon\ (class\ in\ cinder.volume.drivers.hitachi.vsp_common)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="VSPCommon" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">VSPCommon</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">conf</desc_parameter><desc_parameter xml:space="preserve">driverinfo</desc_parameter><desc_parameter xml:space="preserve">db</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Common class for Hitachi VSP Driver.</paragraph>
                <index entries="['single',\ 'check_param()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.check_param',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.check_param" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.check_param" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.check_param"><desc_name xml:space="preserve">check_param</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check parameter values and consistency among them.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_param_iscsi()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.check_param_iscsi',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.check_param_iscsi" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.check_param_iscsi" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.check_param_iscsi"><desc_name xml:space="preserve">check_param_iscsi</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check iSCSI-related parameter values and consistency among them.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_ports_info()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.check_ports_info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.check_ports_info" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.check_ports_info" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.check_ports_info"><desc_name xml:space="preserve">check_ports_info</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check if available storage ports exist.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_vvol()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.check_vvol',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.check_vvol" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.check_vvol" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.check_vvol"><desc_name xml:space="preserve">check_vvol</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ldev</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return True if the specified LDEV is V-VOL, False otherwise.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'config_lock()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.config_lock',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.config_lock" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.config_lock" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.config_lock"><desc_name xml:space="preserve">config_lock</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Initialize lock resource names.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'connect_storage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.connect_storage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.connect_storage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.connect_storage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.connect_storage"><desc_name xml:space="preserve">connect_storage</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Prepare for using the storage.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_on_storage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.copy_on_storage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.copy_on_storage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.copy_on_storage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.copy_on_storage"><desc_name xml:space="preserve">copy_on_storage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pvol</desc_parameter><desc_parameter xml:space="preserve">size</desc_parameter><desc_parameter xml:space="preserve">metadata</desc_parameter><desc_parameter xml:space="preserve">sync</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a copy of the specified LDEV on the storage.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.create_cloned_volume" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_cloned_volume" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a clone of the specified volume and return its properties.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_ldev()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_ldev',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.create_ldev" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_ldev" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_ldev"><desc_name xml:space="preserve">create_ldev</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">size</desc_parameter><desc_parameter xml:space="preserve">is_vvol=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create an LDEV and return its LDEV number.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_ldev_on_storage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_ldev_on_storage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.create_ldev_on_storage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_ldev_on_storage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_ldev_on_storage"><desc_name xml:space="preserve">create_ldev_on_storage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ldev</desc_parameter><desc_parameter xml:space="preserve">size</desc_parameter><desc_parameter xml:space="preserve">is_vvol</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create an LDEV on the storage system.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_mapping_targets()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_mapping_targets',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.create_mapping_targets" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_mapping_targets" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_mapping_targets"><desc_name xml:space="preserve">create_mapping_targets</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">targets</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create server-storage connection for all specified storage ports.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_pair_on_storage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_pair_on_storage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.create_pair_on_storage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_pair_on_storage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_pair_on_storage"><desc_name xml:space="preserve">create_pair_on_storage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pvol</desc_parameter><desc_parameter xml:space="preserve">svol</desc_parameter><desc_parameter xml:space="preserve">is_thin</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a copy pair on the storage.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.create_snapshot" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_snapshot" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a snapshot from a volume and return its properties.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_target_to_storage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_target_to_storage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.create_target_to_storage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_target_to_storage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_target_to_storage"><desc_name xml:space="preserve">create_target_to_storage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">port</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">hba_ids</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a host group or an iSCSI target on the specified port.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.create_volume" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_volume" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a volume and return its properties.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.create_volume_from_snapshot" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_volume_from_snapshot" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a volume from a snapshot and return its properties.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_ldev_from_storage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_ldev_from_storage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.delete_ldev_from_storage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_ldev_from_storage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_ldev_from_storage"><desc_name xml:space="preserve">delete_ldev_from_storage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ldev</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete the specified LDEV from the storage.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_pair()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_pair',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.delete_pair" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_pair" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_pair"><desc_name xml:space="preserve">delete_pair</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ldev</desc_parameter><desc_parameter xml:space="preserve">all_split=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Disconnect all volume pairs to which the specified LDEV belongs.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_pair_based_on_pvol()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_pair_based_on_pvol',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.delete_pair_based_on_pvol" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_pair_based_on_pvol" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_pair_based_on_pvol"><desc_name xml:space="preserve">delete_pair_based_on_pvol</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pair_info</desc_parameter><desc_parameter xml:space="preserve">all_split</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Disconnect all volume pairs to which the specified P-VOL belongs.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_pair_based_on_svol()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_pair_based_on_svol',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.delete_pair_based_on_svol" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_pair_based_on_svol" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_pair_based_on_svol"><desc_name xml:space="preserve">delete_pair_based_on_svol</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pvol</desc_parameter><desc_parameter xml:space="preserve">svol_info</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Disconnect all volume pairs to which the specified S-VOL belongs.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_pair_from_storage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_pair_from_storage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.delete_pair_from_storage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_pair_from_storage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_pair_from_storage"><desc_name xml:space="preserve">delete_pair_from_storage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pvol</desc_parameter><desc_parameter xml:space="preserve">svol</desc_parameter><desc_parameter xml:space="preserve">is_thin</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Disconnect the volume pair that consists of the specified LDEVs.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.delete_snapshot" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_snapshot" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete the specified snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_target_from_storage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_target_from_storage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.delete_target_from_storage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_target_from_storage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_target_from_storage"><desc_name xml:space="preserve">delete_target_from_storage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">port</desc_parameter><desc_parameter xml:space="preserve">gid</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete the host group or the iSCSI target from the port.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.delete_volume" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_volume" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete the specified volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'discard_zero_page()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.discard_zero_page',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.discard_zero_page" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.discard_zero_page" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.discard_zero_page"><desc_name xml:space="preserve">discard_zero_page</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the volume’s no-data pages to the storage pool.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.do_setup" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.do_setup" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Prepare for the startup of the driver.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_ldev()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.extend_ldev',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.extend_ldev" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.extend_ldev" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.extend_ldev"><desc_name xml:space="preserve">extend_ldev</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ldev</desc_parameter><desc_parameter xml:space="preserve">old_size</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend the specified LDEV to the specified new size.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.extend_volume" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.extend_volume" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend the specified volume to the specified size.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_all_mapped_targets_from_storage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.find_all_mapped_targets_from_storage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.find_all_mapped_targets_from_storage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.find_all_mapped_targets_from_storage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.find_all_mapped_targets_from_storage"><desc_name xml:space="preserve">find_all_mapped_targets_from_storage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">targets</desc_parameter><desc_parameter xml:space="preserve">ldev</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Add all port-gids connected with the LDEV to the list.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_mapped_targets_from_storage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.find_mapped_targets_from_storage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.find_mapped_targets_from_storage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.find_mapped_targets_from_storage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.find_mapped_targets_from_storage"><desc_name xml:space="preserve">find_mapped_targets_from_storage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">targets</desc_parameter><desc_parameter xml:space="preserve">ldev</desc_parameter><desc_parameter xml:space="preserve">target_ports</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Find and store IDs of ports used for server-LDEV connection.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_targets_from_storage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.find_targets_from_storage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.find_targets_from_storage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.find_targets_from_storage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.find_targets_from_storage"><desc_name xml:space="preserve">find_targets_from_storage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">targets</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">target_ports</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Find mapped ports, memorize them and return unmapped port count.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_copy_method()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_copy_method',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_copy_method" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_copy_method" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_copy_method"><desc_name xml:space="preserve">get_copy_method</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">metadata</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return copy method(FULL or THIN).</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_hba_ids_from_connector()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_hba_ids_from_connector',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_hba_ids_from_connector" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_hba_ids_from_connector" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_hba_ids_from_connector"><desc_name xml:space="preserve">get_hba_ids_from_connector</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the HBA ID stored in the connector.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_ldev_size_in_gigabyte()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_ldev_size_in_gigabyte',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_ldev_size_in_gigabyte" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_ldev_size_in_gigabyte" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_ldev_size_in_gigabyte"><desc_name xml:space="preserve">get_ldev_size_in_gigabyte</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ldev</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the size[GB] of the specified LDEV.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_pair_info()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_pair_info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_pair_info" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_pair_info" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_pair_info"><desc_name xml:space="preserve">get_pair_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ldev</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return volume pair info(LDEV number, pair status and pair type).</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_pool_id()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_pool_id',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_pool_id" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_pool_id" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_pool_id"><desc_name xml:space="preserve">get_pool_id</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the storage pool ID as integer.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_pool_info()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_pool_info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_pool_info" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_pool_info" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_pool_info"><desc_name xml:space="preserve">get_pool_info</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the total and free capacity of the storage pool.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_properties()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_properties',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_properties" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_properties" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_properties"><desc_name xml:space="preserve">get_properties</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">targets</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">target_lun=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return server-LDEV connection info.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_properties_fc()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_properties_fc',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_properties_fc" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_properties_fc" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_properties_fc"><desc_name xml:space="preserve">get_properties_fc</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">targets</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return FC-specific server-LDEV connection info.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_properties_iscsi()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_properties_iscsi',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_properties_iscsi" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_properties_iscsi" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_properties_iscsi"><desc_name xml:space="preserve">get_properties_iscsi</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">targets</desc_parameter><desc_parameter xml:space="preserve">multipath</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return iSCSI-specific server-LDEV connection info.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_storage_cli_info()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_storage_cli_info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_storage_cli_info" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_storage_cli_info" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_storage_cli_info"><desc_name xml:space="preserve">get_storage_cli_info</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return a tuple of the storage CLI name and its version.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_target_ports()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_target_ports',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_target_ports" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_target_ports" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_target_ports"><desc_name xml:space="preserve">get_target_ports</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return a list of ports corresponding to the specified connector.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_unmap_targets_list()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_unmap_targets_list',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_unmap_targets_list" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_unmap_targets_list" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_unmap_targets_list"><desc_name xml:space="preserve">get_unmap_targets_list</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">target_list</desc_parameter><desc_parameter xml:space="preserve">mapped_list</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return a list of IDs of ports that need to be disconnected.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_unused_ldev()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_unused_ldev',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_unused_ldev" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_unused_ldev" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_unused_ldev"><desc_name xml:space="preserve">get_unused_ldev</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Find an unused LDEV and return its LDEV number.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.get_volume_stats" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_volume_stats" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return properties, capabilities and current states of the driver.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'init_cinder_hosts()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.init_cinder_hosts',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.init_cinder_hosts" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.init_cinder_hosts" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.init_cinder_hosts"><desc_name xml:space="preserve">init_cinder_hosts</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Initialize server-storage connection.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.initialize_connection" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.initialize_connection" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Initialize connection between the server and the volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.manage_existing" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.manage_existing" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return volume properties which Cinder needs to manage the volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_get_size()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.manage_existing_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.manage_existing_get_size" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.manage_existing_get_size" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.manage_existing_get_size"><desc_name xml:space="preserve">manage_existing_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the size[GB] of the specified volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'map_ldev()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.map_ldev',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.map_ldev" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.map_ldev" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.map_ldev"><desc_name xml:space="preserve">map_ldev</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">targets</desc_parameter><desc_parameter xml:space="preserve">ldev</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create the path between the server and the LDEV and return LUN.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'output_param_to_log()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.output_param_to_log',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.output_param_to_log" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.output_param_to_log" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.output_param_to_log"><desc_name xml:space="preserve">output_param_to_log</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Output configuration parameter values to the log file.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'run_and_verify_storage_cli()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.run_and_verify_storage_cli',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.run_and_verify_storage_cli" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.run_and_verify_storage_cli" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.run_and_verify_storage_cli"><desc_name xml:space="preserve">run_and_verify_storage_cli</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*cmd</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Run storage CLI and return the result or raise an exception.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'run_storage_cli()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.run_storage_cli',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.run_storage_cli" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.run_storage_cli" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.run_storage_cli"><desc_name xml:space="preserve">run_storage_cli</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*cmd</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Run storage CLI.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'set_hba_ids()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.set_hba_ids',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.set_hba_ids" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.set_hba_ids" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.set_hba_ids"><desc_name xml:space="preserve">set_hba_ids</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">port</desc_parameter><desc_parameter xml:space="preserve">gid</desc_parameter><desc_parameter xml:space="preserve">hba_ids</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Connect all specified HBAs with the specified port.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'set_target_mode()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.set_target_mode',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.set_target_mode" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.set_target_mode" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.set_target_mode"><desc_name xml:space="preserve">set_target_mode</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">port</desc_parameter><desc_parameter xml:space="preserve">gid</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Configure the target to meet the environment.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.terminate_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.terminate_connection" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.terminate_connection" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.terminate_connection"><desc_name xml:space="preserve">terminate_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Terminate connection between the server and the volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.unmanage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.unmanage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.unmanage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.unmanage"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Prepare the volume for removing it from Cinder management.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmap_ldev()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.unmap_ldev',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.unmap_ldev" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.unmap_ldev" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.unmap_ldev"><desc_name xml:space="preserve">unmap_ldev</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">targets</desc_parameter><desc_parameter xml:space="preserve">ldev</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete the LUN between the specified LDEV and port-gid.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmap_ldev_from_storage()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.unmap_ldev_from_storage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.unmap_ldev_from_storage" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.unmap_ldev_from_storage" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.unmap_ldev_from_storage"><desc_name xml:space="preserve">unmap_ldev_from_storage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ldev</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete the connection between the specified LDEV and servers.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'wait_full_copy_completion()\ (VSPCommon\ method)',\ 'cinder.volume.drivers.hitachi.vsp_common.VSPCommon.wait_full_copy_completion',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPCommon" first="False" fullname="VSPCommon.wait_full_copy_completion" ids="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.wait_full_copy_completion" module="cinder.volume.drivers.hitachi.vsp_common" names="cinder.volume.drivers.hitachi.vsp_common.VSPCommon.wait_full_copy_completion"><desc_name xml:space="preserve">wait_full_copy_completion</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pvol</desc_parameter><desc_parameter xml:space="preserve">svol</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Wait until FULL copy is completed.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
