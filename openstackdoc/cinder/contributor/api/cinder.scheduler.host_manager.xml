<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.scheduler.host_manager.rst">
    <section ids="module-cinder.scheduler.host_manager the-cinder-scheduler-host-manager-module" names="the\ cinder.scheduler.host_manager\ module">
        <title>The <reference internal="True" refid="module-cinder.scheduler.host_manager" reftitle="cinder.scheduler.host_manager"><literal classes="xref py py-mod">cinder.scheduler.host_manager</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.scheduler.host_manager\ (module)',\ 'module-cinder.scheduler.host_manager',\ '',\ None]"></index>
        <paragraph>Manage backends in the current zone.</paragraph>
        <index entries="['single',\ 'BackendState\ (class\ in\ cinder.scheduler.host_manager)',\ 'cinder.scheduler.host_manager.BackendState',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BackendState" ids="cinder.scheduler.host_manager.BackendState" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.BackendState"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">BackendState</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">cluster_name</desc_parameter><desc_parameter xml:space="preserve">capabilities=None</desc_parameter><desc_parameter xml:space="preserve">service=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Mutable and immutable information tracked for a volume backend.</paragraph>
                <index entries="['single',\ 'backend_id\ (BackendState\ attribute)',\ 'cinder.scheduler.host_manager.BackendState.backend_id',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackendState" first="False" fullname="BackendState.backend_id" ids="cinder.scheduler.host_manager.BackendState.backend_id" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.BackendState.backend_id"><desc_name xml:space="preserve">backend_id</desc_name></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'consume_from_volume()\ (BackendState\ method)',\ 'cinder.scheduler.host_manager.BackendState.consume_from_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackendState" first="False" fullname="BackendState.consume_from_volume" ids="cinder.scheduler.host_manager.BackendState.consume_from_volume" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.BackendState.consume_from_volume"><desc_name xml:space="preserve">consume_from_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Incrementally update host state from a volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_backend()\ (BackendState\ method)',\ 'cinder.scheduler.host_manager.BackendState.update_backend',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackendState" first="False" fullname="BackendState.update_backend" ids="cinder.scheduler.host_manager.BackendState.update_backend" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.BackendState.update_backend"><desc_name xml:space="preserve">update_backend</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">capability</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_capabilities()\ (BackendState\ method)',\ 'cinder.scheduler.host_manager.BackendState.update_capabilities',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackendState" first="False" fullname="BackendState.update_capabilities" ids="cinder.scheduler.host_manager.BackendState.update_capabilities" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.BackendState.update_capabilities"><desc_name xml:space="preserve">update_capabilities</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">capabilities=None</desc_parameter><desc_parameter xml:space="preserve">service=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_from_volume_capability()\ (BackendState\ method)',\ 'cinder.scheduler.host_manager.BackendState.update_from_volume_capability',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackendState" first="False" fullname="BackendState.update_from_volume_capability" ids="cinder.scheduler.host_manager.BackendState.update_from_volume_capability" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.BackendState.update_from_volume_capability"><desc_name xml:space="preserve">update_from_volume_capability</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">capability</desc_parameter><desc_parameter xml:space="preserve">service=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update information about a host from its volume_node info.</paragraph>
                        <paragraph>‘capability’ is the status info reported by volume backend, a typical
                            capability looks like this:</paragraph>
                        <literal_block highlight_args="{}" language="python" linenos="False" xml:space="preserve">{
 capability = {
     'volume_backend_name': 'Local iSCSI', #
     'vendor_name': 'OpenStack',           #  backend level
     'driver_version': '1.0',              #  mandatory/fixed
     'storage_protocol': 'iSCSI',          #  stats&amp;capabilities

     'active_volumes': 10,                 #
     'IOPS_provisioned': 30000,            #  optional custom
     'fancy_capability_1': 'eat',          #  stats &amp; capabilities
     'fancy_capability_2': 'drink',        #

     'pools': [
         {'pool_name': '1st pool',         #
          'total_capacity_gb': 500,        #  mandatory stats for
          'free_capacity_gb': 230,         #  pools
          'allocated_capacity_gb': 270,    #
          'QoS_support': 'False',          #
          'reserved_percentage': 0,        #

          'dying_disks': 100,              #
          'super_hero_1': 'spider-man',    #  optional custom
          'super_hero_2': 'flash',         #  stats &amp; capabilities
          'super_hero_3': 'neoncat'        #
         },
         {'pool_name': '2nd pool',
          'total_capacity_gb': 1024,
          'free_capacity_gb': 1024,
          'allocated_capacity_gb': 0,
          'QoS_support': 'False',
          'reserved_percentage': 0,

          'dying_disks': 200,
          'super_hero_1': 'superman',
          'super_hero_2': ' ',
          'super_hero_2': 'Hulk'
         }
     ]
 }
}</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_pools()\ (BackendState\ method)',\ 'cinder.scheduler.host_manager.BackendState.update_pools',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackendState" first="False" fullname="BackendState.update_pools" ids="cinder.scheduler.host_manager.BackendState.update_pools" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.BackendState.update_pools"><desc_name xml:space="preserve">update_pools</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">capability</desc_parameter><desc_parameter xml:space="preserve">service</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update storage pools information from backend reported info.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'HostManager\ (class\ in\ cinder.scheduler.host_manager)',\ 'cinder.scheduler.host_manager.HostManager',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="HostManager" ids="cinder.scheduler.host_manager.HostManager" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.HostManager"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">HostManager</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Base HostManager class.</paragraph>
                <index entries="['single',\ 'REQUIRED_KEYS\ (HostManager\ attribute)',\ 'cinder.scheduler.host_manager.HostManager.REQUIRED_KEYS',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HostManager" first="False" fullname="HostManager.REQUIRED_KEYS" ids="cinder.scheduler.host_manager.HostManager.REQUIRED_KEYS" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.HostManager.REQUIRED_KEYS"><desc_name xml:space="preserve">REQUIRED_KEYS</desc_name><desc_annotation xml:space="preserve"> = frozenset({'provisioned_capacity_gb', 'thick_provisioning_support', 'pool_name', 'reserved_percentage', 'allocated_capacity_gb', 'free_capacity_gb', 'total_capacity_gb', 'thin_provisioning_support', 'max_over_subscription_ratio'})</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'backend_state_cls\ (HostManager\ attribute)',\ 'cinder.scheduler.host_manager.HostManager.backend_state_cls',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HostManager" first="False" fullname="HostManager.backend_state_cls" ids="cinder.scheduler.host_manager.HostManager.backend_state_cls" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.HostManager.backend_state_cls"><desc_name xml:space="preserve">backend_state_cls</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>alias of <reference internal="True" refid="cinder.scheduler.host_manager.BackendState" reftitle="cinder.scheduler.host_manager.BackendState"><literal classes="xref py py-class">BackendState</literal></reference></paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_all_backend_states()\ (HostManager\ method)',\ 'cinder.scheduler.host_manager.HostManager.get_all_backend_states',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HostManager" first="False" fullname="HostManager.get_all_backend_states" ids="cinder.scheduler.host_manager.HostManager.get_all_backend_states" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.HostManager.get_all_backend_states"><desc_name xml:space="preserve">get_all_backend_states</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns a dict of all the backends the HostManager knows about.</paragraph>
                        <paragraph>Each of the consumable resources in BackendState are
                            populated with capabilities scheduler received from RPC.</paragraph>
                        <definition_list>
                            <definition_list_item>
                                <term>For example:</term>
                                <definition>
                                    <paragraph>{‘192.168.1.100’: BackendState(), …}</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_filtered_backends()\ (HostManager\ method)',\ 'cinder.scheduler.host_manager.HostManager.get_filtered_backends',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HostManager" first="False" fullname="HostManager.get_filtered_backends" ids="cinder.scheduler.host_manager.HostManager.get_filtered_backends" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.HostManager.get_filtered_backends"><desc_name xml:space="preserve">get_filtered_backends</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backends</desc_parameter><desc_parameter xml:space="preserve">filter_properties</desc_parameter><desc_parameter xml:space="preserve">filter_class_names=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Filter backends and return only ones passing all filters.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_pools()\ (HostManager\ method)',\ 'cinder.scheduler.host_manager.HostManager.get_pools',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HostManager" first="False" fullname="HostManager.get_pools" ids="cinder.scheduler.host_manager.HostManager.get_pools" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.HostManager.get_pools"><desc_name xml:space="preserve">get_pools</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">filters=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns a dict of all pools on all hosts HostManager knows about.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_usage_and_notify()\ (HostManager\ method)',\ 'cinder.scheduler.host_manager.HostManager.get_usage_and_notify',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HostManager" first="False" fullname="HostManager.get_usage_and_notify" ids="cinder.scheduler.host_manager.HostManager.get_usage_and_notify" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.HostManager.get_usage_and_notify"><desc_name xml:space="preserve">get_usage_and_notify</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">capa_new</desc_parameter><desc_parameter xml:space="preserve">updated_pools</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">timestamp</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_weighed_backends()\ (HostManager\ method)',\ 'cinder.scheduler.host_manager.HostManager.get_weighed_backends',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HostManager" first="False" fullname="HostManager.get_weighed_backends" ids="cinder.scheduler.host_manager.HostManager.get_weighed_backends" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.HostManager.get_weighed_backends"><desc_name xml:space="preserve">get_weighed_backends</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backends</desc_parameter><desc_parameter xml:space="preserve">weight_properties</desc_parameter><desc_parameter xml:space="preserve">weigher_class_names=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Weigh the backends.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'has_all_capabilities()\ (HostManager\ method)',\ 'cinder.scheduler.host_manager.HostManager.has_all_capabilities',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HostManager" first="False" fullname="HostManager.has_all_capabilities" ids="cinder.scheduler.host_manager.HostManager.has_all_capabilities" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.HostManager.has_all_capabilities"><desc_name xml:space="preserve">has_all_capabilities</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'notify_service_capabilities()\ (HostManager\ method)',\ 'cinder.scheduler.host_manager.HostManager.notify_service_capabilities',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HostManager" first="False" fullname="HostManager.notify_service_capabilities" ids="cinder.scheduler.host_manager.HostManager.notify_service_capabilities" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.HostManager.notify_service_capabilities"><desc_name xml:space="preserve">notify_service_capabilities</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">service_name</desc_parameter><desc_parameter xml:space="preserve">backend</desc_parameter><desc_parameter xml:space="preserve">capabilities</desc_parameter><desc_parameter xml:space="preserve">timestamp</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Notify the ceilometer with updated volume stats</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_service_capabilities()\ (HostManager\ method)',\ 'cinder.scheduler.host_manager.HostManager.update_service_capabilities',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HostManager" first="False" fullname="HostManager.update_service_capabilities" ids="cinder.scheduler.host_manager.HostManager.update_service_capabilities" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.HostManager.update_service_capabilities"><desc_name xml:space="preserve">update_service_capabilities</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">service_name</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">capabilities</desc_parameter><desc_parameter xml:space="preserve">cluster_name</desc_parameter><desc_parameter xml:space="preserve">timestamp</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update the per-service capabilities based on this notification.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'PoolState\ (class\ in\ cinder.scheduler.host_manager)',\ 'cinder.scheduler.host_manager.PoolState',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="PoolState" ids="cinder.scheduler.host_manager.PoolState" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.PoolState"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">PoolState</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">cluster_name</desc_parameter><desc_parameter xml:space="preserve">capabilities</desc_parameter><desc_parameter xml:space="preserve">pool_name</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.scheduler.host_manager.BackendState" reftitle="cinder.scheduler.host_manager.BackendState"><literal classes="xref py py-class">cinder.scheduler.host_manager.BackendState</literal></reference></paragraph>
                <index entries="['single',\ 'update_from_volume_capability()\ (PoolState\ method)',\ 'cinder.scheduler.host_manager.PoolState.update_from_volume_capability',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PoolState" first="False" fullname="PoolState.update_from_volume_capability" ids="cinder.scheduler.host_manager.PoolState.update_from_volume_capability" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.PoolState.update_from_volume_capability"><desc_name xml:space="preserve">update_from_volume_capability</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">capability</desc_parameter><desc_parameter xml:space="preserve">service=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update information about a pool from its volume_node info.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_pools()\ (PoolState\ method)',\ 'cinder.scheduler.host_manager.PoolState.update_pools',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PoolState" first="False" fullname="PoolState.update_pools" ids="cinder.scheduler.host_manager.PoolState.update_pools" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.PoolState.update_pools"><desc_name xml:space="preserve">update_pools</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">capability</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ReadOnlyDict\ (class\ in\ cinder.scheduler.host_manager)',\ 'cinder.scheduler.host_manager.ReadOnlyDict',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ReadOnlyDict" ids="cinder.scheduler.host_manager.ReadOnlyDict" module="cinder.scheduler.host_manager" names="cinder.scheduler.host_manager.ReadOnlyDict"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ReadOnlyDict</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">source=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">collections.abc.Mapping</literal></paragraph>
                <paragraph>A read-only dict.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
