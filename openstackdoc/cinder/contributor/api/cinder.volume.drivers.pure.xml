<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.pure.rst">
    <section ids="module-cinder.volume.drivers.pure the-cinder-volume-drivers-pure-module" names="the\ cinder.volume.drivers.pure\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.pure" reftitle="cinder.volume.drivers.pure"><literal classes="xref py py-mod">cinder.volume.drivers.pure</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.pure\ (module)',\ 'module-cinder.volume.drivers.pure',\ '',\ None]"></index>
        <paragraph>Volume driver for Pure Storage FlashArray storage system.</paragraph>
        <paragraph>This driver requires Purity version 4.0.0 or later.</paragraph>
        <index entries="['single',\ 'PureBaseVolumeDriver\ (class\ in\ cinder.volume.drivers.pure)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="PureBaseVolumeDriver" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">PureBaseVolumeDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.drivers.san.san.SanDriver" refuri="cinder.volume.drivers.san.san#cinder.volume.drivers.san.san.SanDriver"><literal classes="xref py py-class">cinder.volume.drivers.san.san.SanDriver</literal></reference></paragraph>
                <paragraph>Performs volume management on Pure Storage FlashArray.</paragraph>
                <index entries="['single',\ 'CI_WIKI_NAME\ (PureBaseVolumeDriver\ attribute)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.CI_WIKI_NAME" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'Pure_Storage_CI'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'SUPPORTED_REST_API_VERSIONS\ (PureBaseVolumeDriver\ attribute)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.SUPPORTED_REST_API_VERSIONS',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.SUPPORTED_REST_API_VERSIONS" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.SUPPORTED_REST_API_VERSIONS" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.SUPPORTED_REST_API_VERSIONS"><desc_name xml:space="preserve">SUPPORTED_REST_API_VERSIONS</desc_name><desc_annotation xml:space="preserve"> = ['1.2', '1.3', '1.4', '1.5']</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_setup_error()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.check_for_setup_error',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.check_for_setup_error" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.check_for_setup_error" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.check_for_setup_error"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cgsnapshot()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.create_cgsnapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.create_cgsnapshot" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_cgsnapshot" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_cgsnapshot"><desc_name xml:space="preserve">create_cgsnapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">cgsnapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a cgsnapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.create_cloned_volume" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_cloned_volume" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a clone of the specified volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_consistencygroup()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.create_consistencygroup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.create_consistencygroup" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_consistencygroup" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_consistencygroup"><desc_name xml:space="preserve">create_consistencygroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a consistencygroup.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_consistencygroup_from_src()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.create_consistencygroup_from_src',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.create_consistencygroup_from_src" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_consistencygroup_from_src" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_consistencygroup_from_src"><desc_name xml:space="preserve">create_consistencygroup_from_src</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter><desc_parameter xml:space="preserve">cgsnapshot=None</desc_parameter><desc_parameter xml:space="preserve">snapshots=None</desc_parameter><desc_parameter xml:space="preserve">source_cg=None</desc_parameter><desc_parameter xml:space="preserve">source_vols=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_export()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.create_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.create_export" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_export" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_export"><desc_name xml:space="preserve">create_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.create_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.create_group" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_group" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_group"><desc_name xml:space="preserve">create_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> – the context of the caller.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group</literal_strong> – the Group object of the group to be created.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group_from_src()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.create_group_from_src',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.create_group_from_src" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_group_from_src" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_group_from_src"><desc_name xml:space="preserve">create_group_from_src</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter><desc_parameter xml:space="preserve">group_snapshot=None</desc_parameter><desc_parameter xml:space="preserve">snapshots=None</desc_parameter><desc_parameter xml:space="preserve">source_group=None</desc_parameter><desc_parameter xml:space="preserve">source_vols=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group from source.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> – the context of the caller.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group</literal_strong> – the Group object to be created.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volumes</literal_strong> – a list of Volume objects in the group.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group_snapshot</literal_strong> – the GroupSnapshot object as source.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">snapshots</literal_strong> – a list of snapshot objects in group_snapshot.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">source_group</literal_strong> – the Group object as source.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">source_vols</literal_strong> – a list of volume objects in the source_group.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update, volumes_model_update</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group_snapshot()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.create_group_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.create_group_snapshot" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_group_snapshot" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_group_snapshot"><desc_name xml:space="preserve">create_group_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group_snapshot.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> – the context of the caller.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group_snapshot</literal_strong> – the GroupSnapshot object to be created.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">snapshots</literal_strong> – a list of Snapshot objects in the group_snapshot.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update, snapshots_model_update</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.create_snapshot" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_snapshot" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.create_volume" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_volume" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.create_volume_from_snapshot" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_volume_from_snapshot" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a volume from a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_cgsnapshot()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_cgsnapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.delete_cgsnapshot" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_cgsnapshot" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_cgsnapshot"><desc_name xml:space="preserve">delete_cgsnapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">cgsnapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a cgsnapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_consistencygroup()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_consistencygroup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.delete_consistencygroup" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_consistencygroup" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_consistencygroup"><desc_name xml:space="preserve">delete_consistencygroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a consistency group.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_group()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.delete_group" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_group" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_group"><desc_name xml:space="preserve">delete_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a group.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> – the context of the caller.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group</literal_strong> – the Group object of the group to be deleted.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volumes</literal_strong> – a list of Volume objects in the group.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update, volumes_model_update</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_group_snapshot()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_group_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.delete_group_snapshot" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_group_snapshot" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_group_snapshot"><desc_name xml:space="preserve">delete_group_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a group_snapshot.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> – the context of the caller.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group_snapshot</literal_strong> – the GroupSnapshot object to be deleted.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">snapshots</literal_strong> – a list of snapshot objects in the group_snapshot.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update, snapshots_model_update</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.delete_snapshot" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_snapshot" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.delete_volume" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_volume" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Disconnect all hosts and delete the volume</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.do_setup" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.do_setup" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Performs driver initialization steps that could raise exceptions.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup_replication()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.do_setup_replication',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.do_setup_replication" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.do_setup_replication" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.do_setup_replication"><desc_name xml:space="preserve">do_setup_replication</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ensure_export()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.ensure_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.ensure_export" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.ensure_export" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.ensure_export"><desc_name xml:space="preserve">ensure_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.extend_volume" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.extend_volume" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend volume to new_size.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'failover_host()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.failover_host',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.failover_host" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.failover_host" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.failover_host"><desc_name xml:space="preserve">failover_host</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter><desc_parameter xml:space="preserve">secondary_id=None</desc_parameter><desc_parameter xml:space="preserve">groups=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Failover backend to a secondary array</paragraph>
                        <paragraph>This action will not affect the original volumes in any
                            way and it will stay as is. If a subsequent failover is performed we
                            will simply overwrite the original (now unmanaged) volumes.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_manageable_snapshots()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.get_manageable_snapshots',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.get_manageable_snapshots" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.get_manageable_snapshots" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.get_manageable_snapshots"><desc_name xml:space="preserve">get_manageable_snapshots</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cinder_snapshots</desc_parameter><desc_parameter xml:space="preserve">marker</desc_parameter><desc_parameter xml:space="preserve">limit</desc_parameter><desc_parameter xml:space="preserve">offset</desc_parameter><desc_parameter xml:space="preserve">sort_keys</desc_parameter><desc_parameter xml:space="preserve">sort_dirs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>List snapshots on the backend available for management by Cinder.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_manageable_volumes()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.get_manageable_volumes',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.get_manageable_volumes" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.get_manageable_volumes" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.get_manageable_volumes"><desc_name xml:space="preserve">get_manageable_volumes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cinder_volumes</desc_parameter><desc_parameter xml:space="preserve">marker</desc_parameter><desc_parameter xml:space="preserve">limit</desc_parameter><desc_parameter xml:space="preserve">offset</desc_parameter><desc_parameter xml:space="preserve">sort_keys</desc_parameter><desc_parameter xml:space="preserve">sort_dirs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>List volumes on the backend available for management by Cinder.</paragraph>
                        <paragraph>Rule out volumes that are attached to a Purity host or that
                            are already in the list of cinder_volumes. We return references
                            of the volume names for any others.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.get_volume_stats" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.get_volume_stats" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the current state of the volume service.</paragraph>
                        <paragraph>If ‘refresh’ is True, run the update first.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.initialize_connection" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.initialize_connection" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Connect the volume to the specified initiator in Purity.</paragraph>
                        <paragraph>This implementation is specific to the host type (iSCSI, FC, etc).</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.manage_existing" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.manage_existing" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Brings an existing backend storage object under Cinder management.</paragraph>
                        <paragraph>We expect a volume name in the existing_ref that matches one in Purity.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_get_size()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.manage_existing_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.manage_existing_get_size" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.manage_existing_get_size" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.manage_existing_get_size"><desc_name xml:space="preserve">manage_existing_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return size of volume to be managed by manage_existing.</paragraph>
                        <paragraph>We expect a volume name in the existing_ref that matches one in Purity.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_snapshot()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.manage_existing_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.manage_existing_snapshot" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.manage_existing_snapshot" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.manage_existing_snapshot"><desc_name xml:space="preserve">manage_existing_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Brings an existing backend storage object under Cinder management.</paragraph>
                        <paragraph>We expect a snapshot name in the existing_ref that matches one in
                            Purity.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_snapshot_get_size()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.manage_existing_snapshot_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.manage_existing_snapshot_get_size" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.manage_existing_snapshot_get_size" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.manage_existing_snapshot_get_size"><desc_name xml:space="preserve">manage_existing_snapshot_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return size of snapshot to be managed by manage_existing.</paragraph>
                        <paragraph>We expect a snapshot name in the existing_ref that matches one in
                            Purity.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'parse_replication_configs()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.parse_replication_configs',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.parse_replication_configs" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.parse_replication_configs" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.parse_replication_configs"><desc_name xml:space="preserve">parse_replication_configs</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'retype()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.retype',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.retype" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.retype" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.retype"><desc_name xml:space="preserve">retype</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_type</desc_parameter><desc_parameter xml:space="preserve">diff</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Retype from one volume type to another on the same backend.</paragraph>
                        <paragraph>For a Pure Array there is currently no differentiation between types
                            of volumes other than some being part of a protection group to be
                            replicated.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.terminate_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.terminate_connection" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.terminate_connection" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.terminate_connection"><desc_name xml:space="preserve">terminate_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Terminate connection.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.unmanage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.unmanage" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.unmanage" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.unmanage"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Removes the specified volume from Cinder management.</paragraph>
                        <paragraph>Does not delete the underlying backend storage object.</paragraph>
                        <paragraph>The volume will be renamed with “-unmanaged” as a suffix</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage_snapshot()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.unmanage_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.unmanage_snapshot" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.unmanage_snapshot" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.unmanage_snapshot"><desc_name xml:space="preserve">unmanage_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Removes the specified snapshot from Cinder management.</paragraph>
                        <paragraph>Does not delete the underlying backend storage object.</paragraph>
                        <paragraph>We expect a snapshot name in the existing_ref that matches one in
                            Purity.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_consistencygroup()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.update_consistencygroup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.update_consistencygroup" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.update_consistencygroup" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.update_consistencygroup"><desc_name xml:space="preserve">update_consistencygroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">add_volumes=None</desc_parameter><desc_parameter xml:space="preserve">remove_volumes=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_group()\ (PureBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.pure.PureBaseVolumeDriver.update_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureBaseVolumeDriver" first="False" fullname="PureBaseVolumeDriver.update_group" ids="cinder.volume.drivers.pure.PureBaseVolumeDriver.update_group" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureBaseVolumeDriver.update_group"><desc_name xml:space="preserve">update_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">add_volumes=None</desc_parameter><desc_parameter xml:space="preserve">remove_volumes=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Updates a group.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> – the context of the caller.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group</literal_strong> – the Group object of the group to be updated.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">add_volumes</literal_strong> – a list of Volume objects to be added.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">remove_volumes</literal_strong> – a list of Volume objects to be removed.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update, add_volumes_update, remove_volumes_update</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'PureFCDriver\ (class\ in\ cinder.volume.drivers.pure)',\ 'cinder.volume.drivers.pure.PureFCDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="PureFCDriver" ids="cinder.volume.drivers.pure.PureFCDriver" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureFCDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">PureFCDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.volume.drivers.pure.PureBaseVolumeDriver" reftitle="cinder.volume.drivers.pure.PureBaseVolumeDriver"><literal classes="xref py py-class">cinder.volume.drivers.pure.PureBaseVolumeDriver</literal></reference>, <reference internal="True" reftitle="cinder.volume.driver.FibreChannelDriver" refuri="cinder.volume.driver#cinder.volume.driver.FibreChannelDriver"><literal classes="xref py py-class">cinder.volume.driver.FibreChannelDriver</literal></reference></paragraph>
                <paragraph>OpenStack Volume Driver to support Pure Storage FlashArray.</paragraph>
                <paragraph>This version of the driver enables the use of Fibre Channel for
                    the underlying storage connectivity with the FlashArray. It fully
                    supports the Cinder Fibre Channel Zone Manager.</paragraph>
                <index entries="['single',\ 'VERSION\ (PureFCDriver\ attribute)',\ 'cinder.volume.drivers.pure.PureFCDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PureFCDriver" first="False" fullname="PureFCDriver.VERSION" ids="cinder.volume.drivers.pure.PureFCDriver.VERSION" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureFCDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '5.0.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (PureFCDriver\ method)',\ 'cinder.volume.drivers.pure.PureFCDriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureFCDriver" first="False" fullname="PureFCDriver.initialize_connection" ids="cinder.volume.drivers.pure.PureFCDriver.initialize_connection" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureFCDriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection()\ (PureFCDriver\ method)',\ 'cinder.volume.drivers.pure.PureFCDriver.terminate_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureFCDriver" first="False" fullname="PureFCDriver.terminate_connection" ids="cinder.volume.drivers.pure.PureFCDriver.terminate_connection" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureFCDriver.terminate_connection"><desc_name xml:space="preserve">terminate_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'PureISCSIDriver\ (class\ in\ cinder.volume.drivers.pure)',\ 'cinder.volume.drivers.pure.PureISCSIDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="PureISCSIDriver" ids="cinder.volume.drivers.pure.PureISCSIDriver" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureISCSIDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">PureISCSIDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.volume.drivers.pure.PureBaseVolumeDriver" reftitle="cinder.volume.drivers.pure.PureBaseVolumeDriver"><literal classes="xref py py-class">cinder.volume.drivers.pure.PureBaseVolumeDriver</literal></reference>, <reference internal="True" reftitle="cinder.volume.drivers.san.san.SanISCSIDriver" refuri="cinder.volume.drivers.san.san#cinder.volume.drivers.san.san.SanISCSIDriver"><literal classes="xref py py-class">cinder.volume.drivers.san.san.SanISCSIDriver</literal></reference></paragraph>
                <paragraph>OpenStack Volume Driver to support Pure Storage FlashArray.</paragraph>
                <paragraph>This version of the driver enables the use of iSCSI for
                    the underlying storage connectivity with the FlashArray.</paragraph>
                <index entries="['single',\ 'VERSION\ (PureISCSIDriver\ attribute)',\ 'cinder.volume.drivers.pure.PureISCSIDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PureISCSIDriver" first="False" fullname="PureISCSIDriver.VERSION" ids="cinder.volume.drivers.pure.PureISCSIDriver.VERSION" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureISCSIDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '7.0.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (PureISCSIDriver\ method)',\ 'cinder.volume.drivers.pure.PureISCSIDriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PureISCSIDriver" first="False" fullname="PureISCSIDriver.initialize_connection" ids="cinder.volume.drivers.pure.PureISCSIDriver.initialize_connection" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.PureISCSIDriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Allow connection to connector and return connection info.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'pure_driver_debug_trace()\ (in\ module\ cinder.volume.drivers.pure)',\ 'cinder.volume.drivers.pure.pure_driver_debug_trace',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="pure_driver_debug_trace" ids="cinder.volume.drivers.pure.pure_driver_debug_trace" module="cinder.volume.drivers.pure" names="cinder.volume.drivers.pure.pure_driver_debug_trace"><desc_name xml:space="preserve">pure_driver_debug_trace</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Log the method entrance and exit including active backend name.</paragraph>
                <paragraph>This should only be used on VolumeDriver class methods. It depends on
                    having a ‘self’ argument that is a PureBaseVolumeDriver.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
