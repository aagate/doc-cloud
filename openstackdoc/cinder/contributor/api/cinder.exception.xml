<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.exception.rst">
    <section ids="module-cinder.exception the-cinder-exception-module" names="the\ cinder.exception\ module">
        <title>The <reference internal="True" refid="module-cinder.exception" reftitle="cinder.exception"><literal classes="xref py py-mod">cinder.exception</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.exception\ (module)',\ 'module-cinder.exception',\ '',\ None]"></index>
        <paragraph>Cinder base exception handling.</paragraph>
        <paragraph>Includes decorator for re-raising Cinder-type exceptions.</paragraph>
        <paragraph>SHOULD include dedicated exception logging.</paragraph>
        <index entries="['single',\ 'APIException',\ 'cinder.exception.APIException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="APIException" ids="cinder.exception.APIException" module="cinder.exception" names="cinder.exception.APIException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">APIException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (APIException\ attribute)',\ 'cinder.exception.APIException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="APIException" first="False" fullname="APIException.message" ids="cinder.exception.APIException.message" module="cinder.exception" names="cinder.exception.APIException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Error while requesting %(service)s API.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'APITimeout',\ 'cinder.exception.APITimeout',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="APITimeout" ids="cinder.exception.APITimeout" module="cinder.exception" names="cinder.exception.APITimeout"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">APITimeout</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.APIException" reftitle="cinder.exception.APIException"><literal classes="xref py py-class">cinder.exception.APIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (APITimeout\ attribute)',\ 'cinder.exception.APITimeout.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="APITimeout" first="False" fullname="APITimeout.message" ids="cinder.exception.APITimeout.message" module="cinder.exception" names="cinder.exception.APITimeout.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Timeout while requesting %(service)s API.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'AdminRequired',\ 'cinder.exception.AdminRequired',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="AdminRequired" ids="cinder.exception.AdminRequired" module="cinder.exception" names="cinder.exception.AdminRequired"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">AdminRequired</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotAuthorized" reftitle="cinder.exception.NotAuthorized"><literal classes="xref py py-class">cinder.exception.NotAuthorized</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (AdminRequired\ attribute)',\ 'cinder.exception.AdminRequired.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AdminRequired" first="False" fullname="AdminRequired.message" ids="cinder.exception.AdminRequired.message" module="cinder.exception" names="cinder.exception.AdminRequired.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'User does not have admin privileges'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'AttachmentSpecsNotFound',\ 'cinder.exception.AttachmentSpecsNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="AttachmentSpecsNotFound" ids="cinder.exception.AttachmentSpecsNotFound" module="cinder.exception" names="cinder.exception.AttachmentSpecsNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">AttachmentSpecsNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (AttachmentSpecsNotFound\ attribute)',\ 'cinder.exception.AttachmentSpecsNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AttachmentSpecsNotFound" first="False" fullname="AttachmentSpecsNotFound.message" ids="cinder.exception.AttachmentSpecsNotFound.message" module="cinder.exception" names="cinder.exception.AttachmentSpecsNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Attachment %(attachment_id)s has no key %(specs_key)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BackupDriverException',\ 'cinder.exception.BackupDriverException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BackupDriverException" ids="cinder.exception.BackupDriverException" module="cinder.exception" names="cinder.exception.BackupDriverException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BackupDriverException\ attribute)',\ 'cinder.exception.BackupDriverException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupDriverException" first="False" fullname="BackupDriverException.message" ids="cinder.exception.BackupDriverException.message" module="cinder.exception" names="cinder.exception.BackupDriverException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backup driver reported an error: %(message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BackupFailedToGetVolumeBackend',\ 'cinder.exception.BackupFailedToGetVolumeBackend',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BackupFailedToGetVolumeBackend" ids="cinder.exception.BackupFailedToGetVolumeBackend" module="cinder.exception" names="cinder.exception.BackupFailedToGetVolumeBackend"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupFailedToGetVolumeBackend</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BackupFailedToGetVolumeBackend\ attribute)',\ 'cinder.exception.BackupFailedToGetVolumeBackend.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupFailedToGetVolumeBackend" first="False" fullname="BackupFailedToGetVolumeBackend.message" ids="cinder.exception.BackupFailedToGetVolumeBackend.message" module="cinder.exception" names="cinder.exception.BackupFailedToGetVolumeBackend.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to identify volume backend.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BackupInvalidCephArgs',\ 'cinder.exception.BackupInvalidCephArgs',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BackupInvalidCephArgs" ids="cinder.exception.BackupInvalidCephArgs" module="cinder.exception" names="cinder.exception.BackupInvalidCephArgs"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupInvalidCephArgs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.BackupDriverException" reftitle="cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BackupInvalidCephArgs\ attribute)',\ 'cinder.exception.BackupInvalidCephArgs.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupInvalidCephArgs" first="False" fullname="BackupInvalidCephArgs.message" ids="cinder.exception.BackupInvalidCephArgs.message" module="cinder.exception" names="cinder.exception.BackupInvalidCephArgs.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid Ceph args provided for backup rbd operation'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BackupLimitExceeded',\ 'cinder.exception.BackupLimitExceeded',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BackupLimitExceeded" ids="cinder.exception.BackupLimitExceeded" module="cinder.exception" names="cinder.exception.BackupLimitExceeded"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupLimitExceeded</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaError" reftitle="cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BackupLimitExceeded\ attribute)',\ 'cinder.exception.BackupLimitExceeded.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupLimitExceeded" first="False" fullname="BackupLimitExceeded.message" ids="cinder.exception.BackupLimitExceeded.message" module="cinder.exception" names="cinder.exception.BackupLimitExceeded.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Maximum number of backups allowed (%(allowed)d) exceeded'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BackupMetadataNotFound',\ 'cinder.exception.BackupMetadataNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BackupMetadataNotFound" ids="cinder.exception.BackupMetadataNotFound" module="cinder.exception" names="cinder.exception.BackupMetadataNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupMetadataNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BackupMetadataNotFound\ attribute)',\ 'cinder.exception.BackupMetadataNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupMetadataNotFound" first="False" fullname="BackupMetadataNotFound.message" ids="cinder.exception.BackupMetadataNotFound.message" module="cinder.exception" names="cinder.exception.BackupMetadataNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backup %(backup_id)s has no metadata with key %(metadata_key)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BackupMetadataUnsupportedVersion',\ 'cinder.exception.BackupMetadataUnsupportedVersion',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BackupMetadataUnsupportedVersion" ids="cinder.exception.BackupMetadataUnsupportedVersion" module="cinder.exception" names="cinder.exception.BackupMetadataUnsupportedVersion"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupMetadataUnsupportedVersion</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.BackupDriverException" reftitle="cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BackupMetadataUnsupportedVersion\ attribute)',\ 'cinder.exception.BackupMetadataUnsupportedVersion.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupMetadataUnsupportedVersion" first="False" fullname="BackupMetadataUnsupportedVersion.message" ids="cinder.exception.BackupMetadataUnsupportedVersion.message" module="cinder.exception" names="cinder.exception.BackupMetadataUnsupportedVersion.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unsupported backup metadata version requested'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BackupNotFound',\ 'cinder.exception.BackupNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BackupNotFound" ids="cinder.exception.BackupNotFound" module="cinder.exception" names="cinder.exception.BackupNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BackupNotFound\ attribute)',\ 'cinder.exception.BackupNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupNotFound" first="False" fullname="BackupNotFound.message" ids="cinder.exception.BackupNotFound.message" module="cinder.exception" names="cinder.exception.BackupNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backup %(backup_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BackupOperationError',\ 'cinder.exception.BackupOperationError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BackupOperationError" ids="cinder.exception.BackupOperationError" module="cinder.exception" names="cinder.exception.BackupOperationError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupOperationError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BackupOperationError\ attribute)',\ 'cinder.exception.BackupOperationError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupOperationError" first="False" fullname="BackupOperationError.message" ids="cinder.exception.BackupOperationError.message" module="cinder.exception" names="cinder.exception.BackupOperationError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'An error has occurred during backup operation'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BackupRBDOperationFailed',\ 'cinder.exception.BackupRBDOperationFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BackupRBDOperationFailed" ids="cinder.exception.BackupRBDOperationFailed" module="cinder.exception" names="cinder.exception.BackupRBDOperationFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupRBDOperationFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.BackupDriverException" reftitle="cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BackupRBDOperationFailed\ attribute)',\ 'cinder.exception.BackupRBDOperationFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupRBDOperationFailed" first="False" fullname="BackupRBDOperationFailed.message" ids="cinder.exception.BackupRBDOperationFailed.message" module="cinder.exception" names="cinder.exception.BackupRBDOperationFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backup RBD operation failed'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BackupVerifyUnsupportedDriver',\ 'cinder.exception.BackupVerifyUnsupportedDriver',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BackupVerifyUnsupportedDriver" ids="cinder.exception.BackupVerifyUnsupportedDriver" module="cinder.exception" names="cinder.exception.BackupVerifyUnsupportedDriver"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupVerifyUnsupportedDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.BackupDriverException" reftitle="cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BackupVerifyUnsupportedDriver\ attribute)',\ 'cinder.exception.BackupVerifyUnsupportedDriver.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupVerifyUnsupportedDriver" first="False" fullname="BackupVerifyUnsupportedDriver.message" ids="cinder.exception.BackupVerifyUnsupportedDriver.message" module="cinder.exception" names="cinder.exception.BackupVerifyUnsupportedDriver.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unsupported backup verify driver'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BadHTTPResponseStatus',\ 'cinder.exception.BadHTTPResponseStatus',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BadHTTPResponseStatus" ids="cinder.exception.BadHTTPResponseStatus" module="cinder.exception" names="cinder.exception.BadHTTPResponseStatus"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BadHTTPResponseStatus</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BadHTTPResponseStatus\ attribute)',\ 'cinder.exception.BadHTTPResponseStatus.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BadHTTPResponseStatus" first="False" fullname="BadHTTPResponseStatus.message" ids="cinder.exception.BadHTTPResponseStatus.message" module="cinder.exception" names="cinder.exception.BadHTTPResponseStatus.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Bad HTTP response status %(status)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BadResetResourceStatus',\ 'cinder.exception.BadResetResourceStatus',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BadResetResourceStatus" ids="cinder.exception.BadResetResourceStatus" module="cinder.exception" names="cinder.exception.BadResetResourceStatus"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BadResetResourceStatus</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BadResetResourceStatus\ attribute)',\ 'cinder.exception.BadResetResourceStatus.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BadResetResourceStatus" first="False" fullname="BadResetResourceStatus.message" ids="cinder.exception.BadResetResourceStatus.message" module="cinder.exception" names="cinder.exception.BadResetResourceStatus.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Bad reset resource status : %(message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BrocadeZoningCliException',\ 'cinder.exception.BrocadeZoningCliException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BrocadeZoningCliException" ids="cinder.exception.BrocadeZoningCliException" module="cinder.exception" names="cinder.exception.BrocadeZoningCliException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BrocadeZoningCliException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BrocadeZoningCliException\ attribute)',\ 'cinder.exception.BrocadeZoningCliException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BrocadeZoningCliException" first="False" fullname="BrocadeZoningCliException.message" ids="cinder.exception.BrocadeZoningCliException.message" module="cinder.exception" names="cinder.exception.BrocadeZoningCliException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Brocade Fibre Channel Zoning CLI error: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BrocadeZoningHttpException',\ 'cinder.exception.BrocadeZoningHttpException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="BrocadeZoningHttpException" ids="cinder.exception.BrocadeZoningHttpException" module="cinder.exception" names="cinder.exception.BrocadeZoningHttpException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BrocadeZoningHttpException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (BrocadeZoningHttpException\ attribute)',\ 'cinder.exception.BrocadeZoningHttpException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BrocadeZoningHttpException" first="False" fullname="BrocadeZoningHttpException.message" ids="cinder.exception.BrocadeZoningHttpException.message" module="cinder.exception" names="cinder.exception.BrocadeZoningHttpException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Brocade Fibre Channel Zoning HTTP error: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'CappedVersionUnknown',\ 'cinder.exception.CappedVersionUnknown',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="CappedVersionUnknown" ids="cinder.exception.CappedVersionUnknown" module="cinder.exception" names="cinder.exception.CappedVersionUnknown"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">CappedVersionUnknown</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (CappedVersionUnknown\ attribute)',\ 'cinder.exception.CappedVersionUnknown.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CappedVersionUnknown" first="False" fullname="CappedVersionUnknown.message" ids="cinder.exception.CappedVersionUnknown.message" module="cinder.exception" names="cinder.exception.CappedVersionUnknown.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Unrecoverable Error: Versioned Objects in DB are capped to unknown version %(version)s. Most likely your environment contains only new services and you're trying to start an older one. Use `cinder-manage service list` to check that and upgrade this service."</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'CgSnapshotNotFound',\ 'cinder.exception.CgSnapshotNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="CgSnapshotNotFound" ids="cinder.exception.CgSnapshotNotFound" module="cinder.exception" names="cinder.exception.CgSnapshotNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">CgSnapshotNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (CgSnapshotNotFound\ attribute)',\ 'cinder.exception.CgSnapshotNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CgSnapshotNotFound" first="False" fullname="CgSnapshotNotFound.message" ids="cinder.exception.CgSnapshotNotFound.message" module="cinder.exception" names="cinder.exception.CgSnapshotNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'CgSnapshot %(cgsnapshot_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'CinderException',\ 'cinder.exception.CinderException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="CinderException" ids="cinder.exception.CinderException" module="cinder.exception" names="cinder.exception.CinderException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">CinderException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                <paragraph>Base Cinder Exception</paragraph>
                <paragraph>To correctly use this class, inherit from it and define
                    a ‘message’ property. That message will get printf’d
                    with the keyword arguments provided to the constructor.</paragraph>
                <index entries="['single',\ 'code\ (CinderException\ attribute)',\ 'cinder.exception.CinderException.code',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CinderException" first="False" fullname="CinderException.code" ids="cinder.exception.CinderException.code" module="cinder.exception" names="cinder.exception.CinderException.code"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 500</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'headers\ (CinderException\ attribute)',\ 'cinder.exception.CinderException.headers',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CinderException" first="False" fullname="CinderException.headers" ids="cinder.exception.CinderException.headers" module="cinder.exception" names="cinder.exception.CinderException.headers"><desc_name xml:space="preserve">headers</desc_name><desc_annotation xml:space="preserve"> = {}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'message\ (CinderException\ attribute)',\ 'cinder.exception.CinderException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CinderException" first="False" fullname="CinderException.message" ids="cinder.exception.CinderException.message" module="cinder.exception" names="cinder.exception.CinderException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'An unknown exception occurred.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'safe\ (CinderException\ attribute)',\ 'cinder.exception.CinderException.safe',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CinderException" first="False" fullname="CinderException.safe" ids="cinder.exception.CinderException.safe" module="cinder.exception" names="cinder.exception.CinderException.safe"><desc_name xml:space="preserve">safe</desc_name><desc_annotation xml:space="preserve"> = False</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'CiscoZoningCliException',\ 'cinder.exception.CiscoZoningCliException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="CiscoZoningCliException" ids="cinder.exception.CiscoZoningCliException" module="cinder.exception" names="cinder.exception.CiscoZoningCliException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">CiscoZoningCliException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (CiscoZoningCliException\ attribute)',\ 'cinder.exception.CiscoZoningCliException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CiscoZoningCliException" first="False" fullname="CiscoZoningCliException.message" ids="cinder.exception.CiscoZoningCliException.message" module="cinder.exception" names="cinder.exception.CiscoZoningCliException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cisco Fibre Channel Zoning CLI error: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'CleanableInUse',\ 'cinder.exception.CleanableInUse',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="CleanableInUse" ids="cinder.exception.CleanableInUse" module="cinder.exception" names="cinder.exception.CleanableInUse"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">CleanableInUse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (CleanableInUse\ attribute)',\ 'cinder.exception.CleanableInUse.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CleanableInUse" first="False" fullname="CleanableInUse.message" ids="cinder.exception.CleanableInUse.message" module="cinder.exception" names="cinder.exception.CleanableInUse.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(type)s with id %(id)s is already being cleaned up or another host has taken over it.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ClusterExists',\ 'cinder.exception.ClusterExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ClusterExists" ids="cinder.exception.ClusterExists" module="cinder.exception" names="cinder.exception.ClusterExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ClusterExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Duplicate" reftitle="cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ClusterExists\ attribute)',\ 'cinder.exception.ClusterExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ClusterExists" first="False" fullname="ClusterExists.message" ids="cinder.exception.ClusterExists.message" module="cinder.exception" names="cinder.exception.ClusterExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cluster %(name)s already exists.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ClusterHasHosts',\ 'cinder.exception.ClusterHasHosts',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ClusterHasHosts" ids="cinder.exception.ClusterHasHosts" module="cinder.exception" names="cinder.exception.ClusterHasHosts"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ClusterHasHosts</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ClusterHasHosts\ attribute)',\ 'cinder.exception.ClusterHasHosts.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ClusterHasHosts" first="False" fullname="ClusterHasHosts.message" ids="cinder.exception.ClusterHasHosts.message" module="cinder.exception" names="cinder.exception.ClusterHasHosts.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cluster %(id)s still has hosts.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ClusterNotFound',\ 'cinder.exception.ClusterNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ClusterNotFound" ids="cinder.exception.ClusterNotFound" module="cinder.exception" names="cinder.exception.ClusterNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ClusterNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ClusterNotFound\ attribute)',\ 'cinder.exception.ClusterNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ClusterNotFound" first="False" fullname="ClusterNotFound.message" ids="cinder.exception.ClusterNotFound.message" module="cinder.exception" names="cinder.exception.ClusterNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cluster %(id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'CohoException',\ 'cinder.exception.CohoException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="CohoException" ids="cinder.exception.CohoException" module="cinder.exception" names="cinder.exception.CohoException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">CohoException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (CohoException\ attribute)',\ 'cinder.exception.CohoException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CohoException" first="False" fullname="CohoException.message" ids="cinder.exception.CohoException.message" module="cinder.exception" names="cinder.exception.CohoException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Coho Data Cinder driver failure: %(message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ConfigNotFound',\ 'cinder.exception.ConfigNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ConfigNotFound" ids="cinder.exception.ConfigNotFound" module="cinder.exception" names="cinder.exception.ConfigNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ConfigNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ConfigNotFound\ attribute)',\ 'cinder.exception.ConfigNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ConfigNotFound" first="False" fullname="ConfigNotFound.message" ids="cinder.exception.ConfigNotFound.message" module="cinder.exception" names="cinder.exception.ConfigNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Could not find config at %(path)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ConsistencyGroupNotFound',\ 'cinder.exception.ConsistencyGroupNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ConsistencyGroupNotFound" ids="cinder.exception.ConsistencyGroupNotFound" module="cinder.exception" names="cinder.exception.ConsistencyGroupNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ConsistencyGroupNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ConsistencyGroupNotFound\ attribute)',\ 'cinder.exception.ConsistencyGroupNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ConsistencyGroupNotFound" first="False" fullname="ConsistencyGroupNotFound.message" ids="cinder.exception.ConsistencyGroupNotFound.message" module="cinder.exception" names="cinder.exception.ConsistencyGroupNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'ConsistencyGroup %(consistencygroup_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ConvertedException',\ 'cinder.exception.ConvertedException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ConvertedException" ids="cinder.exception.ConvertedException" module="cinder.exception" names="cinder.exception.ConvertedException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ConvertedException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">code=500</desc_parameter><desc_parameter xml:space="preserve">title=''</desc_parameter><desc_parameter xml:space="preserve">explanation=''</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">webob.exc.WSGIHTTPException</literal></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DateraAPIException',\ 'cinder.exception.DateraAPIException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DateraAPIException" ids="cinder.exception.DateraAPIException" module="cinder.exception" names="cinder.exception.DateraAPIException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DateraAPIException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeBackendAPIException" reftitle="cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DateraAPIException\ attribute)',\ 'cinder.exception.DateraAPIException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DateraAPIException" first="False" fullname="DateraAPIException.message" ids="cinder.exception.DateraAPIException.message" module="cinder.exception" names="cinder.exception.DateraAPIException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Bad response from Datera API'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DellDriverRetryableException',\ 'cinder.exception.DellDriverRetryableException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DellDriverRetryableException" ids="cinder.exception.DellDriverRetryableException" module="cinder.exception" names="cinder.exception.DellDriverRetryableException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DellDriverRetryableException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeBackendAPIException" reftitle="cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DellDriverRetryableException\ attribute)',\ 'cinder.exception.DellDriverRetryableException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DellDriverRetryableException" first="False" fullname="DellDriverRetryableException.message" ids="cinder.exception.DellDriverRetryableException.message" module="cinder.exception" names="cinder.exception.DellDriverRetryableException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Retryable Dell Exception encountered'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DellDriverUnknownSpec',\ 'cinder.exception.DellDriverUnknownSpec',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DellDriverUnknownSpec" ids="cinder.exception.DellDriverUnknownSpec" module="cinder.exception" names="cinder.exception.DellDriverUnknownSpec"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DellDriverUnknownSpec</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DellDriverUnknownSpec\ attribute)',\ 'cinder.exception.DellDriverUnknownSpec.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DellDriverUnknownSpec" first="False" fullname="DellDriverUnknownSpec.message" ids="cinder.exception.DellDriverUnknownSpec.message" module="cinder.exception" names="cinder.exception.DellDriverUnknownSpec.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Dell driver failure: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DeviceUnavailable',\ 'cinder.exception.DeviceUnavailable',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DeviceUnavailable" ids="cinder.exception.DeviceUnavailable" module="cinder.exception" names="cinder.exception.DeviceUnavailable"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DeviceUnavailable</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DeviceUnavailable\ attribute)',\ 'cinder.exception.DeviceUnavailable.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DeviceUnavailable" first="False" fullname="DeviceUnavailable.message" ids="cinder.exception.DeviceUnavailable.message" module="cinder.exception" names="cinder.exception.DeviceUnavailable.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The device in the path %(path)s is unavailable: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DotHillAuthenticationError',\ 'cinder.exception.DotHillAuthenticationError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DotHillAuthenticationError" ids="cinder.exception.DotHillAuthenticationError" module="cinder.exception" names="cinder.exception.DotHillAuthenticationError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillAuthenticationError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DotHillAuthenticationError\ attribute)',\ 'cinder.exception.DotHillAuthenticationError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DotHillAuthenticationError" first="False" fullname="DotHillAuthenticationError.message" ids="cinder.exception.DotHillAuthenticationError.message" module="cinder.exception" names="cinder.exception.DotHillAuthenticationError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DotHillConnectionError',\ 'cinder.exception.DotHillConnectionError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DotHillConnectionError" ids="cinder.exception.DotHillConnectionError" module="cinder.exception" names="cinder.exception.DotHillConnectionError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillConnectionError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DotHillConnectionError\ attribute)',\ 'cinder.exception.DotHillConnectionError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DotHillConnectionError" first="False" fullname="DotHillConnectionError.message" ids="cinder.exception.DotHillConnectionError.message" module="cinder.exception" names="cinder.exception.DotHillConnectionError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DotHillDriverNotSupported',\ 'cinder.exception.DotHillDriverNotSupported',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DotHillDriverNotSupported" ids="cinder.exception.DotHillDriverNotSupported" module="cinder.exception" names="cinder.exception.DotHillDriverNotSupported"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillDriverNotSupported</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DotHillDriverNotSupported\ attribute)',\ 'cinder.exception.DotHillDriverNotSupported.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DotHillDriverNotSupported" first="False" fullname="DotHillDriverNotSupported.message" ids="cinder.exception.DotHillDriverNotSupported.message" module="cinder.exception" names="cinder.exception.DotHillDriverNotSupported.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The Dot Hill driver is no longer supported.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DotHillInvalidBackend',\ 'cinder.exception.DotHillInvalidBackend',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DotHillInvalidBackend" ids="cinder.exception.DotHillInvalidBackend" module="cinder.exception" names="cinder.exception.DotHillInvalidBackend"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillInvalidBackend</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DotHillInvalidBackend\ attribute)',\ 'cinder.exception.DotHillInvalidBackend.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DotHillInvalidBackend" first="False" fullname="DotHillInvalidBackend.message" ids="cinder.exception.DotHillInvalidBackend.message" module="cinder.exception" names="cinder.exception.DotHillInvalidBackend.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Backend doesn't exist (%(backend)s)"</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DotHillNotEnoughSpace',\ 'cinder.exception.DotHillNotEnoughSpace',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DotHillNotEnoughSpace" ids="cinder.exception.DotHillNotEnoughSpace" module="cinder.exception" names="cinder.exception.DotHillNotEnoughSpace"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillNotEnoughSpace</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DotHillNotEnoughSpace\ attribute)',\ 'cinder.exception.DotHillNotEnoughSpace.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DotHillNotEnoughSpace" first="False" fullname="DotHillNotEnoughSpace.message" ids="cinder.exception.DotHillNotEnoughSpace.message" module="cinder.exception" names="cinder.exception.DotHillNotEnoughSpace.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Not enough space on backend (%(backend)s)'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DotHillNotTargetPortal',\ 'cinder.exception.DotHillNotTargetPortal',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DotHillNotTargetPortal" ids="cinder.exception.DotHillNotTargetPortal" module="cinder.exception" names="cinder.exception.DotHillNotTargetPortal"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillNotTargetPortal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DotHillNotTargetPortal\ attribute)',\ 'cinder.exception.DotHillNotTargetPortal.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DotHillNotTargetPortal" first="False" fullname="DotHillNotTargetPortal.message" ids="cinder.exception.DotHillNotTargetPortal.message" module="cinder.exception" names="cinder.exception.DotHillNotTargetPortal.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No active iSCSI portals with supplied iSCSI IPs'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DotHillRequestError',\ 'cinder.exception.DotHillRequestError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DotHillRequestError" ids="cinder.exception.DotHillRequestError" module="cinder.exception" names="cinder.exception.DotHillRequestError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillRequestError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DotHillRequestError\ attribute)',\ 'cinder.exception.DotHillRequestError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DotHillRequestError" first="False" fullname="DotHillRequestError.message" ids="cinder.exception.DotHillRequestError.message" module="cinder.exception" names="cinder.exception.DotHillRequestError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DriverNotInitialized',\ 'cinder.exception.DriverNotInitialized',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DriverNotInitialized" ids="cinder.exception.DriverNotInitialized" module="cinder.exception" names="cinder.exception.DriverNotInitialized"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DriverNotInitialized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DriverNotInitialized\ attribute)',\ 'cinder.exception.DriverNotInitialized.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DriverNotInitialized" first="False" fullname="DriverNotInitialized.message" ids="cinder.exception.DriverNotInitialized.message" module="cinder.exception" names="cinder.exception.DriverNotInitialized.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume driver not ready.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'Duplicate',\ 'cinder.exception.Duplicate',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="Duplicate" ids="cinder.exception.Duplicate" module="cinder.exception" names="cinder.exception.Duplicate"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">Duplicate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DuplicateSfVolumeNames',\ 'cinder.exception.DuplicateSfVolumeNames',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="DuplicateSfVolumeNames" ids="cinder.exception.DuplicateSfVolumeNames" module="cinder.exception" names="cinder.exception.DuplicateSfVolumeNames"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DuplicateSfVolumeNames</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Duplicate" reftitle="cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (DuplicateSfVolumeNames\ attribute)',\ 'cinder.exception.DuplicateSfVolumeNames.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DuplicateSfVolumeNames" first="False" fullname="DuplicateSfVolumeNames.message" ids="cinder.exception.DuplicateSfVolumeNames.message" module="cinder.exception" names="cinder.exception.DuplicateSfVolumeNames.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Detected more than one volume with name %(vol_name)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EMCSPUnavailableException',\ 'cinder.exception.EMCSPUnavailableException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="EMCSPUnavailableException" ids="cinder.exception.EMCSPUnavailableException" module="cinder.exception" names="cinder.exception.EMCSPUnavailableException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">EMCSPUnavailableException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.EMCVnxCLICmdError" reftitle="cinder.exception.EMCVnxCLICmdError"><literal classes="xref py py-class">cinder.exception.EMCVnxCLICmdError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (EMCSPUnavailableException\ attribute)',\ 'cinder.exception.EMCSPUnavailableException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="EMCSPUnavailableException" first="False" fullname="EMCSPUnavailableException.message" ids="cinder.exception.EMCSPUnavailableException.message" module="cinder.exception" names="cinder.exception.EMCSPUnavailableException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'EMC VNX Cinder Driver SPUnavailableException: %(cmd)s (Return Code: %(rc)s) (Output: %(out)s).'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EMCVnxCLICmdError',\ 'cinder.exception.EMCVnxCLICmdError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="EMCVnxCLICmdError" ids="cinder.exception.EMCVnxCLICmdError" module="cinder.exception" names="cinder.exception.EMCVnxCLICmdError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">EMCVnxCLICmdError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeBackendAPIException" reftitle="cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (EMCVnxCLICmdError\ attribute)',\ 'cinder.exception.EMCVnxCLICmdError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="EMCVnxCLICmdError" first="False" fullname="EMCVnxCLICmdError.message" ids="cinder.exception.EMCVnxCLICmdError.message" module="cinder.exception" names="cinder.exception.EMCVnxCLICmdError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'EMC VNX Cinder Driver CLI exception: %(cmd)s (Return Code: %(rc)s) (Output: %(out)s).'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EncryptedBackupOperationFailed',\ 'cinder.exception.EncryptedBackupOperationFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="EncryptedBackupOperationFailed" ids="cinder.exception.EncryptedBackupOperationFailed" module="cinder.exception" names="cinder.exception.EncryptedBackupOperationFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">EncryptedBackupOperationFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.BackupDriverException" reftitle="cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (EncryptedBackupOperationFailed\ attribute)',\ 'cinder.exception.EncryptedBackupOperationFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="EncryptedBackupOperationFailed" first="False" fullname="EncryptedBackupOperationFailed.message" ids="cinder.exception.EncryptedBackupOperationFailed.message" module="cinder.exception" names="cinder.exception.EncryptedBackupOperationFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backup operation of an encrypted volume failed.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'Error',\ 'cinder.exception.Error',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="Error" ids="cinder.exception.Error" module="cinder.exception" names="cinder.exception.Error"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">Error</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ErrorInFetchingConfiguration',\ 'cinder.exception.ErrorInFetchingConfiguration',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ErrorInFetchingConfiguration" ids="cinder.exception.ErrorInFetchingConfiguration" module="cinder.exception" names="cinder.exception.ErrorInFetchingConfiguration"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ErrorInFetchingConfiguration</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ErrorInFetchingConfiguration\ attribute)',\ 'cinder.exception.ErrorInFetchingConfiguration.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ErrorInFetchingConfiguration" first="False" fullname="ErrorInFetchingConfiguration.message" ids="cinder.exception.ErrorInFetchingConfiguration.message" module="cinder.exception" names="cinder.exception.ErrorInFetchingConfiguration.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Error in fetching configuration for '%(persona)s'"</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ErrorInHyperScaleVersion',\ 'cinder.exception.ErrorInHyperScaleVersion',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ErrorInHyperScaleVersion" ids="cinder.exception.ErrorInHyperScaleVersion" module="cinder.exception" names="cinder.exception.ErrorInHyperScaleVersion"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ErrorInHyperScaleVersion</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ErrorInHyperScaleVersion\ attribute)',\ 'cinder.exception.ErrorInHyperScaleVersion.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ErrorInHyperScaleVersion" first="False" fullname="ErrorInHyperScaleVersion.message" ids="cinder.exception.ErrorInHyperScaleVersion.message" module="cinder.exception" names="cinder.exception.ErrorInHyperScaleVersion.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Error in getting HyperScale version '%(cmd_error)s'"</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ErrorInParsingArguments',\ 'cinder.exception.ErrorInParsingArguments',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ErrorInParsingArguments" ids="cinder.exception.ErrorInParsingArguments" module="cinder.exception" names="cinder.exception.ErrorInParsingArguments"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ErrorInParsingArguments</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ErrorInParsingArguments\ attribute)',\ 'cinder.exception.ErrorInParsingArguments.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ErrorInParsingArguments" first="False" fullname="ErrorInParsingArguments.message" ids="cinder.exception.ErrorInParsingArguments.message" module="cinder.exception" names="cinder.exception.ErrorInParsingArguments.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Error in parsing message arguments : Invalid Payload'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ErrorInSendingMsg',\ 'cinder.exception.ErrorInSendingMsg',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ErrorInSendingMsg" ids="cinder.exception.ErrorInSendingMsg" module="cinder.exception" names="cinder.exception.ErrorInSendingMsg"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ErrorInSendingMsg</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ErrorInSendingMsg\ attribute)',\ 'cinder.exception.ErrorInSendingMsg.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ErrorInSendingMsg" first="False" fullname="ErrorInSendingMsg.message" ids="cinder.exception.ErrorInSendingMsg.message" module="cinder.exception" names="cinder.exception.ErrorInSendingMsg.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Error in sending message '%(cmd_error)s'"</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EvaluatorParseException',\ 'cinder.exception.EvaluatorParseException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="EvaluatorParseException" ids="cinder.exception.EvaluatorParseException" module="cinder.exception" names="cinder.exception.EvaluatorParseException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">EvaluatorParseException</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                <index entries="['single',\ 'message\ (EvaluatorParseException\ attribute)',\ 'cinder.exception.EvaluatorParseException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="EvaluatorParseException" first="False" fullname="EvaluatorParseException.message" ids="cinder.exception.EvaluatorParseException.message" module="cinder.exception" names="cinder.exception.EvaluatorParseException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Error during evaluator parsing: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ExportFailure',\ 'cinder.exception.ExportFailure',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ExportFailure" ids="cinder.exception.ExportFailure" module="cinder.exception" names="cinder.exception.ExportFailure"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ExportFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ExportFailure\ attribute)',\ 'cinder.exception.ExportFailure.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ExportFailure" first="False" fullname="ExportFailure.message" ids="cinder.exception.ExportFailure.message" module="cinder.exception" names="cinder.exception.ExportFailure.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to export for volume: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ExtendVolumeError',\ 'cinder.exception.ExtendVolumeError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ExtendVolumeError" ids="cinder.exception.ExtendVolumeError" module="cinder.exception" names="cinder.exception.ExtendVolumeError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ExtendVolumeError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ExtendVolumeError\ attribute)',\ 'cinder.exception.ExtendVolumeError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ExtendVolumeError" first="False" fullname="ExtendVolumeError.message" ids="cinder.exception.ExtendVolumeError.message" module="cinder.exception" names="cinder.exception.ExtendVolumeError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Error extending volume: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'FCSanLookupServiceException',\ 'cinder.exception.FCSanLookupServiceException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="FCSanLookupServiceException" ids="cinder.exception.FCSanLookupServiceException" module="cinder.exception" names="cinder.exception.FCSanLookupServiceException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">FCSanLookupServiceException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (FCSanLookupServiceException\ attribute)',\ 'cinder.exception.FCSanLookupServiceException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCSanLookupServiceException" first="False" fullname="FCSanLookupServiceException.message" ids="cinder.exception.FCSanLookupServiceException.message" module="cinder.exception" names="cinder.exception.FCSanLookupServiceException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Fibre Channel SAN Lookup failure: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'FCZoneDriverException',\ 'cinder.exception.FCZoneDriverException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="FCZoneDriverException" ids="cinder.exception.FCZoneDriverException" module="cinder.exception" names="cinder.exception.FCZoneDriverException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">FCZoneDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (FCZoneDriverException\ attribute)',\ 'cinder.exception.FCZoneDriverException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCZoneDriverException" first="False" fullname="FCZoneDriverException.message" ids="cinder.exception.FCZoneDriverException.message" module="cinder.exception" names="cinder.exception.FCZoneDriverException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Fibre Channel Zone operation failed: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'FailedCmdWithDump',\ 'cinder.exception.FailedCmdWithDump',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="FailedCmdWithDump" ids="cinder.exception.FailedCmdWithDump" module="cinder.exception" names="cinder.exception.FailedCmdWithDump"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">FailedCmdWithDump</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (FailedCmdWithDump\ attribute)',\ 'cinder.exception.FailedCmdWithDump.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FailedCmdWithDump" first="False" fullname="FailedCmdWithDump.message" ids="cinder.exception.FailedCmdWithDump.message" module="cinder.exception" names="cinder.exception.FailedCmdWithDump.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Operation failed with status=%(status)s. Full dump: %(data)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'FileNotFound',\ 'cinder.exception.FileNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="FileNotFound" ids="cinder.exception.FileNotFound" module="cinder.exception" names="cinder.exception.FileNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">FileNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (FileNotFound\ attribute)',\ 'cinder.exception.FileNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FileNotFound" first="False" fullname="FileNotFound.message" ids="cinder.exception.FileNotFound.message" module="cinder.exception" names="cinder.exception.FileNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'File %(file_path)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GCSApiFailure',\ 'cinder.exception.GCSApiFailure',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GCSApiFailure" ids="cinder.exception.GCSApiFailure" module="cinder.exception" names="cinder.exception.GCSApiFailure"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GCSApiFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.BackupDriverException" reftitle="cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GCSApiFailure\ attribute)',\ 'cinder.exception.GCSApiFailure.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GCSApiFailure" first="False" fullname="GCSApiFailure.message" ids="cinder.exception.GCSApiFailure.message" module="cinder.exception" names="cinder.exception.GCSApiFailure.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Google Cloud Storage api failure: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GCSConnectionFailure',\ 'cinder.exception.GCSConnectionFailure',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GCSConnectionFailure" ids="cinder.exception.GCSConnectionFailure" module="cinder.exception" names="cinder.exception.GCSConnectionFailure"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GCSConnectionFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.BackupDriverException" reftitle="cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GCSConnectionFailure\ attribute)',\ 'cinder.exception.GCSConnectionFailure.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GCSConnectionFailure" first="False" fullname="GCSConnectionFailure.message" ids="cinder.exception.GCSConnectionFailure.message" module="cinder.exception" names="cinder.exception.GCSConnectionFailure.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Google Cloud Storage connection failure: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GCSOAuth2Failure',\ 'cinder.exception.GCSOAuth2Failure',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GCSOAuth2Failure" ids="cinder.exception.GCSOAuth2Failure" module="cinder.exception" names="cinder.exception.GCSOAuth2Failure"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GCSOAuth2Failure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.BackupDriverException" reftitle="cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GCSOAuth2Failure\ attribute)',\ 'cinder.exception.GCSOAuth2Failure.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GCSOAuth2Failure" first="False" fullname="GCSOAuth2Failure.message" ids="cinder.exception.GCSOAuth2Failure.message" module="cinder.exception" names="cinder.exception.GCSOAuth2Failure.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Google Cloud Storage oauth2 failure: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GPFSDriverUnsupportedOperation',\ 'cinder.exception.GPFSDriverUnsupportedOperation',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GPFSDriverUnsupportedOperation" ids="cinder.exception.GPFSDriverUnsupportedOperation" module="cinder.exception" names="cinder.exception.GPFSDriverUnsupportedOperation"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GPFSDriverUnsupportedOperation</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeBackendAPIException" reftitle="cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GPFSDriverUnsupportedOperation\ attribute)',\ 'cinder.exception.GPFSDriverUnsupportedOperation.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GPFSDriverUnsupportedOperation" first="False" fullname="GPFSDriverUnsupportedOperation.message" ids="cinder.exception.GPFSDriverUnsupportedOperation.message" module="cinder.exception" names="cinder.exception.GPFSDriverUnsupportedOperation.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'GPFS driver unsupported operation: %(msg)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GlanceConnectionFailed',\ 'cinder.exception.GlanceConnectionFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GlanceConnectionFailed" ids="cinder.exception.GlanceConnectionFailed" module="cinder.exception" names="cinder.exception.GlanceConnectionFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GlanceConnectionFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GlanceConnectionFailed\ attribute)',\ 'cinder.exception.GlanceConnectionFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GlanceConnectionFailed" first="False" fullname="GlanceConnectionFailed.message" ids="cinder.exception.GlanceConnectionFailed.message" module="cinder.exception" names="cinder.exception.GlanceConnectionFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Connection to glance failed: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GlanceMetadataExists',\ 'cinder.exception.GlanceMetadataExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GlanceMetadataExists" ids="cinder.exception.GlanceMetadataExists" module="cinder.exception" names="cinder.exception.GlanceMetadataExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GlanceMetadataExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GlanceMetadataExists\ attribute)',\ 'cinder.exception.GlanceMetadataExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GlanceMetadataExists" first="False" fullname="GlanceMetadataExists.message" ids="cinder.exception.GlanceMetadataExists.message" module="cinder.exception" names="cinder.exception.GlanceMetadataExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Glance metadata cannot be updated, key %(key)s exists for volume id %(volume_id)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GlanceMetadataNotFound',\ 'cinder.exception.GlanceMetadataNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GlanceMetadataNotFound" ids="cinder.exception.GlanceMetadataNotFound" module="cinder.exception" names="cinder.exception.GlanceMetadataNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GlanceMetadataNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GlanceMetadataNotFound\ attribute)',\ 'cinder.exception.GlanceMetadataNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GlanceMetadataNotFound" first="False" fullname="GlanceMetadataNotFound.message" ids="cinder.exception.GlanceMetadataNotFound.message" module="cinder.exception" names="cinder.exception.GlanceMetadataNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Glance metadata for volume/snapshot %(id)s cannot be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupLimitExceeded',\ 'cinder.exception.GroupLimitExceeded',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupLimitExceeded" ids="cinder.exception.GroupLimitExceeded" module="cinder.exception" names="cinder.exception.GroupLimitExceeded"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupLimitExceeded</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaError" reftitle="cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupLimitExceeded\ attribute)',\ 'cinder.exception.GroupLimitExceeded.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupLimitExceeded" first="False" fullname="GroupLimitExceeded.message" ids="cinder.exception.GroupLimitExceeded.message" module="cinder.exception" names="cinder.exception.GroupLimitExceeded.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Maximum number of groups allowed (%(allowed)d) exceeded'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupNotFound',\ 'cinder.exception.GroupNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupNotFound" ids="cinder.exception.GroupNotFound" module="cinder.exception" names="cinder.exception.GroupNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupNotFound\ attribute)',\ 'cinder.exception.GroupNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupNotFound" first="False" fullname="GroupNotFound.message" ids="cinder.exception.GroupNotFound.message" module="cinder.exception" names="cinder.exception.GroupNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group %(group_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupSnapshotNotFound',\ 'cinder.exception.GroupSnapshotNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupSnapshotNotFound" ids="cinder.exception.GroupSnapshotNotFound" module="cinder.exception" names="cinder.exception.GroupSnapshotNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupSnapshotNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupSnapshotNotFound\ attribute)',\ 'cinder.exception.GroupSnapshotNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupSnapshotNotFound" first="False" fullname="GroupSnapshotNotFound.message" ids="cinder.exception.GroupSnapshotNotFound.message" module="cinder.exception" names="cinder.exception.GroupSnapshotNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'GroupSnapshot %(group_snapshot_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupTypeAccessExists',\ 'cinder.exception.GroupTypeAccessExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupTypeAccessExists" ids="cinder.exception.GroupTypeAccessExists" module="cinder.exception" names="cinder.exception.GroupTypeAccessExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeAccessExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Duplicate" reftitle="cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupTypeAccessExists\ attribute)',\ 'cinder.exception.GroupTypeAccessExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupTypeAccessExists" first="False" fullname="GroupTypeAccessExists.message" ids="cinder.exception.GroupTypeAccessExists.message" module="cinder.exception" names="cinder.exception.GroupTypeAccessExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group type access for %(group_type_id)s / %(project_id)s combination already exists.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupTypeAccessNotFound',\ 'cinder.exception.GroupTypeAccessNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupTypeAccessNotFound" ids="cinder.exception.GroupTypeAccessNotFound" module="cinder.exception" names="cinder.exception.GroupTypeAccessNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeAccessNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupTypeAccessNotFound\ attribute)',\ 'cinder.exception.GroupTypeAccessNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupTypeAccessNotFound" first="False" fullname="GroupTypeAccessNotFound.message" ids="cinder.exception.GroupTypeAccessNotFound.message" module="cinder.exception" names="cinder.exception.GroupTypeAccessNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group type access not found for %(group_type_id)s / %(project_id)s combination.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupTypeCreateFailed',\ 'cinder.exception.GroupTypeCreateFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupTypeCreateFailed" ids="cinder.exception.GroupTypeCreateFailed" module="cinder.exception" names="cinder.exception.GroupTypeCreateFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeCreateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupTypeCreateFailed\ attribute)',\ 'cinder.exception.GroupTypeCreateFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupTypeCreateFailed" first="False" fullname="GroupTypeCreateFailed.message" ids="cinder.exception.GroupTypeCreateFailed.message" module="cinder.exception" names="cinder.exception.GroupTypeCreateFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cannot create group_type with name %(name)s and specs %(group_specs)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupTypeEncryptionExists',\ 'cinder.exception.GroupTypeEncryptionExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupTypeEncryptionExists" ids="cinder.exception.GroupTypeEncryptionExists" module="cinder.exception" names="cinder.exception.GroupTypeEncryptionExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeEncryptionExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupTypeEncryptionExists\ attribute)',\ 'cinder.exception.GroupTypeEncryptionExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupTypeEncryptionExists" first="False" fullname="GroupTypeEncryptionExists.message" ids="cinder.exception.GroupTypeEncryptionExists.message" module="cinder.exception" names="cinder.exception.GroupTypeEncryptionExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group type encryption for type %(type_id)s already exists.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupTypeEncryptionNotFound',\ 'cinder.exception.GroupTypeEncryptionNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupTypeEncryptionNotFound" ids="cinder.exception.GroupTypeEncryptionNotFound" module="cinder.exception" names="cinder.exception.GroupTypeEncryptionNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeEncryptionNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupTypeEncryptionNotFound\ attribute)',\ 'cinder.exception.GroupTypeEncryptionNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupTypeEncryptionNotFound" first="False" fullname="GroupTypeEncryptionNotFound.message" ids="cinder.exception.GroupTypeEncryptionNotFound.message" module="cinder.exception" names="cinder.exception.GroupTypeEncryptionNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group type encryption for type %(type_id)s does not exist.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupTypeExists',\ 'cinder.exception.GroupTypeExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupTypeExists" ids="cinder.exception.GroupTypeExists" module="cinder.exception" names="cinder.exception.GroupTypeExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Duplicate" reftitle="cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupTypeExists\ attribute)',\ 'cinder.exception.GroupTypeExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupTypeExists" first="False" fullname="GroupTypeExists.message" ids="cinder.exception.GroupTypeExists.message" module="cinder.exception" names="cinder.exception.GroupTypeExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group Type %(id)s already exists.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupTypeInUse',\ 'cinder.exception.GroupTypeInUse',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupTypeInUse" ids="cinder.exception.GroupTypeInUse" module="cinder.exception" names="cinder.exception.GroupTypeInUse"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeInUse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupTypeInUse\ attribute)',\ 'cinder.exception.GroupTypeInUse.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupTypeInUse" first="False" fullname="GroupTypeInUse.message" ids="cinder.exception.GroupTypeInUse.message" module="cinder.exception" names="cinder.exception.GroupTypeInUse.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group Type %(group_type_id)s deletion is not allowed with groups present with the type.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupTypeNotFound',\ 'cinder.exception.GroupTypeNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupTypeNotFound" ids="cinder.exception.GroupTypeNotFound" module="cinder.exception" names="cinder.exception.GroupTypeNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupTypeNotFound\ attribute)',\ 'cinder.exception.GroupTypeNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupTypeNotFound" first="False" fullname="GroupTypeNotFound.message" ids="cinder.exception.GroupTypeNotFound.message" module="cinder.exception" names="cinder.exception.GroupTypeNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group type %(group_type_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupTypeNotFoundByName',\ 'cinder.exception.GroupTypeNotFoundByName',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupTypeNotFoundByName" ids="cinder.exception.GroupTypeNotFoundByName" module="cinder.exception" names="cinder.exception.GroupTypeNotFoundByName"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeNotFoundByName</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.GroupTypeNotFound" reftitle="cinder.exception.GroupTypeNotFound"><literal classes="xref py py-class">cinder.exception.GroupTypeNotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupTypeNotFoundByName\ attribute)',\ 'cinder.exception.GroupTypeNotFoundByName.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupTypeNotFoundByName" first="False" fullname="GroupTypeNotFoundByName.message" ids="cinder.exception.GroupTypeNotFoundByName.message" module="cinder.exception" names="cinder.exception.GroupTypeNotFoundByName.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group type with name %(group_type_name)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupTypeSpecsNotFound',\ 'cinder.exception.GroupTypeSpecsNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupTypeSpecsNotFound" ids="cinder.exception.GroupTypeSpecsNotFound" module="cinder.exception" names="cinder.exception.GroupTypeSpecsNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeSpecsNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupTypeSpecsNotFound\ attribute)',\ 'cinder.exception.GroupTypeSpecsNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupTypeSpecsNotFound" first="False" fullname="GroupTypeSpecsNotFound.message" ids="cinder.exception.GroupTypeSpecsNotFound.message" module="cinder.exception" names="cinder.exception.GroupTypeSpecsNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group Type %(group_type_id)s has no specs with key %(group_specs_key)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupTypeUpdateFailed',\ 'cinder.exception.GroupTypeUpdateFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupTypeUpdateFailed" ids="cinder.exception.GroupTypeUpdateFailed" module="cinder.exception" names="cinder.exception.GroupTypeUpdateFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeUpdateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupTypeUpdateFailed\ attribute)',\ 'cinder.exception.GroupTypeUpdateFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupTypeUpdateFailed" first="False" fullname="GroupTypeUpdateFailed.message" ids="cinder.exception.GroupTypeUpdateFailed.message" module="cinder.exception" names="cinder.exception.GroupTypeUpdateFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cannot update group_type %(id)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupVolumeTypeMappingExists',\ 'cinder.exception.GroupVolumeTypeMappingExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="GroupVolumeTypeMappingExists" ids="cinder.exception.GroupVolumeTypeMappingExists" module="cinder.exception" names="cinder.exception.GroupVolumeTypeMappingExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupVolumeTypeMappingExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Duplicate" reftitle="cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (GroupVolumeTypeMappingExists\ attribute)',\ 'cinder.exception.GroupVolumeTypeMappingExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupVolumeTypeMappingExists" first="False" fullname="GroupVolumeTypeMappingExists.message" ids="cinder.exception.GroupVolumeTypeMappingExists.message" module="cinder.exception" names="cinder.exception.GroupVolumeTypeMappingExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group volume type mapping for %(group_id)s / %(volume_type_id)s combination already exists.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'HBSDBusy',\ 'cinder.exception.HBSDBusy',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="HBSDBusy" ids="cinder.exception.HBSDBusy" module="cinder.exception" names="cinder.exception.HBSDBusy"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HBSDBusy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.HBSDError" reftitle="cinder.exception.HBSDError"><literal classes="xref py py-class">cinder.exception.HBSDError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (HBSDBusy\ attribute)',\ 'cinder.exception.HBSDBusy.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HBSDBusy" first="False" fullname="HBSDBusy.message" ids="cinder.exception.HBSDBusy.message" module="cinder.exception" names="cinder.exception.HBSDBusy.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Device or resource is busy.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'HBSDCmdError',\ 'cinder.exception.HBSDCmdError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="HBSDCmdError" ids="cinder.exception.HBSDCmdError" module="cinder.exception" names="cinder.exception.HBSDCmdError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HBSDCmdError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">ret=None</desc_parameter><desc_parameter xml:space="preserve">err=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.HBSDError" reftitle="cinder.exception.HBSDError"><literal classes="xref py py-class">cinder.exception.HBSDError</literal></reference></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'HBSDError',\ 'cinder.exception.HBSDError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="HBSDError" ids="cinder.exception.HBSDError" module="cinder.exception" names="cinder.exception.HBSDError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HBSDError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (HBSDError\ attribute)',\ 'cinder.exception.HBSDError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HBSDError" first="False" fullname="HBSDError.message" ids="cinder.exception.HBSDError.message" module="cinder.exception" names="cinder.exception.HBSDError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'HBSD error occurs.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'HBSDNotFound',\ 'cinder.exception.HBSDNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="HBSDNotFound" ids="cinder.exception.HBSDNotFound" module="cinder.exception" names="cinder.exception.HBSDNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HBSDNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (HBSDNotFound\ attribute)',\ 'cinder.exception.HBSDNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HBSDNotFound" first="False" fullname="HBSDNotFound.message" ids="cinder.exception.HBSDNotFound.message" module="cinder.exception" names="cinder.exception.HBSDNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Storage resource could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'HBSDVolumeIsBusy',\ 'cinder.exception.HBSDVolumeIsBusy',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="HBSDVolumeIsBusy" ids="cinder.exception.HBSDVolumeIsBusy" module="cinder.exception" names="cinder.exception.HBSDVolumeIsBusy"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HBSDVolumeIsBusy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeIsBusy" reftitle="cinder.exception.VolumeIsBusy"><literal classes="xref py py-class">cinder.exception.VolumeIsBusy</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (HBSDVolumeIsBusy\ attribute)',\ 'cinder.exception.HBSDVolumeIsBusy.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HBSDVolumeIsBusy" first="False" fullname="HBSDVolumeIsBusy.message" ids="cinder.exception.HBSDVolumeIsBusy.message" module="cinder.exception" names="cinder.exception.HBSDVolumeIsBusy.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(volume_name)s is busy.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'HNASConnError',\ 'cinder.exception.HNASConnError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="HNASConnError" ids="cinder.exception.HNASConnError" module="cinder.exception" names="cinder.exception.HNASConnError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HNASConnError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (HNASConnError\ attribute)',\ 'cinder.exception.HNASConnError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HNASConnError" first="False" fullname="HNASConnError.message" ids="cinder.exception.HNASConnError.message" module="cinder.exception" names="cinder.exception.HNASConnError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'HostNotFound',\ 'cinder.exception.HostNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="HostNotFound" ids="cinder.exception.HostNotFound" module="cinder.exception" names="cinder.exception.HostNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HostNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (HostNotFound\ attribute)',\ 'cinder.exception.HostNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HostNotFound" first="False" fullname="HostNotFound.message" ids="cinder.exception.HostNotFound.message" module="cinder.exception" names="cinder.exception.HostNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Host %(host)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ISCSITargetAttachFailed',\ 'cinder.exception.ISCSITargetAttachFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ISCSITargetAttachFailed" ids="cinder.exception.ISCSITargetAttachFailed" module="cinder.exception" names="cinder.exception.ISCSITargetAttachFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ISCSITargetAttachFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ISCSITargetAttachFailed\ attribute)',\ 'cinder.exception.ISCSITargetAttachFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ISCSITargetAttachFailed" first="False" fullname="ISCSITargetAttachFailed.message" ids="cinder.exception.ISCSITargetAttachFailed.message" module="cinder.exception" names="cinder.exception.ISCSITargetAttachFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to attach iSCSI target for volume %(volume_id)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ISCSITargetCreateFailed',\ 'cinder.exception.ISCSITargetCreateFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ISCSITargetCreateFailed" ids="cinder.exception.ISCSITargetCreateFailed" module="cinder.exception" names="cinder.exception.ISCSITargetCreateFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ISCSITargetCreateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ISCSITargetCreateFailed\ attribute)',\ 'cinder.exception.ISCSITargetCreateFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ISCSITargetCreateFailed" first="False" fullname="ISCSITargetCreateFailed.message" ids="cinder.exception.ISCSITargetCreateFailed.message" module="cinder.exception" names="cinder.exception.ISCSITargetCreateFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to create iscsi target for volume %(volume_id)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ISCSITargetDetachFailed',\ 'cinder.exception.ISCSITargetDetachFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ISCSITargetDetachFailed" ids="cinder.exception.ISCSITargetDetachFailed" module="cinder.exception" names="cinder.exception.ISCSITargetDetachFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ISCSITargetDetachFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ISCSITargetDetachFailed\ attribute)',\ 'cinder.exception.ISCSITargetDetachFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ISCSITargetDetachFailed" first="False" fullname="ISCSITargetDetachFailed.message" ids="cinder.exception.ISCSITargetDetachFailed.message" module="cinder.exception" names="cinder.exception.ISCSITargetDetachFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to detach iSCSI target for volume %(volume_id)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ISCSITargetHelperCommandFailed',\ 'cinder.exception.ISCSITargetHelperCommandFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ISCSITargetHelperCommandFailed" ids="cinder.exception.ISCSITargetHelperCommandFailed" module="cinder.exception" names="cinder.exception.ISCSITargetHelperCommandFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ISCSITargetHelperCommandFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ISCSITargetHelperCommandFailed\ attribute)',\ 'cinder.exception.ISCSITargetHelperCommandFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ISCSITargetHelperCommandFailed" first="False" fullname="ISCSITargetHelperCommandFailed.message" ids="cinder.exception.ISCSITargetHelperCommandFailed.message" module="cinder.exception" names="cinder.exception.ISCSITargetHelperCommandFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(error_message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ISCSITargetNotFoundForVolume',\ 'cinder.exception.ISCSITargetNotFoundForVolume',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ISCSITargetNotFoundForVolume" ids="cinder.exception.ISCSITargetNotFoundForVolume" module="cinder.exception" names="cinder.exception.ISCSITargetNotFoundForVolume"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ISCSITargetNotFoundForVolume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ISCSITargetNotFoundForVolume\ attribute)',\ 'cinder.exception.ISCSITargetNotFoundForVolume.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ISCSITargetNotFoundForVolume" first="False" fullname="ISCSITargetNotFoundForVolume.message" ids="cinder.exception.ISCSITargetNotFoundForVolume.message" module="cinder.exception" names="cinder.exception.ISCSITargetNotFoundForVolume.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No target id found for volume %(volume_id)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ISCSITargetRemoveFailed',\ 'cinder.exception.ISCSITargetRemoveFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ISCSITargetRemoveFailed" ids="cinder.exception.ISCSITargetRemoveFailed" module="cinder.exception" names="cinder.exception.ISCSITargetRemoveFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ISCSITargetRemoveFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ISCSITargetRemoveFailed\ attribute)',\ 'cinder.exception.ISCSITargetRemoveFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ISCSITargetRemoveFailed" first="False" fullname="ISCSITargetRemoveFailed.message" ids="cinder.exception.ISCSITargetRemoveFailed.message" module="cinder.exception" names="cinder.exception.ISCSITargetRemoveFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to remove iscsi target for volume %(volume_id)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ImageCopyFailure',\ 'cinder.exception.ImageCopyFailure',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ImageCopyFailure" ids="cinder.exception.ImageCopyFailure" module="cinder.exception" names="cinder.exception.ImageCopyFailure"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ImageCopyFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ImageCopyFailure\ attribute)',\ 'cinder.exception.ImageCopyFailure.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageCopyFailure" first="False" fullname="ImageCopyFailure.message" ids="cinder.exception.ImageCopyFailure.message" module="cinder.exception" names="cinder.exception.ImageCopyFailure.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to copy image to volume: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ImageLimitExceeded',\ 'cinder.exception.ImageLimitExceeded',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ImageLimitExceeded" ids="cinder.exception.ImageLimitExceeded" module="cinder.exception" names="cinder.exception.ImageLimitExceeded"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ImageLimitExceeded</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaError" reftitle="cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ImageLimitExceeded\ attribute)',\ 'cinder.exception.ImageLimitExceeded.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageLimitExceeded" first="False" fullname="ImageLimitExceeded.message" ids="cinder.exception.ImageLimitExceeded.message" module="cinder.exception" names="cinder.exception.ImageLimitExceeded.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Image quota exceeded'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ImageNotAuthorized',\ 'cinder.exception.ImageNotAuthorized',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ImageNotAuthorized" ids="cinder.exception.ImageNotAuthorized" module="cinder.exception" names="cinder.exception.ImageNotAuthorized"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ImageNotAuthorized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ImageNotAuthorized\ attribute)',\ 'cinder.exception.ImageNotAuthorized.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageNotAuthorized" first="False" fullname="ImageNotAuthorized.message" ids="cinder.exception.ImageNotAuthorized.message" module="cinder.exception" names="cinder.exception.ImageNotAuthorized.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Not authorized for image %(image_id)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ImageNotFound',\ 'cinder.exception.ImageNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ImageNotFound" ids="cinder.exception.ImageNotFound" module="cinder.exception" names="cinder.exception.ImageNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ImageNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ImageNotFound\ attribute)',\ 'cinder.exception.ImageNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageNotFound" first="False" fullname="ImageNotFound.message" ids="cinder.exception.ImageNotFound.message" module="cinder.exception" names="cinder.exception.ImageNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Image %(image_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ImageTooBig',\ 'cinder.exception.ImageTooBig',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ImageTooBig" ids="cinder.exception.ImageTooBig" module="cinder.exception" names="cinder.exception.ImageTooBig"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ImageTooBig</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ImageTooBig\ attribute)',\ 'cinder.exception.ImageTooBig.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTooBig" first="False" fullname="ImageTooBig.message" ids="cinder.exception.ImageTooBig.message" module="cinder.exception" names="cinder.exception.ImageTooBig.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Image %(image_id)s size exceeded available disk space: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ImageUnacceptable',\ 'cinder.exception.ImageUnacceptable',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ImageUnacceptable" ids="cinder.exception.ImageUnacceptable" module="cinder.exception" names="cinder.exception.ImageUnacceptable"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ImageUnacceptable</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ImageUnacceptable\ attribute)',\ 'cinder.exception.ImageUnacceptable.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageUnacceptable" first="False" fullname="ImageUnacceptable.message" ids="cinder.exception.ImageUnacceptable.message" module="cinder.exception" names="cinder.exception.ImageUnacceptable.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Image %(image_id)s is unacceptable: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InfortrendCliException',\ 'cinder.exception.InfortrendCliException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InfortrendCliException" ids="cinder.exception.InfortrendCliException" module="cinder.exception" names="cinder.exception.InfortrendCliException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InfortrendCliException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InfortrendCliException\ attribute)',\ 'cinder.exception.InfortrendCliException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InfortrendCliException" first="False" fullname="InfortrendCliException.message" ids="cinder.exception.InfortrendCliException.message" module="cinder.exception" names="cinder.exception.InfortrendCliException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Infortrend CLI exception: %(err)s Param: %(param)s (Return Code: %(rc)s) (Output: %(out)s)'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'Invalid',\ 'cinder.exception.Invalid',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="Invalid" ids="cinder.exception.Invalid" module="cinder.exception" names="cinder.exception.Invalid"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">Invalid</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'code\ (Invalid\ attribute)',\ 'cinder.exception.Invalid.code',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Invalid" first="False" fullname="Invalid.code" ids="cinder.exception.Invalid.code" module="cinder.exception" names="cinder.exception.Invalid.code"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 400</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'message\ (Invalid\ attribute)',\ 'cinder.exception.Invalid.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Invalid" first="False" fullname="Invalid.message" ids="cinder.exception.Invalid.message" module="cinder.exception" names="cinder.exception.Invalid.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unacceptable parameters.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'Invalid3PARDomain',\ 'cinder.exception.Invalid3PARDomain',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="Invalid3PARDomain" ids="cinder.exception.Invalid3PARDomain" module="cinder.exception" names="cinder.exception.Invalid3PARDomain"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">Invalid3PARDomain</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (Invalid3PARDomain\ attribute)',\ 'cinder.exception.Invalid3PARDomain.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Invalid3PARDomain" first="False" fullname="Invalid3PARDomain.message" ids="cinder.exception.Invalid3PARDomain.message" module="cinder.exception" names="cinder.exception.Invalid3PARDomain.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid 3PAR Domain: %(err)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidAPIVersionString',\ 'cinder.exception.InvalidAPIVersionString',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidAPIVersionString" ids="cinder.exception.InvalidAPIVersionString" module="cinder.exception" names="cinder.exception.InvalidAPIVersionString"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidAPIVersionString</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidAPIVersionString\ attribute)',\ 'cinder.exception.InvalidAPIVersionString.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidAPIVersionString" first="False" fullname="InvalidAPIVersionString.message" ids="cinder.exception.InvalidAPIVersionString.message" module="cinder.exception" names="cinder.exception.InvalidAPIVersionString.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'API Version String %(version)s is of invalid format. Must be of format MajorNum.MinorNum.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidAttachment',\ 'cinder.exception.InvalidAttachment',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidAttachment" ids="cinder.exception.InvalidAttachment" module="cinder.exception" names="cinder.exception.InvalidAttachment"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidAttachment</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidAttachment\ attribute)',\ 'cinder.exception.InvalidAttachment.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidAttachment" first="False" fullname="InvalidAttachment.message" ids="cinder.exception.InvalidAttachment.message" module="cinder.exception" names="cinder.exception.InvalidAttachment.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid attachment: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidAuthKey',\ 'cinder.exception.InvalidAuthKey',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidAuthKey" ids="cinder.exception.InvalidAuthKey" module="cinder.exception" names="cinder.exception.InvalidAuthKey"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidAuthKey</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidAuthKey\ attribute)',\ 'cinder.exception.InvalidAuthKey.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidAuthKey" first="False" fullname="InvalidAuthKey.message" ids="cinder.exception.InvalidAuthKey.message" module="cinder.exception" names="cinder.exception.InvalidAuthKey.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid auth key: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidAvailabilityZone',\ 'cinder.exception.InvalidAvailabilityZone',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidAvailabilityZone" ids="cinder.exception.InvalidAvailabilityZone" module="cinder.exception" names="cinder.exception.InvalidAvailabilityZone"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidAvailabilityZone</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidAvailabilityZone\ attribute)',\ 'cinder.exception.InvalidAvailabilityZone.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidAvailabilityZone" first="False" fullname="InvalidAvailabilityZone.message" ids="cinder.exception.InvalidAvailabilityZone.message" module="cinder.exception" names="cinder.exception.InvalidAvailabilityZone.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Availability zone '%(az)s' is invalid."</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidBackup',\ 'cinder.exception.InvalidBackup',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidBackup" ids="cinder.exception.InvalidBackup" module="cinder.exception" names="cinder.exception.InvalidBackup"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidBackup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidBackup\ attribute)',\ 'cinder.exception.InvalidBackup.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidBackup" first="False" fullname="InvalidBackup.message" ids="cinder.exception.InvalidBackup.message" module="cinder.exception" names="cinder.exception.InvalidBackup.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid backup: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidCgSnapshot',\ 'cinder.exception.InvalidCgSnapshot',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidCgSnapshot" ids="cinder.exception.InvalidCgSnapshot" module="cinder.exception" names="cinder.exception.InvalidCgSnapshot"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidCgSnapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidCgSnapshot\ attribute)',\ 'cinder.exception.InvalidCgSnapshot.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidCgSnapshot" first="False" fullname="InvalidCgSnapshot.message" ids="cinder.exception.InvalidCgSnapshot.message" module="cinder.exception" names="cinder.exception.InvalidCgSnapshot.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid CgSnapshot: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidConfigurationValue',\ 'cinder.exception.InvalidConfigurationValue',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidConfigurationValue" ids="cinder.exception.InvalidConfigurationValue" module="cinder.exception" names="cinder.exception.InvalidConfigurationValue"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidConfigurationValue</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidConfigurationValue\ attribute)',\ 'cinder.exception.InvalidConfigurationValue.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidConfigurationValue" first="False" fullname="InvalidConfigurationValue.message" ids="cinder.exception.InvalidConfigurationValue.message" module="cinder.exception" names="cinder.exception.InvalidConfigurationValue.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Value "%(value)s" is not valid for configuration option "%(option)s"'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidConnectorException',\ 'cinder.exception.InvalidConnectorException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidConnectorException" ids="cinder.exception.InvalidConnectorException" module="cinder.exception" names="cinder.exception.InvalidConnectorException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidConnectorException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidConnectorException\ attribute)',\ 'cinder.exception.InvalidConnectorException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidConnectorException" first="False" fullname="InvalidConnectorException.message" ids="cinder.exception.InvalidConnectorException.message" module="cinder.exception" names="cinder.exception.InvalidConnectorException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Connector doesn't have required information: %(missing)s"</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidConsistencyGroup',\ 'cinder.exception.InvalidConsistencyGroup',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidConsistencyGroup" ids="cinder.exception.InvalidConsistencyGroup" module="cinder.exception" names="cinder.exception.InvalidConsistencyGroup"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidConsistencyGroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidConsistencyGroup\ attribute)',\ 'cinder.exception.InvalidConsistencyGroup.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidConsistencyGroup" first="False" fullname="InvalidConsistencyGroup.message" ids="cinder.exception.InvalidConsistencyGroup.message" module="cinder.exception" names="cinder.exception.InvalidConsistencyGroup.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid ConsistencyGroup: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidContentType',\ 'cinder.exception.InvalidContentType',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidContentType" ids="cinder.exception.InvalidContentType" module="cinder.exception" names="cinder.exception.InvalidContentType"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidContentType</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidContentType\ attribute)',\ 'cinder.exception.InvalidContentType.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidContentType" first="False" fullname="InvalidContentType.message" ids="cinder.exception.InvalidContentType.message" module="cinder.exception" names="cinder.exception.InvalidContentType.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid content type %(content_type)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidGlobalAPIVersion',\ 'cinder.exception.InvalidGlobalAPIVersion',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidGlobalAPIVersion" ids="cinder.exception.InvalidGlobalAPIVersion" module="cinder.exception" names="cinder.exception.InvalidGlobalAPIVersion"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidGlobalAPIVersion</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidGlobalAPIVersion\ attribute)',\ 'cinder.exception.InvalidGlobalAPIVersion.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidGlobalAPIVersion" first="False" fullname="InvalidGlobalAPIVersion.message" ids="cinder.exception.InvalidGlobalAPIVersion.message" module="cinder.exception" names="cinder.exception.InvalidGlobalAPIVersion.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Version %(req_ver)s is not supported by the API. Minimum is %(min_ver)s and maximum is %(max_ver)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidGroup',\ 'cinder.exception.InvalidGroup',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidGroup" ids="cinder.exception.InvalidGroup" module="cinder.exception" names="cinder.exception.InvalidGroup"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidGroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidGroup\ attribute)',\ 'cinder.exception.InvalidGroup.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidGroup" first="False" fullname="InvalidGroup.message" ids="cinder.exception.InvalidGroup.message" module="cinder.exception" names="cinder.exception.InvalidGroup.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid Group: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidGroupSnapshot',\ 'cinder.exception.InvalidGroupSnapshot',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidGroupSnapshot" ids="cinder.exception.InvalidGroupSnapshot" module="cinder.exception" names="cinder.exception.InvalidGroupSnapshot"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidGroupSnapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidGroupSnapshot\ attribute)',\ 'cinder.exception.InvalidGroupSnapshot.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidGroupSnapshot" first="False" fullname="InvalidGroupSnapshot.message" ids="cinder.exception.InvalidGroupSnapshot.message" module="cinder.exception" names="cinder.exception.InvalidGroupSnapshot.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid GroupSnapshot: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidGroupSnapshotStatus',\ 'cinder.exception.InvalidGroupSnapshotStatus',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidGroupSnapshotStatus" ids="cinder.exception.InvalidGroupSnapshotStatus" module="cinder.exception" names="cinder.exception.InvalidGroupSnapshotStatus"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidGroupSnapshotStatus</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidGroupSnapshotStatus\ attribute)',\ 'cinder.exception.InvalidGroupSnapshotStatus.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidGroupSnapshotStatus" first="False" fullname="InvalidGroupSnapshotStatus.message" ids="cinder.exception.InvalidGroupSnapshotStatus.message" module="cinder.exception" names="cinder.exception.InvalidGroupSnapshotStatus.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid GroupSnapshot Status: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidGroupStatus',\ 'cinder.exception.InvalidGroupStatus',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidGroupStatus" ids="cinder.exception.InvalidGroupStatus" module="cinder.exception" names="cinder.exception.InvalidGroupStatus"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidGroupStatus</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidGroupStatus\ attribute)',\ 'cinder.exception.InvalidGroupStatus.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidGroupStatus" first="False" fullname="InvalidGroupStatus.message" ids="cinder.exception.InvalidGroupStatus.message" module="cinder.exception" names="cinder.exception.InvalidGroupStatus.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid Group Status: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidGroupType',\ 'cinder.exception.InvalidGroupType',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidGroupType" ids="cinder.exception.InvalidGroupType" module="cinder.exception" names="cinder.exception.InvalidGroupType"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidGroupType</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidGroupType\ attribute)',\ 'cinder.exception.InvalidGroupType.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidGroupType" first="False" fullname="InvalidGroupType.message" ids="cinder.exception.InvalidGroupType.message" module="cinder.exception" names="cinder.exception.InvalidGroupType.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid group type: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidHost',\ 'cinder.exception.InvalidHost',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidHost" ids="cinder.exception.InvalidHost" module="cinder.exception" names="cinder.exception.InvalidHost"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidHost</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidHost\ attribute)',\ 'cinder.exception.InvalidHost.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidHost" first="False" fullname="InvalidHost.message" ids="cinder.exception.InvalidHost.message" module="cinder.exception" names="cinder.exception.InvalidHost.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid host: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidImageRef',\ 'cinder.exception.InvalidImageRef',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidImageRef" ids="cinder.exception.InvalidImageRef" module="cinder.exception" names="cinder.exception.InvalidImageRef"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidImageRef</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidImageRef\ attribute)',\ 'cinder.exception.InvalidImageRef.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidImageRef" first="False" fullname="InvalidImageRef.message" ids="cinder.exception.InvalidImageRef.message" module="cinder.exception" names="cinder.exception.InvalidImageRef.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid image href %(image_href)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidInput',\ 'cinder.exception.InvalidInput',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidInput" ids="cinder.exception.InvalidInput" module="cinder.exception" names="cinder.exception.InvalidInput"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidInput</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidInput\ attribute)',\ 'cinder.exception.InvalidInput.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidInput" first="False" fullname="InvalidInput.message" ids="cinder.exception.InvalidInput.message" module="cinder.exception" names="cinder.exception.InvalidInput.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid input received: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidMetadataType',\ 'cinder.exception.InvalidMetadataType',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidMetadataType" ids="cinder.exception.InvalidMetadataType" module="cinder.exception" names="cinder.exception.InvalidMetadataType"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidMetadataType</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidMetadataType\ attribute)',\ 'cinder.exception.InvalidMetadataType.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidMetadataType" first="False" fullname="InvalidMetadataType.message" ids="cinder.exception.InvalidMetadataType.message" module="cinder.exception" names="cinder.exception.InvalidMetadataType.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The type of metadata: %(metadata_type)s for volume/snapshot %(id)s is invalid.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidNestedQuotaSetup',\ 'cinder.exception.InvalidNestedQuotaSetup',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidNestedQuotaSetup" ids="cinder.exception.InvalidNestedQuotaSetup" module="cinder.exception" names="cinder.exception.InvalidNestedQuotaSetup"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidNestedQuotaSetup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidNestedQuotaSetup\ attribute)',\ 'cinder.exception.InvalidNestedQuotaSetup.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidNestedQuotaSetup" first="False" fullname="InvalidNestedQuotaSetup.message" ids="cinder.exception.InvalidNestedQuotaSetup.message" module="cinder.exception" names="cinder.exception.InvalidNestedQuotaSetup.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Project quotas are not properly setup for nested quotas: %(reason)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidParameterValue',\ 'cinder.exception.InvalidParameterValue',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidParameterValue" ids="cinder.exception.InvalidParameterValue" module="cinder.exception" names="cinder.exception.InvalidParameterValue"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidParameterValue</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidParameterValue\ attribute)',\ 'cinder.exception.InvalidParameterValue.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidParameterValue" first="False" fullname="InvalidParameterValue.message" ids="cinder.exception.InvalidParameterValue.message" module="cinder.exception" names="cinder.exception.InvalidParameterValue.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(err)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidQoSSpecs',\ 'cinder.exception.InvalidQoSSpecs',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidQoSSpecs" ids="cinder.exception.InvalidQoSSpecs" module="cinder.exception" names="cinder.exception.InvalidQoSSpecs"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidQoSSpecs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidQoSSpecs\ attribute)',\ 'cinder.exception.InvalidQoSSpecs.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidQoSSpecs" first="False" fullname="InvalidQoSSpecs.message" ids="cinder.exception.InvalidQoSSpecs.message" module="cinder.exception" names="cinder.exception.InvalidQoSSpecs.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid qos specs: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidQuotaValue',\ 'cinder.exception.InvalidQuotaValue',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidQuotaValue" ids="cinder.exception.InvalidQuotaValue" module="cinder.exception" names="cinder.exception.InvalidQuotaValue"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidQuotaValue</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidQuotaValue\ attribute)',\ 'cinder.exception.InvalidQuotaValue.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidQuotaValue" first="False" fullname="InvalidQuotaValue.message" ids="cinder.exception.InvalidQuotaValue.message" module="cinder.exception" names="cinder.exception.InvalidQuotaValue.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Change would make usage less than 0 for the following resources: %(unders)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidReplicationTarget',\ 'cinder.exception.InvalidReplicationTarget',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidReplicationTarget" ids="cinder.exception.InvalidReplicationTarget" module="cinder.exception" names="cinder.exception.InvalidReplicationTarget"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidReplicationTarget</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidReplicationTarget\ attribute)',\ 'cinder.exception.InvalidReplicationTarget.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidReplicationTarget" first="False" fullname="InvalidReplicationTarget.message" ids="cinder.exception.InvalidReplicationTarget.message" module="cinder.exception" names="cinder.exception.InvalidReplicationTarget.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid Replication Target: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidReservationExpiration',\ 'cinder.exception.InvalidReservationExpiration',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidReservationExpiration" ids="cinder.exception.InvalidReservationExpiration" module="cinder.exception" names="cinder.exception.InvalidReservationExpiration"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidReservationExpiration</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidReservationExpiration\ attribute)',\ 'cinder.exception.InvalidReservationExpiration.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidReservationExpiration" first="False" fullname="InvalidReservationExpiration.message" ids="cinder.exception.InvalidReservationExpiration.message" module="cinder.exception" names="cinder.exception.InvalidReservationExpiration.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid reservation expiration %(expire)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidResults',\ 'cinder.exception.InvalidResults',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidResults" ids="cinder.exception.InvalidResults" module="cinder.exception" names="cinder.exception.InvalidResults"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidResults</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidResults\ attribute)',\ 'cinder.exception.InvalidResults.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidResults" first="False" fullname="InvalidResults.message" ids="cinder.exception.InvalidResults.message" module="cinder.exception" names="cinder.exception.InvalidResults.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The results are invalid.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidSnapshot',\ 'cinder.exception.InvalidSnapshot',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidSnapshot" ids="cinder.exception.InvalidSnapshot" module="cinder.exception" names="cinder.exception.InvalidSnapshot"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidSnapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidSnapshot\ attribute)',\ 'cinder.exception.InvalidSnapshot.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidSnapshot" first="False" fullname="InvalidSnapshot.message" ids="cinder.exception.InvalidSnapshot.message" module="cinder.exception" names="cinder.exception.InvalidSnapshot.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid snapshot: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidUUID',\ 'cinder.exception.InvalidUUID',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidUUID" ids="cinder.exception.InvalidUUID" module="cinder.exception" names="cinder.exception.InvalidUUID"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidUUID</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidUUID\ attribute)',\ 'cinder.exception.InvalidUUID.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidUUID" first="False" fullname="InvalidUUID.message" ids="cinder.exception.InvalidUUID.message" module="cinder.exception" names="cinder.exception.InvalidUUID.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Expected a UUID but received %(uuid)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidVolume',\ 'cinder.exception.InvalidVolume',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidVolume" ids="cinder.exception.InvalidVolume" module="cinder.exception" names="cinder.exception.InvalidVolume"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidVolume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidVolume\ attribute)',\ 'cinder.exception.InvalidVolume.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidVolume" first="False" fullname="InvalidVolume.message" ids="cinder.exception.InvalidVolume.message" module="cinder.exception" names="cinder.exception.InvalidVolume.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid volume: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidVolumeAttachMode',\ 'cinder.exception.InvalidVolumeAttachMode',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidVolumeAttachMode" ids="cinder.exception.InvalidVolumeAttachMode" module="cinder.exception" names="cinder.exception.InvalidVolumeAttachMode"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidVolumeAttachMode</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidVolumeAttachMode\ attribute)',\ 'cinder.exception.InvalidVolumeAttachMode.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidVolumeAttachMode" first="False" fullname="InvalidVolumeAttachMode.message" ids="cinder.exception.InvalidVolumeAttachMode.message" module="cinder.exception" names="cinder.exception.InvalidVolumeAttachMode.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Invalid attaching mode '%(mode)s' for volume %(volume_id)s."</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidVolumeMetadata',\ 'cinder.exception.InvalidVolumeMetadata',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidVolumeMetadata" ids="cinder.exception.InvalidVolumeMetadata" module="cinder.exception" names="cinder.exception.InvalidVolumeMetadata"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidVolumeMetadata</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidVolumeMetadata\ attribute)',\ 'cinder.exception.InvalidVolumeMetadata.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidVolumeMetadata" first="False" fullname="InvalidVolumeMetadata.message" ids="cinder.exception.InvalidVolumeMetadata.message" module="cinder.exception" names="cinder.exception.InvalidVolumeMetadata.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid metadata: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidVolumeMetadataSize',\ 'cinder.exception.InvalidVolumeMetadataSize',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidVolumeMetadataSize" ids="cinder.exception.InvalidVolumeMetadataSize" module="cinder.exception" names="cinder.exception.InvalidVolumeMetadataSize"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidVolumeMetadataSize</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidVolumeMetadataSize\ attribute)',\ 'cinder.exception.InvalidVolumeMetadataSize.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidVolumeMetadataSize" first="False" fullname="InvalidVolumeMetadataSize.message" ids="cinder.exception.InvalidVolumeMetadataSize.message" module="cinder.exception" names="cinder.exception.InvalidVolumeMetadataSize.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid metadata size: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'InvalidVolumeType',\ 'cinder.exception.InvalidVolumeType',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="InvalidVolumeType" ids="cinder.exception.InvalidVolumeType" module="cinder.exception" names="cinder.exception.InvalidVolumeType"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidVolumeType</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (InvalidVolumeType\ attribute)',\ 'cinder.exception.InvalidVolumeType.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InvalidVolumeType" first="False" fullname="InvalidVolumeType.message" ids="cinder.exception.InvalidVolumeType.message" module="cinder.exception" names="cinder.exception.InvalidVolumeType.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid volume type: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'KaminarioCinderDriverException',\ 'cinder.exception.KaminarioCinderDriverException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="KaminarioCinderDriverException" ids="cinder.exception.KaminarioCinderDriverException" module="cinder.exception" names="cinder.exception.KaminarioCinderDriverException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">KaminarioCinderDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (KaminarioCinderDriverException\ attribute)',\ 'cinder.exception.KaminarioCinderDriverException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KaminarioCinderDriverException" first="False" fullname="KaminarioCinderDriverException.message" ids="cinder.exception.KaminarioCinderDriverException.message" module="cinder.exception" names="cinder.exception.KaminarioCinderDriverException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'KaminarioCinderDriver failure: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'KaminarioRetryableException',\ 'cinder.exception.KaminarioRetryableException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="KaminarioRetryableException" ids="cinder.exception.KaminarioRetryableException" module="cinder.exception" names="cinder.exception.KaminarioRetryableException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">KaminarioRetryableException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (KaminarioRetryableException\ attribute)',\ 'cinder.exception.KaminarioRetryableException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KaminarioRetryableException" first="False" fullname="KaminarioRetryableException.message" ids="cinder.exception.KaminarioRetryableException.message" module="cinder.exception" names="cinder.exception.KaminarioRetryableException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Kaminario retryable exception: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'KeyManagerError',\ 'cinder.exception.KeyManagerError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="KeyManagerError" ids="cinder.exception.KeyManagerError" module="cinder.exception" names="cinder.exception.KeyManagerError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">KeyManagerError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (KeyManagerError\ attribute)',\ 'cinder.exception.KeyManagerError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyManagerError" first="False" fullname="KeyManagerError.message" ids="cinder.exception.KeyManagerError.message" module="cinder.exception" names="cinder.exception.KeyManagerError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'key manager error: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'LockCreationFailed',\ 'cinder.exception.LockCreationFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="LockCreationFailed" ids="cinder.exception.LockCreationFailed" module="cinder.exception" names="cinder.exception.LockCreationFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">LockCreationFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (LockCreationFailed\ attribute)',\ 'cinder.exception.LockCreationFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="LockCreationFailed" first="False" fullname="LockCreationFailed.message" ids="cinder.exception.LockCreationFailed.message" module="cinder.exception" names="cinder.exception.LockCreationFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to create lock. Coordination backend not started.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'LockingFailed',\ 'cinder.exception.LockingFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="LockingFailed" ids="cinder.exception.LockingFailed" module="cinder.exception" names="cinder.exception.LockingFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">LockingFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (LockingFailed\ attribute)',\ 'cinder.exception.LockingFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="LockingFailed" first="False" fullname="LockingFailed.message" ids="cinder.exception.LockingFailed.message" module="cinder.exception" names="cinder.exception.LockingFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Lock acquisition failed.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'MalformedRequestBody',\ 'cinder.exception.MalformedRequestBody',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="MalformedRequestBody" ids="cinder.exception.MalformedRequestBody" module="cinder.exception" names="cinder.exception.MalformedRequestBody"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MalformedRequestBody</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (MalformedRequestBody\ attribute)',\ 'cinder.exception.MalformedRequestBody.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MalformedRequestBody" first="False" fullname="MalformedRequestBody.message" ids="cinder.exception.MalformedRequestBody.message" module="cinder.exception" names="cinder.exception.MalformedRequestBody.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Malformed message body: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'MalformedResponse',\ 'cinder.exception.MalformedResponse',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="MalformedResponse" ids="cinder.exception.MalformedResponse" module="cinder.exception" names="cinder.exception.MalformedResponse"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MalformedResponse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (MalformedResponse\ attribute)',\ 'cinder.exception.MalformedResponse.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MalformedResponse" first="False" fullname="MalformedResponse.message" ids="cinder.exception.MalformedResponse.message" module="cinder.exception" names="cinder.exception.MalformedResponse.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Malformed response to command %(cmd)s: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ManageExistingAlreadyManaged',\ 'cinder.exception.ManageExistingAlreadyManaged',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ManageExistingAlreadyManaged" ids="cinder.exception.ManageExistingAlreadyManaged" module="cinder.exception" names="cinder.exception.ManageExistingAlreadyManaged"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ManageExistingAlreadyManaged</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ManageExistingAlreadyManaged\ attribute)',\ 'cinder.exception.ManageExistingAlreadyManaged.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ManageExistingAlreadyManaged" first="False" fullname="ManageExistingAlreadyManaged.message" ids="cinder.exception.ManageExistingAlreadyManaged.message" module="cinder.exception" names="cinder.exception.ManageExistingAlreadyManaged.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to manage existing volume. Volume %(volume_ref)s already managed.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ManageExistingInvalidReference',\ 'cinder.exception.ManageExistingInvalidReference',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ManageExistingInvalidReference" ids="cinder.exception.ManageExistingInvalidReference" module="cinder.exception" names="cinder.exception.ManageExistingInvalidReference"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ManageExistingInvalidReference</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ManageExistingInvalidReference\ attribute)',\ 'cinder.exception.ManageExistingInvalidReference.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ManageExistingInvalidReference" first="False" fullname="ManageExistingInvalidReference.message" ids="cinder.exception.ManageExistingInvalidReference.message" module="cinder.exception" names="cinder.exception.ManageExistingInvalidReference.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Manage existing volume failed due to invalid backend reference %(existing_ref)s: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ManageExistingVolumeTypeMismatch',\ 'cinder.exception.ManageExistingVolumeTypeMismatch',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ManageExistingVolumeTypeMismatch" ids="cinder.exception.ManageExistingVolumeTypeMismatch" module="cinder.exception" names="cinder.exception.ManageExistingVolumeTypeMismatch"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ManageExistingVolumeTypeMismatch</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ManageExistingVolumeTypeMismatch\ attribute)',\ 'cinder.exception.ManageExistingVolumeTypeMismatch.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ManageExistingVolumeTypeMismatch" first="False" fullname="ManageExistingVolumeTypeMismatch.message" ids="cinder.exception.ManageExistingVolumeTypeMismatch.message" module="cinder.exception" names="cinder.exception.ManageExistingVolumeTypeMismatch.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Manage existing volume failed due to volume type mismatch: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'MessageNotFound',\ 'cinder.exception.MessageNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="MessageNotFound" ids="cinder.exception.MessageNotFound" module="cinder.exception" names="cinder.exception.MessageNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MessageNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (MessageNotFound\ attribute)',\ 'cinder.exception.MessageNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MessageNotFound" first="False" fullname="MessageNotFound.message" ids="cinder.exception.MessageNotFound.message" module="cinder.exception" names="cinder.exception.MessageNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Message %(message_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'MetadataAbsent',\ 'cinder.exception.MetadataAbsent',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="MetadataAbsent" ids="cinder.exception.MetadataAbsent" module="cinder.exception" names="cinder.exception.MetadataAbsent"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MetadataAbsent</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (MetadataAbsent\ attribute)',\ 'cinder.exception.MetadataAbsent.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadataAbsent" first="False" fullname="MetadataAbsent.message" ids="cinder.exception.MetadataAbsent.message" module="cinder.exception" names="cinder.exception.MetadataAbsent.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'There is no metadata in DB object.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'MetadataCopyFailure',\ 'cinder.exception.MetadataCopyFailure',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="MetadataCopyFailure" ids="cinder.exception.MetadataCopyFailure" module="cinder.exception" names="cinder.exception.MetadataCopyFailure"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MetadataCopyFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (MetadataCopyFailure\ attribute)',\ 'cinder.exception.MetadataCopyFailure.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadataCopyFailure" first="False" fullname="MetadataCopyFailure.message" ids="cinder.exception.MetadataCopyFailure.message" module="cinder.exception" names="cinder.exception.MetadataCopyFailure.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to copy metadata to volume: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'MetadataCreateFailure',\ 'cinder.exception.MetadataCreateFailure',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="MetadataCreateFailure" ids="cinder.exception.MetadataCreateFailure" module="cinder.exception" names="cinder.exception.MetadataCreateFailure"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MetadataCreateFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (MetadataCreateFailure\ attribute)',\ 'cinder.exception.MetadataCreateFailure.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadataCreateFailure" first="False" fullname="MetadataCreateFailure.message" ids="cinder.exception.MetadataCreateFailure.message" module="cinder.exception" names="cinder.exception.MetadataCreateFailure.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to create metadata for volume: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'MetadataUpdateFailure',\ 'cinder.exception.MetadataUpdateFailure',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="MetadataUpdateFailure" ids="cinder.exception.MetadataUpdateFailure" module="cinder.exception" names="cinder.exception.MetadataUpdateFailure"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MetadataUpdateFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (MetadataUpdateFailure\ attribute)',\ 'cinder.exception.MetadataUpdateFailure.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MetadataUpdateFailure" first="False" fullname="MetadataUpdateFailure.message" ids="cinder.exception.MetadataUpdateFailure.message" module="cinder.exception" names="cinder.exception.MetadataUpdateFailure.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to update metadata for volume: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'MissingRequired',\ 'cinder.exception.MissingRequired',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="MissingRequired" ids="cinder.exception.MissingRequired" module="cinder.exception" names="cinder.exception.MissingRequired"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MissingRequired</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (MissingRequired\ attribute)',\ 'cinder.exception.MissingRequired.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MissingRequired" first="False" fullname="MissingRequired.message" ids="cinder.exception.MissingRequired.message" module="cinder.exception" names="cinder.exception.MissingRequired.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Missing required element '%(element)s' in request body."</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NetAppDriverException',\ 'cinder.exception.NetAppDriverException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NetAppDriverException" ids="cinder.exception.NetAppDriverException" module="cinder.exception" names="cinder.exception.NetAppDriverException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NetAppDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (NetAppDriverException\ attribute)',\ 'cinder.exception.NetAppDriverException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppDriverException" first="False" fullname="NetAppDriverException.message" ids="cinder.exception.NetAppDriverException.message" module="cinder.exception" names="cinder.exception.NetAppDriverException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'NetApp Cinder Driver exception.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NexentaException',\ 'cinder.exception.NexentaException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NexentaException" ids="cinder.exception.NexentaException" module="cinder.exception" names="cinder.exception.NexentaException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NexentaException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (NexentaException\ attribute)',\ 'cinder.exception.NexentaException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NexentaException" first="False" fullname="NexentaException.message" ids="cinder.exception.NexentaException.message" module="cinder.exception" names="cinder.exception.NexentaException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NfsException',\ 'cinder.exception.NfsException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NfsException" ids="cinder.exception.NfsException" module="cinder.exception" names="cinder.exception.NfsException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NfsException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.RemoteFSException" reftitle="cinder.exception.RemoteFSException"><literal classes="xref py py-class">cinder.exception.RemoteFSException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (NfsException\ attribute)',\ 'cinder.exception.NfsException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NfsException" first="False" fullname="NfsException.message" ids="cinder.exception.NfsException.message" module="cinder.exception" names="cinder.exception.NfsException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unknown NFS exception'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NfsNoSharesMounted',\ 'cinder.exception.NfsNoSharesMounted',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NfsNoSharesMounted" ids="cinder.exception.NfsNoSharesMounted" module="cinder.exception" names="cinder.exception.NfsNoSharesMounted"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NfsNoSharesMounted</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.RemoteFSNoSharesMounted" reftitle="cinder.exception.RemoteFSNoSharesMounted"><literal classes="xref py py-class">cinder.exception.RemoteFSNoSharesMounted</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (NfsNoSharesMounted\ attribute)',\ 'cinder.exception.NfsNoSharesMounted.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NfsNoSharesMounted" first="False" fullname="NfsNoSharesMounted.message" ids="cinder.exception.NfsNoSharesMounted.message" module="cinder.exception" names="cinder.exception.NfsNoSharesMounted.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No mounted NFS shares found'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NfsNoSuitableShareFound',\ 'cinder.exception.NfsNoSuitableShareFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NfsNoSuitableShareFound" ids="cinder.exception.NfsNoSuitableShareFound" module="cinder.exception" names="cinder.exception.NfsNoSuitableShareFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NfsNoSuitableShareFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.RemoteFSNoSuitableShareFound" reftitle="cinder.exception.RemoteFSNoSuitableShareFound"><literal classes="xref py py-class">cinder.exception.RemoteFSNoSuitableShareFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (NfsNoSuitableShareFound\ attribute)',\ 'cinder.exception.NfsNoSuitableShareFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NfsNoSuitableShareFound" first="False" fullname="NfsNoSuitableShareFound.message" ids="cinder.exception.NfsNoSuitableShareFound.message" module="cinder.exception" names="cinder.exception.NfsNoSuitableShareFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'There is no share which can host %(volume_size)sG'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NoMoreTargets',\ 'cinder.exception.NoMoreTargets',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NoMoreTargets" ids="cinder.exception.NoMoreTargets" module="cinder.exception" names="cinder.exception.NoMoreTargets"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NoMoreTargets</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <paragraph>No more available targets.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NoValidBackend',\ 'cinder.exception.NoValidBackend',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NoValidBackend" ids="cinder.exception.NoValidBackend" module="cinder.exception" names="cinder.exception.NoValidBackend"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NoValidBackend</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (NoValidBackend\ attribute)',\ 'cinder.exception.NoValidBackend.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NoValidBackend" first="False" fullname="NoValidBackend.message" ids="cinder.exception.NoValidBackend.message" module="cinder.exception" names="cinder.exception.NoValidBackend.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No valid backend was found. %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NotAuthorized',\ 'cinder.exception.NotAuthorized',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NotAuthorized" ids="cinder.exception.NotAuthorized" module="cinder.exception" names="cinder.exception.NotAuthorized"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NotAuthorized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'code\ (NotAuthorized\ attribute)',\ 'cinder.exception.NotAuthorized.code',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NotAuthorized" first="False" fullname="NotAuthorized.code" ids="cinder.exception.NotAuthorized.code" module="cinder.exception" names="cinder.exception.NotAuthorized.code"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 403</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'message\ (NotAuthorized\ attribute)',\ 'cinder.exception.NotAuthorized.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NotAuthorized" first="False" fullname="NotAuthorized.message" ids="cinder.exception.NotAuthorized.message" module="cinder.exception" names="cinder.exception.NotAuthorized.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Not authorized.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NotFound',\ 'cinder.exception.NotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NotFound" ids="cinder.exception.NotFound" module="cinder.exception" names="cinder.exception.NotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'code\ (NotFound\ attribute)',\ 'cinder.exception.NotFound.code',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NotFound" first="False" fullname="NotFound.code" ids="cinder.exception.NotFound.code" module="cinder.exception" names="cinder.exception.NotFound.code"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 404</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'message\ (NotFound\ attribute)',\ 'cinder.exception.NotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NotFound" first="False" fullname="NotFound.message" ids="cinder.exception.NotFound.message" module="cinder.exception" names="cinder.exception.NotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Resource could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'safe\ (NotFound\ attribute)',\ 'cinder.exception.NotFound.safe',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NotFound" first="False" fullname="NotFound.safe" ids="cinder.exception.NotFound.safe" module="cinder.exception" names="cinder.exception.NotFound.safe"><desc_name xml:space="preserve">safe</desc_name><desc_annotation xml:space="preserve"> = True</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NotSupportedOperation',\ 'cinder.exception.NotSupportedOperation',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NotSupportedOperation" ids="cinder.exception.NotSupportedOperation" module="cinder.exception" names="cinder.exception.NotSupportedOperation"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NotSupportedOperation</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'code\ (NotSupportedOperation\ attribute)',\ 'cinder.exception.NotSupportedOperation.code',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NotSupportedOperation" first="False" fullname="NotSupportedOperation.code" ids="cinder.exception.NotSupportedOperation.code" module="cinder.exception" names="cinder.exception.NotSupportedOperation.code"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 405</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'message\ (NotSupportedOperation\ attribute)',\ 'cinder.exception.NotSupportedOperation.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NotSupportedOperation" first="False" fullname="NotSupportedOperation.message" ids="cinder.exception.NotSupportedOperation.message" module="cinder.exception" names="cinder.exception.NotSupportedOperation.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Operation not supported: %(operation)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'OverQuota',\ 'cinder.exception.OverQuota',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="OverQuota" ids="cinder.exception.OverQuota" module="cinder.exception" names="cinder.exception.OverQuota"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">OverQuota</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (OverQuota\ attribute)',\ 'cinder.exception.OverQuota.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="OverQuota" first="False" fullname="OverQuota.message" ids="cinder.exception.OverQuota.message" module="cinder.exception" names="cinder.exception.OverQuota.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota exceeded for resources: %(overs)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ParameterNotFound',\ 'cinder.exception.ParameterNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ParameterNotFound" ids="cinder.exception.ParameterNotFound" module="cinder.exception" names="cinder.exception.ParameterNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ParameterNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ParameterNotFound\ attribute)',\ 'cinder.exception.ParameterNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ParameterNotFound" first="False" fullname="ParameterNotFound.message" ids="cinder.exception.ParameterNotFound.message" module="cinder.exception" names="cinder.exception.ParameterNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Could not find parameter %(param)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'PolicyNotAuthorized',\ 'cinder.exception.PolicyNotAuthorized',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="PolicyNotAuthorized" ids="cinder.exception.PolicyNotAuthorized" module="cinder.exception" names="cinder.exception.PolicyNotAuthorized"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">PolicyNotAuthorized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotAuthorized" reftitle="cinder.exception.NotAuthorized"><literal classes="xref py py-class">cinder.exception.NotAuthorized</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (PolicyNotAuthorized\ attribute)',\ 'cinder.exception.PolicyNotAuthorized.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PolicyNotAuthorized" first="False" fullname="PolicyNotAuthorized.message" ids="cinder.exception.PolicyNotAuthorized.message" module="cinder.exception" names="cinder.exception.PolicyNotAuthorized.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Policy doesn't allow %(action)s to be performed."</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ProgrammingError',\ 'cinder.exception.ProgrammingError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ProgrammingError" ids="cinder.exception.ProgrammingError" module="cinder.exception" names="cinder.exception.ProgrammingError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ProgrammingError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ProgrammingError\ attribute)',\ 'cinder.exception.ProgrammingError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ProgrammingError" first="False" fullname="ProgrammingError.message" ids="cinder.exception.ProgrammingError.message" module="cinder.exception" names="cinder.exception.ProgrammingError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Programming error in Cinder: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ProjectQuotaNotFound',\ 'cinder.exception.ProjectQuotaNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ProjectQuotaNotFound" ids="cinder.exception.ProjectQuotaNotFound" module="cinder.exception" names="cinder.exception.ProjectQuotaNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ProjectQuotaNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaNotFound" reftitle="cinder.exception.QuotaNotFound"><literal classes="xref py py-class">cinder.exception.QuotaNotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ProjectQuotaNotFound\ attribute)',\ 'cinder.exception.ProjectQuotaNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ProjectQuotaNotFound" first="False" fullname="ProjectQuotaNotFound.message" ids="cinder.exception.ProjectQuotaNotFound.message" module="cinder.exception" names="cinder.exception.ProjectQuotaNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota for project %(project_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'PureDriverException',\ 'cinder.exception.PureDriverException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="PureDriverException" ids="cinder.exception.PureDriverException" module="cinder.exception" names="cinder.exception.PureDriverException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">PureDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (PureDriverException\ attribute)',\ 'cinder.exception.PureDriverException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PureDriverException" first="False" fullname="PureDriverException.message" ids="cinder.exception.PureDriverException.message" module="cinder.exception" names="cinder.exception.PureDriverException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Pure Storage Cinder driver failure: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'PureRetryableException',\ 'cinder.exception.PureRetryableException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="PureRetryableException" ids="cinder.exception.PureRetryableException" module="cinder.exception" names="cinder.exception.PureRetryableException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">PureRetryableException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeBackendAPIException" reftitle="cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (PureRetryableException\ attribute)',\ 'cinder.exception.PureRetryableException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PureRetryableException" first="False" fullname="PureRetryableException.message" ids="cinder.exception.PureRetryableException.message" module="cinder.exception" names="cinder.exception.PureRetryableException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Retryable Pure Storage Exception encountered'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QoSSpecsAssociateFailed',\ 'cinder.exception.QoSSpecsAssociateFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QoSSpecsAssociateFailed" ids="cinder.exception.QoSSpecsAssociateFailed" module="cinder.exception" names="cinder.exception.QoSSpecsAssociateFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsAssociateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (QoSSpecsAssociateFailed\ attribute)',\ 'cinder.exception.QoSSpecsAssociateFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QoSSpecsAssociateFailed" first="False" fullname="QoSSpecsAssociateFailed.message" ids="cinder.exception.QoSSpecsAssociateFailed.message" module="cinder.exception" names="cinder.exception.QoSSpecsAssociateFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to associate qos_specs: %(specs_id)s with type %(type_id)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QoSSpecsCreateFailed',\ 'cinder.exception.QoSSpecsCreateFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QoSSpecsCreateFailed" ids="cinder.exception.QoSSpecsCreateFailed" module="cinder.exception" names="cinder.exception.QoSSpecsCreateFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsCreateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (QoSSpecsCreateFailed\ attribute)',\ 'cinder.exception.QoSSpecsCreateFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QoSSpecsCreateFailed" first="False" fullname="QoSSpecsCreateFailed.message" ids="cinder.exception.QoSSpecsCreateFailed.message" module="cinder.exception" names="cinder.exception.QoSSpecsCreateFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to create qos_specs: %(name)s with specs %(qos_specs)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QoSSpecsDisassociateFailed',\ 'cinder.exception.QoSSpecsDisassociateFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QoSSpecsDisassociateFailed" ids="cinder.exception.QoSSpecsDisassociateFailed" module="cinder.exception" names="cinder.exception.QoSSpecsDisassociateFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsDisassociateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (QoSSpecsDisassociateFailed\ attribute)',\ 'cinder.exception.QoSSpecsDisassociateFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QoSSpecsDisassociateFailed" first="False" fullname="QoSSpecsDisassociateFailed.message" ids="cinder.exception.QoSSpecsDisassociateFailed.message" module="cinder.exception" names="cinder.exception.QoSSpecsDisassociateFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to disassociate qos_specs: %(specs_id)s with type %(type_id)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QoSSpecsExists',\ 'cinder.exception.QoSSpecsExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QoSSpecsExists" ids="cinder.exception.QoSSpecsExists" module="cinder.exception" names="cinder.exception.QoSSpecsExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Duplicate" reftitle="cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (QoSSpecsExists\ attribute)',\ 'cinder.exception.QoSSpecsExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QoSSpecsExists" first="False" fullname="QoSSpecsExists.message" ids="cinder.exception.QoSSpecsExists.message" module="cinder.exception" names="cinder.exception.QoSSpecsExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'QoS Specs %(specs_id)s already exists.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QoSSpecsInUse',\ 'cinder.exception.QoSSpecsInUse',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QoSSpecsInUse" ids="cinder.exception.QoSSpecsInUse" module="cinder.exception" names="cinder.exception.QoSSpecsInUse"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsInUse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (QoSSpecsInUse\ attribute)',\ 'cinder.exception.QoSSpecsInUse.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QoSSpecsInUse" first="False" fullname="QoSSpecsInUse.message" ids="cinder.exception.QoSSpecsInUse.message" module="cinder.exception" names="cinder.exception.QoSSpecsInUse.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'QoS Specs %(specs_id)s is still associated with entities.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QoSSpecsKeyNotFound',\ 'cinder.exception.QoSSpecsKeyNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QoSSpecsKeyNotFound" ids="cinder.exception.QoSSpecsKeyNotFound" module="cinder.exception" names="cinder.exception.QoSSpecsKeyNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsKeyNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (QoSSpecsKeyNotFound\ attribute)',\ 'cinder.exception.QoSSpecsKeyNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QoSSpecsKeyNotFound" first="False" fullname="QoSSpecsKeyNotFound.message" ids="cinder.exception.QoSSpecsKeyNotFound.message" module="cinder.exception" names="cinder.exception.QoSSpecsKeyNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'QoS spec %(specs_id)s has no spec with key %(specs_key)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QoSSpecsNotFound',\ 'cinder.exception.QoSSpecsNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QoSSpecsNotFound" ids="cinder.exception.QoSSpecsNotFound" module="cinder.exception" names="cinder.exception.QoSSpecsNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (QoSSpecsNotFound\ attribute)',\ 'cinder.exception.QoSSpecsNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QoSSpecsNotFound" first="False" fullname="QoSSpecsNotFound.message" ids="cinder.exception.QoSSpecsNotFound.message" module="cinder.exception" names="cinder.exception.QoSSpecsNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No such QoS spec %(specs_id)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QoSSpecsUpdateFailed',\ 'cinder.exception.QoSSpecsUpdateFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QoSSpecsUpdateFailed" ids="cinder.exception.QoSSpecsUpdateFailed" module="cinder.exception" names="cinder.exception.QoSSpecsUpdateFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsUpdateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (QoSSpecsUpdateFailed\ attribute)',\ 'cinder.exception.QoSSpecsUpdateFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QoSSpecsUpdateFailed" first="False" fullname="QoSSpecsUpdateFailed.message" ids="cinder.exception.QoSSpecsUpdateFailed.message" module="cinder.exception" names="cinder.exception.QoSSpecsUpdateFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to update qos_specs: %(specs_id)s with specs %(qos_specs)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QuotaClassNotFound',\ 'cinder.exception.QuotaClassNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QuotaClassNotFound" ids="cinder.exception.QuotaClassNotFound" module="cinder.exception" names="cinder.exception.QuotaClassNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QuotaClassNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaNotFound" reftitle="cinder.exception.QuotaNotFound"><literal classes="xref py py-class">cinder.exception.QuotaNotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (QuotaClassNotFound\ attribute)',\ 'cinder.exception.QuotaClassNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QuotaClassNotFound" first="False" fullname="QuotaClassNotFound.message" ids="cinder.exception.QuotaClassNotFound.message" module="cinder.exception" names="cinder.exception.QuotaClassNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota class %(class_name)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QuotaError',\ 'cinder.exception.QuotaError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QuotaError" ids="cinder.exception.QuotaError" module="cinder.exception" names="cinder.exception.QuotaError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QuotaError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'code\ (QuotaError\ attribute)',\ 'cinder.exception.QuotaError.code',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QuotaError" first="False" fullname="QuotaError.code" ids="cinder.exception.QuotaError.code" module="cinder.exception" names="cinder.exception.QuotaError.code"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 413</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'headers\ (QuotaError\ attribute)',\ 'cinder.exception.QuotaError.headers',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QuotaError" first="False" fullname="QuotaError.headers" ids="cinder.exception.QuotaError.headers" module="cinder.exception" names="cinder.exception.QuotaError.headers"><desc_name xml:space="preserve">headers</desc_name><desc_annotation xml:space="preserve"> = {'Retry-After': '0'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'message\ (QuotaError\ attribute)',\ 'cinder.exception.QuotaError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QuotaError" first="False" fullname="QuotaError.message" ids="cinder.exception.QuotaError.message" module="cinder.exception" names="cinder.exception.QuotaError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota exceeded: code=%(code)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'safe\ (QuotaError\ attribute)',\ 'cinder.exception.QuotaError.safe',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QuotaError" first="False" fullname="QuotaError.safe" ids="cinder.exception.QuotaError.safe" module="cinder.exception" names="cinder.exception.QuotaError.safe"><desc_name xml:space="preserve">safe</desc_name><desc_annotation xml:space="preserve"> = True</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QuotaNotFound',\ 'cinder.exception.QuotaNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QuotaNotFound" ids="cinder.exception.QuotaNotFound" module="cinder.exception" names="cinder.exception.QuotaNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QuotaNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (QuotaNotFound\ attribute)',\ 'cinder.exception.QuotaNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QuotaNotFound" first="False" fullname="QuotaNotFound.message" ids="cinder.exception.QuotaNotFound.message" module="cinder.exception" names="cinder.exception.QuotaNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota could not be found'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QuotaResourceUnknown',\ 'cinder.exception.QuotaResourceUnknown',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QuotaResourceUnknown" ids="cinder.exception.QuotaResourceUnknown" module="cinder.exception" names="cinder.exception.QuotaResourceUnknown"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QuotaResourceUnknown</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaNotFound" reftitle="cinder.exception.QuotaNotFound"><literal classes="xref py py-class">cinder.exception.QuotaNotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (QuotaResourceUnknown\ attribute)',\ 'cinder.exception.QuotaResourceUnknown.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QuotaResourceUnknown" first="False" fullname="QuotaResourceUnknown.message" ids="cinder.exception.QuotaResourceUnknown.message" module="cinder.exception" names="cinder.exception.QuotaResourceUnknown.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unknown quota resources %(unknown)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QuotaUsageNotFound',\ 'cinder.exception.QuotaUsageNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="QuotaUsageNotFound" ids="cinder.exception.QuotaUsageNotFound" module="cinder.exception" names="cinder.exception.QuotaUsageNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QuotaUsageNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaNotFound" reftitle="cinder.exception.QuotaNotFound"><literal classes="xref py py-class">cinder.exception.QuotaNotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (QuotaUsageNotFound\ attribute)',\ 'cinder.exception.QuotaUsageNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QuotaUsageNotFound" first="False" fullname="QuotaUsageNotFound.message" ids="cinder.exception.QuotaUsageNotFound.message" module="cinder.exception" names="cinder.exception.QuotaUsageNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota usage for project %(project_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'RPCTimeout',\ 'cinder.exception.RPCTimeout',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="RPCTimeout" ids="cinder.exception.RPCTimeout" module="cinder.exception" names="cinder.exception.RPCTimeout"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RPCTimeout</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'code\ (RPCTimeout\ attribute)',\ 'cinder.exception.RPCTimeout.code',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RPCTimeout" first="False" fullname="RPCTimeout.code" ids="cinder.exception.RPCTimeout.code" module="cinder.exception" names="cinder.exception.RPCTimeout.code"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 502</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'message\ (RPCTimeout\ attribute)',\ 'cinder.exception.RPCTimeout.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RPCTimeout" first="False" fullname="RPCTimeout.message" ids="cinder.exception.RPCTimeout.message" module="cinder.exception" names="cinder.exception.RPCTimeout.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Timeout while requesting capabilities from backend %(service)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'RdxAPICommandException',\ 'cinder.exception.RdxAPICommandException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="RdxAPICommandException" ids="cinder.exception.RdxAPICommandException" module="cinder.exception" names="cinder.exception.RdxAPICommandException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RdxAPICommandException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (RdxAPICommandException\ attribute)',\ 'cinder.exception.RdxAPICommandException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RdxAPICommandException" first="False" fullname="RdxAPICommandException.message" ids="cinder.exception.RdxAPICommandException.message" module="cinder.exception" names="cinder.exception.RdxAPICommandException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Reduxio API Command Exception'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'RdxAPIConnectionException',\ 'cinder.exception.RdxAPIConnectionException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="RdxAPIConnectionException" ids="cinder.exception.RdxAPIConnectionException" module="cinder.exception" names="cinder.exception.RdxAPIConnectionException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RdxAPIConnectionException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (RdxAPIConnectionException\ attribute)',\ 'cinder.exception.RdxAPIConnectionException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RdxAPIConnectionException" first="False" fullname="RdxAPIConnectionException.message" ids="cinder.exception.RdxAPIConnectionException.message" module="cinder.exception" names="cinder.exception.RdxAPIConnectionException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Reduxio API Connection Exception'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'RemoteFSConcurrentRequest',\ 'cinder.exception.RemoteFSConcurrentRequest',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="RemoteFSConcurrentRequest" ids="cinder.exception.RemoteFSConcurrentRequest" module="cinder.exception" names="cinder.exception.RemoteFSConcurrentRequest"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RemoteFSConcurrentRequest</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.RemoteFSException" reftitle="cinder.exception.RemoteFSException"><literal classes="xref py py-class">cinder.exception.RemoteFSException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (RemoteFSConcurrentRequest\ attribute)',\ 'cinder.exception.RemoteFSConcurrentRequest.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RemoteFSConcurrentRequest" first="False" fullname="RemoteFSConcurrentRequest.message" ids="cinder.exception.RemoteFSConcurrentRequest.message" module="cinder.exception" names="cinder.exception.RemoteFSConcurrentRequest.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'A concurrent, possibly contradictory, request has been made.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'RemoteFSException',\ 'cinder.exception.RemoteFSException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="RemoteFSException" ids="cinder.exception.RemoteFSException" module="cinder.exception" names="cinder.exception.RemoteFSException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RemoteFSException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (RemoteFSException\ attribute)',\ 'cinder.exception.RemoteFSException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RemoteFSException" first="False" fullname="RemoteFSException.message" ids="cinder.exception.RemoteFSException.message" module="cinder.exception" names="cinder.exception.RemoteFSException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unknown RemoteFS exception'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'RemoteFSNoSharesMounted',\ 'cinder.exception.RemoteFSNoSharesMounted',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="RemoteFSNoSharesMounted" ids="cinder.exception.RemoteFSNoSharesMounted" module="cinder.exception" names="cinder.exception.RemoteFSNoSharesMounted"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RemoteFSNoSharesMounted</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.RemoteFSException" reftitle="cinder.exception.RemoteFSException"><literal classes="xref py py-class">cinder.exception.RemoteFSException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (RemoteFSNoSharesMounted\ attribute)',\ 'cinder.exception.RemoteFSNoSharesMounted.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RemoteFSNoSharesMounted" first="False" fullname="RemoteFSNoSharesMounted.message" ids="cinder.exception.RemoteFSNoSharesMounted.message" module="cinder.exception" names="cinder.exception.RemoteFSNoSharesMounted.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No mounted shares found'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'RemoteFSNoSuitableShareFound',\ 'cinder.exception.RemoteFSNoSuitableShareFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="RemoteFSNoSuitableShareFound" ids="cinder.exception.RemoteFSNoSuitableShareFound" module="cinder.exception" names="cinder.exception.RemoteFSNoSuitableShareFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RemoteFSNoSuitableShareFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.RemoteFSException" reftitle="cinder.exception.RemoteFSException"><literal classes="xref py py-class">cinder.exception.RemoteFSException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (RemoteFSNoSuitableShareFound\ attribute)',\ 'cinder.exception.RemoteFSNoSuitableShareFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RemoteFSNoSuitableShareFound" first="False" fullname="RemoteFSNoSuitableShareFound.message" ids="cinder.exception.RemoteFSNoSuitableShareFound.message" module="cinder.exception" names="cinder.exception.RemoteFSNoSuitableShareFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'There is no share which can host %(volume_size)sG'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'RemoveExportException',\ 'cinder.exception.RemoveExportException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="RemoveExportException" ids="cinder.exception.RemoveExportException" module="cinder.exception" names="cinder.exception.RemoveExportException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RemoveExportException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (RemoveExportException\ attribute)',\ 'cinder.exception.RemoveExportException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RemoveExportException" first="False" fullname="RemoveExportException.message" ids="cinder.exception.RemoveExportException.message" module="cinder.exception" names="cinder.exception.RemoveExportException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to remove export for volume %(volume)s: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ReplicationError',\ 'cinder.exception.ReplicationError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ReplicationError" ids="cinder.exception.ReplicationError" module="cinder.exception" names="cinder.exception.ReplicationError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ReplicationError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ReplicationError\ attribute)',\ 'cinder.exception.ReplicationError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ReplicationError" first="False" fullname="ReplicationError.message" ids="cinder.exception.ReplicationError.message" module="cinder.exception" names="cinder.exception.ReplicationError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(volume_id)s replication error: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ReplicationGroupError',\ 'cinder.exception.ReplicationGroupError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ReplicationGroupError" ids="cinder.exception.ReplicationGroupError" module="cinder.exception" names="cinder.exception.ReplicationGroupError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ReplicationGroupError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ReplicationGroupError\ attribute)',\ 'cinder.exception.ReplicationGroupError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ReplicationGroupError" first="False" fullname="ReplicationGroupError.message" ids="cinder.exception.ReplicationGroupError.message" module="cinder.exception" names="cinder.exception.ReplicationGroupError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group %(group_id)s replication error: %(reason)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ReplicationNotFound',\ 'cinder.exception.ReplicationNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ReplicationNotFound" ids="cinder.exception.ReplicationNotFound" module="cinder.exception" names="cinder.exception.ReplicationNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ReplicationNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ReplicationNotFound\ attribute)',\ 'cinder.exception.ReplicationNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ReplicationNotFound" first="False" fullname="ReplicationNotFound.message" ids="cinder.exception.ReplicationNotFound.message" module="cinder.exception" names="cinder.exception.ReplicationNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume replication for %(volume_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ReservationNotFound',\ 'cinder.exception.ReservationNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ReservationNotFound" ids="cinder.exception.ReservationNotFound" module="cinder.exception" names="cinder.exception.ReservationNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ReservationNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaNotFound" reftitle="cinder.exception.QuotaNotFound"><literal classes="xref py py-class">cinder.exception.QuotaNotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ReservationNotFound\ attribute)',\ 'cinder.exception.ReservationNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ReservationNotFound" first="False" fullname="ReservationNotFound.message" ids="cinder.exception.ReservationNotFound.message" module="cinder.exception" names="cinder.exception.ReservationNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota reservation %(uuid)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SSHInjectionThreat',\ 'cinder.exception.SSHInjectionThreat',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SSHInjectionThreat" ids="cinder.exception.SSHInjectionThreat" module="cinder.exception" names="cinder.exception.SSHInjectionThreat"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SSHInjectionThreat</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SSHInjectionThreat\ attribute)',\ 'cinder.exception.SSHInjectionThreat.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SSHInjectionThreat" first="False" fullname="SSHInjectionThreat.message" ids="cinder.exception.SSHInjectionThreat.message" module="cinder.exception" names="cinder.exception.SSHInjectionThreat.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'SSH command injection detected: %(command)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SchedulerHostFilterNotFound',\ 'cinder.exception.SchedulerHostFilterNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SchedulerHostFilterNotFound" ids="cinder.exception.SchedulerHostFilterNotFound" module="cinder.exception" names="cinder.exception.SchedulerHostFilterNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SchedulerHostFilterNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SchedulerHostFilterNotFound\ attribute)',\ 'cinder.exception.SchedulerHostFilterNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SchedulerHostFilterNotFound" first="False" fullname="SchedulerHostFilterNotFound.message" ids="cinder.exception.SchedulerHostFilterNotFound.message" module="cinder.exception" names="cinder.exception.SchedulerHostFilterNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Scheduler Host Filter %(filter_name)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SchedulerHostWeigherNotFound',\ 'cinder.exception.SchedulerHostWeigherNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SchedulerHostWeigherNotFound" ids="cinder.exception.SchedulerHostWeigherNotFound" module="cinder.exception" names="cinder.exception.SchedulerHostWeigherNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SchedulerHostWeigherNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SchedulerHostWeigherNotFound\ attribute)',\ 'cinder.exception.SchedulerHostWeigherNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SchedulerHostWeigherNotFound" first="False" fullname="SchedulerHostWeigherNotFound.message" ids="cinder.exception.SchedulerHostWeigherNotFound.message" module="cinder.exception" names="cinder.exception.SchedulerHostWeigherNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Scheduler Host Weigher %(weigher_name)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ServerNotFound',\ 'cinder.exception.ServerNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ServerNotFound" ids="cinder.exception.ServerNotFound" module="cinder.exception" names="cinder.exception.ServerNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ServerNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ServerNotFound\ attribute)',\ 'cinder.exception.ServerNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ServerNotFound" first="False" fullname="ServerNotFound.message" ids="cinder.exception.ServerNotFound.message" module="cinder.exception" names="cinder.exception.ServerNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Instance %(uuid)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ServiceNotFound',\ 'cinder.exception.ServiceNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ServiceNotFound" ids="cinder.exception.ServiceNotFound" module="cinder.exception" names="cinder.exception.ServiceNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ServiceNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ServiceTooOld',\ 'cinder.exception.ServiceTooOld',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ServiceTooOld" ids="cinder.exception.ServiceTooOld" module="cinder.exception" names="cinder.exception.ServiceTooOld"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ServiceTooOld</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ServiceTooOld\ attribute)',\ 'cinder.exception.ServiceTooOld.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ServiceTooOld" first="False" fullname="ServiceTooOld.message" ids="cinder.exception.ServiceTooOld.message" module="cinder.exception" names="cinder.exception.ServiceTooOld.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Service is too old to fulfil this request.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ServiceUnavailable',\ 'cinder.exception.ServiceUnavailable',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ServiceUnavailable" ids="cinder.exception.ServiceUnavailable" module="cinder.exception" names="cinder.exception.ServiceUnavailable"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ServiceUnavailable</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ServiceUnavailable\ attribute)',\ 'cinder.exception.ServiceUnavailable.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ServiceUnavailable" first="False" fullname="ServiceUnavailable.message" ids="cinder.exception.ServiceUnavailable.message" module="cinder.exception" names="cinder.exception.ServiceUnavailable.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Service is unavailable at this time.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SheepdogCmdError',\ 'cinder.exception.SheepdogCmdError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SheepdogCmdError" ids="cinder.exception.SheepdogCmdError" module="cinder.exception" names="cinder.exception.SheepdogCmdError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SheepdogCmdError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.SheepdogError" reftitle="cinder.exception.SheepdogError"><literal classes="xref py py-class">cinder.exception.SheepdogError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SheepdogCmdError\ attribute)',\ 'cinder.exception.SheepdogCmdError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogCmdError" first="False" fullname="SheepdogCmdError.message" ids="cinder.exception.SheepdogCmdError.message" module="cinder.exception" names="cinder.exception.SheepdogCmdError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '(Command: %(cmd)s) (Return Code: %(exit_code)s) (Stdout: %(stdout)s) (Stderr: %(stderr)s)'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SheepdogError',\ 'cinder.exception.SheepdogError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SheepdogError" ids="cinder.exception.SheepdogError" module="cinder.exception" names="cinder.exception.SheepdogError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SheepdogError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeBackendAPIException" reftitle="cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SheepdogError\ attribute)',\ 'cinder.exception.SheepdogError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogError" first="False" fullname="SheepdogError.message" ids="cinder.exception.SheepdogError.message" module="cinder.exception" names="cinder.exception.SheepdogError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'An error has occurred in SheepdogDriver. (Reason: %(reason)s)'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SmbfsException',\ 'cinder.exception.SmbfsException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SmbfsException" ids="cinder.exception.SmbfsException" module="cinder.exception" names="cinder.exception.SmbfsException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SmbfsException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.RemoteFSException" reftitle="cinder.exception.RemoteFSException"><literal classes="xref py py-class">cinder.exception.RemoteFSException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SmbfsException\ attribute)',\ 'cinder.exception.SmbfsException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SmbfsException" first="False" fullname="SmbfsException.message" ids="cinder.exception.SmbfsException.message" module="cinder.exception" names="cinder.exception.SmbfsException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unknown SMBFS exception.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SmbfsNoSharesMounted',\ 'cinder.exception.SmbfsNoSharesMounted',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SmbfsNoSharesMounted" ids="cinder.exception.SmbfsNoSharesMounted" module="cinder.exception" names="cinder.exception.SmbfsNoSharesMounted"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SmbfsNoSharesMounted</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.RemoteFSNoSharesMounted" reftitle="cinder.exception.RemoteFSNoSharesMounted"><literal classes="xref py py-class">cinder.exception.RemoteFSNoSharesMounted</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SmbfsNoSharesMounted\ attribute)',\ 'cinder.exception.SmbfsNoSharesMounted.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SmbfsNoSharesMounted" first="False" fullname="SmbfsNoSharesMounted.message" ids="cinder.exception.SmbfsNoSharesMounted.message" module="cinder.exception" names="cinder.exception.SmbfsNoSharesMounted.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No mounted SMBFS shares found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SmbfsNoSuitableShareFound',\ 'cinder.exception.SmbfsNoSuitableShareFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SmbfsNoSuitableShareFound" ids="cinder.exception.SmbfsNoSuitableShareFound" module="cinder.exception" names="cinder.exception.SmbfsNoSuitableShareFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SmbfsNoSuitableShareFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.RemoteFSNoSuitableShareFound" reftitle="cinder.exception.RemoteFSNoSuitableShareFound"><literal classes="xref py py-class">cinder.exception.RemoteFSNoSuitableShareFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SmbfsNoSuitableShareFound\ attribute)',\ 'cinder.exception.SmbfsNoSuitableShareFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SmbfsNoSuitableShareFound" first="False" fullname="SmbfsNoSuitableShareFound.message" ids="cinder.exception.SmbfsNoSuitableShareFound.message" module="cinder.exception" names="cinder.exception.SmbfsNoSuitableShareFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'There is no share which can host %(volume_size)sG.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SnapshotIsBusy',\ 'cinder.exception.SnapshotIsBusy',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SnapshotIsBusy" ids="cinder.exception.SnapshotIsBusy" module="cinder.exception" names="cinder.exception.SnapshotIsBusy"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SnapshotIsBusy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SnapshotIsBusy\ attribute)',\ 'cinder.exception.SnapshotIsBusy.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SnapshotIsBusy" first="False" fullname="SnapshotIsBusy.message" ids="cinder.exception.SnapshotIsBusy.message" module="cinder.exception" names="cinder.exception.SnapshotIsBusy.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'deleting snapshot %(snapshot_name)s that has dependent volumes'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SnapshotLimitExceeded',\ 'cinder.exception.SnapshotLimitExceeded',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SnapshotLimitExceeded" ids="cinder.exception.SnapshotLimitExceeded" module="cinder.exception" names="cinder.exception.SnapshotLimitExceeded"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SnapshotLimitExceeded</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaError" reftitle="cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SnapshotLimitExceeded\ attribute)',\ 'cinder.exception.SnapshotLimitExceeded.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SnapshotLimitExceeded" first="False" fullname="SnapshotLimitExceeded.message" ids="cinder.exception.SnapshotLimitExceeded.message" module="cinder.exception" names="cinder.exception.SnapshotLimitExceeded.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Maximum number of snapshots allowed (%(allowed)d) exceeded'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SnapshotMetadataNotFound',\ 'cinder.exception.SnapshotMetadataNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SnapshotMetadataNotFound" ids="cinder.exception.SnapshotMetadataNotFound" module="cinder.exception" names="cinder.exception.SnapshotMetadataNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SnapshotMetadataNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SnapshotMetadataNotFound\ attribute)',\ 'cinder.exception.SnapshotMetadataNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SnapshotMetadataNotFound" first="False" fullname="SnapshotMetadataNotFound.message" ids="cinder.exception.SnapshotMetadataNotFound.message" module="cinder.exception" names="cinder.exception.SnapshotMetadataNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Snapshot %(snapshot_id)s has no metadata with key %(metadata_key)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SnapshotNotFound',\ 'cinder.exception.SnapshotNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SnapshotNotFound" ids="cinder.exception.SnapshotNotFound" module="cinder.exception" names="cinder.exception.SnapshotNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SnapshotNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SnapshotNotFound\ attribute)',\ 'cinder.exception.SnapshotNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SnapshotNotFound" first="False" fullname="SnapshotNotFound.message" ids="cinder.exception.SnapshotNotFound.message" module="cinder.exception" names="cinder.exception.SnapshotNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Snapshot %(snapshot_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SnapshotUnavailable',\ 'cinder.exception.SnapshotUnavailable',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SnapshotUnavailable" ids="cinder.exception.SnapshotUnavailable" module="cinder.exception" names="cinder.exception.SnapshotUnavailable"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SnapshotUnavailable</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeBackendAPIException" reftitle="cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SnapshotUnavailable\ attribute)',\ 'cinder.exception.SnapshotUnavailable.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SnapshotUnavailable" first="False" fullname="SnapshotUnavailable.message" ids="cinder.exception.SnapshotUnavailable.message" module="cinder.exception" names="cinder.exception.SnapshotUnavailable.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The snapshot is unavailable: %(data)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SolidFireAPIDataException',\ 'cinder.exception.SolidFireAPIDataException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SolidFireAPIDataException" ids="cinder.exception.SolidFireAPIDataException" module="cinder.exception" names="cinder.exception.SolidFireAPIDataException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SolidFireAPIDataException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.SolidFireAPIException" reftitle="cinder.exception.SolidFireAPIException"><literal classes="xref py py-class">cinder.exception.SolidFireAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SolidFireAPIDataException\ attribute)',\ 'cinder.exception.SolidFireAPIDataException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SolidFireAPIDataException" first="False" fullname="SolidFireAPIDataException.message" ids="cinder.exception.SolidFireAPIDataException.message" module="cinder.exception" names="cinder.exception.SolidFireAPIDataException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Error in SolidFire API response: data=%(data)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SolidFireAPIException',\ 'cinder.exception.SolidFireAPIException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SolidFireAPIException" ids="cinder.exception.SolidFireAPIException" module="cinder.exception" names="cinder.exception.SolidFireAPIException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SolidFireAPIException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeBackendAPIException" reftitle="cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SolidFireAPIException\ attribute)',\ 'cinder.exception.SolidFireAPIException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SolidFireAPIException" first="False" fullname="SolidFireAPIException.message" ids="cinder.exception.SolidFireAPIException.message" module="cinder.exception" names="cinder.exception.SolidFireAPIException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Bad response from SolidFire API'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SolidFireAccountNotFound',\ 'cinder.exception.SolidFireAccountNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SolidFireAccountNotFound" ids="cinder.exception.SolidFireAccountNotFound" module="cinder.exception" names="cinder.exception.SolidFireAccountNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SolidFireAccountNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.SolidFireDriverException" reftitle="cinder.exception.SolidFireDriverException"><literal classes="xref py py-class">cinder.exception.SolidFireDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SolidFireAccountNotFound\ attribute)',\ 'cinder.exception.SolidFireAccountNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SolidFireAccountNotFound" first="False" fullname="SolidFireAccountNotFound.message" ids="cinder.exception.SolidFireAccountNotFound.message" module="cinder.exception" names="cinder.exception.SolidFireAccountNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to locate account %(account_name)s on Solidfire device'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SolidFireDriverException',\ 'cinder.exception.SolidFireDriverException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SolidFireDriverException" ids="cinder.exception.SolidFireDriverException" module="cinder.exception" names="cinder.exception.SolidFireDriverException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SolidFireDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SolidFireDriverException\ attribute)',\ 'cinder.exception.SolidFireDriverException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SolidFireDriverException" first="False" fullname="SolidFireDriverException.message" ids="cinder.exception.SolidFireDriverException.message" module="cinder.exception" names="cinder.exception.SolidFireDriverException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'SolidFire Cinder Driver exception'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SolidFireRetryableException',\ 'cinder.exception.SolidFireRetryableException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SolidFireRetryableException" ids="cinder.exception.SolidFireRetryableException" module="cinder.exception" names="cinder.exception.SolidFireRetryableException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SolidFireRetryableException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeBackendAPIException" reftitle="cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SolidFireRetryableException\ attribute)',\ 'cinder.exception.SolidFireRetryableException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SolidFireRetryableException" first="False" fullname="SolidFireRetryableException.message" ids="cinder.exception.SolidFireRetryableException.message" module="cinder.exception" names="cinder.exception.SolidFireRetryableException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Retryable SolidFire Exception encountered'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SwiftConnectionFailed',\ 'cinder.exception.SwiftConnectionFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SwiftConnectionFailed" ids="cinder.exception.SwiftConnectionFailed" module="cinder.exception" names="cinder.exception.SwiftConnectionFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SwiftConnectionFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.BackupDriverException" reftitle="cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SwiftConnectionFailed\ attribute)',\ 'cinder.exception.SwiftConnectionFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SwiftConnectionFailed" first="False" fullname="SwiftConnectionFailed.message" ids="cinder.exception.SwiftConnectionFailed.message" module="cinder.exception" names="cinder.exception.SwiftConnectionFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Connection to swift failed: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SynoAPIHTTPError',\ 'cinder.exception.SynoAPIHTTPError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SynoAPIHTTPError" ids="cinder.exception.SynoAPIHTTPError" module="cinder.exception" names="cinder.exception.SynoAPIHTTPError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SynoAPIHTTPError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SynoAPIHTTPError\ attribute)',\ 'cinder.exception.SynoAPIHTTPError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SynoAPIHTTPError" first="False" fullname="SynoAPIHTTPError.message" ids="cinder.exception.SynoAPIHTTPError.message" module="cinder.exception" names="cinder.exception.SynoAPIHTTPError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'HTTP exit code: [%(code)s]'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SynoAuthError',\ 'cinder.exception.SynoAuthError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SynoAuthError" ids="cinder.exception.SynoAuthError" module="cinder.exception" names="cinder.exception.SynoAuthError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SynoAuthError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SynoAuthError\ attribute)',\ 'cinder.exception.SynoAuthError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SynoAuthError" first="False" fullname="SynoAuthError.message" ids="cinder.exception.SynoAuthError.message" module="cinder.exception" names="cinder.exception.SynoAuthError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Synology driver authentication failed: %(reason)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SynoLUNNotExist',\ 'cinder.exception.SynoLUNNotExist',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="SynoLUNNotExist" ids="cinder.exception.SynoLUNNotExist" module="cinder.exception" names="cinder.exception.SynoLUNNotExist"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SynoLUNNotExist</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (SynoLUNNotExist\ attribute)',\ 'cinder.exception.SynoLUNNotExist.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SynoLUNNotExist" first="False" fullname="SynoLUNNotExist.message" ids="cinder.exception.SynoLUNNotExist.message" module="cinder.exception" names="cinder.exception.SynoLUNNotExist.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'LUN not found by UUID: %(uuid)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'TegileAPIException',\ 'cinder.exception.TegileAPIException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="TegileAPIException" ids="cinder.exception.TegileAPIException" module="cinder.exception" names="cinder.exception.TegileAPIException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">TegileAPIException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeBackendAPIException" reftitle="cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (TegileAPIException\ attribute)',\ 'cinder.exception.TegileAPIException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TegileAPIException" first="False" fullname="TegileAPIException.message" ids="cinder.exception.TegileAPIException.message" module="cinder.exception" names="cinder.exception.TegileAPIException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unexpected response from Tegile IntelliFlash API'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'TransferNotFound',\ 'cinder.exception.TransferNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="TransferNotFound" ids="cinder.exception.TransferNotFound" module="cinder.exception" names="cinder.exception.TransferNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">TransferNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (TransferNotFound\ attribute)',\ 'cinder.exception.TransferNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TransferNotFound" first="False" fullname="TransferNotFound.message" ids="cinder.exception.TransferNotFound.message" module="cinder.exception" names="cinder.exception.TransferNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Transfer %(transfer_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'UnableToExecuteHyperScaleCmd',\ 'cinder.exception.UnableToExecuteHyperScaleCmd',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="UnableToExecuteHyperScaleCmd" ids="cinder.exception.UnableToExecuteHyperScaleCmd" module="cinder.exception" names="cinder.exception.UnableToExecuteHyperScaleCmd"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">UnableToExecuteHyperScaleCmd</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (UnableToExecuteHyperScaleCmd\ attribute)',\ 'cinder.exception.UnableToExecuteHyperScaleCmd.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="UnableToExecuteHyperScaleCmd" first="False" fullname="UnableToExecuteHyperScaleCmd.message" ids="cinder.exception.UnableToExecuteHyperScaleCmd.message" module="cinder.exception" names="cinder.exception.UnableToExecuteHyperScaleCmd.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Failed HyperScale command for '%(message)s'"</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'UnableToFailOver',\ 'cinder.exception.UnableToFailOver',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="UnableToFailOver" ids="cinder.exception.UnableToFailOver" module="cinder.exception" names="cinder.exception.UnableToFailOver"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">UnableToFailOver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (UnableToFailOver\ attribute)',\ 'cinder.exception.UnableToFailOver.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="UnableToFailOver" first="False" fullname="UnableToFailOver.message" ids="cinder.exception.UnableToFailOver.message" module="cinder.exception" names="cinder.exception.UnableToFailOver.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to failover to replication target: %(reason)s).'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'UnableToProcessHyperScaleCmdOutput',\ 'cinder.exception.UnableToProcessHyperScaleCmdOutput',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="UnableToProcessHyperScaleCmdOutput" ids="cinder.exception.UnableToProcessHyperScaleCmdOutput" module="cinder.exception" names="cinder.exception.UnableToProcessHyperScaleCmdOutput"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">UnableToProcessHyperScaleCmdOutput</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (UnableToProcessHyperScaleCmdOutput\ attribute)',\ 'cinder.exception.UnableToProcessHyperScaleCmdOutput.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="UnableToProcessHyperScaleCmdOutput" first="False" fullname="UnableToProcessHyperScaleCmdOutput.message" ids="cinder.exception.UnableToProcessHyperScaleCmdOutput.message" module="cinder.exception" names="cinder.exception.UnableToProcessHyperScaleCmdOutput.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Failed processing command output '%(cmd_out)s' for HyperScale command"</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'UnavailableDuringUpgrade',\ 'cinder.exception.UnavailableDuringUpgrade',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="UnavailableDuringUpgrade" ids="cinder.exception.UnavailableDuringUpgrade" module="cinder.exception" names="cinder.exception.UnavailableDuringUpgrade"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">UnavailableDuringUpgrade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (UnavailableDuringUpgrade\ attribute)',\ 'cinder.exception.UnavailableDuringUpgrade.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="UnavailableDuringUpgrade" first="False" fullname="UnavailableDuringUpgrade.message" ids="cinder.exception.UnavailableDuringUpgrade.message" module="cinder.exception" names="cinder.exception.UnavailableDuringUpgrade.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cannot perform %(action)s during system upgrade.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'UnexpectedOverQuota',\ 'cinder.exception.UnexpectedOverQuota',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="UnexpectedOverQuota" ids="cinder.exception.UnexpectedOverQuota" module="cinder.exception" names="cinder.exception.UnexpectedOverQuota"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">UnexpectedOverQuota</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaError" reftitle="cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (UnexpectedOverQuota\ attribute)',\ 'cinder.exception.UnexpectedOverQuota.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="UnexpectedOverQuota" first="False" fullname="UnexpectedOverQuota.message" ids="cinder.exception.UnexpectedOverQuota.message" module="cinder.exception" names="cinder.exception.UnexpectedOverQuota.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unexpected over quota on %(name)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'UnknownCmd',\ 'cinder.exception.UnknownCmd',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="UnknownCmd" ids="cinder.exception.UnknownCmd" module="cinder.exception" names="cinder.exception.UnknownCmd"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">UnknownCmd</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (UnknownCmd\ attribute)',\ 'cinder.exception.UnknownCmd.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="UnknownCmd" first="False" fullname="UnknownCmd.message" ids="cinder.exception.UnknownCmd.message" module="cinder.exception" names="cinder.exception.UnknownCmd.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unknown or unsupported command %(cmd)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VSPBusy',\ 'cinder.exception.VSPBusy',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VSPBusy" ids="cinder.exception.VSPBusy" module="cinder.exception" names="cinder.exception.VSPBusy"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VSPBusy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VSPError" reftitle="cinder.exception.VSPError"><literal classes="xref py py-class">cinder.exception.VSPError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VSPBusy\ attribute)',\ 'cinder.exception.VSPBusy.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPBusy" first="False" fullname="VSPBusy.message" ids="cinder.exception.VSPBusy.message" module="cinder.exception" names="cinder.exception.VSPBusy.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Device or resource is busy.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VSPError',\ 'cinder.exception.VSPError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VSPError" ids="cinder.exception.VSPError" module="cinder.exception" names="cinder.exception.VSPError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VSPError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VSPError\ attribute)',\ 'cinder.exception.VSPError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPError" first="False" fullname="VSPError.message" ids="cinder.exception.VSPError.message" module="cinder.exception" names="cinder.exception.VSPError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'VSP error occurred. %(message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VSPNotSupported',\ 'cinder.exception.VSPNotSupported',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VSPNotSupported" ids="cinder.exception.VSPNotSupported" module="cinder.exception" names="cinder.exception.VSPNotSupported"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VSPNotSupported</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VSPError" reftitle="cinder.exception.VSPError"><literal classes="xref py py-class">cinder.exception.VSPError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VSPNotSupported\ attribute)',\ 'cinder.exception.VSPNotSupported.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPNotSupported" first="False" fullname="VSPNotSupported.message" ids="cinder.exception.VSPNotSupported.message" module="cinder.exception" names="cinder.exception.VSPNotSupported.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The function on the storage is not supported.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ValidationError',\ 'cinder.exception.ValidationError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ValidationError" ids="cinder.exception.ValidationError" module="cinder.exception" names="cinder.exception.ValidationError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ValidationError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ValidationError\ attribute)',\ 'cinder.exception.ValidationError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ValidationError" first="False" fullname="ValidationError.message" ids="cinder.exception.ValidationError.message" module="cinder.exception" names="cinder.exception.ValidationError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(detail)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VersionNotFoundForAPIMethod',\ 'cinder.exception.VersionNotFoundForAPIMethod',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VersionNotFoundForAPIMethod" ids="cinder.exception.VersionNotFoundForAPIMethod" module="cinder.exception" names="cinder.exception.VersionNotFoundForAPIMethod"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VersionNotFoundForAPIMethod</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VersionNotFoundForAPIMethod\ attribute)',\ 'cinder.exception.VersionNotFoundForAPIMethod.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VersionNotFoundForAPIMethod" first="False" fullname="VersionNotFoundForAPIMethod.message" ids="cinder.exception.VersionNotFoundForAPIMethod.message" module="cinder.exception" names="cinder.exception.VersionNotFoundForAPIMethod.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'API version %(version)s is not supported on this method.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ViolinBackendErr',\ 'cinder.exception.ViolinBackendErr',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ViolinBackendErr" ids="cinder.exception.ViolinBackendErr" module="cinder.exception" names="cinder.exception.ViolinBackendErr"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ViolinBackendErr</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeBackendAPIException" reftitle="cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ViolinBackendErr\ attribute)',\ 'cinder.exception.ViolinBackendErr.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ViolinBackendErr" first="False" fullname="ViolinBackendErr.message" ids="cinder.exception.ViolinBackendErr.message" module="cinder.exception" names="cinder.exception.ViolinBackendErr.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backend reports: %(message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ViolinBackendErrExists',\ 'cinder.exception.ViolinBackendErrExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ViolinBackendErrExists" ids="cinder.exception.ViolinBackendErrExists" module="cinder.exception" names="cinder.exception.ViolinBackendErrExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ViolinBackendErrExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeBackendAPIException" reftitle="cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ViolinBackendErrExists\ attribute)',\ 'cinder.exception.ViolinBackendErrExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ViolinBackendErrExists" first="False" fullname="ViolinBackendErrExists.message" ids="cinder.exception.ViolinBackendErrExists.message" module="cinder.exception" names="cinder.exception.ViolinBackendErrExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backend reports: item already exists'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ViolinBackendErrNotFound',\ 'cinder.exception.ViolinBackendErrNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ViolinBackendErrNotFound" ids="cinder.exception.ViolinBackendErrNotFound" module="cinder.exception" names="cinder.exception.ViolinBackendErrNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ViolinBackendErrNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ViolinBackendErrNotFound\ attribute)',\ 'cinder.exception.ViolinBackendErrNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ViolinBackendErrNotFound" first="False" fullname="ViolinBackendErrNotFound.message" ids="cinder.exception.ViolinBackendErrNotFound.message" module="cinder.exception" names="cinder.exception.ViolinBackendErrNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backend reports: item not found'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ViolinInvalidBackendConfig',\ 'cinder.exception.ViolinInvalidBackendConfig',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ViolinInvalidBackendConfig" ids="cinder.exception.ViolinInvalidBackendConfig" module="cinder.exception" names="cinder.exception.ViolinInvalidBackendConfig"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ViolinInvalidBackendConfig</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ViolinInvalidBackendConfig\ attribute)',\ 'cinder.exception.ViolinInvalidBackendConfig.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ViolinInvalidBackendConfig" first="False" fullname="ViolinInvalidBackendConfig.message" ids="cinder.exception.ViolinInvalidBackendConfig.message" module="cinder.exception" names="cinder.exception.ViolinInvalidBackendConfig.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume backend config is invalid: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ViolinRequestRetryTimeout',\ 'cinder.exception.ViolinRequestRetryTimeout',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ViolinRequestRetryTimeout" ids="cinder.exception.ViolinRequestRetryTimeout" module="cinder.exception" names="cinder.exception.ViolinRequestRetryTimeout"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ViolinRequestRetryTimeout</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ViolinRequestRetryTimeout\ attribute)',\ 'cinder.exception.ViolinRequestRetryTimeout.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ViolinRequestRetryTimeout" first="False" fullname="ViolinRequestRetryTimeout.message" ids="cinder.exception.ViolinRequestRetryTimeout.message" module="cinder.exception" names="cinder.exception.ViolinRequestRetryTimeout.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backend service retry timeout hit: %(timeout)s sec'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ViolinResourceNotFound',\ 'cinder.exception.ViolinResourceNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ViolinResourceNotFound" ids="cinder.exception.ViolinResourceNotFound" module="cinder.exception" names="cinder.exception.ViolinResourceNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ViolinResourceNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ViolinResourceNotFound\ attribute)',\ 'cinder.exception.ViolinResourceNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ViolinResourceNotFound" first="False" fullname="ViolinResourceNotFound.message" ids="cinder.exception.ViolinResourceNotFound.message" module="cinder.exception" names="cinder.exception.ViolinResourceNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backend reports: %(message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeAdminMetadataNotFound',\ 'cinder.exception.VolumeAdminMetadataNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeAdminMetadataNotFound" ids="cinder.exception.VolumeAdminMetadataNotFound" module="cinder.exception" names="cinder.exception.VolumeAdminMetadataNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeAdminMetadataNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeAdminMetadataNotFound\ attribute)',\ 'cinder.exception.VolumeAdminMetadataNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeAdminMetadataNotFound" first="False" fullname="VolumeAdminMetadataNotFound.message" ids="cinder.exception.VolumeAdminMetadataNotFound.message" module="cinder.exception" names="cinder.exception.VolumeAdminMetadataNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(volume_id)s has no administration metadata with key %(metadata_key)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeAttached',\ 'cinder.exception.VolumeAttached',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeAttached" ids="cinder.exception.VolumeAttached" module="cinder.exception" names="cinder.exception.VolumeAttached"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeAttached</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeAttached\ attribute)',\ 'cinder.exception.VolumeAttached.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeAttached" first="False" fullname="VolumeAttached.message" ids="cinder.exception.VolumeAttached.message" module="cinder.exception" names="cinder.exception.VolumeAttached.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(volume_id)s is still attached, detach volume first.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeAttachmentNotFound',\ 'cinder.exception.VolumeAttachmentNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeAttachmentNotFound" ids="cinder.exception.VolumeAttachmentNotFound" module="cinder.exception" names="cinder.exception.VolumeAttachmentNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeAttachmentNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeAttachmentNotFound\ attribute)',\ 'cinder.exception.VolumeAttachmentNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeAttachmentNotFound" first="False" fullname="VolumeAttachmentNotFound.message" ids="cinder.exception.VolumeAttachmentNotFound.message" module="cinder.exception" names="cinder.exception.VolumeAttachmentNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume attachment could not be found with filter: %(filter)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeBackendAPIException',\ 'cinder.exception.VolumeBackendAPIException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeBackendAPIException" ids="cinder.exception.VolumeBackendAPIException" module="cinder.exception" names="cinder.exception.VolumeBackendAPIException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeBackendAPIException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeBackendAPIException\ attribute)',\ 'cinder.exception.VolumeBackendAPIException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeBackendAPIException" first="False" fullname="VolumeBackendAPIException.message" ids="cinder.exception.VolumeBackendAPIException.message" module="cinder.exception" names="cinder.exception.VolumeBackendAPIException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Bad or unexpected response from the storage volume backend API: %(data)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeBackupSizeExceedsAvailableQuota',\ 'cinder.exception.VolumeBackupSizeExceedsAvailableQuota',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeBackupSizeExceedsAvailableQuota" ids="cinder.exception.VolumeBackupSizeExceedsAvailableQuota" module="cinder.exception" names="cinder.exception.VolumeBackupSizeExceedsAvailableQuota"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeBackupSizeExceedsAvailableQuota</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaError" reftitle="cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeBackupSizeExceedsAvailableQuota\ attribute)',\ 'cinder.exception.VolumeBackupSizeExceedsAvailableQuota.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeBackupSizeExceedsAvailableQuota" first="False" fullname="VolumeBackupSizeExceedsAvailableQuota.message" ids="cinder.exception.VolumeBackupSizeExceedsAvailableQuota.message" module="cinder.exception" names="cinder.exception.VolumeBackupSizeExceedsAvailableQuota.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Requested backup exceeds allowed Backup gigabytes quota. Requested %(requested)sG, quota is %(quota)sG and %(consumed)sG has been consumed.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeDeviceNotFound',\ 'cinder.exception.VolumeDeviceNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeDeviceNotFound" ids="cinder.exception.VolumeDeviceNotFound" module="cinder.exception" names="cinder.exception.VolumeDeviceNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeDeviceNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeDeviceNotFound\ attribute)',\ 'cinder.exception.VolumeDeviceNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeDeviceNotFound" first="False" fullname="VolumeDeviceNotFound.message" ids="cinder.exception.VolumeDeviceNotFound.message" module="cinder.exception" names="cinder.exception.VolumeDeviceNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume device not found at %(device)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeDriverException',\ 'cinder.exception.VolumeDriverException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeDriverException" ids="cinder.exception.VolumeDriverException" module="cinder.exception" names="cinder.exception.VolumeDriverException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeDriverException\ attribute)',\ 'cinder.exception.VolumeDriverException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeDriverException" first="False" fullname="VolumeDriverException.message" ids="cinder.exception.VolumeDriverException.message" module="cinder.exception" names="cinder.exception.VolumeDriverException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume driver reported an error: %(message)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeGroupCreationFailed',\ 'cinder.exception.VolumeGroupCreationFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeGroupCreationFailed" ids="cinder.exception.VolumeGroupCreationFailed" module="cinder.exception" names="cinder.exception.VolumeGroupCreationFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeGroupCreationFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeGroupCreationFailed\ attribute)',\ 'cinder.exception.VolumeGroupCreationFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeGroupCreationFailed" first="False" fullname="VolumeGroupCreationFailed.message" ids="cinder.exception.VolumeGroupCreationFailed.message" module="cinder.exception" names="cinder.exception.VolumeGroupCreationFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to create Volume Group: %(vg_name)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeGroupNotFound',\ 'cinder.exception.VolumeGroupNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeGroupNotFound" ids="cinder.exception.VolumeGroupNotFound" module="cinder.exception" names="cinder.exception.VolumeGroupNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeGroupNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeGroupNotFound\ attribute)',\ 'cinder.exception.VolumeGroupNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeGroupNotFound" first="False" fullname="VolumeGroupNotFound.message" ids="cinder.exception.VolumeGroupNotFound.message" module="cinder.exception" names="cinder.exception.VolumeGroupNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to find Volume Group: %(vg_name)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeIsBusy',\ 'cinder.exception.VolumeIsBusy',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeIsBusy" ids="cinder.exception.VolumeIsBusy" module="cinder.exception" names="cinder.exception.VolumeIsBusy"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeIsBusy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeIsBusy\ attribute)',\ 'cinder.exception.VolumeIsBusy.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeIsBusy" first="False" fullname="VolumeIsBusy.message" ids="cinder.exception.VolumeIsBusy.message" module="cinder.exception" names="cinder.exception.VolumeIsBusy.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'deleting volume %(volume_name)s that has snapshot'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeLimitExceeded',\ 'cinder.exception.VolumeLimitExceeded',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeLimitExceeded" ids="cinder.exception.VolumeLimitExceeded" module="cinder.exception" names="cinder.exception.VolumeLimitExceeded"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeLimitExceeded</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaError" reftitle="cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeLimitExceeded\ attribute)',\ 'cinder.exception.VolumeLimitExceeded.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeLimitExceeded" first="False" fullname="VolumeLimitExceeded.message" ids="cinder.exception.VolumeLimitExceeded.message" module="cinder.exception" names="cinder.exception.VolumeLimitExceeded.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Maximum number of volumes allowed (%(allowed)d) exceeded for quota '%(name)s'."</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeMetadataBackupExists',\ 'cinder.exception.VolumeMetadataBackupExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeMetadataBackupExists" ids="cinder.exception.VolumeMetadataBackupExists" module="cinder.exception" names="cinder.exception.VolumeMetadataBackupExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeMetadataBackupExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.BackupDriverException" reftitle="cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeMetadataBackupExists\ attribute)',\ 'cinder.exception.VolumeMetadataBackupExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeMetadataBackupExists" first="False" fullname="VolumeMetadataBackupExists.message" ids="cinder.exception.VolumeMetadataBackupExists.message" module="cinder.exception" names="cinder.exception.VolumeMetadataBackupExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Metadata backup already exists for this volume'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeMetadataNotFound',\ 'cinder.exception.VolumeMetadataNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeMetadataNotFound" ids="cinder.exception.VolumeMetadataNotFound" module="cinder.exception" names="cinder.exception.VolumeMetadataNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeMetadataNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeMetadataNotFound\ attribute)',\ 'cinder.exception.VolumeMetadataNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeMetadataNotFound" first="False" fullname="VolumeMetadataNotFound.message" ids="cinder.exception.VolumeMetadataNotFound.message" module="cinder.exception" names="cinder.exception.VolumeMetadataNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(volume_id)s has no metadata with key %(metadata_key)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeMigrationFailed',\ 'cinder.exception.VolumeMigrationFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeMigrationFailed" ids="cinder.exception.VolumeMigrationFailed" module="cinder.exception" names="cinder.exception.VolumeMigrationFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeMigrationFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeMigrationFailed\ attribute)',\ 'cinder.exception.VolumeMigrationFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeMigrationFailed" first="False" fullname="VolumeMigrationFailed.message" ids="cinder.exception.VolumeMigrationFailed.message" module="cinder.exception" names="cinder.exception.VolumeMigrationFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume migration failed: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeNotDeactivated',\ 'cinder.exception.VolumeNotDeactivated',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeNotDeactivated" ids="cinder.exception.VolumeNotDeactivated" module="cinder.exception" names="cinder.exception.VolumeNotDeactivated"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeNotDeactivated</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeNotDeactivated\ attribute)',\ 'cinder.exception.VolumeNotDeactivated.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeNotDeactivated" first="False" fullname="VolumeNotDeactivated.message" ids="cinder.exception.VolumeNotDeactivated.message" module="cinder.exception" names="cinder.exception.VolumeNotDeactivated.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(name)s was not deactivated in time.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeNotFound',\ 'cinder.exception.VolumeNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeNotFound" ids="cinder.exception.VolumeNotFound" module="cinder.exception" names="cinder.exception.VolumeNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeNotFound\ attribute)',\ 'cinder.exception.VolumeNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeNotFound" first="False" fullname="VolumeNotFound.message" ids="cinder.exception.VolumeNotFound.message" module="cinder.exception" names="cinder.exception.VolumeNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(volume_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeSizeExceedsAvailableQuota',\ 'cinder.exception.VolumeSizeExceedsAvailableQuota',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeSizeExceedsAvailableQuota" ids="cinder.exception.VolumeSizeExceedsAvailableQuota" module="cinder.exception" names="cinder.exception.VolumeSizeExceedsAvailableQuota"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeSizeExceedsAvailableQuota</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaError" reftitle="cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeSizeExceedsAvailableQuota\ attribute)',\ 'cinder.exception.VolumeSizeExceedsAvailableQuota.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeSizeExceedsAvailableQuota" first="False" fullname="VolumeSizeExceedsAvailableQuota.message" ids="cinder.exception.VolumeSizeExceedsAvailableQuota.message" module="cinder.exception" names="cinder.exception.VolumeSizeExceedsAvailableQuota.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Requested volume or snapshot exceeds allowed %(name)s quota. Requested %(requested)sG, quota is %(quota)sG and %(consumed)sG has been consumed.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeSizeExceedsLimit',\ 'cinder.exception.VolumeSizeExceedsLimit',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeSizeExceedsLimit" ids="cinder.exception.VolumeSizeExceedsLimit" module="cinder.exception" names="cinder.exception.VolumeSizeExceedsLimit"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeSizeExceedsLimit</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.QuotaError" reftitle="cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeSizeExceedsLimit\ attribute)',\ 'cinder.exception.VolumeSizeExceedsLimit.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeSizeExceedsLimit" first="False" fullname="VolumeSizeExceedsLimit.message" ids="cinder.exception.VolumeSizeExceedsLimit.message" module="cinder.exception" names="cinder.exception.VolumeSizeExceedsLimit.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Requested volume size %(size)dG is larger than maximum allowed limit %(limit)dG.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeSnapshotNotFound',\ 'cinder.exception.VolumeSnapshotNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeSnapshotNotFound" ids="cinder.exception.VolumeSnapshotNotFound" module="cinder.exception" names="cinder.exception.VolumeSnapshotNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeSnapshotNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeSnapshotNotFound\ attribute)',\ 'cinder.exception.VolumeSnapshotNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeSnapshotNotFound" first="False" fullname="VolumeSnapshotNotFound.message" ids="cinder.exception.VolumeSnapshotNotFound.message" module="cinder.exception" names="cinder.exception.VolumeSnapshotNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No snapshots found for volume %(volume_id)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeAccessExists',\ 'cinder.exception.VolumeTypeAccessExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeTypeAccessExists" ids="cinder.exception.VolumeTypeAccessExists" module="cinder.exception" names="cinder.exception.VolumeTypeAccessExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeAccessExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Duplicate" reftitle="cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeTypeAccessExists\ attribute)',\ 'cinder.exception.VolumeTypeAccessExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeTypeAccessExists" first="False" fullname="VolumeTypeAccessExists.message" ids="cinder.exception.VolumeTypeAccessExists.message" module="cinder.exception" names="cinder.exception.VolumeTypeAccessExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume type access for %(volume_type_id)s / %(project_id)s combination already exists.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeAccessNotFound',\ 'cinder.exception.VolumeTypeAccessNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeTypeAccessNotFound" ids="cinder.exception.VolumeTypeAccessNotFound" module="cinder.exception" names="cinder.exception.VolumeTypeAccessNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeAccessNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeTypeAccessNotFound\ attribute)',\ 'cinder.exception.VolumeTypeAccessNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeTypeAccessNotFound" first="False" fullname="VolumeTypeAccessNotFound.message" ids="cinder.exception.VolumeTypeAccessNotFound.message" module="cinder.exception" names="cinder.exception.VolumeTypeAccessNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume type access not found for %(volume_type_id)s / %(project_id)s combination.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeCreateFailed',\ 'cinder.exception.VolumeTypeCreateFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeTypeCreateFailed" ids="cinder.exception.VolumeTypeCreateFailed" module="cinder.exception" names="cinder.exception.VolumeTypeCreateFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeCreateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeTypeCreateFailed\ attribute)',\ 'cinder.exception.VolumeTypeCreateFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeTypeCreateFailed" first="False" fullname="VolumeTypeCreateFailed.message" ids="cinder.exception.VolumeTypeCreateFailed.message" module="cinder.exception" names="cinder.exception.VolumeTypeCreateFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cannot create volume_type with name %(name)s and specs %(extra_specs)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeEncryptionExists',\ 'cinder.exception.VolumeTypeEncryptionExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeTypeEncryptionExists" ids="cinder.exception.VolumeTypeEncryptionExists" module="cinder.exception" names="cinder.exception.VolumeTypeEncryptionExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeEncryptionExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeTypeEncryptionExists\ attribute)',\ 'cinder.exception.VolumeTypeEncryptionExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeTypeEncryptionExists" first="False" fullname="VolumeTypeEncryptionExists.message" ids="cinder.exception.VolumeTypeEncryptionExists.message" module="cinder.exception" names="cinder.exception.VolumeTypeEncryptionExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume type encryption for type %(type_id)s already exists.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeEncryptionNotFound',\ 'cinder.exception.VolumeTypeEncryptionNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeTypeEncryptionNotFound" ids="cinder.exception.VolumeTypeEncryptionNotFound" module="cinder.exception" names="cinder.exception.VolumeTypeEncryptionNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeEncryptionNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeTypeEncryptionNotFound\ attribute)',\ 'cinder.exception.VolumeTypeEncryptionNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeTypeEncryptionNotFound" first="False" fullname="VolumeTypeEncryptionNotFound.message" ids="cinder.exception.VolumeTypeEncryptionNotFound.message" module="cinder.exception" names="cinder.exception.VolumeTypeEncryptionNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume type encryption for type %(type_id)s does not exist.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeExists',\ 'cinder.exception.VolumeTypeExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeTypeExists" ids="cinder.exception.VolumeTypeExists" module="cinder.exception" names="cinder.exception.VolumeTypeExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Duplicate" reftitle="cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeTypeExists\ attribute)',\ 'cinder.exception.VolumeTypeExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeTypeExists" first="False" fullname="VolumeTypeExists.message" ids="cinder.exception.VolumeTypeExists.message" module="cinder.exception" names="cinder.exception.VolumeTypeExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume Type %(id)s already exists.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeExtraSpecsNotFound',\ 'cinder.exception.VolumeTypeExtraSpecsNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeTypeExtraSpecsNotFound" ids="cinder.exception.VolumeTypeExtraSpecsNotFound" module="cinder.exception" names="cinder.exception.VolumeTypeExtraSpecsNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeExtraSpecsNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeTypeExtraSpecsNotFound\ attribute)',\ 'cinder.exception.VolumeTypeExtraSpecsNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeTypeExtraSpecsNotFound" first="False" fullname="VolumeTypeExtraSpecsNotFound.message" ids="cinder.exception.VolumeTypeExtraSpecsNotFound.message" module="cinder.exception" names="cinder.exception.VolumeTypeExtraSpecsNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume Type %(volume_type_id)s has no extra specs with key %(extra_specs_key)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeInUse',\ 'cinder.exception.VolumeTypeInUse',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeTypeInUse" ids="cinder.exception.VolumeTypeInUse" module="cinder.exception" names="cinder.exception.VolumeTypeInUse"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeInUse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeTypeInUse\ attribute)',\ 'cinder.exception.VolumeTypeInUse.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeTypeInUse" first="False" fullname="VolumeTypeInUse.message" ids="cinder.exception.VolumeTypeInUse.message" module="cinder.exception" names="cinder.exception.VolumeTypeInUse.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume Type %(volume_type_id)s deletion is not allowed with volumes present with the type.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeNotFound',\ 'cinder.exception.VolumeTypeNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeTypeNotFound" ids="cinder.exception.VolumeTypeNotFound" module="cinder.exception" names="cinder.exception.VolumeTypeNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeTypeNotFound\ attribute)',\ 'cinder.exception.VolumeTypeNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeTypeNotFound" first="False" fullname="VolumeTypeNotFound.message" ids="cinder.exception.VolumeTypeNotFound.message" module="cinder.exception" names="cinder.exception.VolumeTypeNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume type %(volume_type_id)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeNotFoundByName',\ 'cinder.exception.VolumeTypeNotFoundByName',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeTypeNotFoundByName" ids="cinder.exception.VolumeTypeNotFoundByName" module="cinder.exception" names="cinder.exception.VolumeTypeNotFoundByName"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeNotFoundByName</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeTypeNotFound" reftitle="cinder.exception.VolumeTypeNotFound"><literal classes="xref py py-class">cinder.exception.VolumeTypeNotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeTypeNotFoundByName\ attribute)',\ 'cinder.exception.VolumeTypeNotFoundByName.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeTypeNotFoundByName" first="False" fullname="VolumeTypeNotFoundByName.message" ids="cinder.exception.VolumeTypeNotFoundByName.message" module="cinder.exception" names="cinder.exception.VolumeTypeNotFoundByName.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume type with name %(volume_type_name)s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeUpdateFailed',\ 'cinder.exception.VolumeTypeUpdateFailed',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VolumeTypeUpdateFailed" ids="cinder.exception.VolumeTypeUpdateFailed" module="cinder.exception" names="cinder.exception.VolumeTypeUpdateFailed"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeUpdateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VolumeTypeUpdateFailed\ attribute)',\ 'cinder.exception.VolumeTypeUpdateFailed.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeTypeUpdateFailed" first="False" fullname="VolumeTypeUpdateFailed.message" ids="cinder.exception.VolumeTypeUpdateFailed.message" module="cinder.exception" names="cinder.exception.VolumeTypeUpdateFailed.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cannot update volume_type %(id)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VzStorageException',\ 'cinder.exception.VzStorageException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VzStorageException" ids="cinder.exception.VzStorageException" module="cinder.exception" names="cinder.exception.VzStorageException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VzStorageException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.RemoteFSException" reftitle="cinder.exception.RemoteFSException"><literal classes="xref py py-class">cinder.exception.RemoteFSException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VzStorageException\ attribute)',\ 'cinder.exception.VzStorageException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VzStorageException" first="False" fullname="VzStorageException.message" ids="cinder.exception.VzStorageException.message" module="cinder.exception" names="cinder.exception.VzStorageException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unknown Virtuozzo Storage exception'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VzStorageNoSharesMounted',\ 'cinder.exception.VzStorageNoSharesMounted',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VzStorageNoSharesMounted" ids="cinder.exception.VzStorageNoSharesMounted" module="cinder.exception" names="cinder.exception.VzStorageNoSharesMounted"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VzStorageNoSharesMounted</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.RemoteFSNoSharesMounted" reftitle="cinder.exception.RemoteFSNoSharesMounted"><literal classes="xref py py-class">cinder.exception.RemoteFSNoSharesMounted</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VzStorageNoSharesMounted\ attribute)',\ 'cinder.exception.VzStorageNoSharesMounted.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VzStorageNoSharesMounted" first="False" fullname="VzStorageNoSharesMounted.message" ids="cinder.exception.VzStorageNoSharesMounted.message" module="cinder.exception" names="cinder.exception.VzStorageNoSharesMounted.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No mounted Virtuozzo Storage shares found'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VzStorageNoSuitableShareFound',\ 'cinder.exception.VzStorageNoSuitableShareFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="VzStorageNoSuitableShareFound" ids="cinder.exception.VzStorageNoSuitableShareFound" module="cinder.exception" names="cinder.exception.VzStorageNoSuitableShareFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VzStorageNoSuitableShareFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.RemoteFSNoSuitableShareFound" reftitle="cinder.exception.RemoteFSNoSuitableShareFound"><literal classes="xref py py-class">cinder.exception.RemoteFSNoSuitableShareFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (VzStorageNoSuitableShareFound\ attribute)',\ 'cinder.exception.VzStorageNoSuitableShareFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VzStorageNoSuitableShareFound" first="False" fullname="VzStorageNoSuitableShareFound.message" ids="cinder.exception.VzStorageNoSuitableShareFound.message" module="cinder.exception" names="cinder.exception.VzStorageNoSuitableShareFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'There is no share which can host %(volume_size)sG'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'WebDAVClientError',\ 'cinder.exception.WebDAVClientError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="WebDAVClientError" ids="cinder.exception.WebDAVClientError" module="cinder.exception" names="cinder.exception.WebDAVClientError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">WebDAVClientError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (WebDAVClientError\ attribute)',\ 'cinder.exception.WebDAVClientError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="WebDAVClientError" first="False" fullname="WebDAVClientError.message" ids="cinder.exception.WebDAVClientError.message" module="cinder.exception" names="cinder.exception.WebDAVClientError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The WebDAV request failed. Reason: %(msg)s, Return code/reason: %(code)s, Source Volume: %(src)s, Destination Volume: %(dst)s, Method: %(method)s.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'WorkerExists',\ 'cinder.exception.WorkerExists',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="WorkerExists" ids="cinder.exception.WorkerExists" module="cinder.exception" names="cinder.exception.WorkerExists"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">WorkerExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Duplicate" reftitle="cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (WorkerExists\ attribute)',\ 'cinder.exception.WorkerExists.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="WorkerExists" first="False" fullname="WorkerExists.message" ids="cinder.exception.WorkerExists.message" module="cinder.exception" names="cinder.exception.WorkerExists.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Worker for %(type)s %(id)s already exists.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'WorkerNotFound',\ 'cinder.exception.WorkerNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="WorkerNotFound" ids="cinder.exception.WorkerNotFound" module="cinder.exception" names="cinder.exception.WorkerNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">WorkerNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (WorkerNotFound\ attribute)',\ 'cinder.exception.WorkerNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="WorkerNotFound" first="False" fullname="WorkerNotFound.message" ids="cinder.exception.WorkerNotFound.message" module="cinder.exception" names="cinder.exception.WorkerNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Worker with %s could not be found.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'XIODriverException',\ 'cinder.exception.XIODriverException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="XIODriverException" ids="cinder.exception.XIODriverException" module="cinder.exception" names="cinder.exception.XIODriverException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">XIODriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (XIODriverException\ attribute)',\ 'cinder.exception.XIODriverException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="XIODriverException" first="False" fullname="XIODriverException.message" ids="cinder.exception.XIODriverException.message" module="cinder.exception" names="cinder.exception.XIODriverException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'X-IO Volume Driver exception!'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'XtremIOAlreadyMappedError',\ 'cinder.exception.XtremIOAlreadyMappedError',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="XtremIOAlreadyMappedError" ids="cinder.exception.XtremIOAlreadyMappedError" module="cinder.exception" names="cinder.exception.XtremIOAlreadyMappedError"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">XtremIOAlreadyMappedError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (XtremIOAlreadyMappedError\ attribute)',\ 'cinder.exception.XtremIOAlreadyMappedError.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="XtremIOAlreadyMappedError" first="False" fullname="XtremIOAlreadyMappedError.message" ids="cinder.exception.XtremIOAlreadyMappedError.message" module="cinder.exception" names="cinder.exception.XtremIOAlreadyMappedError.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume to Initiator Group mapping already exists'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'XtremIOArrayBusy',\ 'cinder.exception.XtremIOArrayBusy',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="XtremIOArrayBusy" ids="cinder.exception.XtremIOArrayBusy" module="cinder.exception" names="cinder.exception.XtremIOArrayBusy"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">XtremIOArrayBusy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (XtremIOArrayBusy\ attribute)',\ 'cinder.exception.XtremIOArrayBusy.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="XtremIOArrayBusy" first="False" fullname="XtremIOArrayBusy.message" ids="cinder.exception.XtremIOArrayBusy.message" module="cinder.exception" names="cinder.exception.XtremIOArrayBusy.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'System is busy, retry operation.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'XtremIOSnapshotsLimitExceeded',\ 'cinder.exception.XtremIOSnapshotsLimitExceeded',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="XtremIOSnapshotsLimitExceeded" ids="cinder.exception.XtremIOSnapshotsLimitExceeded" module="cinder.exception" names="cinder.exception.XtremIOSnapshotsLimitExceeded"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">XtremIOSnapshotsLimitExceeded</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (XtremIOSnapshotsLimitExceeded\ attribute)',\ 'cinder.exception.XtremIOSnapshotsLimitExceeded.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="XtremIOSnapshotsLimitExceeded" first="False" fullname="XtremIOSnapshotsLimitExceeded.message" ids="cinder.exception.XtremIOSnapshotsLimitExceeded.message" module="cinder.exception" names="cinder.exception.XtremIOSnapshotsLimitExceeded.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Exceeded the limit of snapshots per volume'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ZadaraAttachmentsNotFound',\ 'cinder.exception.ZadaraAttachmentsNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ZadaraAttachmentsNotFound" ids="cinder.exception.ZadaraAttachmentsNotFound" module="cinder.exception" names="cinder.exception.ZadaraAttachmentsNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZadaraAttachmentsNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ZadaraAttachmentsNotFound\ attribute)',\ 'cinder.exception.ZadaraAttachmentsNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ZadaraAttachmentsNotFound" first="False" fullname="ZadaraAttachmentsNotFound.message" ids="cinder.exception.ZadaraAttachmentsNotFound.message" module="cinder.exception" names="cinder.exception.ZadaraAttachmentsNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to retrieve attachments for volume %(name)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ZadaraInvalidAttachmentInfo',\ 'cinder.exception.ZadaraInvalidAttachmentInfo',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ZadaraInvalidAttachmentInfo" ids="cinder.exception.ZadaraInvalidAttachmentInfo" module="cinder.exception" names="cinder.exception.ZadaraInvalidAttachmentInfo"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZadaraInvalidAttachmentInfo</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.Invalid" reftitle="cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ZadaraInvalidAttachmentInfo\ attribute)',\ 'cinder.exception.ZadaraInvalidAttachmentInfo.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ZadaraInvalidAttachmentInfo" first="False" fullname="ZadaraInvalidAttachmentInfo.message" ids="cinder.exception.ZadaraInvalidAttachmentInfo.message" module="cinder.exception" names="cinder.exception.ZadaraInvalidAttachmentInfo.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid attachment info for volume %(name)s: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ZadaraServerCreateFailure',\ 'cinder.exception.ZadaraServerCreateFailure',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ZadaraServerCreateFailure" ids="cinder.exception.ZadaraServerCreateFailure" module="cinder.exception" names="cinder.exception.ZadaraServerCreateFailure"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZadaraServerCreateFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ZadaraServerCreateFailure\ attribute)',\ 'cinder.exception.ZadaraServerCreateFailure.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ZadaraServerCreateFailure" first="False" fullname="ZadaraServerCreateFailure.message" ids="cinder.exception.ZadaraServerCreateFailure.message" module="cinder.exception" names="cinder.exception.ZadaraServerCreateFailure.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to create server object for initiator %(name)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ZadaraServerNotFound',\ 'cinder.exception.ZadaraServerNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ZadaraServerNotFound" ids="cinder.exception.ZadaraServerNotFound" module="cinder.exception" names="cinder.exception.ZadaraServerNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZadaraServerNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.NotFound" reftitle="cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ZadaraServerNotFound\ attribute)',\ 'cinder.exception.ZadaraServerNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ZadaraServerNotFound" first="False" fullname="ZadaraServerNotFound.message" ids="cinder.exception.ZadaraServerNotFound.message" module="cinder.exception" names="cinder.exception.ZadaraServerNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to find server object for initiator %(name)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ZadaraVPSANoActiveController',\ 'cinder.exception.ZadaraVPSANoActiveController',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ZadaraVPSANoActiveController" ids="cinder.exception.ZadaraVPSANoActiveController" module="cinder.exception" names="cinder.exception.ZadaraVPSANoActiveController"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZadaraVPSANoActiveController</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ZadaraVPSANoActiveController\ attribute)',\ 'cinder.exception.ZadaraVPSANoActiveController.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ZadaraVPSANoActiveController" first="False" fullname="ZadaraVPSANoActiveController.message" ids="cinder.exception.ZadaraVPSANoActiveController.message" module="cinder.exception" names="cinder.exception.ZadaraVPSANoActiveController.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to find any active VPSA controller'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ZadaraVolumeNotFound',\ 'cinder.exception.ZadaraVolumeNotFound',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ZadaraVolumeNotFound" ids="cinder.exception.ZadaraVolumeNotFound" module="cinder.exception" names="cinder.exception.ZadaraVolumeNotFound"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZadaraVolumeNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.VolumeDriverException" reftitle="cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ZadaraVolumeNotFound\ attribute)',\ 'cinder.exception.ZadaraVolumeNotFound.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ZadaraVolumeNotFound" first="False" fullname="ZadaraVolumeNotFound.message" ids="cinder.exception.ZadaraVolumeNotFound.message" module="cinder.exception" names="cinder.exception.ZadaraVolumeNotFound.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ZoneManagerException',\ 'cinder.exception.ZoneManagerException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ZoneManagerException" ids="cinder.exception.ZoneManagerException" module="cinder.exception" names="cinder.exception.ZoneManagerException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZoneManagerException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ZoneManagerException\ attribute)',\ 'cinder.exception.ZoneManagerException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ZoneManagerException" first="False" fullname="ZoneManagerException.message" ids="cinder.exception.ZoneManagerException.message" module="cinder.exception" names="cinder.exception.ZoneManagerException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Fibre Channel connection control failure: %(reason)s'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ZoneManagerNotInitialized',\ 'cinder.exception.ZoneManagerNotInitialized',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="ZoneManagerNotInitialized" ids="cinder.exception.ZoneManagerNotInitialized" module="cinder.exception" names="cinder.exception.ZoneManagerNotInitialized"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZoneManagerNotInitialized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.exception.CinderException" reftitle="cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (ZoneManagerNotInitialized\ attribute)',\ 'cinder.exception.ZoneManagerNotInitialized.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ZoneManagerNotInitialized" first="False" fullname="ZoneManagerNotInitialized.message" ids="cinder.exception.ZoneManagerNotInitialized.message" module="cinder.exception" names="cinder.exception.ZoneManagerNotInitialized.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Fibre Channel Zone Manager not initialized'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
