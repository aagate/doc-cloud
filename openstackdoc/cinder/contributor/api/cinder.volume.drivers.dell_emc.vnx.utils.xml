<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.dell_emc.vnx.utils.rst">
    <section ids="module-cinder.volume.drivers.dell_emc.vnx.utils the-cinder-volume-drivers-dell-emc-vnx-utils-module" names="the\ cinder.volume.drivers.dell_emc.vnx.utils\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.dell_emc.vnx.utils" reftitle="cinder.volume.drivers.dell_emc.vnx.utils"><literal classes="xref py py-mod">cinder.volume.drivers.dell_emc.vnx.utils</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.dell_emc.vnx.utils\ (module)',\ 'module-cinder.volume.drivers.dell_emc.vnx.utils',\ '',\ None]"></index>
        <index entries="['single',\ 'build_provider_location()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.build_provider_location',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="build_provider_location" ids="cinder.volume.drivers.dell_emc.vnx.utils.build_provider_location" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.build_provider_location"><desc_name xml:space="preserve">build_provider_location</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">system</desc_parameter><desc_parameter xml:space="preserve">lun_type</desc_parameter><desc_parameter xml:space="preserve">lun_id</desc_parameter><desc_parameter xml:space="preserve">base_lun_name</desc_parameter><desc_parameter xml:space="preserve">version</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Builds provider_location for volume or snapshot.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">system</literal_strong> – VNX serial number</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">lun_id</literal_strong> – LUN ID in VNX</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">lun_type</literal_strong> – ‘lun’ or ‘smp’</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">base_lun_name</literal_strong> – primary LUN name,
                                        it will be used when creating snap lun</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">version</literal_strong> – driver version</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'calc_migrate_and_provision()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.calc_migrate_and_provision',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="calc_migrate_and_provision" ids="cinder.volume.drivers.dell_emc.vnx.utils.calc_migrate_and_provision" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.calc_migrate_and_provision"><desc_name xml:space="preserve">calc_migrate_and_provision</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns a tuple of async migrate and provision type.</paragraph>
                <paragraph>The first element is the flag whether to enable async migrate,
                    the second is the provision type (thin or thick).</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_rep_status_matched()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.check_rep_status_matched',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_rep_status_matched" ids="cinder.volume.drivers.dell_emc.vnx.utils.check_rep_status_matched" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.check_rep_status_matched"><desc_name xml:space="preserve">check_rep_status_matched</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">group</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Check replication status for group.</paragraph>
                <paragraph>Group status must be enabled before proceeding.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_type_matched()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.check_type_matched',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_type_matched" ids="cinder.volume.drivers.dell_emc.vnx.utils.check_type_matched" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.check_type_matched"><desc_name xml:space="preserve">check_type_matched</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Check volume type and group type</paragraph>
                <paragraph>This will make sure they do not conflict with each other.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – volume to be checked</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>None</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Raises</field_name>
                        <field_body>
                            <paragraph>InvalidInput</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'construct_group_name()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.construct_group_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="construct_group_name" ids="cinder.volume.drivers.dell_emc.vnx.utils.construct_group_name" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.construct_group_name"><desc_name xml:space="preserve">construct_group_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">group</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Constructs MirrorGroup name for volumes.</paragraph>
                <paragraph>VNX only allows for 32-character group name, so
                    trim the dash(-) from group id.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'construct_mirror_name()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.construct_mirror_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="construct_mirror_name" ids="cinder.volume.drivers.dell_emc.vnx.utils.construct_mirror_name" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.construct_mirror_name"><desc_name xml:space="preserve">construct_mirror_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Constructs MirrorView name for volume.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'construct_smp_name()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.construct_smp_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="construct_smp_name" ids="cinder.volume.drivers.dell_emc.vnx.utils.construct_smp_name" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.construct_smp_name"><desc_name xml:space="preserve">construct_smp_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snap_id</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'construct_snap_name()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.construct_snap_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="construct_snap_name" ids="cinder.volume.drivers.dell_emc.vnx.utils.construct_snap_name" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.construct_snap_name"><desc_name xml:space="preserve">construct_snap_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return snapshot name.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'construct_tmp_cg_snap_name()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.construct_tmp_cg_snap_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="construct_tmp_cg_snap_name" ids="cinder.volume.drivers.dell_emc.vnx.utils.construct_tmp_cg_snap_name" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.construct_tmp_cg_snap_name"><desc_name xml:space="preserve">construct_tmp_cg_snap_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cg_name</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return CG snapshot name.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'construct_tmp_lun_name()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.construct_tmp_lun_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="construct_tmp_lun_name" ids="cinder.volume.drivers.dell_emc.vnx.utils.construct_tmp_lun_name" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.construct_tmp_lun_name"><desc_name xml:space="preserve">construct_tmp_lun_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">lun_name</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Constructs a time-based temporary LUN name.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'convert_to_tgt_list_and_itor_tgt_map()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.convert_to_tgt_list_and_itor_tgt_map',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="convert_to_tgt_list_and_itor_tgt_map" ids="cinder.volume.drivers.dell_emc.vnx.utils.convert_to_tgt_list_and_itor_tgt_map" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.convert_to_tgt_list_and_itor_tgt_map"><desc_name xml:space="preserve">convert_to_tgt_list_and_itor_tgt_map</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">zone_mapping</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Function to process data from lookup service.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">zone_mapping</literal_strong> – <definition_list><definition_list_item><term>mapping is the data from the zone lookup service</term><definition><paragraph>with below format</paragraph></definition></definition_list_item></definition_list><literal_block classes="code python" xml:space="preserve"><inline classes="punctuation">{</inline>
     <inline classes="operator">&lt;</inline><inline classes="name">San</inline> <inline classes="name">name</inline><inline classes="operator">&gt;</inline><inline classes="punctuation">:</inline> <inline classes="punctuation">{</inline>
         <inline classes="literal string single">‘initiator_port_wwn_list’</inline><inline classes="punctuation">:</inline>
         <inline classes="punctuation">(</inline><inline classes="literal string single">‘200000051e55a100’</inline><inline classes="punctuation">,</inline> <inline classes="literal string single">‘200000051e55a121’</inline><inline classes="operator">..</inline><inline classes="punctuation">)</inline>
         <inline classes="literal string single">‘target_port_wwn_list’</inline><inline classes="punctuation">:</inline>
         <inline classes="punctuation">(</inline><inline classes="literal string single">‘100000051e55a100’</inline><inline classes="punctuation">,</inline> <inline classes="literal string single">‘100000051e55a121’</inline><inline classes="operator">..</inline><inline classes="punctuation">)</inline>
     <inline classes="punctuation">}</inline>
<inline classes="punctuation">}</inline></literal_block></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'dump_provider_location()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.dump_provider_location',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="dump_provider_location" ids="cinder.volume.drivers.dell_emc.vnx.utils.dump_provider_location" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.dump_provider_location"><desc_name xml:space="preserve">dump_provider_location</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">location_dict</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'extract_provider_location()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.extract_provider_location',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="extract_provider_location" ids="cinder.volume.drivers.dell_emc.vnx.utils.extract_provider_location" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.extract_provider_location"><desc_name xml:space="preserve">extract_provider_location</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">provider_location</desc_parameter><desc_parameter xml:space="preserve">key</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Extracts value of the specified field from provider_location string.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">provider_location</literal_strong> – provider_location string</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">key</literal_strong> – field name of the value that to be extracted</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>value of the specified field if it exists, otherwise,
                                None is returned</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_backend_qos_specs()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.get_backend_qos_specs',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_backend_qos_specs" ids="cinder.volume.drivers.dell_emc.vnx.utils.get_backend_qos_specs" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.get_backend_qos_specs"><desc_name xml:space="preserve">get_backend_qos_specs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_base_lun_name()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.get_base_lun_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_base_lun_name" ids="cinder.volume.drivers.dell_emc.vnx.utils.get_base_lun_name" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.get_base_lun_name"><desc_name xml:space="preserve">get_base_lun_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns base LUN name for LUN/snapcopy LUN.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_metadata()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.get_metadata',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_metadata" ids="cinder.volume.drivers.dell_emc.vnx.utils.get_metadata" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.get_metadata"><desc_name xml:space="preserve">get_metadata</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_migration_rate()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.get_migration_rate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_migration_rate" ids="cinder.volume.drivers.dell_emc.vnx.utils.get_migration_rate" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.get_migration_rate"><desc_name xml:space="preserve">get_migration_rate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_original_status()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.get_original_status',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_original_status" ids="cinder.volume.drivers.dell_emc.vnx.utils.get_original_status" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.get_original_status"><desc_name xml:space="preserve">get_original_status</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_pool_from_host()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.get_pool_from_host',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_pool_from_host" ids="cinder.volume.drivers.dell_emc.vnx.utils.get_pool_from_host" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.get_pool_from_host"><desc_name xml:space="preserve">get_pool_from_host</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_remote_pool()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.get_remote_pool',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_remote_pool" ids="cinder.volume.drivers.dell_emc.vnx.utils.get_remote_pool" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.get_remote_pool"><desc_name xml:space="preserve">get_remote_pool</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">config</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Select remote pool name for replication.</paragraph>
                <paragraph>Prefer configured remote pool name, or same pool name
                    as the source volume.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'init_ops()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.init_ops',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="init_ops" ids="cinder.volume.drivers.dell_emc.vnx.utils.init_ops" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.init_ops"><desc_name xml:space="preserve">init_ops</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">configuration</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'is_async_migrate_enabled()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.is_async_migrate_enabled',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_async_migrate_enabled" ids="cinder.volume.drivers.dell_emc.vnx.utils.is_async_migrate_enabled" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.is_async_migrate_enabled"><desc_name xml:space="preserve">is_async_migrate_enabled</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'is_image_cache_volume()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.is_image_cache_volume',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_image_cache_volume" ids="cinder.volume.drivers.dell_emc.vnx.utils.is_image_cache_volume" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.is_image_cache_volume"><desc_name xml:space="preserve">is_image_cache_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'is_snapcopy_enabled()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.is_snapcopy_enabled',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_snapcopy_enabled" ids="cinder.volume.drivers.dell_emc.vnx.utils.is_snapcopy_enabled" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.is_snapcopy_enabled"><desc_name xml:space="preserve">is_snapcopy_enabled</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'is_volume_smp()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.is_volume_smp',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_volume_smp" ids="cinder.volume.drivers.dell_emc.vnx.utils.is_volume_smp" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.is_volume_smp"><desc_name xml:space="preserve">is_volume_smp</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'require_consistent_group_snapshot_enabled()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.require_consistent_group_snapshot_enabled',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="require_consistent_group_snapshot_enabled" ids="cinder.volume.drivers.dell_emc.vnx.utils.require_consistent_group_snapshot_enabled" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.require_consistent_group_snapshot_enabled"><desc_name xml:space="preserve">require_consistent_group_snapshot_enabled</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">func</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'retype_need_change_tier()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.retype_need_change_tier',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="retype_need_change_tier" ids="cinder.volume.drivers.dell_emc.vnx.utils.retype_need_change_tier" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.retype_need_change_tier"><desc_name xml:space="preserve">retype_need_change_tier</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">old_tier</desc_parameter><desc_parameter xml:space="preserve">new_tier</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'retype_need_migration()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.retype_need_migration',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="retype_need_migration" ids="cinder.volume.drivers.dell_emc.vnx.utils.retype_need_migration" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.retype_need_migration"><desc_name xml:space="preserve">retype_need_migration</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">old_provision</desc_parameter><desc_parameter xml:space="preserve">new_provision</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'retype_need_turn_on_compression()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.retype_need_turn_on_compression',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="retype_need_turn_on_compression" ids="cinder.volume.drivers.dell_emc.vnx.utils.retype_need_turn_on_compression" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.retype_need_turn_on_compression"><desc_name xml:space="preserve">retype_need_turn_on_compression</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">old_provision</desc_parameter><desc_parameter xml:space="preserve">new_provision</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'sift_port_white_list()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.sift_port_white_list',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="sift_port_white_list" ids="cinder.volume.drivers.dell_emc.vnx.utils.sift_port_white_list" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.sift_port_white_list"><desc_name xml:space="preserve">sift_port_white_list</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">port_white_list</desc_parameter><desc_parameter xml:space="preserve">registered_io_ports</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Filters out the unregistered ports.</paragraph>
                <paragraph>Goes through the <title_reference>port_white_list</title_reference>, and filters out the ones not
                    registered (that is not in <title_reference>registered_io_ports</title_reference>).</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'truncate_fc_port_wwn()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.truncate_fc_port_wwn',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="truncate_fc_port_wwn" ids="cinder.volume.drivers.dell_emc.vnx.utils.truncate_fc_port_wwn" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.truncate_fc_port_wwn"><desc_name xml:space="preserve">truncate_fc_port_wwn</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">wwn</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'update_provider_location()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.update_provider_location',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="update_provider_location" ids="cinder.volume.drivers.dell_emc.vnx.utils.update_provider_location" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.update_provider_location"><desc_name xml:space="preserve">update_provider_location</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">provider_location</desc_parameter><desc_parameter xml:space="preserve">items</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Updates provider_location with new dict items.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">provider_location</literal_strong> – volume’s provider_location.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">items</literal_strong> – dict items for updating.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'update_remote_provider_location()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.update_remote_provider_location',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="update_remote_provider_location" ids="cinder.volume.drivers.dell_emc.vnx.utils.update_remote_provider_location" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.update_remote_provider_location"><desc_name xml:space="preserve">update_remote_provider_location</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">client</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Update volume provider_location after volume failed-over.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'update_res_with_poll()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.update_res_with_poll',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="update_res_with_poll" ids="cinder.volume.drivers.dell_emc.vnx.utils.update_res_with_poll" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.update_res_with_poll"><desc_name xml:space="preserve">update_res_with_poll</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">res</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'update_res_without_poll()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.update_res_without_poll',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="update_res_without_poll" ids="cinder.volume.drivers.dell_emc.vnx.utils.update_res_without_poll" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.update_res_without_poll"><desc_name xml:space="preserve">update_res_without_poll</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">res</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'validate_storage_migration()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.validate_storage_migration',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="validate_storage_migration" ids="cinder.volume.drivers.dell_emc.vnx.utils.validate_storage_migration" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.validate_storage_migration"><desc_name xml:space="preserve">validate_storage_migration</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">target_host</desc_parameter><desc_parameter xml:space="preserve">src_serial</desc_parameter><desc_parameter xml:space="preserve">src_protocol</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'wait_until()\ (in\ module\ cinder.volume.drivers.dell_emc.vnx.utils)',\ 'cinder.volume.drivers.dell_emc.vnx.utils.wait_until',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="wait_until" ids="cinder.volume.drivers.dell_emc.vnx.utils.wait_until" module="cinder.volume.drivers.dell_emc.vnx.utils" names="cinder.volume.drivers.dell_emc.vnx.utils.wait_until"><desc_name xml:space="preserve">wait_until</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">condition</desc_parameter><desc_parameter xml:space="preserve">timeout=None</desc_parameter><desc_parameter xml:space="preserve">interval=5</desc_parameter><desc_parameter xml:space="preserve">reraise_arbiter=&lt;function &lt;lambda&gt;&gt;</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </section>
</document>
