<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.quota.rst">
    <section ids="module-cinder.quota the-cinder-quota-module" names="the\ cinder.quota\ module">
        <title>The <reference internal="True" refid="module-cinder.quota" reftitle="cinder.quota"><literal classes="xref py py-mod">cinder.quota</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.quota\ (module)',\ 'module-cinder.quota',\ '',\ None]"></index>
        <paragraph>Quotas for volumes.</paragraph>
        <index entries="['single',\ 'AbsoluteResource\ (class\ in\ cinder.quota)',\ 'cinder.quota.AbsoluteResource',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="AbsoluteResource" ids="cinder.quota.AbsoluteResource" module="cinder.quota" names="cinder.quota.AbsoluteResource"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">AbsoluteResource</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">flag=None</desc_parameter><desc_parameter xml:space="preserve">parent_project_id=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.quota.BaseResource" reftitle="cinder.quota.BaseResource"><literal classes="xref py py-class">cinder.quota.BaseResource</literal></reference></paragraph>
                <paragraph>Describe a non-reservable resource.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BaseResource\ (class\ in\ cinder.quota)',\ 'cinder.quota.BaseResource',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BaseResource" ids="cinder.quota.BaseResource" module="cinder.quota" names="cinder.quota.BaseResource"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">BaseResource</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">flag=None</desc_parameter><desc_parameter xml:space="preserve">parent_project_id=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Describe a single resource for quota checking.</paragraph>
                <index entries="['single',\ 'default\ (BaseResource\ attribute)',\ 'cinder.quota.BaseResource.default',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BaseResource" first="False" fullname="BaseResource.default" ids="cinder.quota.BaseResource.default" module="cinder.quota" names="cinder.quota.BaseResource.default"><desc_name xml:space="preserve">default</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Return the default value of the quota.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'quota()\ (BaseResource\ method)',\ 'cinder.quota.BaseResource.quota',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BaseResource" first="False" fullname="BaseResource.quota" ids="cinder.quota.BaseResource.quota" module="cinder.quota" names="cinder.quota.BaseResource.quota"><desc_name xml:space="preserve">quota</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">driver</desc_parameter><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Given a driver and context, obtain the quota for this resource.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">driver</literal_strong> – A quota driver.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – The project to obtain the quota value for.
                                                If not provided, it is taken from the
                                                context.  If it is given as None, no
                                                project-specific quota will be searched
                                                for.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">quota_class</literal_strong> – The quota class corresponding to the
                                                project, or for which the quota is to be
                                                looked up.  If not provided, it is taken
                                                from the context.  If it is given as None,
                                                no quota class-specific quota will be
                                                searched for.  Note that the quota class
                                                defaults to the value in the context,
                                                which may not correspond to the project if
                                                project_id is not the same as the one in
                                                the context.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'CGQuotaEngine\ (class\ in\ cinder.quota)',\ 'cinder.quota.CGQuotaEngine',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="CGQuotaEngine" ids="cinder.quota.CGQuotaEngine" module="cinder.quota" names="cinder.quota.CGQuotaEngine"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">CGQuotaEngine</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">quota_driver_class=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.quota.QuotaEngine" reftitle="cinder.quota.QuotaEngine"><literal classes="xref py py-class">cinder.quota.QuotaEngine</literal></reference></paragraph>
                <paragraph>Represent the consistencygroup quotas.</paragraph>
                <index entries="['single',\ 'register_resource()\ (CGQuotaEngine\ method)',\ 'cinder.quota.CGQuotaEngine.register_resource',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="CGQuotaEngine" first="False" fullname="CGQuotaEngine.register_resource" ids="cinder.quota.CGQuotaEngine.register_resource" module="cinder.quota" names="cinder.quota.CGQuotaEngine.register_resource"><desc_name xml:space="preserve">register_resource</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">resource</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'register_resources()\ (CGQuotaEngine\ method)',\ 'cinder.quota.CGQuotaEngine.register_resources',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="CGQuotaEngine" first="False" fullname="CGQuotaEngine.register_resources" ids="cinder.quota.CGQuotaEngine.register_resources" module="cinder.quota" names="cinder.quota.CGQuotaEngine.register_resources"><desc_name xml:space="preserve">register_resources</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">resources</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'resources\ (CGQuotaEngine\ attribute)',\ 'cinder.quota.CGQuotaEngine.resources',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CGQuotaEngine" first="False" fullname="CGQuotaEngine.resources" ids="cinder.quota.CGQuotaEngine.resources" module="cinder.quota" names="cinder.quota.CGQuotaEngine.resources"><desc_name xml:space="preserve">resources</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Fetches all possible quota resources.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'CountableResource\ (class\ in\ cinder.quota)',\ 'cinder.quota.CountableResource',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="CountableResource" ids="cinder.quota.CountableResource" module="cinder.quota" names="cinder.quota.CountableResource"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">CountableResource</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">count</desc_parameter><desc_parameter xml:space="preserve">flag=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.quota.AbsoluteResource" reftitle="cinder.quota.AbsoluteResource"><literal classes="xref py py-class">cinder.quota.AbsoluteResource</literal></reference></paragraph>
                <paragraph>Describe a resource where counts aren’t based only on the project ID.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DbQuotaDriver\ (class\ in\ cinder.quota)',\ 'cinder.quota.DbQuotaDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="DbQuotaDriver" ids="cinder.quota.DbQuotaDriver" module="cinder.quota" names="cinder.quota.DbQuotaDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">DbQuotaDriver</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Driver to perform check to enforcement of quotas.</paragraph>
                <paragraph>Also allows to obtain quota information.
                    The default driver utilizes the local database.</paragraph>
                <index entries="['single',\ 'commit()\ (DbQuotaDriver\ method)',\ 'cinder.quota.DbQuotaDriver.commit',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbQuotaDriver" first="False" fullname="DbQuotaDriver.commit" ids="cinder.quota.DbQuotaDriver.commit" module="cinder.quota" names="cinder.quota.DbQuotaDriver.commit"><desc_name xml:space="preserve">commit</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">reservations</desc_parameter><desc_parameter xml:space="preserve">project_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Commit reservations.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">reservations</literal_strong> – A list of the reservation UUIDs, as
                                                returned by the reserve() method.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – Specify the project_id if current context
                                                is admin and admin wants to impact on
                                                common user’s tenant.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'destroy_by_project()\ (DbQuotaDriver\ method)',\ 'cinder.quota.DbQuotaDriver.destroy_by_project',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbQuotaDriver" first="False" fullname="DbQuotaDriver.destroy_by_project" ids="cinder.quota.DbQuotaDriver.destroy_by_project" module="cinder.quota" names="cinder.quota.DbQuotaDriver.destroy_by_project"><desc_name xml:space="preserve">destroy_by_project</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">project_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Destroy all limit quotas associated with a project.</paragraph>
                        <paragraph>Leave usage and reservation quotas intact.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – The ID of the project being deleted.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'expire()\ (DbQuotaDriver\ method)',\ 'cinder.quota.DbQuotaDriver.expire',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbQuotaDriver" first="False" fullname="DbQuotaDriver.expire" ids="cinder.quota.DbQuotaDriver.expire" module="cinder.quota" names="cinder.quota.DbQuotaDriver.expire"><desc_name xml:space="preserve">expire</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Expire reservations.</paragraph>
                        <paragraph>Explores all currently existing reservations and rolls back
                            any that have expired.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_by_class()\ (DbQuotaDriver\ method)',\ 'cinder.quota.DbQuotaDriver.get_by_class',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbQuotaDriver" first="False" fullname="DbQuotaDriver.get_by_class" ids="cinder.quota.DbQuotaDriver.get_by_class" module="cinder.quota" names="cinder.quota.DbQuotaDriver.get_by_class"><desc_name xml:space="preserve">get_by_class</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">quota_class</desc_parameter><desc_parameter xml:space="preserve">resource_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get a specific quota by quota class.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_by_project()\ (DbQuotaDriver\ method)',\ 'cinder.quota.DbQuotaDriver.get_by_project',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbQuotaDriver" first="False" fullname="DbQuotaDriver.get_by_project" ids="cinder.quota.DbQuotaDriver.get_by_project" module="cinder.quota" names="cinder.quota.DbQuotaDriver.get_by_project"><desc_name xml:space="preserve">get_by_project</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">project_id</desc_parameter><desc_parameter xml:space="preserve">resource_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get a specific quota by project.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_class_quotas()\ (DbQuotaDriver\ method)',\ 'cinder.quota.DbQuotaDriver.get_class_quotas',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbQuotaDriver" first="False" fullname="DbQuotaDriver.get_class_quotas" ids="cinder.quota.DbQuotaDriver.get_class_quotas" module="cinder.quota" names="cinder.quota.DbQuotaDriver.get_class_quotas"><desc_name xml:space="preserve">get_class_quotas</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">resources</desc_parameter><desc_parameter xml:space="preserve">quota_class</desc_parameter><desc_parameter xml:space="preserve">defaults=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Given list of resources, retrieve the quotas for given quota class.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">resources</literal_strong> – A dictionary of the registered resources.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">quota_class</literal_strong> – The name of the quota class to return
                                                quotas for.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">defaults</literal_strong> – If True, the default value will be reported
                                                if there is no specific value for the
                                                resource.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_default()\ (DbQuotaDriver\ method)',\ 'cinder.quota.DbQuotaDriver.get_default',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbQuotaDriver" first="False" fullname="DbQuotaDriver.get_default" ids="cinder.quota.DbQuotaDriver.get_default" module="cinder.quota" names="cinder.quota.DbQuotaDriver.get_default"><desc_name xml:space="preserve">get_default</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">resource</desc_parameter><desc_parameter xml:space="preserve">project_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get a specific default quota for a resource.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_defaults()\ (DbQuotaDriver\ method)',\ 'cinder.quota.DbQuotaDriver.get_defaults',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbQuotaDriver" first="False" fullname="DbQuotaDriver.get_defaults" ids="cinder.quota.DbQuotaDriver.get_defaults" module="cinder.quota" names="cinder.quota.DbQuotaDriver.get_defaults"><desc_name xml:space="preserve">get_defaults</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">resources</desc_parameter><desc_parameter xml:space="preserve">project_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Given a list of resources, retrieve the default quotas.</paragraph>
                        <paragraph>Use the class quotas named <title_reference>_DEFAULT_QUOTA_NAME</title_reference> as default quotas,
                            if it exists.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">resources</literal_strong> – A dictionary of the registered resources.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – The id of the current project</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_project_quotas()\ (DbQuotaDriver\ method)',\ 'cinder.quota.DbQuotaDriver.get_project_quotas',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbQuotaDriver" first="False" fullname="DbQuotaDriver.get_project_quotas" ids="cinder.quota.DbQuotaDriver.get_project_quotas" module="cinder.quota" names="cinder.quota.DbQuotaDriver.get_project_quotas"><desc_name xml:space="preserve">get_project_quotas</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">resources</desc_parameter><desc_parameter xml:space="preserve">project_id</desc_parameter><desc_parameter xml:space="preserve">quota_class=None</desc_parameter><desc_parameter xml:space="preserve">defaults=True</desc_parameter><desc_parameter xml:space="preserve">usages=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Retrieve quotas for a project.</paragraph>
                        <paragraph>Given a list of resources, retrieve the quotas for the given
                            project.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">resources</literal_strong> – A dictionary of the registered resources.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – The ID of the project to return quotas for.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">quota_class</literal_strong> – If project_id != context.project_id, the
                                                quota class cannot be determined.  This
                                                parameter allows it to be specified.  It
                                                will be ignored if project_id ==
                                                context.project_id.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">defaults</literal_strong> – If True, the quota class value (or the
                                                default value, if there is no value from the
                                                quota class) will be reported if there is no
                                                specific value for the resource.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">usages</literal_strong> – If True, the current in_use, reserved and allocated
                                                counts will also be returned.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'limit_check()\ (DbQuotaDriver\ method)',\ 'cinder.quota.DbQuotaDriver.limit_check',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbQuotaDriver" first="False" fullname="DbQuotaDriver.limit_check" ids="cinder.quota.DbQuotaDriver.limit_check" module="cinder.quota" names="cinder.quota.DbQuotaDriver.limit_check"><desc_name xml:space="preserve">limit_check</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">resources</desc_parameter><desc_parameter xml:space="preserve">values</desc_parameter><desc_parameter xml:space="preserve">project_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check simple quota limits.</paragraph>
                        <paragraph>For limits–those quotas for which there is no usage
                            synchronization function–this method checks that a set of
                            proposed values are permitted by the limit restriction.</paragraph>
                        <paragraph>This method will raise a QuotaResourceUnknown exception if a
                            given resource is unknown or if it is not a simple limit
                            resource.</paragraph>
                        <paragraph>If any of the proposed values is over the defined quota, an
                            OverQuota exception will be raised with the sorted list of the
                            resources which are too high.  Otherwise, the method returns
                            nothing.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">resources</literal_strong> – A dictionary of the registered resources.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">values</literal_strong> – A dictionary of the values to check against the
                                                quota.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – Specify the project_id if current context
                                                is admin and admin wants to impact on
                                                common user’s tenant.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'reserve()\ (DbQuotaDriver\ method)',\ 'cinder.quota.DbQuotaDriver.reserve',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbQuotaDriver" first="False" fullname="DbQuotaDriver.reserve" ids="cinder.quota.DbQuotaDriver.reserve" module="cinder.quota" names="cinder.quota.DbQuotaDriver.reserve"><desc_name xml:space="preserve">reserve</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">resources</desc_parameter><desc_parameter xml:space="preserve">deltas</desc_parameter><desc_parameter xml:space="preserve">expire=None</desc_parameter><desc_parameter xml:space="preserve">project_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check quotas and reserve resources.</paragraph>
                        <paragraph>For counting quotas–those quotas for which there is a usage
                            synchronization function–this method checks quotas against
                            current usage and the desired deltas.</paragraph>
                        <paragraph>This method will raise a QuotaResourceUnknown exception if a
                            given resource is unknown or if it does not have a usage
                            synchronization function.</paragraph>
                        <paragraph>If any of the proposed values is over the defined quota, an
                            OverQuota exception will be raised with the sorted list of the
                            resources which are too high.  Otherwise, the method returns a
                            list of reservation UUIDs which were created.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">resources</literal_strong> – A dictionary of the registered resources.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">deltas</literal_strong> – A dictionary of the proposed delta changes.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">expire</literal_strong> – An optional parameter specifying an expiration
                                                time for the reservations.  If it is a simple
                                                number, it is interpreted as a number of
                                                seconds and added to the current time; if it is
                                                a datetime.timedelta object, it will also be
                                                added to the current time.  A datetime.datetime
                                                object will be interpreted as the absolute
                                                expiration time.  If None is specified, the
                                                default expiration time set by
                                                –default-reservation-expire will be used (this
                                                value will be treated as a number of seconds).</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – Specify the project_id if current context
                                                is admin and admin wants to impact on
                                                common user’s tenant.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'rollback()\ (DbQuotaDriver\ method)',\ 'cinder.quota.DbQuotaDriver.rollback',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbQuotaDriver" first="False" fullname="DbQuotaDriver.rollback" ids="cinder.quota.DbQuotaDriver.rollback" module="cinder.quota" names="cinder.quota.DbQuotaDriver.rollback"><desc_name xml:space="preserve">rollback</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">reservations</desc_parameter><desc_parameter xml:space="preserve">project_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Roll back reservations.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">reservations</literal_strong> – A list of the reservation UUIDs, as
                                                returned by the reserve() method.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – Specify the project_id if current context
                                                is admin and admin wants to impact on
                                                common user’s tenant.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GroupQuotaEngine\ (class\ in\ cinder.quota)',\ 'cinder.quota.GroupQuotaEngine',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="GroupQuotaEngine" ids="cinder.quota.GroupQuotaEngine" module="cinder.quota" names="cinder.quota.GroupQuotaEngine"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">GroupQuotaEngine</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">quota_driver_class=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.quota.QuotaEngine" reftitle="cinder.quota.QuotaEngine"><literal classes="xref py py-class">cinder.quota.QuotaEngine</literal></reference></paragraph>
                <paragraph>Represent the group quotas.</paragraph>
                <index entries="['single',\ 'register_resource()\ (GroupQuotaEngine\ method)',\ 'cinder.quota.GroupQuotaEngine.register_resource',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GroupQuotaEngine" first="False" fullname="GroupQuotaEngine.register_resource" ids="cinder.quota.GroupQuotaEngine.register_resource" module="cinder.quota" names="cinder.quota.GroupQuotaEngine.register_resource"><desc_name xml:space="preserve">register_resource</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">resource</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'register_resources()\ (GroupQuotaEngine\ method)',\ 'cinder.quota.GroupQuotaEngine.register_resources',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GroupQuotaEngine" first="False" fullname="GroupQuotaEngine.register_resources" ids="cinder.quota.GroupQuotaEngine.register_resources" module="cinder.quota" names="cinder.quota.GroupQuotaEngine.register_resources"><desc_name xml:space="preserve">register_resources</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">resources</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'resources\ (GroupQuotaEngine\ attribute)',\ 'cinder.quota.GroupQuotaEngine.resources',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GroupQuotaEngine" first="False" fullname="GroupQuotaEngine.resources" ids="cinder.quota.GroupQuotaEngine.resources" module="cinder.quota" names="cinder.quota.GroupQuotaEngine.resources"><desc_name xml:space="preserve">resources</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Fetches all possible quota resources.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NestedDbQuotaDriver\ (class\ in\ cinder.quota)',\ 'cinder.quota.NestedDbQuotaDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NestedDbQuotaDriver" ids="cinder.quota.NestedDbQuotaDriver" module="cinder.quota" names="cinder.quota.NestedDbQuotaDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NestedDbQuotaDriver</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.quota.DbQuotaDriver" reftitle="cinder.quota.DbQuotaDriver"><literal classes="xref py py-class">cinder.quota.DbQuotaDriver</literal></reference></paragraph>
                <index entries="['single',\ 'get_default()\ (NestedDbQuotaDriver\ method)',\ 'cinder.quota.NestedDbQuotaDriver.get_default',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NestedDbQuotaDriver" first="False" fullname="NestedDbQuotaDriver.get_default" ids="cinder.quota.NestedDbQuotaDriver.get_default" module="cinder.quota" names="cinder.quota.NestedDbQuotaDriver.get_default"><desc_name xml:space="preserve">get_default</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">resource</desc_parameter><desc_parameter xml:space="preserve">project_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get a specific default quota for a resource.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_defaults()\ (NestedDbQuotaDriver\ method)',\ 'cinder.quota.NestedDbQuotaDriver.get_defaults',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NestedDbQuotaDriver" first="False" fullname="NestedDbQuotaDriver.get_defaults" ids="cinder.quota.NestedDbQuotaDriver.get_defaults" module="cinder.quota" names="cinder.quota.NestedDbQuotaDriver.get_defaults"><desc_name xml:space="preserve">get_defaults</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">resources</desc_parameter><desc_parameter xml:space="preserve">project_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'validate_nested_setup()\ (NestedDbQuotaDriver\ method)',\ 'cinder.quota.NestedDbQuotaDriver.validate_nested_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NestedDbQuotaDriver" first="False" fullname="NestedDbQuotaDriver.validate_nested_setup" ids="cinder.quota.NestedDbQuotaDriver.validate_nested_setup" module="cinder.quota" names="cinder.quota.NestedDbQuotaDriver.validate_nested_setup"><desc_name xml:space="preserve">validate_nested_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">resources</desc_parameter><desc_parameter xml:space="preserve">project_tree</desc_parameter><desc_parameter xml:space="preserve">fix_allocated_quotas=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Ensures project_tree has quotas that make sense as nested quotas.</paragraph>
                        <definition_list>
                            <definition_list_item>
                                <term>Validates the following:</term>
                                <definition>
                                    <bullet_list bullet="*">
                                        <list_item>
                                            <paragraph>No parent project has child_projects who have more combined quota
                                                than the parent’s quota limit</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>No child quota has a larger in-use value than it’s current limit
                                                (could happen before because child default values weren’t enforced)</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph>All parent projects’ “allocated” quotas match the sum of the limits
                                                of its children projects</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </definition>
                            </definition_list_item>
                            <definition_list_item>
                                <term>TODO(mc_nair): need a better way to “flip the switch” to use nested</term>
                                <definition>
                                    <paragraph>quotas to make this less race-ee</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QuotaEngine\ (class\ in\ cinder.quota)',\ 'cinder.quota.QuotaEngine',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="QuotaEngine" ids="cinder.quota.QuotaEngine" module="cinder.quota" names="cinder.quota.QuotaEngine"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">QuotaEngine</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">quota_driver_class=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Represent the set of recognized quotas.</paragraph>
                <index entries="['single',\ 'add_volume_type_opts()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.add_volume_type_opts',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.add_volume_type_opts" ids="cinder.quota.QuotaEngine.add_volume_type_opts" module="cinder.quota" names="cinder.quota.QuotaEngine.add_volume_type_opts"><desc_name xml:space="preserve">add_volume_type_opts</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">opts</desc_parameter><desc_parameter xml:space="preserve">volume_type_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Add volume type resource options.</paragraph>
                        <paragraph>Adds elements to the opts hash for volume type quotas.
                            If a resource is being reserved (‘gigabytes’, etc) and the volume
                            type is set up for its own quotas, these reservations are copied
                            into keys for ‘gigabytes_&lt;volume type name&gt;’, etc.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">opts</literal_strong> – The reservations options hash.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume_type_id</literal_strong> – The volume type id for this reservation.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'commit()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.commit',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.commit" ids="cinder.quota.QuotaEngine.commit" module="cinder.quota" names="cinder.quota.QuotaEngine.commit"><desc_name xml:space="preserve">commit</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">reservations</desc_parameter><desc_parameter xml:space="preserve">project_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Commit reservations.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">reservations</literal_strong> – A list of the reservation UUIDs, as
                                                returned by the reserve() method.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – Specify the project_id if current context
                                                is admin and admin wants to impact on
                                                common user’s tenant.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'count()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.count',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.count" ids="cinder.quota.QuotaEngine.count" module="cinder.quota" names="cinder.quota.QuotaEngine.count"><desc_name xml:space="preserve">count</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">resource</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Count a resource.</paragraph>
                        <paragraph>For countable resources, invokes the count() function and
                            returns its result.  Arguments following the context and
                            resource are passed directly to the count function declared by
                            the resource.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">resource</literal_strong> – The name of the resource, as a string.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'destroy_by_project()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.destroy_by_project',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.destroy_by_project" ids="cinder.quota.QuotaEngine.destroy_by_project" module="cinder.quota" names="cinder.quota.QuotaEngine.destroy_by_project"><desc_name xml:space="preserve">destroy_by_project</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">project_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Destroy all quota limits associated with a project.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – The ID of the project being deleted.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'expire()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.expire',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.expire" ids="cinder.quota.QuotaEngine.expire" module="cinder.quota" names="cinder.quota.QuotaEngine.expire"><desc_name xml:space="preserve">expire</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Expire reservations.</paragraph>
                        <paragraph>Explores all currently existing reservations and rolls back
                            any that have expired.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_by_class()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.get_by_class',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.get_by_class" ids="cinder.quota.QuotaEngine.get_by_class" module="cinder.quota" names="cinder.quota.QuotaEngine.get_by_class"><desc_name xml:space="preserve">get_by_class</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">quota_class</desc_parameter><desc_parameter xml:space="preserve">resource_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get a specific quota by quota class.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_by_project()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.get_by_project',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.get_by_project" ids="cinder.quota.QuotaEngine.get_by_project" module="cinder.quota" names="cinder.quota.QuotaEngine.get_by_project"><desc_name xml:space="preserve">get_by_project</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">project_id</desc_parameter><desc_parameter xml:space="preserve">resource_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get a specific quota by project.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_by_project_or_default()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.get_by_project_or_default',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.get_by_project_or_default" ids="cinder.quota.QuotaEngine.get_by_project_or_default" module="cinder.quota" names="cinder.quota.QuotaEngine.get_by_project_or_default"><desc_name xml:space="preserve">get_by_project_or_default</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">project_id</desc_parameter><desc_parameter xml:space="preserve">resource_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get specific quota by project or default quota if doesn’t exists.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_class_quotas()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.get_class_quotas',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.get_class_quotas" ids="cinder.quota.QuotaEngine.get_class_quotas" module="cinder.quota" names="cinder.quota.QuotaEngine.get_class_quotas"><desc_name xml:space="preserve">get_class_quotas</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">quota_class</desc_parameter><desc_parameter xml:space="preserve">defaults=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Retrieve the quotas for the given quota class.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">quota_class</literal_strong> – The name of the quota class to return
                                                quotas for.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">defaults</literal_strong> – If True, the default value will be reported
                                                if there is no specific value for the
                                                resource.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_default()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.get_default',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.get_default" ids="cinder.quota.QuotaEngine.get_default" module="cinder.quota" names="cinder.quota.QuotaEngine.get_default"><desc_name xml:space="preserve">get_default</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">resource</desc_parameter><desc_parameter xml:space="preserve">parent_project_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get a specific default quota for a resource.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">parent_project_id</literal_strong> – The id of the current project’s parent,
                                        if any.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_defaults()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.get_defaults',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.get_defaults" ids="cinder.quota.QuotaEngine.get_defaults" module="cinder.quota" names="cinder.quota.QuotaEngine.get_defaults"><desc_name xml:space="preserve">get_defaults</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">project_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Retrieve the default quotas.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – The id of the current project</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_project_quotas()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.get_project_quotas',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.get_project_quotas" ids="cinder.quota.QuotaEngine.get_project_quotas" module="cinder.quota" names="cinder.quota.QuotaEngine.get_project_quotas"><desc_name xml:space="preserve">get_project_quotas</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">project_id</desc_parameter><desc_parameter xml:space="preserve">quota_class=None</desc_parameter><desc_parameter xml:space="preserve">defaults=True</desc_parameter><desc_parameter xml:space="preserve">usages=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Retrieve the quotas for the given project.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – The ID of the project to return quotas for.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">quota_class</literal_strong> – If project_id != context.project_id, the
                                                quota class cannot be determined.  This
                                                parameter allows it to be specified.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">defaults</literal_strong> – If True, the quota class value (or the
                                                default value, if there is no value from the
                                                quota class) will be reported if there is no
                                                specific value for the resource.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">usages</literal_strong> – If True, the current in_use, reserved and
                                                allocated counts will also be returned.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'limit_check()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.limit_check',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.limit_check" ids="cinder.quota.QuotaEngine.limit_check" module="cinder.quota" names="cinder.quota.QuotaEngine.limit_check"><desc_name xml:space="preserve">limit_check</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">project_id=None</desc_parameter><desc_parameter xml:space="preserve">**values</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check simple quota limits.</paragraph>
                        <paragraph>For limits–those quotas for which there is no usage
                            synchronization function–this method checks that a set of
                            proposed values are permitted by the limit restriction.  The
                            values to check are given as keyword arguments, where the key
                            identifies the specific quota limit to check, and the value is
                            the proposed value.</paragraph>
                        <paragraph>This method will raise a QuotaResourceUnknown exception if a
                            given resource is unknown or if it is not a simple limit
                            resource.</paragraph>
                        <paragraph>If any of the proposed values is over the defined quota, an
                            OverQuota exception will be raised with the sorted list of the
                            resources which are too high.  Otherwise, the method returns
                            nothing.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – Specify the project_id if current context
                                                is admin and admin wants to impact on
                                                common user’s tenant.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'register_resource()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.register_resource',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.register_resource" ids="cinder.quota.QuotaEngine.register_resource" module="cinder.quota" names="cinder.quota.QuotaEngine.register_resource"><desc_name xml:space="preserve">register_resource</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">resource</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Register a resource.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'register_resources()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.register_resources',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.register_resources" ids="cinder.quota.QuotaEngine.register_resources" module="cinder.quota" names="cinder.quota.QuotaEngine.register_resources"><desc_name xml:space="preserve">register_resources</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">resources</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Register a list of resources.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'reserve()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.reserve',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.reserve" ids="cinder.quota.QuotaEngine.reserve" module="cinder.quota" names="cinder.quota.QuotaEngine.reserve"><desc_name xml:space="preserve">reserve</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">expire=None</desc_parameter><desc_parameter xml:space="preserve">project_id=None</desc_parameter><desc_parameter xml:space="preserve">**deltas</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check quotas and reserve resources.</paragraph>
                        <paragraph>For counting quotas–those quotas for which there is a usage
                            synchronization function–this method checks quotas against
                            current usage and the desired deltas.  The deltas are given as
                            keyword arguments, and current usage and other reservations
                            are factored into the quota check.</paragraph>
                        <paragraph>This method will raise a QuotaResourceUnknown exception if a
                            given resource is unknown or if it does not have a usage
                            synchronization function.</paragraph>
                        <paragraph>If any of the proposed values is over the defined quota, an
                            OverQuota exception will be raised with the sorted list of the
                            resources which are too high.  Otherwise, the method returns a
                            list of reservation UUIDs which were created.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">expire</literal_strong> – An optional parameter specifying an expiration
                                                time for the reservations.  If it is a simple
                                                number, it is interpreted as a number of
                                                seconds and added to the current time; if it is
                                                a datetime.timedelta object, it will also be
                                                added to the current time.  A datetime.datetime
                                                object will be interpreted as the absolute
                                                expiration time.  If None is specified, the
                                                default expiration time set by
                                                –default-reservation-expire will be used (this
                                                value will be treated as a number of seconds).</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – Specify the project_id if current context
                                                is admin and admin wants to impact on
                                                common user’s tenant.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'resource_names\ (QuotaEngine\ attribute)',\ 'cinder.quota.QuotaEngine.resource_names',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.resource_names" ids="cinder.quota.QuotaEngine.resource_names" module="cinder.quota" names="cinder.quota.QuotaEngine.resource_names"><desc_name xml:space="preserve">resource_names</desc_name></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'resources\ (QuotaEngine\ attribute)',\ 'cinder.quota.QuotaEngine.resources',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.resources" ids="cinder.quota.QuotaEngine.resources" module="cinder.quota" names="cinder.quota.QuotaEngine.resources"><desc_name xml:space="preserve">resources</desc_name></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'rollback()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.rollback',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.rollback" ids="cinder.quota.QuotaEngine.rollback" module="cinder.quota" names="cinder.quota.QuotaEngine.rollback"><desc_name xml:space="preserve">rollback</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">reservations</desc_parameter><desc_parameter xml:space="preserve">project_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Roll back reservations.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">reservations</literal_strong> – A list of the reservation UUIDs, as
                                                returned by the reserve() method.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">project_id</literal_strong> – Specify the project_id if current context
                                                is admin and admin wants to impact on
                                                common user’s tenant.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'using_nested_quotas()\ (QuotaEngine\ method)',\ 'cinder.quota.QuotaEngine.using_nested_quotas',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaEngine" first="False" fullname="QuotaEngine.using_nested_quotas" ids="cinder.quota.QuotaEngine.using_nested_quotas" module="cinder.quota" names="cinder.quota.QuotaEngine.using_nested_quotas"><desc_name xml:space="preserve">using_nested_quotas</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns true if nested quotas are being used</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ReservableResource\ (class\ in\ cinder.quota)',\ 'cinder.quota.ReservableResource',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ReservableResource" ids="cinder.quota.ReservableResource" module="cinder.quota" names="cinder.quota.ReservableResource"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ReservableResource</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">sync</desc_parameter><desc_parameter xml:space="preserve">flag=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.quota.BaseResource" reftitle="cinder.quota.BaseResource"><literal classes="xref py py-class">cinder.quota.BaseResource</literal></reference></paragraph>
                <paragraph>Describe a reservable resource.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeQuotaEngine\ (class\ in\ cinder.quota)',\ 'cinder.quota.VolumeTypeQuotaEngine',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="VolumeTypeQuotaEngine" ids="cinder.quota.VolumeTypeQuotaEngine" module="cinder.quota" names="cinder.quota.VolumeTypeQuotaEngine"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">VolumeTypeQuotaEngine</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">quota_driver_class=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.quota.QuotaEngine" reftitle="cinder.quota.QuotaEngine"><literal classes="xref py py-class">cinder.quota.QuotaEngine</literal></reference></paragraph>
                <paragraph>Represent the set of all quotas.</paragraph>
                <index entries="['single',\ 'register_resource()\ (VolumeTypeQuotaEngine\ method)',\ 'cinder.quota.VolumeTypeQuotaEngine.register_resource',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VolumeTypeQuotaEngine" first="False" fullname="VolumeTypeQuotaEngine.register_resource" ids="cinder.quota.VolumeTypeQuotaEngine.register_resource" module="cinder.quota" names="cinder.quota.VolumeTypeQuotaEngine.register_resource"><desc_name xml:space="preserve">register_resource</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">resource</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'register_resources()\ (VolumeTypeQuotaEngine\ method)',\ 'cinder.quota.VolumeTypeQuotaEngine.register_resources',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VolumeTypeQuotaEngine" first="False" fullname="VolumeTypeQuotaEngine.register_resources" ids="cinder.quota.VolumeTypeQuotaEngine.register_resources" module="cinder.quota" names="cinder.quota.VolumeTypeQuotaEngine.register_resources"><desc_name xml:space="preserve">register_resources</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">resources</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'resources\ (VolumeTypeQuotaEngine\ attribute)',\ 'cinder.quota.VolumeTypeQuotaEngine.resources',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeTypeQuotaEngine" first="False" fullname="VolumeTypeQuotaEngine.resources" ids="cinder.quota.VolumeTypeQuotaEngine.resources" module="cinder.quota" names="cinder.quota.VolumeTypeQuotaEngine.resources"><desc_name xml:space="preserve">resources</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Fetches all possible quota resources.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_quota_resource()\ (VolumeTypeQuotaEngine\ method)',\ 'cinder.quota.VolumeTypeQuotaEngine.update_quota_resource',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VolumeTypeQuotaEngine" first="False" fullname="VolumeTypeQuotaEngine.update_quota_resource" ids="cinder.quota.VolumeTypeQuotaEngine.update_quota_resource" module="cinder.quota" names="cinder.quota.VolumeTypeQuotaEngine.update_quota_resource"><desc_name xml:space="preserve">update_quota_resource</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">old_type_name</desc_parameter><desc_parameter xml:space="preserve">new_type_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update resource in quota.</paragraph>
                        <paragraph>This is to update resource in quotas, quota_classes, and
                            quota_usages once the name of a volume type is changed.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – The request context, for access checks.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">old_type_name</literal_strong> – old name of volume type.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">new_type_name</literal_strong> – new name of volume type.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeTypeResource\ (class\ in\ cinder.quota)',\ 'cinder.quota.VolumeTypeResource',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="VolumeTypeResource" ids="cinder.quota.VolumeTypeResource" module="cinder.quota" names="cinder.quota.VolumeTypeResource"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">VolumeTypeResource</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">part_name</desc_parameter><desc_parameter xml:space="preserve">volume_type</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.quota.ReservableResource" reftitle="cinder.quota.ReservableResource"><literal classes="xref py py-class">cinder.quota.ReservableResource</literal></reference></paragraph>
                <paragraph>ReservableResource for a specific volume type.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
