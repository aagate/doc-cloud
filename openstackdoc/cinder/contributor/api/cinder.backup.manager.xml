<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.backup.manager.rst">
    <section ids="module-cinder.backup.manager the-cinder-backup-manager-module" names="the\ cinder.backup.manager\ module">
        <title>The <reference internal="True" refid="module-cinder.backup.manager" reftitle="cinder.backup.manager"><literal classes="xref py py-mod">cinder.backup.manager</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.backup.manager\ (module)',\ 'module-cinder.backup.manager',\ '',\ None]"></index>
        <paragraph>Backup manager manages volume backups.</paragraph>
        <paragraph>Volume Backups are full copies of persistent volumes stored in a backup
            store e.g. an object store or any other backup store if and when support is
            added. They are usable without the original object being available. A
            volume backup can be restored to the original volume it was created from or
            any other available volume with a minimum size of the original volume.
            Volume backups can be created, restored, deleted and listed.</paragraph>
        <paragraph><strong>Related Flags</strong></paragraph>
        <field_list>
            <field>
                <field_name>backup_manager</field_name>
                <field_body>
                    <paragraph>The module name of a class derived from
                        <literal classes="xref py py-class">manager.Manager</literal> (default:
                        <literal classes="xref py py-class">cinder.backup.manager.Manager</literal>).</paragraph>
                </field_body>
            </field>
        </field_list>
        <index entries="['single',\ 'BackupManager\ (class\ in\ cinder.backup.manager)',\ 'cinder.backup.manager.BackupManager',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BackupManager" ids="cinder.backup.manager.BackupManager" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">BackupManager</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.manager.ThreadPoolManager" refuri="cinder.manager#cinder.manager.ThreadPoolManager"><literal classes="xref py py-class">cinder.manager.ThreadPoolManager</literal></reference></paragraph>
                <paragraph>Manages backup of block storage devices.</paragraph>
                <index entries="['single',\ 'RPC_API_VERSION\ (BackupManager\ attribute)',\ 'cinder.backup.manager.BackupManager.RPC_API_VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.RPC_API_VERSION" ids="cinder.backup.manager.BackupManager.RPC_API_VERSION" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.RPC_API_VERSION"><desc_name xml:space="preserve">RPC_API_VERSION</desc_name><desc_annotation xml:space="preserve"> = '2.1'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_support_to_force_delete()\ (BackupManager\ method)',\ 'cinder.backup.manager.BackupManager.check_support_to_force_delete',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.check_support_to_force_delete" ids="cinder.backup.manager.BackupManager.check_support_to_force_delete" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.check_support_to_force_delete"><desc_name xml:space="preserve">check_support_to_force_delete</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check if the backup driver supports force delete operation.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">context</literal_strong> – running context</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_backup()\ (BackupManager\ method)',\ 'cinder.backup.manager.BackupManager.create_backup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.create_backup" ids="cinder.backup.manager.BackupManager.create_backup" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.create_backup"><desc_name xml:space="preserve">create_backup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">backup</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create volume backups using configured backup service.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_backup()\ (BackupManager\ method)',\ 'cinder.backup.manager.BackupManager.delete_backup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.delete_backup" ids="cinder.backup.manager.BackupManager.delete_backup" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.delete_backup"><desc_name xml:space="preserve">delete_backup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">backup</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete volume backup from configured backup service.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'driver_name\ (BackupManager\ attribute)',\ 'cinder.backup.manager.BackupManager.driver_name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.driver_name" ids="cinder.backup.manager.BackupManager.driver_name" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.driver_name"><desc_name xml:space="preserve">driver_name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>This function maps old backup services to backup drivers.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'export_record()\ (BackupManager\ method)',\ 'cinder.backup.manager.BackupManager.export_record',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.export_record" ids="cinder.backup.manager.BackupManager.export_record" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.export_record"><desc_name xml:space="preserve">export_record</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">backup</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Export all volume backup metadata details to allow clean import.</paragraph>
                        <paragraph>Export backup metadata so it could be re-imported into the database
                            without any prerequisite in the backup database.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – running context</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backup</literal_strong> – backup object to export</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>backup_record - a description of how to import the backup</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>contains ‘backup_url’ - how to import the backup, and</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>‘backup_service’ describing the needed driver.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.InvalidBackup" refuri="cinder.exception#cinder.exception.InvalidBackup"><literal_strong>InvalidBackup</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'import_record()\ (BackupManager\ method)',\ 'cinder.backup.manager.BackupManager.import_record',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.import_record" ids="cinder.backup.manager.BackupManager.import_record" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.import_record"><desc_name xml:space="preserve">import_record</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">backup</desc_parameter><desc_parameter xml:space="preserve">backup_service</desc_parameter><desc_parameter xml:space="preserve">backup_url</desc_parameter><desc_parameter xml:space="preserve">backup_hosts</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Import all volume backup metadata details to the backup db.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – running context</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backup</literal_strong> – The new backup object for the import</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backup_service</literal_strong> – The needed backup driver for import</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backup_url</literal_strong> – An identifier string to locate the backup</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backup_hosts</literal_strong> – Potential hosts to execute the import</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><reference internal="True" reftitle="cinder.exception.InvalidBackup" refuri="cinder.exception#cinder.exception.InvalidBackup"><literal_strong>InvalidBackup</literal_strong></reference> – </paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><reference internal="True" reftitle="cinder.exception.ServiceNotFound" refuri="cinder.exception#cinder.exception.ServiceNotFound"><literal_strong>ServiceNotFound</literal_strong></reference> – </paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'init_host()\ (BackupManager\ method)',\ 'cinder.backup.manager.BackupManager.init_host',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.init_host" ids="cinder.backup.manager.BackupManager.init_host" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.init_host"><desc_name xml:space="preserve">init_host</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Run initialization needed for a standalone service.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'is_working()\ (BackupManager\ method)',\ 'cinder.backup.manager.BackupManager.is_working',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.is_working" ids="cinder.backup.manager.BackupManager.is_working" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.is_working"><desc_name xml:space="preserve">is_working</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'reset()\ (BackupManager\ method)',\ 'cinder.backup.manager.BackupManager.reset',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.reset" ids="cinder.backup.manager.BackupManager.reset" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.reset"><desc_name xml:space="preserve">reset</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'reset_status()\ (BackupManager\ method)',\ 'cinder.backup.manager.BackupManager.reset_status',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.reset_status" ids="cinder.backup.manager.BackupManager.reset_status" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.reset_status"><desc_name xml:space="preserve">reset_status</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">backup</desc_parameter><desc_parameter xml:space="preserve">status</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Reset volume backup status.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> – running context</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backup</literal_strong> – The backup object for reset status operation</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">status</literal_strong> – The status to be set</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><reference internal="True" reftitle="cinder.exception.InvalidBackup" refuri="cinder.exception#cinder.exception.InvalidBackup"><literal_strong>InvalidBackup</literal_strong></reference> – </paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><reference internal="True" reftitle="cinder.exception.BackupVerifyUnsupportedDriver" refuri="cinder.exception#cinder.exception.BackupVerifyUnsupportedDriver"><literal_strong>BackupVerifyUnsupportedDriver</literal_strong></reference> – </paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong>AttributeError</literal_strong> – </paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'restore_backup()\ (BackupManager\ method)',\ 'cinder.backup.manager.BackupManager.restore_backup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.restore_backup" ids="cinder.backup.manager.BackupManager.restore_backup" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.restore_backup"><desc_name xml:space="preserve">restore_backup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">backup</desc_parameter><desc_parameter xml:space="preserve">volume_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Restore volume backups from configured backup service.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'setup_backup_backend()\ (BackupManager\ method)',\ 'cinder.backup.manager.BackupManager.setup_backup_backend',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.setup_backup_backend" ids="cinder.backup.manager.BackupManager.setup_backup_backend" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.setup_backup_backend"><desc_name xml:space="preserve">setup_backup_backend</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'target\ (BackupManager\ attribute)',\ 'cinder.backup.manager.BackupManager.target',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BackupManager" first="False" fullname="BackupManager.target" ids="cinder.backup.manager.BackupManager.target" module="cinder.backup.manager" names="cinder.backup.manager.BackupManager.target"><desc_name xml:space="preserve">target</desc_name><desc_annotation xml:space="preserve"> = &lt;Target version=2.1&gt;</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
