<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.scheduler.evaluator.evaluator.rst">
    <section ids="module-cinder.scheduler.evaluator.evaluator the-cinder-scheduler-evaluator-evaluator-module" names="the\ cinder.scheduler.evaluator.evaluator\ module">
        <title>The <reference internal="True" refid="module-cinder.scheduler.evaluator.evaluator" reftitle="cinder.scheduler.evaluator.evaluator"><literal classes="xref py py-mod">cinder.scheduler.evaluator.evaluator</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.scheduler.evaluator.evaluator\ (module)',\ 'module-cinder.scheduler.evaluator.evaluator',\ '',\ None]"></index>
        <index entries="['single',\ 'EvalAddOp\ (class\ in\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.EvalAddOp',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EvalAddOp" ids="cinder.scheduler.evaluator.evaluator.EvalAddOp" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalAddOp"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EvalAddOp</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">toks</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'eval()\ (EvalAddOp\ method)',\ 'cinder.scheduler.evaluator.evaluator.EvalAddOp.eval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EvalAddOp" first="False" fullname="EvalAddOp.eval" ids="cinder.scheduler.evaluator.evaluator.EvalAddOp.eval" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalAddOp.eval"><desc_name xml:space="preserve">eval</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EvalBoolAndOp\ (class\ in\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.EvalBoolAndOp',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EvalBoolAndOp" ids="cinder.scheduler.evaluator.evaluator.EvalBoolAndOp" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalBoolAndOp"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EvalBoolAndOp</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">toks</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'eval()\ (EvalBoolAndOp\ method)',\ 'cinder.scheduler.evaluator.evaluator.EvalBoolAndOp.eval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EvalBoolAndOp" first="False" fullname="EvalBoolAndOp.eval" ids="cinder.scheduler.evaluator.evaluator.EvalBoolAndOp.eval" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalBoolAndOp.eval"><desc_name xml:space="preserve">eval</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EvalBoolOrOp\ (class\ in\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.EvalBoolOrOp',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EvalBoolOrOp" ids="cinder.scheduler.evaluator.evaluator.EvalBoolOrOp" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalBoolOrOp"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EvalBoolOrOp</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">toks</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'eval()\ (EvalBoolOrOp\ method)',\ 'cinder.scheduler.evaluator.evaluator.EvalBoolOrOp.eval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EvalBoolOrOp" first="False" fullname="EvalBoolOrOp.eval" ids="cinder.scheduler.evaluator.evaluator.EvalBoolOrOp.eval" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalBoolOrOp.eval"><desc_name xml:space="preserve">eval</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EvalCommaSeperator\ (class\ in\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.EvalCommaSeperator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EvalCommaSeperator" ids="cinder.scheduler.evaluator.evaluator.EvalCommaSeperator" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalCommaSeperator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EvalCommaSeperator</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">toks</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'eval()\ (EvalCommaSeperator\ method)',\ 'cinder.scheduler.evaluator.evaluator.EvalCommaSeperator.eval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EvalCommaSeperator" first="False" fullname="EvalCommaSeperator.eval" ids="cinder.scheduler.evaluator.evaluator.EvalCommaSeperator.eval" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalCommaSeperator.eval"><desc_name xml:space="preserve">eval</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EvalComparisonOp\ (class\ in\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.EvalComparisonOp',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EvalComparisonOp" ids="cinder.scheduler.evaluator.evaluator.EvalComparisonOp" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalComparisonOp"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EvalComparisonOp</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">toks</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'eval()\ (EvalComparisonOp\ method)',\ 'cinder.scheduler.evaluator.evaluator.EvalComparisonOp.eval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EvalComparisonOp" first="False" fullname="EvalComparisonOp.eval" ids="cinder.scheduler.evaluator.evaluator.EvalComparisonOp.eval" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalComparisonOp.eval"><desc_name xml:space="preserve">eval</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'operations\ (EvalComparisonOp\ attribute)',\ 'cinder.scheduler.evaluator.evaluator.EvalComparisonOp.operations',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="EvalComparisonOp" first="False" fullname="EvalComparisonOp.operations" ids="cinder.scheduler.evaluator.evaluator.EvalComparisonOp.operations" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalComparisonOp.operations"><desc_name xml:space="preserve">operations</desc_name><desc_annotation xml:space="preserve"> = {'&lt;': &lt;built-in function lt&gt;, '&lt;=': &lt;built-in function le&gt;, '&gt;': &lt;built-in function gt&gt;, '&gt;=': &lt;built-in function ge&gt;, '!=': &lt;built-in function ne&gt;, '==': &lt;built-in function eq&gt;, '&lt;&gt;': &lt;built-in function ne&gt;}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EvalConstant\ (class\ in\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.EvalConstant',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EvalConstant" ids="cinder.scheduler.evaluator.evaluator.EvalConstant" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalConstant"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EvalConstant</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">toks</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'eval()\ (EvalConstant\ method)',\ 'cinder.scheduler.evaluator.evaluator.EvalConstant.eval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EvalConstant" first="False" fullname="EvalConstant.eval" ids="cinder.scheduler.evaluator.evaluator.EvalConstant.eval" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalConstant.eval"><desc_name xml:space="preserve">eval</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EvalFunction\ (class\ in\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.EvalFunction',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EvalFunction" ids="cinder.scheduler.evaluator.evaluator.EvalFunction" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalFunction"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EvalFunction</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">toks</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'eval()\ (EvalFunction\ method)',\ 'cinder.scheduler.evaluator.evaluator.EvalFunction.eval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EvalFunction" first="False" fullname="EvalFunction.eval" ids="cinder.scheduler.evaluator.evaluator.EvalFunction.eval" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalFunction.eval"><desc_name xml:space="preserve">eval</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'functions\ (EvalFunction\ attribute)',\ 'cinder.scheduler.evaluator.evaluator.EvalFunction.functions',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="EvalFunction" first="False" fullname="EvalFunction.functions" ids="cinder.scheduler.evaluator.evaluator.EvalFunction.functions" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalFunction.functions"><desc_name xml:space="preserve">functions</desc_name><desc_annotation xml:space="preserve"> = {'abs': &lt;built-in function abs&gt;, 'max': &lt;built-in function max&gt;, 'min': &lt;built-in function min&gt;}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EvalMultOp\ (class\ in\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.EvalMultOp',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EvalMultOp" ids="cinder.scheduler.evaluator.evaluator.EvalMultOp" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalMultOp"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EvalMultOp</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">toks</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'eval()\ (EvalMultOp\ method)',\ 'cinder.scheduler.evaluator.evaluator.EvalMultOp.eval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EvalMultOp" first="False" fullname="EvalMultOp.eval" ids="cinder.scheduler.evaluator.evaluator.EvalMultOp.eval" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalMultOp.eval"><desc_name xml:space="preserve">eval</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EvalNegateOp\ (class\ in\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.EvalNegateOp',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EvalNegateOp" ids="cinder.scheduler.evaluator.evaluator.EvalNegateOp" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalNegateOp"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EvalNegateOp</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">toks</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'eval()\ (EvalNegateOp\ method)',\ 'cinder.scheduler.evaluator.evaluator.EvalNegateOp.eval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EvalNegateOp" first="False" fullname="EvalNegateOp.eval" ids="cinder.scheduler.evaluator.evaluator.EvalNegateOp.eval" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalNegateOp.eval"><desc_name xml:space="preserve">eval</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EvalPowerOp\ (class\ in\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.EvalPowerOp',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EvalPowerOp" ids="cinder.scheduler.evaluator.evaluator.EvalPowerOp" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalPowerOp"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EvalPowerOp</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">toks</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'eval()\ (EvalPowerOp\ method)',\ 'cinder.scheduler.evaluator.evaluator.EvalPowerOp.eval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EvalPowerOp" first="False" fullname="EvalPowerOp.eval" ids="cinder.scheduler.evaluator.evaluator.EvalPowerOp.eval" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalPowerOp.eval"><desc_name xml:space="preserve">eval</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EvalSignOp\ (class\ in\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.EvalSignOp',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EvalSignOp" ids="cinder.scheduler.evaluator.evaluator.EvalSignOp" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalSignOp"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EvalSignOp</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">toks</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'eval()\ (EvalSignOp\ method)',\ 'cinder.scheduler.evaluator.evaluator.EvalSignOp.eval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EvalSignOp" first="False" fullname="EvalSignOp.eval" ids="cinder.scheduler.evaluator.evaluator.EvalSignOp.eval" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalSignOp.eval"><desc_name xml:space="preserve">eval</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'operations\ (EvalSignOp\ attribute)',\ 'cinder.scheduler.evaluator.evaluator.EvalSignOp.operations',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="EvalSignOp" first="False" fullname="EvalSignOp.operations" ids="cinder.scheduler.evaluator.evaluator.EvalSignOp.operations" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalSignOp.operations"><desc_name xml:space="preserve">operations</desc_name><desc_annotation xml:space="preserve"> = {'+': 1, '-': -1}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'EvalTernaryOp\ (class\ in\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.EvalTernaryOp',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EvalTernaryOp" ids="cinder.scheduler.evaluator.evaluator.EvalTernaryOp" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalTernaryOp"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EvalTernaryOp</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">toks</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'eval()\ (EvalTernaryOp\ method)',\ 'cinder.scheduler.evaluator.evaluator.EvalTernaryOp.eval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EvalTernaryOp" first="False" fullname="EvalTernaryOp.eval" ids="cinder.scheduler.evaluator.evaluator.EvalTernaryOp.eval" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.EvalTernaryOp.eval"><desc_name xml:space="preserve">eval</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'evaluate()\ (in\ module\ cinder.scheduler.evaluator.evaluator)',\ 'cinder.scheduler.evaluator.evaluator.evaluate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="evaluate" ids="cinder.scheduler.evaluator.evaluator.evaluate" module="cinder.scheduler.evaluator.evaluator" names="cinder.scheduler.evaluator.evaluator.evaluate"><desc_name xml:space="preserve">evaluate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">expression</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Evaluates an expression.</paragraph>
                <paragraph>Provides the facility to evaluate mathematical expressions, and to
                    substitute variables from dictionaries into those expressions.</paragraph>
                <paragraph>Supports both integer and floating point values, and automatic
                    promotion where necessary.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
