<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.coprhd.scaleio.rst">
    <section ids="module-cinder.volume.drivers.coprhd.scaleio the-cinder-volume-drivers-coprhd-scaleio-module" names="the\ cinder.volume.drivers.coprhd.scaleio\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.coprhd.scaleio" reftitle="cinder.volume.drivers.coprhd.scaleio"><literal classes="xref py py-mod">cinder.volume.drivers.coprhd.scaleio</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.coprhd.scaleio\ (module)',\ 'module-cinder.volume.drivers.coprhd.scaleio',\ '',\ None]"></index>
        <paragraph>Driver for EMC CoprHD ScaleIO volumes.</paragraph>
        <index entries="['single',\ 'EMCCoprHDScaleIODriver\ (class\ in\ cinder.volume.drivers.coprhd.scaleio)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EMCCoprHDScaleIODriver" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EMCCoprHDScaleIODriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.driver.VolumeDriver" refuri="cinder.volume.driver#cinder.volume.driver.VolumeDriver"><literal classes="xref py py-class">cinder.volume.driver.VolumeDriver</literal></reference></paragraph>
                <paragraph>CoprHD ScaleIO Driver.</paragraph>
                <index entries="['single',\ 'CI_WIKI_NAME\ (EMCCoprHDScaleIODriver\ attribute)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.CI_WIKI_NAME" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.CI_WIKI_NAME" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'EMC_CoprHD_CI'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (EMCCoprHDScaleIODriver\ attribute)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.VERSION" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.VERSION" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '3.0.0.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_export()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.check_for_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.check_for_export" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.check_for_export" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.check_for_export"><desc_name xml:space="preserve">check_for_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Make sure volume is exported.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_setup_error()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.check_for_setup_error',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.check_for_setup_error" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.check_for_setup_error" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.check_for_setup_error"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.create_cloned_volume" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_cloned_volume" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a cloned Volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_export()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.create_export" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_export" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_export"><desc_name xml:space="preserve">create_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to get the export info for a new volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.create_group" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_group" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_group"><desc_name xml:space="preserve">create_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group_from_src()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_group_from_src',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.create_group_from_src" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_group_from_src" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_group_from_src"><desc_name xml:space="preserve">create_group_from_src</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter><desc_parameter xml:space="preserve">group_snapshot=None</desc_parameter><desc_parameter xml:space="preserve">snapshots=None</desc_parameter><desc_parameter xml:space="preserve">source_group=None</desc_parameter><desc_parameter xml:space="preserve">source_vols=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group from source.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group_snapshot()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_group_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.create_group_snapshot" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_group_snapshot" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_group_snapshot"><desc_name xml:space="preserve">create_group_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.create_snapshot" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_snapshot" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.create_volume" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_volume" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a Volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.create_volume_from_snapshot" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_volume_from_snapshot" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a volume from a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_group()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.delete_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.delete_group" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.delete_group" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.delete_group"><desc_name xml:space="preserve">delete_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a group.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_group_snapshot()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.delete_group_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.delete_group_snapshot" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.delete_group_snapshot" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.delete_group_snapshot"><desc_name xml:space="preserve">delete_group_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a group snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.delete_snapshot" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.delete_snapshot" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.delete_volume" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.delete_volume" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes an volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ensure_export()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.ensure_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.ensure_export" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.ensure_export" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.ensure_export"><desc_name xml:space="preserve">ensure_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to get the export info for an existing volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.extend_volume" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.extend_volume" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>expands the size of the volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.get_volume_stats" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.get_volume_stats" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get volume status.</paragraph>
                        <paragraph>If ‘refresh’ is True, run update the stats first.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.initialize_connection" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.initialize_connection" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Initializes the connection and returns connection info.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove_export()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.remove_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.remove_export" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.remove_export" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.remove_export"><desc_name xml:space="preserve">remove_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver exntry point to remove an export for a volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'retype()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.retype',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.retype" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.retype" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.retype"><desc_name xml:space="preserve">retype</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_type</desc_parameter><desc_parameter xml:space="preserve">diff</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Change the volume type.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'server_token\ (EMCCoprHDScaleIODriver\ attribute)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.server_token',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.server_token" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.server_token" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.server_token"><desc_name xml:space="preserve">server_token</desc_name><desc_annotation xml:space="preserve"> = None</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.terminate_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.terminate_connection" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.terminate_connection" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.terminate_connection"><desc_name xml:space="preserve">terminate_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Disallow connection from connector.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_group()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.update_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.update_group" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.update_group" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.update_group"><desc_name xml:space="preserve">update_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">add_volumes=None</desc_parameter><desc_parameter xml:space="preserve">remove_volumes=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Updates volumes in group.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_volume_stats()\ (EMCCoprHDScaleIODriver\ method)',\ 'cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.update_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EMCCoprHDScaleIODriver" first="False" fullname="EMCCoprHDScaleIODriver.update_volume_stats" ids="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.update_volume_stats" module="cinder.volume.drivers.coprhd.scaleio" names="cinder.volume.drivers.coprhd.scaleio.EMCCoprHDScaleIODriver.update_volume_stats"><desc_name xml:space="preserve">update_volume_stats</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Retrieve stats info from virtual pool/virtual array.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
