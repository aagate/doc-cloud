<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.hpe.hpe_3par_common.rst">
    <section ids="module-cinder.volume.drivers.hpe.hpe_3par_common the-cinder-volume-drivers-hpe-hpe-3par-common-module" names="the\ cinder.volume.drivers.hpe.hpe_3par_common\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.hpe.hpe_3par_common" reftitle="cinder.volume.drivers.hpe.hpe_3par_common"><literal classes="xref py py-mod">cinder.volume.drivers.hpe.hpe_3par_common</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.hpe.hpe_3par_common\ (module)',\ 'module-cinder.volume.drivers.hpe.hpe_3par_common',\ '',\ None]"></index>
        <paragraph>Volume driver common utilities for HPE 3PAR Storage array</paragraph>
        <paragraph>The 3PAR drivers requires 3.1.3 firmware on the 3PAR array.</paragraph>
        <paragraph>You will need to install the python hpe3parclient module.
            sudo pip install python-3parclient</paragraph>
        <paragraph>The drivers uses both the REST service and the SSH
            command line to correctly operate.  Since the
            ssh credentials and the REST credentials can be different
            we need to have settings for both.</paragraph>
        <paragraph>The drivers requires the use of the san_ip, san_login,
            san_password settings for ssh connections into the 3PAR
            array.   It also requires the setting of
            hpe3par_api_url, hpe3par_username, hpe3par_password
            for credentials to talk to the REST service on the 3PAR
            array.</paragraph>
        <index entries="['single',\ 'HPE3PARCommon\ (class\ in\ cinder.volume.drivers.hpe.hpe_3par_common)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="HPE3PARCommon" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">HPE3PARCommon</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">config</desc_parameter><desc_parameter xml:space="preserve">active_backend_id=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Class that contains common code for the 3PAR drivers.</paragraph>
                <paragraph>Version history:</paragraph>
                <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">1.2.0 - Updated hp3parclient API use to 2.0.x
1.2.1 - Check that the VVS exists
1.2.2 - log prior to raising exceptions
1.2.3 - Methods to update key/value pair bug #1258033
1.2.4 - Remove deprecated config option hp3par_domain
1.2.5 - Raise Ex when deleting snapshot with dependencies bug #1250249
1.2.6 - Allow optional specifying n:s:p for vlun creation bug #1269515
        This update now requires 3.1.2 MU3 firmware
1.3.0 - Removed all SSH code.  We rely on the hp3parclient now.
2.0.0 - Update hp3parclient API uses 3.0.x
2.0.1 - Updated to use qos_specs, added new qos settings and personas
2.0.2 - Add back-end assisted volume migrate
2.0.3 - Allow deleting missing snapshots bug #1283233
2.0.4 - Allow volumes created from snapshots to be larger bug #1279478
2.0.5 - Fix extend volume units bug #1284368
2.0.6 - use loopingcall.wait instead of time.sleep
2.0.7 - Allow extend volume based on snapshot bug #1285906
2.0.8 - Fix detach issue for multiple hosts bug #1288927
2.0.9 - Remove unused 3PAR driver method bug #1310807
2.0.10 - Fixed an issue with 3PAR vlun location bug #1315542
2.0.11 - Remove hp3parclient requirement from unit tests #1315195
2.0.12 - Volume detach hangs when host is in a host set bug #1317134
2.0.13 - Added support for managing/unmanaging of volumes
2.0.14 - Modified manage volume to use standard 'source-name' element.
2.0.15 - Added support for volume retype
2.0.16 - Add a better log during delete_volume time. Bug #1349636
2.0.17 - Added iSCSI CHAP support
         This update now requires 3.1.3 MU1 firmware
         and hp3parclient 3.1.0
2.0.18 - HP 3PAR manage_existing with volume-type support
2.0.19 - Update default persona from Generic to Generic-ALUA
2.0.20 - Configurable SSH missing key policy and known hosts file
2.0.21 - Remove bogus invalid snapCPG=None exception
2.0.22 - HP 3PAR drivers should not claim to have 'infinite' space
2.0.23 - Increase the hostname size from 23 to 31  Bug #1371242
2.0.24 - Add pools (hp3par_cpg now accepts a list of CPGs)
2.0.25 - Migrate without losing type settings bug #1356608
2.0.26 - Don't ignore extra-specs snap_cpg when missing cpg #1368972
2.0.27 - Fixing manage source-id error bug #1357075
2.0.28 - Removing locks bug #1381190
2.0.29 - Report a limitless cpg's stats better bug #1398651
2.0.30 - Update the minimum hp3parclient version bug #1402115
2.0.31 - Removed usage of host name cache #1398914
2.0.32 - Update LOG usage to fix translations.  bug #1384312
2.0.33 - Fix host persona to match WSAPI mapping bug #1403997
2.0.34 - Fix log messages to match guidelines. bug #1411370
2.0.35 - Fix default snapCPG for manage_existing bug #1393609
2.0.36 - Added support for dedup provisioning
2.0.37 - Added support for enabling Flash Cache
2.0.38 - Add stats for hp3par goodness_function and filter_function
2.0.39 - Added support for updated detach_volume attachment.
2.0.40 - Make the 3PAR drivers honor the pool in create  bug #1432876
2.0.41 - Only log versions at startup.  bug #1447697
2.0.42 - Fix type for snapshot config settings. bug #1461640
2.0.43 - Report the capability of supporting multiattach
2.0.44 - Update help strings to reduce the 3PAR user role requirements
2.0.45 - Python 3 fixes
2.0.46 - Improved VLUN creation and deletion logic. #1469816
2.0.47 - Changed initialize_connection to use getHostVLUNs. #1475064
2.0.48 - Adding changes to support 3PAR iSCSI multipath.
2.0.49 - Added client CPG stats to driver volume stats. bug #1482741
2.0.50 - Add over subscription support
2.0.51 - Adds consistency group support
2.0.52 - Added update_migrated_volume. bug #1492023
2.0.53 - Fix volume size conversion. bug #1513158
3.0.0 - Rebranded HP to HPE.
3.0.1 - Fixed find_existing_vluns bug #1515033
3.0.2 - Python 3 support
3.0.3 - Remove db access for consistency groups
3.0.4 - Adds v2 managed replication support
3.0.5 - Adds v2 unmanaged replication support
3.0.6 - Adding manage/unmanage snapshot support
3.0.7 - Enable standard capabilities based on 3PAR licenses
3.0.8 - Optimize array ID retrieval
3.0.9 - Bump minimum API version for volume replication
3.0.10 - Added additional volumes checks to the manage snapshot API
3.0.11 - Fix the image cache capability bug #1491088
3.0.12 - Remove client version checks for replication
3.0.13 - Support creating a cg from a source cg
3.0.14 - Comparison of WWNs now handles case difference. bug #1546453
3.0.15 - Update replication to version 2.1
3.0.16 - Use same LUN ID for each VLUN path #1551994
3.0.17 - Don't fail on clearing 3PAR object volume key. bug #1546392
3.0.18 - create_cloned_volume account for larger size.  bug #1554740
3.0.19 - Remove metadata that tracks the instance ID. bug #1572665
3.0.20 - Fix lun_id of 0 issue. bug #1573298
3.0.21 - Driver no longer fails to initialize if
         System Reporter license is missing. bug #1568078
3.0.22 - Rework delete_vlun. Bug #1582922
3.0.23 - Fix CG create failures with long display name or special
         characters. bug #1573647
3.0.24 - Fix terminate connection on failover
3.0.25 - Fix delete volume when online clone is active. bug #1349639
3.0.26 - Fix concurrent snapshot delete conflict. bug #1600104
3.0.27 - Fix snapCPG error during backup of attached volume.
         Bug #1646396 and also ,Fix backup of attached ISCSI
         and CHAP enabled volume.bug #1644238.
3.0.28 - Remove un-necessary snapshot creation of source volume
         while doing online copy in create_cloned_volume call.
         Bug #1661541
3.0.29 - Fix convert snapshot volume to base volume type. bug #1656186
3.0.30 - Handle manage and unmanage hosts present. bug #1648067
3.0.31 - Enable HPE-3PAR Compression Feature.
3.0.32 - Add consistency group capability to generic volume group
         in HPE-3APR
3.0.33 - Added replication feature in retype flow. bug #1680313
3.0.34 - Add cloned volume to vvset in online copy. bug #1664464
3.0.35 - Add volume to consistency group if flag enabled. bug #1702317
3.0.36 - Swap volume name in migration. bug #1699733
3.0.37 - Fixed image cache enabled capability. bug #1686985
3.0.38 - Fixed delete operation of replicated volume which is part
         of QOS. bug #1717875
3.0.39 - Added check to modify host after volume detach. bug #1730720
3.0.40 - Handle force detach case. bug #1686745</literal_block>
                <index entries="['single',\ 'COMPRESSION_LIC\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.COMPRESSION_LIC',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.COMPRESSION_LIC" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.COMPRESSION_LIC" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.COMPRESSION_LIC"><desc_name xml:space="preserve">COMPRESSION_LIC</desc_name><desc_annotation xml:space="preserve"> = 'Compression'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'CONVERT_TO_DEDUP\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.CONVERT_TO_DEDUP',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.CONVERT_TO_DEDUP" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.CONVERT_TO_DEDUP" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.CONVERT_TO_DEDUP"><desc_name xml:space="preserve">CONVERT_TO_DEDUP</desc_name><desc_annotation xml:space="preserve"> = 3</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'CONVERT_TO_FULL\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.CONVERT_TO_FULL',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.CONVERT_TO_FULL" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.CONVERT_TO_FULL" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.CONVERT_TO_FULL"><desc_name xml:space="preserve">CONVERT_TO_FULL</desc_name><desc_annotation xml:space="preserve"> = 2</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'CONVERT_TO_THIN\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.CONVERT_TO_THIN',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.CONVERT_TO_THIN" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.CONVERT_TO_THIN" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.CONVERT_TO_THIN"><desc_name xml:space="preserve">CONVERT_TO_THIN</desc_name><desc_annotation xml:space="preserve"> = 1</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DEDUP\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.DEDUP',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.DEDUP" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.DEDUP" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.DEDUP"><desc_name xml:space="preserve">DEDUP</desc_name><desc_annotation xml:space="preserve"> = 6</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DEFAULT_REP_MODE\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.DEFAULT_REP_MODE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.DEFAULT_REP_MODE" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.DEFAULT_REP_MODE" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.DEFAULT_REP_MODE"><desc_name xml:space="preserve">DEFAULT_REP_MODE</desc_name><desc_annotation xml:space="preserve"> = 'periodic'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DEFAULT_SYNC_PERIOD\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.DEFAULT_SYNC_PERIOD',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.DEFAULT_SYNC_PERIOD" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.DEFAULT_SYNC_PERIOD" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.DEFAULT_SYNC_PERIOD"><desc_name xml:space="preserve">DEFAULT_SYNC_PERIOD</desc_name><desc_annotation xml:space="preserve"> = 900</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'EXTRA_SPEC_REP_MODE\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.EXTRA_SPEC_REP_MODE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.EXTRA_SPEC_REP_MODE" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.EXTRA_SPEC_REP_MODE" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.EXTRA_SPEC_REP_MODE"><desc_name xml:space="preserve">EXTRA_SPEC_REP_MODE</desc_name><desc_annotation xml:space="preserve"> = 'replication:mode'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'EXTRA_SPEC_REP_SYNC_PERIOD\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.EXTRA_SPEC_REP_SYNC_PERIOD',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.EXTRA_SPEC_REP_SYNC_PERIOD" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.EXTRA_SPEC_REP_SYNC_PERIOD" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.EXTRA_SPEC_REP_SYNC_PERIOD"><desc_name xml:space="preserve">EXTRA_SPEC_REP_SYNC_PERIOD</desc_name><desc_annotation xml:space="preserve"> = 'replication:sync_period'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'FAILBACK_VALUE\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.FAILBACK_VALUE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.FAILBACK_VALUE" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.FAILBACK_VALUE" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.FAILBACK_VALUE"><desc_name xml:space="preserve">FAILBACK_VALUE</desc_name><desc_annotation xml:space="preserve"> = 'default'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'PERIODIC\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.PERIODIC',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.PERIODIC" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.PERIODIC" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.PERIODIC"><desc_name xml:space="preserve">PERIODIC</desc_name><desc_annotation xml:space="preserve"> = 2</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'PRIORITY_OPT_LIC\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.PRIORITY_OPT_LIC',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.PRIORITY_OPT_LIC" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.PRIORITY_OPT_LIC" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.PRIORITY_OPT_LIC"><desc_name xml:space="preserve">PRIORITY_OPT_LIC</desc_name><desc_annotation xml:space="preserve"> = 'Priority Optimization'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'RC_ACTION_CHANGE_TO_PRIMARY\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.RC_ACTION_CHANGE_TO_PRIMARY',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.RC_ACTION_CHANGE_TO_PRIMARY" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.RC_ACTION_CHANGE_TO_PRIMARY" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.RC_ACTION_CHANGE_TO_PRIMARY"><desc_name xml:space="preserve">RC_ACTION_CHANGE_TO_PRIMARY</desc_name><desc_annotation xml:space="preserve"> = 7</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'RC_GROUP_STARTED\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.RC_GROUP_STARTED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.RC_GROUP_STARTED" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.RC_GROUP_STARTED" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.RC_GROUP_STARTED"><desc_name xml:space="preserve">RC_GROUP_STARTED</desc_name><desc_annotation xml:space="preserve"> = 3</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'REMOTE_COPY_LIC\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.REMOTE_COPY_LIC',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.REMOTE_COPY_LIC" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.REMOTE_COPY_LIC" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.REMOTE_COPY_LIC"><desc_name xml:space="preserve">REMOTE_COPY_LIC</desc_name><desc_annotation xml:space="preserve"> = 'Remote Copy'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'SYNC\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.SYNC',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.SYNC" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.SYNC" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.SYNC"><desc_name xml:space="preserve">SYNC</desc_name><desc_annotation xml:space="preserve"> = 1</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'SYNC_STATUS_COMPLETED\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.SYNC_STATUS_COMPLETED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.SYNC_STATUS_COMPLETED" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.SYNC_STATUS_COMPLETED" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.SYNC_STATUS_COMPLETED"><desc_name xml:space="preserve">SYNC_STATUS_COMPLETED</desc_name><desc_annotation xml:space="preserve"> = 3</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'SYSTEM_REPORTER_LIC\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.SYSTEM_REPORTER_LIC',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.SYSTEM_REPORTER_LIC" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.SYSTEM_REPORTER_LIC" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.SYSTEM_REPORTER_LIC"><desc_name xml:space="preserve">SYSTEM_REPORTER_LIC</desc_name><desc_annotation xml:space="preserve"> = 'System Reporter'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'THIN\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.THIN',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.THIN" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.THIN" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.THIN"><desc_name xml:space="preserve">THIN</desc_name><desc_annotation xml:space="preserve"> = 2</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'THIN_PROV_LIC\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.THIN_PROV_LIC',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.THIN_PROV_LIC" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.THIN_PROV_LIC" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.THIN_PROV_LIC"><desc_name xml:space="preserve">THIN_PROV_LIC</desc_name><desc_annotation xml:space="preserve"> = 'Thin Provisioning'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'HPE3PARCommon.TaskWaiter\ (class\ in\ cinder.volume.drivers.hpe.hpe_3par_common)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.TaskWaiter',\ '',\ None]"></index>
                <desc desctype="class" domain="py" noindex="False" objtype="class">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.TaskWaiter" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.TaskWaiter" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.TaskWaiter"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">TaskWaiter</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">client</desc_parameter><desc_parameter xml:space="preserve">task_id</desc_parameter><desc_parameter xml:space="preserve">interval=1</desc_parameter><desc_parameter xml:space="preserve">initial_delay=0</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                        <paragraph>TaskWaiter waits for task to be not active and returns status.</paragraph>
                        <index entries="['single',\ 'wait_for_task()\ (HPE3PARCommon.TaskWaiter\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.TaskWaiter.wait_for_task',\ '',\ None]"></index>
                        <desc desctype="method" domain="py" noindex="False" objtype="method">
                            <desc_signature class="HPE3PARCommon.TaskWaiter" first="False" fullname="HPE3PARCommon.TaskWaiter.wait_for_task" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.TaskWaiter.wait_for_task" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.TaskWaiter.wait_for_task"><desc_name xml:space="preserve">wait_for_task</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.VERSION" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VERSION" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '3.0.40'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VLUN_TYPE_EMPTY\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_EMPTY',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.VLUN_TYPE_EMPTY" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_EMPTY" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_EMPTY"><desc_name xml:space="preserve">VLUN_TYPE_EMPTY</desc_name><desc_annotation xml:space="preserve"> = 1</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VLUN_TYPE_HOST\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_HOST',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.VLUN_TYPE_HOST" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_HOST" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_HOST"><desc_name xml:space="preserve">VLUN_TYPE_HOST</desc_name><desc_annotation xml:space="preserve"> = 3</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VLUN_TYPE_HOST_SET\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_HOST_SET',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.VLUN_TYPE_HOST_SET" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_HOST_SET" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_HOST_SET"><desc_name xml:space="preserve">VLUN_TYPE_HOST_SET</desc_name><desc_annotation xml:space="preserve"> = 5</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VLUN_TYPE_MATCHED_SET\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_MATCHED_SET',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.VLUN_TYPE_MATCHED_SET" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_MATCHED_SET" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_MATCHED_SET"><desc_name xml:space="preserve">VLUN_TYPE_MATCHED_SET</desc_name><desc_annotation xml:space="preserve"> = 4</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VLUN_TYPE_PORT\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_PORT',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.VLUN_TYPE_PORT" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_PORT" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.VLUN_TYPE_PORT"><desc_name xml:space="preserve">VLUN_TYPE_PORT</desc_name><desc_annotation xml:space="preserve"> = 2</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'build_nsp()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.build_nsp',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.build_nsp" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.build_nsp" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.build_nsp"><desc_name xml:space="preserve">build_nsp</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">portPos</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'build_portPos()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.build_portPos',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.build_portPos" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.build_portPos" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.build_portPos"><desc_name xml:space="preserve">build_portPos</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">nsp</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_flags()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.check_flags',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.check_flags" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.check_flags" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.check_flags"><desc_name xml:space="preserve">check_flags</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">options</desc_parameter><desc_parameter xml:space="preserve">required_flags</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_setup_error()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.check_for_setup_error',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.check_for_setup_error" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.check_for_setup_error" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.check_for_setup_error"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_replication_flags()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.check_replication_flags',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.check_replication_flags" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.check_replication_flags" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.check_replication_flags"><desc_name xml:space="preserve">check_replication_flags</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">options</desc_parameter><desc_parameter xml:space="preserve">required_flags</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'client_login()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.client_login',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.client_login" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.client_login" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.client_login"><desc_name xml:space="preserve">client_login</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'client_logout()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.client_logout',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.client_logout" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.client_logout" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.client_logout"><desc_name xml:space="preserve">client_logout</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.create_cloned_volume" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_cloned_volume" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.create_group" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_group" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_group"><desc_name xml:space="preserve">create_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group_from_src()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_group_from_src',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.create_group_from_src" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_group_from_src" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_group_from_src"><desc_name xml:space="preserve">create_group_from_src</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter><desc_parameter xml:space="preserve">group_snapshot=None</desc_parameter><desc_parameter xml:space="preserve">snapshots=None</desc_parameter><desc_parameter xml:space="preserve">source_group=None</desc_parameter><desc_parameter xml:space="preserve">source_vols=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group_snapshot()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_group_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.create_group_snapshot" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_group_snapshot" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_group_snapshot"><desc_name xml:space="preserve">create_group_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.create_snapshot" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_snapshot" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_vlun()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_vlun',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.create_vlun" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_vlun" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_vlun"><desc_name xml:space="preserve">create_vlun</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">nsp=None</desc_parameter><desc_parameter xml:space="preserve">lun_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a VLUN.</paragraph>
                        <paragraph>In order to export a volume on a 3PAR box, we have to create a VLUN.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.create_volume" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_volume" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.create_volume_from_snapshot" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_volume_from_snapshot" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">snap_name=None</desc_parameter><desc_parameter xml:space="preserve">vvs_name=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a volume from a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_group()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.delete_group" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_group" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_group"><desc_name xml:space="preserve">delete_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a group.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_group_snapshot()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_group_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.delete_group_snapshot" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_group_snapshot" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_group_snapshot"><desc_name xml:space="preserve">delete_group_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a group snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.delete_snapshot" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_snapshot" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_vlun()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_vlun',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.delete_vlun" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_vlun" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_vlun"><desc_name xml:space="preserve">delete_vlun</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">hostname</desc_parameter><desc_parameter xml:space="preserve">wwn=None</desc_parameter><desc_parameter xml:space="preserve">iqn=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.delete_volume" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_volume" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.do_setup" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.do_setup" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">timeout=None</desc_parameter><desc_parameter xml:space="preserve">stats=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.extend_volume" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.extend_volume" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'failover_host()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.failover_host',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.failover_host" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.failover_host" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.failover_host"><desc_name xml:space="preserve">failover_host</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter><desc_parameter xml:space="preserve">secondary_backend_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Force failover to a secondary replication target.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_existing_vlun()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.find_existing_vlun',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.find_existing_vlun" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.find_existing_vlun" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.find_existing_vlun"><desc_name xml:space="preserve">find_existing_vlun</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Finds an existing VLUN for a volume on a host.</paragraph>
                        <paragraph>Returns an existing VLUN’s information. If no existing VLUN is found,
                            None is returned.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – A dictionary describing a volume.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">host</literal_strong> – A dictionary describing a host.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_existing_vluns()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.find_existing_vluns',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.find_existing_vluns" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.find_existing_vluns" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.find_existing_vluns"><desc_name xml:space="preserve">find_existing_vluns</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_active_fc_target_ports()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_active_fc_target_ports',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_active_fc_target_ports" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_active_fc_target_ports" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_active_fc_target_ports"><desc_name xml:space="preserve">get_active_fc_target_ports</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_active_iscsi_target_ports()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_active_iscsi_target_ports',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_active_iscsi_target_ports" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_active_iscsi_target_ports" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_active_iscsi_target_ports"><desc_name xml:space="preserve">get_active_iscsi_target_ports</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_active_target_ports()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_active_target_ports',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_active_target_ports" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_active_target_ports" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_active_target_ports"><desc_name xml:space="preserve">get_active_target_ports</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_compression_policy()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_compression_policy',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_compression_policy" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_compression_policy" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_compression_policy"><desc_name xml:space="preserve">get_compression_policy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">hpe3par_keys</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_cpg()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_cpg',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_cpg" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_cpg" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_cpg"><desc_name xml:space="preserve">get_cpg</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">allowSnap=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_domain()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_domain',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_domain" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_domain" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_domain"><desc_name xml:space="preserve">get_domain</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cpg_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_flash_cache_policy()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_flash_cache_policy',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_flash_cache_policy" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_flash_cache_policy" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_flash_cache_policy"><desc_name xml:space="preserve">get_flash_cache_policy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">hpe3par_keys</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_next_word()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_next_word',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_next_word" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_next_word" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_next_word"><desc_name xml:space="preserve">get_next_word</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">s</desc_parameter><desc_parameter xml:space="preserve">search_string</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the next word.</paragraph>
                        <paragraph>Search ‘s’ for ‘search_string’, if found return the word preceding
                            ‘search_string’ from ‘s’.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_persona_type()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_persona_type',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_persona_type" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_persona_type" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_persona_type"><desc_name xml:space="preserve">get_persona_type</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">hpe3par_keys=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_ports()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_ports',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_ports" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_ports" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_ports"><desc_name xml:space="preserve">get_ports</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_type_info()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_type_info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_type_info" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_type_info" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_type_info"><desc_name xml:space="preserve">get_type_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get 3PAR type info for the given type_id.</paragraph>
                        <paragraph>Reconciles VV Set, old-style extra-specs, and QOS specs
                            and returns commonly used info about the type.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>hpe3par_keys, qos, volume_type, vvs_name</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_version()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_version',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_version" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_version" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_version"><desc_name xml:space="preserve">get_version</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_settings_from_type()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_volume_settings_from_type',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_volume_settings_from_type" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_volume_settings_from_type" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_volume_settings_from_type"><desc_name xml:space="preserve">get_volume_settings_from_type</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get 3PAR volume settings given a volume.</paragraph>
                        <paragraph>Combines type info and config settings to return a dictionary
                            describing the 3PAR volume settings.  Does some validation (CPG and
                            persona).</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – </paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">host</literal_strong> – Optional host to use for default pool.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>dict</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_settings_from_type_id()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_volume_settings_from_type_id',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_volume_settings_from_type_id" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_volume_settings_from_type_id" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_volume_settings_from_type_id"><desc_name xml:space="preserve">get_volume_settings_from_type_id</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type_id</desc_parameter><desc_parameter xml:space="preserve">pool</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get 3PAR volume settings given a type_id.</paragraph>
                        <paragraph>Combines type info and config settings to return a dictionary
                            describing the 3PAR volume settings.  Does some validation (CPG).
                            Uses pool as the default cpg (when not specified in volume type specs).</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">type_id</literal_strong> – id of type to get settings for</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">pool</literal_strong> – CPG to use if type does not have one set</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>dict</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.get_volume_stats" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_volume_stats" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh</desc_parameter><desc_parameter xml:space="preserve">filter_function=None</desc_parameter><desc_parameter xml:space="preserve">goodness_function=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'hpe3par_valid_keys\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.hpe3par_valid_keys',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.hpe3par_valid_keys" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.hpe3par_valid_keys" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.hpe3par_valid_keys"><desc_name xml:space="preserve">hpe3par_valid_keys</desc_name><desc_annotation xml:space="preserve"> = ['cpg', 'snap_cpg', 'provisioning', 'persona', 'vvs', 'flash_cache', 'compression']</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'hpe_qos_keys\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.hpe_qos_keys',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.hpe_qos_keys" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.hpe_qos_keys" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.hpe_qos_keys"><desc_name xml:space="preserve">hpe_qos_keys</desc_name><desc_annotation xml:space="preserve"> = ['minIOPS', 'maxIOPS', 'minBWS', 'maxBWS', 'latency', 'priority']</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'is_volume_group_snap_type()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.is_volume_group_snap_type',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.is_volume_group_snap_type" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.is_volume_group_snap_type" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.is_volume_group_snap_type"><desc_name xml:space="preserve">is_volume_group_snap_type</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_type</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.manage_existing" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.manage_existing" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Manage an existing 3PAR volume.</paragraph>
                        <paragraph>existing_ref is a dictionary of the form:
                            {‘source-name’: &lt;name of the virtual volume&gt;}</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_get_size()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.manage_existing_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.manage_existing_get_size" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.manage_existing_get_size" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.manage_existing_get_size"><desc_name xml:space="preserve">manage_existing_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return size of volume to be managed by manage_existing.</paragraph>
                        <paragraph>existing_ref is a dictionary of the form:
                            {‘source-name’: &lt;name of the virtual volume&gt;}</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_snapshot()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.manage_existing_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.manage_existing_snapshot" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.manage_existing_snapshot" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.manage_existing_snapshot"><desc_name xml:space="preserve">manage_existing_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Manage an existing 3PAR snapshot.</paragraph>
                        <paragraph>existing_ref is a dictionary of the form:
                            {‘source-name’: &lt;name of the snapshot&gt;}</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_snapshot_get_size()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.manage_existing_snapshot_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.manage_existing_snapshot_get_size" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.manage_existing_snapshot_get_size" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.manage_existing_snapshot_get_size"><desc_name xml:space="preserve">manage_existing_snapshot_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return size of snapshot to be managed by manage_existing_snapshot.</paragraph>
                        <paragraph>existing_ref is a dictionary of the form:
                            {‘source-name’: &lt;name of the snapshot&gt;}</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'migrate_volume()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.migrate_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.migrate_volume" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.migrate_volume" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.migrate_volume"><desc_name xml:space="preserve">migrate_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Migrate directly if source and dest are managed by same storage.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – A dictionary describing the volume to migrate</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">host</literal_strong> – A dictionary describing the host to migrate to, where
                                                host[‘host’] is its name, and host[‘capabilities’] is a
                                                dictionary of its reported capabilities.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>(False, None) if the driver does not support migration,
                                        (True, model_update) if successful</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'qos_priority_level\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.qos_priority_level',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.qos_priority_level" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.qos_priority_level" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.qos_priority_level"><desc_name xml:space="preserve">qos_priority_level</desc_name><desc_annotation xml:space="preserve"> = {'low': 1, 'normal': 2, 'high': 3}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove_temporary_snapshots()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.remove_temporary_snapshots',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.remove_temporary_snapshots" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.remove_temporary_snapshots" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.remove_temporary_snapshots"><desc_name xml:space="preserve">remove_temporary_snapshots</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'retype()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.retype',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.retype" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.retype" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.retype"><desc_name xml:space="preserve">retype</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_type</desc_parameter><desc_parameter xml:space="preserve">diff</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Convert the volume to be of the new type.</paragraph>
                        <paragraph>Returns True if the retype was successful.
                            Uses taskflow to revert changes if errors occur.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – A dictionary describing the volume to retype</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">new_type</literal_strong> – A dictionary describing the volume type to convert to</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">diff</literal_strong> – A dictionary with the difference between the two types</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">host</literal_strong> – A dictionary describing the host, where
                                                host[‘host’] is its name, and host[‘capabilities’] is a
                                                dictionary of its reported capabilities.  Host validation
                                                is just skipped if host is None.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'stats\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.stats',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.stats" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.stats" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.stats"><desc_name xml:space="preserve">stats</desc_name><desc_annotation xml:space="preserve"> = {}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.terminate_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.terminate_connection" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.terminate_connection" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.terminate_connection"><desc_name xml:space="preserve">terminate_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">hostname</desc_parameter><desc_parameter xml:space="preserve">wwn=None</desc_parameter><desc_parameter xml:space="preserve">iqn=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to unattach a volume from an instance.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'tune_vv()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.tune_vv',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.tune_vv" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.tune_vv" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.tune_vv"><desc_name xml:space="preserve">tune_vv</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">old_tpvv</desc_parameter><desc_parameter xml:space="preserve">new_tpvv</desc_parameter><desc_parameter xml:space="preserve">old_tdvv</desc_parameter><desc_parameter xml:space="preserve">new_tdvv</desc_parameter><desc_parameter xml:space="preserve">old_cpg</desc_parameter><desc_parameter xml:space="preserve">new_cpg</desc_parameter><desc_parameter xml:space="preserve">volume_name</desc_parameter><desc_parameter xml:space="preserve">new_compression</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Tune the volume to change the userCPG and/or provisioningType.</paragraph>
                        <paragraph>The volume will be modified/tuned/converted to the new userCPG and
                            provisioningType, as needed.</paragraph>
                        <paragraph>TaskWaiter is used to make this function wait until the 3PAR task
                            is no longer active.  When the task is no longer active, then it must
                            either be done or it is in a state that we need to treat as an error.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.unmanage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.unmanage" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.unmanage" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.unmanage"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Removes the specified volume from Cinder management.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage_snapshot()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.unmanage_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.unmanage_snapshot" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.unmanage_snapshot" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.unmanage_snapshot"><desc_name xml:space="preserve">unmanage_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Removes the specified snapshot from Cinder management.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_group()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.update_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.update_group" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.update_group" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.update_group"><desc_name xml:space="preserve">update_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">add_volumes=None</desc_parameter><desc_parameter xml:space="preserve">remove_volumes=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_migrated_volume()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.update_migrated_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.update_migrated_volume" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.update_migrated_volume" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.update_migrated_volume"><desc_name xml:space="preserve">update_migrated_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_volume</desc_parameter><desc_parameter xml:space="preserve">original_volume_status</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Rename the new (temp) volume to it’s original name.</paragraph>
                        <paragraph>This method tries to rename the new volume to it’s original
                            name after the migration has completed.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'valid_persona_values\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.valid_persona_values',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.valid_persona_values" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.valid_persona_values" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.valid_persona_values"><desc_name xml:space="preserve">valid_persona_values</desc_name><desc_annotation xml:space="preserve"> = ['2 - Generic-ALUA', '1 - Generic', '3 - Generic-legacy', '4 - HPUX-legacy', '5 - AIX-legacy', '6 - EGENERA', '7 - ONTAP-legacy', '8 - VMware', '9 - OpenVMS', '10 - HPUX', '11 - WindowsServer']</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'valid_prov_values\ (HPE3PARCommon\ attribute)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.valid_prov_values',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.valid_prov_values" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.valid_prov_values" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.valid_prov_values"><desc_name xml:space="preserve">valid_prov_values</desc_name><desc_annotation xml:space="preserve"> = ['thin', 'full', 'dedup']</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'validate_cpg()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.validate_cpg',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.validate_cpg" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.validate_cpg" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.validate_cpg"><desc_name xml:space="preserve">validate_cpg</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cpg_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'validate_persona()\ (HPE3PARCommon\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.validate_persona',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HPE3PARCommon" first="False" fullname="HPE3PARCommon.validate_persona" ids="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.validate_persona" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.HPE3PARCommon.validate_persona"><desc_name xml:space="preserve">validate_persona</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">persona_value</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Validate persona value.</paragraph>
                        <paragraph>If the passed in persona_value is not valid, raise InvalidInput,
                            otherwise return the persona ID.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">persona_value</literal_strong> – </paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.InvalidInput" refuri="cinder.exception#cinder.exception.InvalidInput"><literal_strong>exception.InvalidInput</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>persona ID</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ModifySpecsTask\ (class\ in\ cinder.volume.drivers.hpe.hpe_3par_common)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.ModifySpecsTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ModifySpecsTask" ids="cinder.volume.drivers.hpe.hpe_3par_common.ModifySpecsTask" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.ModifySpecsTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ModifySpecsTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">action</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Set/unset the QOS settings and/or VV set for the volume’s new type.</paragraph>
                <paragraph>This is a task for changing the QOS settings and/or VV set.  It is intended
                    for use during retype().  If changes are made during execute(), then they
                    need to be undone if revert() is called (i.e., if a later task fails).</paragraph>
                <paragraph>For 3PAR, we ignore QOS settings if a VVS is explicitly set, otherwise we
                    create a VV set and use that for QOS settings.  That is why they are lumped
                    together here.  Most of the decision-making about VVS vs. QOS settings vs.
                    old-style scoped extra-specs is handled in existing reusable code.  Here
                    we mainly need to know what old stuff to remove before calling the function
                    that knows how to set the new stuff.</paragraph>
                <paragraph>Basic task flow is as follows:  Remove the volume from the old externally
                    created VVS (when appropriate), delete the old cinder-created VVS, call
                    the function that knows how to set a new VVS or QOS settings.</paragraph>
                <paragraph>If any changes are made during execute, then revert needs to reverse them.</paragraph>
                <index entries="['single',\ 'execute()\ (ModifySpecsTask\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.ModifySpecsTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ModifySpecsTask" first="False" fullname="ModifySpecsTask.execute" ids="cinder.volume.drivers.hpe.hpe_3par_common.ModifySpecsTask.execute" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.ModifySpecsTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">common</desc_parameter><desc_parameter xml:space="preserve">volume_name</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">old_cpg</desc_parameter><desc_parameter xml:space="preserve">new_cpg</desc_parameter><desc_parameter xml:space="preserve">old_vvs</desc_parameter><desc_parameter xml:space="preserve">new_vvs</desc_parameter><desc_parameter xml:space="preserve">old_qos</desc_parameter><desc_parameter xml:space="preserve">new_qos</desc_parameter><desc_parameter xml:space="preserve">old_flash_cache</desc_parameter><desc_parameter xml:space="preserve">new_flash_cache</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (ModifySpecsTask\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.ModifySpecsTask.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ModifySpecsTask" first="False" fullname="ModifySpecsTask.revert" ids="cinder.volume.drivers.hpe.hpe_3par_common.ModifySpecsTask.revert" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.ModifySpecsTask.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">common</desc_parameter><desc_parameter xml:space="preserve">volume_name</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">old_vvs</desc_parameter><desc_parameter xml:space="preserve">new_vvs</desc_parameter><desc_parameter xml:space="preserve">old_qos</desc_parameter><desc_parameter xml:space="preserve">old_cpg</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ModifyVolumeTask\ (class\ in\ cinder.volume.drivers.hpe.hpe_3par_common)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.ModifyVolumeTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ModifyVolumeTask" ids="cinder.volume.drivers.hpe.hpe_3par_common.ModifyVolumeTask" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.ModifyVolumeTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ModifyVolumeTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">action</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Task to change a volume’s snapCPG and comment.</paragraph>
                <paragraph>This is a task for changing the snapCPG and comment.  It is intended for
                    use during retype().  These changes are done together with a single
                    modify request which should be fast and easy to revert.</paragraph>
                <paragraph>Because we do not support retype with existing snapshots, we can change
                    the snapCPG without using a keepVV.  If snapshots exist, then this will
                    fail, as desired.</paragraph>
                <paragraph>This task does not change the userCPG or provisioningType.  Those changes
                    may require tunevv, so they are done by the TuneVolumeTask.</paragraph>
                <paragraph>The new comment will contain the new type, VVS and QOS information along
                    with whatever else was in the old comment dict.</paragraph>
                <paragraph>The old comment and snapCPG are restored if revert is called.</paragraph>
                <index entries="['single',\ 'execute()\ (ModifyVolumeTask\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.ModifyVolumeTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ModifyVolumeTask" first="False" fullname="ModifyVolumeTask.execute" ids="cinder.volume.drivers.hpe.hpe_3par_common.ModifyVolumeTask.execute" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.ModifyVolumeTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">common</desc_parameter><desc_parameter xml:space="preserve">volume_name</desc_parameter><desc_parameter xml:space="preserve">old_snap_cpg</desc_parameter><desc_parameter xml:space="preserve">new_snap_cpg</desc_parameter><desc_parameter xml:space="preserve">old_comment</desc_parameter><desc_parameter xml:space="preserve">new_vvs</desc_parameter><desc_parameter xml:space="preserve">new_qos</desc_parameter><desc_parameter xml:space="preserve">new_type_name</desc_parameter><desc_parameter xml:space="preserve">new_type_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (ModifyVolumeTask\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.ModifyVolumeTask.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ModifyVolumeTask" first="False" fullname="ModifyVolumeTask.revert" ids="cinder.volume.drivers.hpe.hpe_3par_common.ModifyVolumeTask.revert" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.ModifyVolumeTask.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">common</desc_parameter><desc_parameter xml:space="preserve">volume_name</desc_parameter><desc_parameter xml:space="preserve">old_snap_cpg</desc_parameter><desc_parameter xml:space="preserve">new_snap_cpg</desc_parameter><desc_parameter xml:space="preserve">old_comment</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ReplicateVolumeTask\ (class\ in\ cinder.volume.drivers.hpe.hpe_3par_common)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.ReplicateVolumeTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ReplicateVolumeTask" ids="cinder.volume.drivers.hpe.hpe_3par_common.ReplicateVolumeTask" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.ReplicateVolumeTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ReplicateVolumeTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">action</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Task to replicate a volume.</paragraph>
                <paragraph>This is a task for adding/removing the replication feature to volume.
                    It is intended for use during retype(). This task has no revert.
                    # TODO(sumit): revert back to original volume extra-spec</paragraph>
                <index entries="['single',\ 'execute()\ (ReplicateVolumeTask\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.ReplicateVolumeTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ReplicateVolumeTask" first="False" fullname="ReplicateVolumeTask.execute" ids="cinder.volume.drivers.hpe.hpe_3par_common.ReplicateVolumeTask.execute" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.ReplicateVolumeTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">common</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_type_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'TuneVolumeTask\ (class\ in\ cinder.volume.drivers.hpe.hpe_3par_common)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.TuneVolumeTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="TuneVolumeTask" ids="cinder.volume.drivers.hpe.hpe_3par_common.TuneVolumeTask" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.TuneVolumeTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">TuneVolumeTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">action</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Task to change a volume’s CPG and/or provisioning type.</paragraph>
                <paragraph>This is a task for changing the CPG and/or provisioning type.
                    It is intended for use during retype().</paragraph>
                <paragraph>This task has no revert.  The current design is to do this task last
                    and do revert-able tasks first. Un-doing a tunevv can be expensive
                    and should be avoided.</paragraph>
                <index entries="['single',\ 'execute()\ (TuneVolumeTask\ method)',\ 'cinder.volume.drivers.hpe.hpe_3par_common.TuneVolumeTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="TuneVolumeTask" first="False" fullname="TuneVolumeTask.execute" ids="cinder.volume.drivers.hpe.hpe_3par_common.TuneVolumeTask.execute" module="cinder.volume.drivers.hpe.hpe_3par_common" names="cinder.volume.drivers.hpe.hpe_3par_common.TuneVolumeTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">common</desc_parameter><desc_parameter xml:space="preserve">old_tpvv</desc_parameter><desc_parameter xml:space="preserve">new_tpvv</desc_parameter><desc_parameter xml:space="preserve">old_tdvv</desc_parameter><desc_parameter xml:space="preserve">new_tdvv</desc_parameter><desc_parameter xml:space="preserve">old_cpg</desc_parameter><desc_parameter xml:space="preserve">new_cpg</desc_parameter><desc_parameter xml:space="preserve">volume_name</desc_parameter><desc_parameter xml:space="preserve">new_compression</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
