<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.interface.fczm_driver.rst">
    <section ids="module-cinder.interface.fczm_driver the-cinder-interface-fczm-driver-module" names="the\ cinder.interface.fczm_driver\ module">
        <title>The <reference internal="True" refid="module-cinder.interface.fczm_driver" reftitle="cinder.interface.fczm_driver"><literal classes="xref py py-mod">cinder.interface.fczm_driver</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.interface.fczm_driver\ (module)',\ 'module-cinder.interface.fczm_driver',\ '',\ None]"></index>
        <paragraph>Core fibre channel zone manager driver interface.</paragraph>
        <paragraph>All fczm drivers should support this interface as a bare minimum.</paragraph>
        <index entries="['single',\ 'FibreChannelZoneManagerDriver\ (class\ in\ cinder.interface.fczm_driver)',\ 'cinder.interface.fczm_driver.FibreChannelZoneManagerDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="FibreChannelZoneManagerDriver" ids="cinder.interface.fczm_driver.FibreChannelZoneManagerDriver" module="cinder.interface.fczm_driver" names="cinder.interface.fczm_driver.FibreChannelZoneManagerDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">FibreChannelZoneManagerDriver</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.interface.base.CinderInterface" refuri="cinder.interface.base#cinder.interface.base.CinderInterface"><literal classes="xref py py-class">cinder.interface.base.CinderInterface</literal></reference></paragraph>
                <paragraph>FCZM driver required interface.</paragraph>
                <index entries="['single',\ 'add_connection()\ (FibreChannelZoneManagerDriver\ method)',\ 'cinder.interface.fczm_driver.FibreChannelZoneManagerDriver.add_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FibreChannelZoneManagerDriver" first="False" fullname="FibreChannelZoneManagerDriver.add_connection" ids="cinder.interface.fczm_driver.FibreChannelZoneManagerDriver.add_connection" module="cinder.interface.fczm_driver" names="cinder.interface.fczm_driver.FibreChannelZoneManagerDriver.add_connection"><desc_name xml:space="preserve">add_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">fabric</desc_parameter><desc_parameter xml:space="preserve">initiator_target_map</desc_parameter><desc_parameter xml:space="preserve">host_name=None</desc_parameter><desc_parameter xml:space="preserve">storage_system=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Add a new initiator&lt;&gt;target connection.</paragraph>
                        <paragraph>All implementing drivers should provide concrete implementation
                            for this API.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">fabric</literal_strong> – Fabric name from cinder.conf file</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">initiator_target_map</literal_strong> – Mapping of initiator to list of targets</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                        <literal_block highlight_args="{}" language="python" linenos="False" xml:space="preserve">Example initiator_target_map:

{
    '10008c7cff523b01': ['20240002ac000a50', '20240002ac000a40']
}</literal_block>
                        <paragraph>Note that WWPN can be in lower or upper case and can be ‘:’
                            separated strings.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_connection()\ (FibreChannelZoneManagerDriver\ method)',\ 'cinder.interface.fczm_driver.FibreChannelZoneManagerDriver.delete_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FibreChannelZoneManagerDriver" first="False" fullname="FibreChannelZoneManagerDriver.delete_connection" ids="cinder.interface.fczm_driver.FibreChannelZoneManagerDriver.delete_connection" module="cinder.interface.fczm_driver" names="cinder.interface.fczm_driver.FibreChannelZoneManagerDriver.delete_connection"><desc_name xml:space="preserve">delete_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">fabric</desc_parameter><desc_parameter xml:space="preserve">initiator_target_map</desc_parameter><desc_parameter xml:space="preserve">host_name=None</desc_parameter><desc_parameter xml:space="preserve">storage_system=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete an initiator&lt;&gt;target connection.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">fabric</literal_strong> – Fabric name from cinder.conf file</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">initiator_target_map</literal_strong> – Mapping of initiator to list of targets</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                        <literal_block highlight_args="{}" language="python" linenos="False" xml:space="preserve">Example initiator_target_map:

{
    '10008c7cff523b01': ['20240002ac000a50', '20240002ac000a40']
}</literal_block>
                        <paragraph>Note that WWPN can be in lower or upper case and can be ‘:’
                            separated strings.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_san_context()\ (FibreChannelZoneManagerDriver\ method)',\ 'cinder.interface.fczm_driver.FibreChannelZoneManagerDriver.get_san_context',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FibreChannelZoneManagerDriver" first="False" fullname="FibreChannelZoneManagerDriver.get_san_context" ids="cinder.interface.fczm_driver.FibreChannelZoneManagerDriver.get_san_context" module="cinder.interface.fczm_driver" names="cinder.interface.fczm_driver.FibreChannelZoneManagerDriver.get_san_context"><desc_name xml:space="preserve">get_san_context</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">target_wwn_list</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get SAN context for end devices.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">target_wwn_list</literal_strong> – Mapping of initiator to list of targets</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                        <paragraph>Example initiator_target_map: [‘20240002ac000a50’, ‘20240002ac000a40’]
                            Note that WWPN can be in lower or upper case and can be
                            ‘:’ separated strings.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
