<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.flows.manager.create_volume.rst">
    <section ids="module-cinder.volume.flows.manager.create_volume the-cinder-volume-flows-manager-create-volume-module" names="the\ cinder.volume.flows.manager.create_volume\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.flows.manager.create_volume" reftitle="cinder.volume.flows.manager.create_volume"><literal classes="xref py py-mod">cinder.volume.flows.manager.create_volume</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.flows.manager.create_volume\ (module)',\ 'module-cinder.volume.flows.manager.create_volume',\ '',\ None]"></index>
        <index entries="['single',\ 'CreateVolumeFromSpecTask\ (class\ in\ cinder.volume.flows.manager.create_volume)',\ 'cinder.volume.flows.manager.create_volume.CreateVolumeFromSpecTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="CreateVolumeFromSpecTask" ids="cinder.volume.flows.manager.create_volume.CreateVolumeFromSpecTask" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.CreateVolumeFromSpecTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">CreateVolumeFromSpecTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">manager</desc_parameter><desc_parameter xml:space="preserve">db</desc_parameter><desc_parameter xml:space="preserve">driver</desc_parameter><desc_parameter xml:space="preserve">image_volume_cache=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Creates a volume from a provided specification.</paragraph>
                <paragraph>Reversion strategy: N/A</paragraph>
                <index entries="['single',\ 'execute()\ (CreateVolumeFromSpecTask\ method)',\ 'cinder.volume.flows.manager.create_volume.CreateVolumeFromSpecTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="CreateVolumeFromSpecTask" first="False" fullname="CreateVolumeFromSpecTask.execute" ids="cinder.volume.flows.manager.create_volume.CreateVolumeFromSpecTask.execute" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.CreateVolumeFromSpecTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">volume_spec</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'CreateVolumeOnFinishTask\ (class\ in\ cinder.volume.flows.manager.create_volume)',\ 'cinder.volume.flows.manager.create_volume.CreateVolumeOnFinishTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="CreateVolumeOnFinishTask" ids="cinder.volume.flows.manager.create_volume.CreateVolumeOnFinishTask" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.CreateVolumeOnFinishTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">CreateVolumeOnFinishTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">db</desc_parameter><desc_parameter xml:space="preserve">event_suffix</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.volume.flows.manager.create_volume.NotifyVolumeActionTask" reftitle="cinder.volume.flows.manager.create_volume.NotifyVolumeActionTask"><literal classes="xref py py-class">cinder.volume.flows.manager.create_volume.NotifyVolumeActionTask</literal></reference></paragraph>
                <paragraph>On successful volume creation this will perform final volume actions.</paragraph>
                <paragraph>When a volume is created successfully it is expected that MQ notifications
                    and database updates will occur to ‘signal’ to others that the volume is
                    now ready for usage. This task does those notifications and updates in a
                    reliable manner (not re-raising exceptions if said actions can not be
                    triggered).</paragraph>
                <paragraph>Reversion strategy: N/A</paragraph>
                <index entries="['single',\ 'execute()\ (CreateVolumeOnFinishTask\ method)',\ 'cinder.volume.flows.manager.create_volume.CreateVolumeOnFinishTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="CreateVolumeOnFinishTask" first="False" fullname="CreateVolumeOnFinishTask.execute" ids="cinder.volume.flows.manager.create_volume.CreateVolumeOnFinishTask.execute" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.CreateVolumeOnFinishTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">volume_spec</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ExtractVolumeRefTask\ (class\ in\ cinder.volume.flows.manager.create_volume)',\ 'cinder.volume.flows.manager.create_volume.ExtractVolumeRefTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ExtractVolumeRefTask" ids="cinder.volume.flows.manager.create_volume.ExtractVolumeRefTask" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.ExtractVolumeRefTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ExtractVolumeRefTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">db</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">set_error=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Extracts volume reference for given volume id.</paragraph>
                <index entries="['single',\ 'default_provides\ (ExtractVolumeRefTask\ attribute)',\ 'cinder.volume.flows.manager.create_volume.ExtractVolumeRefTask.default_provides',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ExtractVolumeRefTask" first="False" fullname="ExtractVolumeRefTask.default_provides" ids="cinder.volume.flows.manager.create_volume.ExtractVolumeRefTask.default_provides" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.ExtractVolumeRefTask.default_provides"><desc_name xml:space="preserve">default_provides</desc_name><desc_annotation xml:space="preserve"> = 'refreshed'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'execute()\ (ExtractVolumeRefTask\ method)',\ 'cinder.volume.flows.manager.create_volume.ExtractVolumeRefTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ExtractVolumeRefTask" first="False" fullname="ExtractVolumeRefTask.execute" ids="cinder.volume.flows.manager.create_volume.ExtractVolumeRefTask.execute" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.ExtractVolumeRefTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (ExtractVolumeRefTask\ method)',\ 'cinder.volume.flows.manager.create_volume.ExtractVolumeRefTask.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ExtractVolumeRefTask" first="False" fullname="ExtractVolumeRefTask.revert" ids="cinder.volume.flows.manager.create_volume.ExtractVolumeRefTask.revert" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.ExtractVolumeRefTask.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">result</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ExtractVolumeSpecTask\ (class\ in\ cinder.volume.flows.manager.create_volume)',\ 'cinder.volume.flows.manager.create_volume.ExtractVolumeSpecTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ExtractVolumeSpecTask" ids="cinder.volume.flows.manager.create_volume.ExtractVolumeSpecTask" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.ExtractVolumeSpecTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ExtractVolumeSpecTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">db</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Extracts a spec of a volume to be created into a common structure.</paragraph>
                <paragraph>This task extracts and organizes the input requirements into a common
                    and easier to analyze structure for later tasks to use. It will also
                    attach the underlying database volume reference which can be used by
                    other tasks to reference for further details about the volume to be.</paragraph>
                <paragraph>Reversion strategy: N/A</paragraph>
                <index entries="['single',\ 'default_provides\ (ExtractVolumeSpecTask\ attribute)',\ 'cinder.volume.flows.manager.create_volume.ExtractVolumeSpecTask.default_provides',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ExtractVolumeSpecTask" first="False" fullname="ExtractVolumeSpecTask.default_provides" ids="cinder.volume.flows.manager.create_volume.ExtractVolumeSpecTask.default_provides" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.ExtractVolumeSpecTask.default_provides"><desc_name xml:space="preserve">default_provides</desc_name><desc_annotation xml:space="preserve"> = 'volume_spec'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'execute()\ (ExtractVolumeSpecTask\ method)',\ 'cinder.volume.flows.manager.create_volume.ExtractVolumeSpecTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ExtractVolumeSpecTask" first="False" fullname="ExtractVolumeSpecTask.execute" ids="cinder.volume.flows.manager.create_volume.ExtractVolumeSpecTask.execute" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.ExtractVolumeSpecTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">request_spec</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (ExtractVolumeSpecTask\ method)',\ 'cinder.volume.flows.manager.create_volume.ExtractVolumeSpecTask.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ExtractVolumeSpecTask" first="False" fullname="ExtractVolumeSpecTask.revert" ids="cinder.volume.flows.manager.create_volume.ExtractVolumeSpecTask.revert" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.ExtractVolumeSpecTask.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">result</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NotifyVolumeActionTask\ (class\ in\ cinder.volume.flows.manager.create_volume)',\ 'cinder.volume.flows.manager.create_volume.NotifyVolumeActionTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NotifyVolumeActionTask" ids="cinder.volume.flows.manager.create_volume.NotifyVolumeActionTask" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.NotifyVolumeActionTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NotifyVolumeActionTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">db</desc_parameter><desc_parameter xml:space="preserve">event_suffix</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Performs a notification about the given volume when called.</paragraph>
                <paragraph>Reversion strategy: N/A</paragraph>
                <index entries="['single',\ 'execute()\ (NotifyVolumeActionTask\ method)',\ 'cinder.volume.flows.manager.create_volume.NotifyVolumeActionTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NotifyVolumeActionTask" first="False" fullname="NotifyVolumeActionTask.execute" ids="cinder.volume.flows.manager.create_volume.NotifyVolumeActionTask.execute" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.NotifyVolumeActionTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'OnFailureRescheduleTask\ (class\ in\ cinder.volume.flows.manager.create_volume)',\ 'cinder.volume.flows.manager.create_volume.OnFailureRescheduleTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="OnFailureRescheduleTask" ids="cinder.volume.flows.manager.create_volume.OnFailureRescheduleTask" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.OnFailureRescheduleTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">OnFailureRescheduleTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">reschedule_context</desc_parameter><desc_parameter xml:space="preserve">db</desc_parameter><desc_parameter xml:space="preserve">driver</desc_parameter><desc_parameter xml:space="preserve">scheduler_rpcapi</desc_parameter><desc_parameter xml:space="preserve">do_reschedule</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Triggers a rescheduling request to be sent when reverting occurs.</paragraph>
                <paragraph>If rescheduling doesn’t occur this task errors out the volume.</paragraph>
                <paragraph>Reversion strategy: Triggers the rescheduling mechanism whereby a cast gets
                    sent to the scheduler rpc api to allow for an attempt X of Y for scheduling
                    this volume elsewhere.</paragraph>
                <index entries="['single',\ 'execute()\ (OnFailureRescheduleTask\ method)',\ 'cinder.volume.flows.manager.create_volume.OnFailureRescheduleTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="OnFailureRescheduleTask" first="False" fullname="OnFailureRescheduleTask.execute" ids="cinder.volume.flows.manager.create_volume.OnFailureRescheduleTask.execute" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.OnFailureRescheduleTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (OnFailureRescheduleTask\ method)',\ 'cinder.volume.flows.manager.create_volume.OnFailureRescheduleTask.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="OnFailureRescheduleTask" first="False" fullname="OnFailureRescheduleTask.revert" ids="cinder.volume.flows.manager.create_volume.OnFailureRescheduleTask.revert" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.OnFailureRescheduleTask.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">result</desc_parameter><desc_parameter xml:space="preserve">flow_failures</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_flow()\ (in\ module\ cinder.volume.flows.manager.create_volume)',\ 'cinder.volume.flows.manager.create_volume.get_flow',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_flow" ids="cinder.volume.flows.manager.create_volume.get_flow" module="cinder.volume.flows.manager.create_volume" names="cinder.volume.flows.manager.create_volume.get_flow"><desc_name xml:space="preserve">get_flow</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">manager</desc_parameter><desc_parameter xml:space="preserve">db</desc_parameter><desc_parameter xml:space="preserve">driver</desc_parameter><desc_parameter xml:space="preserve">scheduler_rpcapi</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">allow_reschedule</desc_parameter><desc_parameter xml:space="preserve">reschedule_context</desc_parameter><desc_parameter xml:space="preserve">request_spec</desc_parameter><desc_parameter xml:space="preserve">filter_properties</desc_parameter><desc_parameter xml:space="preserve">image_volume_cache=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Constructs and returns the manager entrypoint flow.</paragraph>
                <paragraph>This flow will do the following:</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Determines if rescheduling is enabled (ahead of time).</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Inject keys &amp; values for dependent tasks.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Selects 1 of 2 activated only on <emphasis>failure</emphasis> tasks (one to update the db
                            status &amp; notify or one to update the db status &amp; notify &amp; <emphasis>reschedule</emphasis>).</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Extracts a volume specification from the provided inputs.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Notifies that the volume has started to be created.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Creates a volume from the extracted volume specification.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Attaches a on-success <emphasis>only</emphasis> task that notifies that the volume creation
                            has ended and performs further database status updates.</paragraph>
                    </list_item>
                </enumerated_list>
            </desc_content>
        </desc>
    </section>
</document>
