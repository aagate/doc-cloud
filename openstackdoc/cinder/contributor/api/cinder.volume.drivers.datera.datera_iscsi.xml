<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.datera.datera_iscsi.rst">
    <section ids="module-cinder.volume.drivers.datera.datera_iscsi the-cinder-volume-drivers-datera-datera-iscsi-module" names="the\ cinder.volume.drivers.datera.datera_iscsi\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.datera.datera_iscsi" reftitle="cinder.volume.drivers.datera.datera_iscsi"><literal classes="xref py py-mod">cinder.volume.drivers.datera.datera_iscsi</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.datera.datera_iscsi\ (module)',\ 'module-cinder.volume.drivers.datera.datera_iscsi',\ '',\ None]"></index>
        <index entries="['single',\ 'DateraDriver\ (class\ in\ cinder.volume.drivers.datera.datera_iscsi)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="DateraDriver" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">DateraDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.drivers.san.san.SanISCSIDriver" refuri="cinder.volume.drivers.san.san#cinder.volume.drivers.san.san.SanISCSIDriver"><literal classes="xref py py-class">cinder.volume.drivers.san.san.SanISCSIDriver</literal></reference>, <reference internal="True" reftitle="cinder.volume.drivers.datera.datera_api2.DateraApi" refuri="cinder.volume.drivers.datera.datera_api2#cinder.volume.drivers.datera.datera_api2.DateraApi"><literal classes="xref py py-class">cinder.volume.drivers.datera.datera_api2.DateraApi</literal></reference>, <reference internal="True" reftitle="cinder.volume.drivers.datera.datera_api21.DateraApi" refuri="cinder.volume.drivers.datera.datera_api21#cinder.volume.drivers.datera.datera_api21.DateraApi"><literal classes="xref py py-class">cinder.volume.drivers.datera.datera_api21.DateraApi</literal></reference></paragraph>
                <paragraph>The OpenStack Datera Driver</paragraph>
                <definition_list>
                    <definition_list_item>
                        <term>Version history:</term>
                        <definition>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph>1.0 - Initial driver</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>1.1 - Look for lun-0 instead of lun-1.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>2.0 - Update For Datera API v2</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>2.1 - Multipath, ACL and reorg</paragraph>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term>2.2 - Capabilites List, Extended Volume-Type Support</term>
                                            <definition>
                                                <paragraph>Naming convention change,
                                                    Volume Manage/Unmanage support</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <definition_list>
                                        <definition_list_item>
                                            <term>2.3 - Templates, Tenants, Snapshot Polling,</term>
                                            <definition>
                                                <paragraph>2.1 Api Version Support, Restructure</paragraph>
                                            </definition>
                                        </definition_list_item>
                                    </definition_list>
                                </list_item>
                                <list_item>
                                    <paragraph>2.3.1 - Scalability bugfixes</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>2.3.2 - Volume Placement, ACL multi-attach bugfix</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph>2.4.0 - Fast Retype Support</paragraph>
                                </list_item>
                            </bullet_list>
                        </definition>
                    </definition_list_item>
                </definition_list>
                <index entries="['single',\ 'CI_WIKI_NAME\ (DateraDriver\ attribute)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.CI_WIKI_NAME" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'datera-ci'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'HEADER_DATA\ (DateraDriver\ attribute)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.HEADER_DATA',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.HEADER_DATA" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.HEADER_DATA" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.HEADER_DATA"><desc_name xml:space="preserve">HEADER_DATA</desc_name><desc_annotation xml:space="preserve"> = {'Datera-Driver': 'OpenStack-Cinder-2.4.0'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (DateraDriver\ attribute)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.VERSION" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.VERSION" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '2.4.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.create_cloned_volume" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_cloned_volume" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_export()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.create_export" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_export" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_export"><desc_name xml:space="preserve">create_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.create_snapshot" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_snapshot" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.create_volume" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_volume" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.create_volume_from_snapshot" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_volume_from_snapshot" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.delete_snapshot" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.delete_snapshot" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.delete_volume" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.delete_volume" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'detach_volume()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.detach_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.detach_volume" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.detach_volume" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.detach_volume"><desc_name xml:space="preserve">detach_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">attachment=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.do_setup" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.do_setup" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ensure_export()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.ensure_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.ensure_export" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.ensure_export" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.ensure_export"><desc_name xml:space="preserve">ensure_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Gets the associated account, retrieves CHAP info and updates.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.extend_volume" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.extend_volume" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_manageable_volumes()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.get_manageable_volumes',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.get_manageable_volumes" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.get_manageable_volumes" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.get_manageable_volumes"><desc_name xml:space="preserve">get_manageable_volumes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cinder_volumes</desc_parameter><desc_parameter xml:space="preserve">marker</desc_parameter><desc_parameter xml:space="preserve">limit</desc_parameter><desc_parameter xml:space="preserve">offset</desc_parameter><desc_parameter xml:space="preserve">sort_keys</desc_parameter><desc_parameter xml:space="preserve">sort_dirs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>List volumes on the backend available for management by Cinder.</paragraph>
                        <paragraph>Returns a list of dictionaries, each specifying a volume in the host,
                            with the following keys:</paragraph>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>reference (dictionary): The reference for a volume, which can be
                                    passed to ‘manage_existing’.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>size (int): The size of the volume according to the storage
                                    backend, rounded up to the nearest GB.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>safe_to_manage (boolean): Whether or not this volume is safe to
                                    manage according to the storage backend. For example, is the volume
                                    in use or invalid for any reason.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>reason_not_safe (string): If safe_to_manage is False, the reason why.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>cinder_id (string): If already managed, provide the Cinder ID.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>extra_info (string): Any extra information to return to the user</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">cinder_volumes</literal_strong> – A list of volumes in this host that Cinder
                                                currently manages, used to determine if
                                                a volume is manageable or not.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">marker</literal_strong> – The last item of the previous page; we return the
                                                next results after this value (after sorting)</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">limit</literal_strong> – Maximum number of items to return</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">offset</literal_strong> – Number of items to skip after marker</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">sort_keys</literal_strong> – List of keys to sort results by (valid keys are
                                                ‘identifier’ and ‘size’)</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">sort_dirs</literal_strong> – List of directions to sort by, corresponding to
                                                sort_keys (valid directions are ‘asc’ and ‘desc’)</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.get_volume_stats" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.get_volume_stats" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get volume stats.</paragraph>
                        <paragraph>If ‘refresh’ is True, run update first.
                            The name is a bit misleading as
                            the majority of the data here is cluster
                            data.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.initialize_connection" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.initialize_connection" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'login()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.login',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.login" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.login" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.login"><desc_name xml:space="preserve">login</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.manage_existing" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.manage_existing" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Manage an existing volume on the Datera backend</paragraph>
                        <paragraph>The existing_ref must be either the current name or Datera UUID of
                            an app_instance on the Datera backend in a colon separated list with
                            the storage instance name and volume name.  This means only
                            single storage instances and single volumes are supported for
                            managing by cinder.</paragraph>
                        <paragraph>Eg.</paragraph>
                        <definition_list>
                            <definition_list_item>
                                <term>(existing_ref[‘source-name’] ==</term>
                                <definition>
                                    <paragraph>tenant:app_inst_name:storage_inst_name:vol_name)</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                        <paragraph>if using Datera 2.1 API</paragraph>
                        <paragraph>or</paragraph>
                        <definition_list>
                            <definition_list_item>
                                <term>(existing_ref[‘source-name’] ==</term>
                                <definition>
                                    <paragraph>app_inst_name:storage_inst_name:vol_name)</paragraph>
                                </definition>
                            </definition_list_item>
                        </definition_list>
                        <paragraph>if using 2.0 API</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – Cinder volume to manage</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">existing_ref</literal_strong> – Driver-specific information used to identify a
                                                volume</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_get_size()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.manage_existing_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.manage_existing_get_size" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.manage_existing_get_size" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.manage_existing_get_size"><desc_name xml:space="preserve">manage_existing_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the size of an unmanaged volume on the Datera backend</paragraph>
                        <paragraph>The existing_ref must be either the current name or Datera UUID of
                            an app_instance on the Datera backend in a colon separated list with
                            the storage instance name and volume name.  This means only
                            single storage instances and single volumes are supported for
                            managing by cinder.</paragraph>
                        <paragraph>Eg.</paragraph>
                        <paragraph>existing_ref == app_inst_name:storage_inst_name:vol_name</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – Cinder volume to manage</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">existing_ref</literal_strong> – Driver-specific information used to identify a
                                                volume on the Datera backend</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'retype()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.retype',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.retype" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.retype" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.retype"><desc_name xml:space="preserve">retype</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_type</desc_parameter><desc_parameter xml:space="preserve">diff</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Convert the volume to be of the new type.</paragraph>
                        <paragraph>Returns a boolean indicating whether the retype occurred.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> – Context</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – A dictionary describing the volume to migrate</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">new_type</literal_strong> – A dictionary describing the volume type to convert to</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">diff</literal_strong> – A dictionary with the difference between the two types</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">host</literal_strong> – A dictionary describing the host to migrate to, where
                                                host[‘host’] is its name, and host[‘capabilities’] is a
                                                dictionary of its reported capabilities (Not Used).</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage()\ (DateraDriver\ method)',\ 'cinder.volume.drivers.datera.datera_iscsi.DateraDriver.unmanage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DateraDriver" first="False" fullname="DateraDriver.unmanage" ids="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.unmanage" module="cinder.volume.drivers.datera.datera_iscsi" names="cinder.volume.drivers.datera.datera_iscsi.DateraDriver.unmanage"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Unmanage a currently managed volume in Cinder</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">volume</literal_strong> – Cinder volume to unmanage</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
