<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.infinidat.rst">
    <section ids="module-cinder.volume.drivers.infinidat the-cinder-volume-drivers-infinidat-module" names="the\ cinder.volume.drivers.infinidat\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.infinidat" reftitle="cinder.volume.drivers.infinidat"><literal classes="xref py py-mod">cinder.volume.drivers.infinidat</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.infinidat\ (module)',\ 'module-cinder.volume.drivers.infinidat',\ '',\ None]"></index>
        <paragraph>INFINIDAT InfiniBox Volume Driver</paragraph>
        <index entries="['single',\ 'InfiniboxVolumeDriver\ (class\ in\ cinder.volume.drivers.infinidat)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="InfiniboxVolumeDriver" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">InfiniboxVolumeDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.drivers.san.san.SanISCSIDriver" refuri="cinder.volume.drivers.san.san#cinder.volume.drivers.san.san.SanISCSIDriver"><literal classes="xref py py-class">cinder.volume.drivers.san.san.SanISCSIDriver</literal></reference></paragraph>
                <paragraph>INFINIDAT InfiniBox Cinder driver.</paragraph>
                <paragraph>Version history:</paragraph>
                <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">1.0 - initial release
1.1 - switched to use infinisdk package
1.2 - added support for iSCSI protocol
1.3 - added generic volume groups support
1.4 - added support for QoS
1.5 - added support for volume compression</literal_block>
                <index entries="['single',\ 'CI_WIKI_NAME\ (InfiniboxVolumeDriver\ attribute)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.CI_WIKI_NAME" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'INFINIDAT_Cinder_CI'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (InfiniboxVolumeDriver\ attribute)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.VERSION" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.VERSION" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '1.5'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.create_cloned_volume" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_cloned_volume" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a clone from source volume.</paragraph>
                        <paragraph>InfiniBox does not yet support detached clone so use dd to copy data.
                            This could be a lengthy operation.</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>map source volume</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>create and map new volume</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>copy data from source to new volume</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>unmap both volumes</paragraph>
                            </list_item>
                        </bullet_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.create_group" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_group" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_group"><desc_name xml:space="preserve">create_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group_from_src()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_group_from_src',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.create_group_from_src" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_group_from_src" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_group_from_src"><desc_name xml:space="preserve">create_group_from_src</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter><desc_parameter xml:space="preserve">group_snapshot=None</desc_parameter><desc_parameter xml:space="preserve">snapshots=None</desc_parameter><desc_parameter xml:space="preserve">source_group=None</desc_parameter><desc_parameter xml:space="preserve">source_vols=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group from source.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group_snapshot()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_group_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.create_group_snapshot" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_group_snapshot" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_group_snapshot"><desc_name xml:space="preserve">create_group_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group_snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.create_snapshot" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_snapshot" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.create_volume" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_volume" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a new volume on the backend.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.create_volume_from_snapshot" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_volume_from_snapshot" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create volume from snapshot.</paragraph>
                        <paragraph>InfiniBox does not yet support detached clone so use dd to copy data.
                            This could be a lengthy operation.</paragraph>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>create a clone from snapshot and map it</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>create a volume and map it</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>copy data from clone to volume</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>unmap volume and clone and delete the clone</paragraph>
                            </list_item>
                        </bullet_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_group()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.delete_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.delete_group" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.delete_group" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.delete_group"><desc_name xml:space="preserve">delete_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a group.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_group_snapshot()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.delete_group_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.delete_group_snapshot" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.delete_group_snapshot" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.delete_group_snapshot"><desc_name xml:space="preserve">delete_group_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a group_snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.delete_snapshot" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.delete_snapshot" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.delete_volume" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.delete_volume" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete a volume from the backend.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.do_setup" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.do_setup" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver initialization</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.extend_volume" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.extend_volume" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend the size of a volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.get_volume_stats" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.get_volume_stats" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.initialize_connection" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.initialize_connection" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.terminate_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.terminate_connection" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.terminate_connection" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.terminate_connection"><desc_name xml:space="preserve">terminate_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_group()\ (InfiniboxVolumeDriver\ method)',\ 'cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.update_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="InfiniboxVolumeDriver" first="False" fullname="InfiniboxVolumeDriver.update_group" ids="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.update_group" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.InfiniboxVolumeDriver.update_group"><desc_name xml:space="preserve">update_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">add_volumes=None</desc_parameter><desc_parameter xml:space="preserve">remove_volumes=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Updates a group.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'infinisdk_to_cinder_exceptions()\ (in\ module\ cinder.volume.drivers.infinidat)',\ 'cinder.volume.drivers.infinidat.infinisdk_to_cinder_exceptions',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="infinisdk_to_cinder_exceptions" ids="cinder.volume.drivers.infinidat.infinisdk_to_cinder_exceptions" module="cinder.volume.drivers.infinidat" names="cinder.volume.drivers.infinidat.infinisdk_to_cinder_exceptions"><desc_name xml:space="preserve">infinisdk_to_cinder_exceptions</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">func</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </section>
</document>
