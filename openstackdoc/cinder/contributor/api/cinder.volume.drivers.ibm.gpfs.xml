<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.ibm.gpfs.rst">
    <section ids="module-cinder.volume.drivers.ibm.gpfs the-cinder-volume-drivers-ibm-gpfs-module" names="the\ cinder.volume.drivers.ibm.gpfs\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.ibm.gpfs" reftitle="cinder.volume.drivers.ibm.gpfs"><literal classes="xref py py-mod">cinder.volume.drivers.ibm.gpfs</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.ibm.gpfs\ (module)',\ 'module-cinder.volume.drivers.ibm.gpfs',\ '',\ None]"></index>
        <paragraph>GPFS Volume Driver.</paragraph>
        <index entries="['single',\ 'GPFSDriver\ (class\ in\ cinder.volume.drivers.ibm.gpfs)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="GPFSDriver" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">GPFSDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.driver.CloneableImageVD" refuri="cinder.volume.driver#cinder.volume.driver.CloneableImageVD"><literal classes="xref py py-class">cinder.volume.driver.CloneableImageVD</literal></reference>, <reference internal="True" reftitle="cinder.volume.driver.MigrateVD" refuri="cinder.volume.driver#cinder.volume.driver.MigrateVD"><literal classes="xref py py-class">cinder.volume.driver.MigrateVD</literal></reference>, <reference internal="True" reftitle="cinder.volume.driver.BaseVD" refuri="cinder.volume.driver#cinder.volume.driver.BaseVD"><literal classes="xref py py-class">cinder.volume.driver.BaseVD</literal></reference></paragraph>
                <paragraph>Implements volume functions using GPFS primitives.</paragraph>
                <paragraph>Version history:
                    1.0.0 - Initial driver
                    1.1.0 - Add volume retype, refactor volume migration
                    1.2.0 - Add consistency group support
                    1.3.0 - Add NFS based GPFS storage backend support
                    1.3.1 - Add GPFS native encryption (encryption of data at rest) support</paragraph>
                <index entries="['single',\ 'CI_WIKI_NAME\ (GPFSDriver\ attribute)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.CI_WIKI_NAME" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'IBM_GPFS_CI'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (GPFSDriver\ attribute)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.VERSION" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.VERSION" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '1.3.1'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_setup_error()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.check_for_setup_error',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.check_for_setup_error" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.check_for_setup_error" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.check_for_setup_error"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns an error if prerequisites arenâ€™t met.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'clone_image()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.clone_image',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.clone_image" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.clone_image" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.clone_image"><desc_name xml:space="preserve">clone_image</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_location</desc_parameter><desc_parameter xml:space="preserve">image_meta</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a volume from the specified image.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_image_to_volume()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.copy_image_to_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.copy_image_to_volume" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.copy_image_to_volume" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.copy_image_to_volume"><desc_name xml:space="preserve">copy_image_to_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter><desc_parameter xml:space="preserve">image_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Fetch the image from image_service and write it to the volume.</paragraph>
                        <paragraph>Note that cinder.volume.flows.create_volume will attempt to use
                            clone_image to efficiently create volume from image when both
                            source and target are backed by gpfs storage.  If that is not the
                            case, this function is invoked and uses fetch_to_raw to create the
                            volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_volume_to_image()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.copy_volume_to_image',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.copy_volume_to_image" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.copy_volume_to_image" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.copy_volume_to_image"><desc_name xml:space="preserve">copy_volume_to_image</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter><desc_parameter xml:space="preserve">image_meta</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Copy the volume to the specified image.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.create_cloned_volume" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_cloned_volume" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a GPFS volume from another volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_export()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.create_export" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_export" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_export"><desc_name xml:space="preserve">create_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Exports the volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.create_group" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_group" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_group"><desc_name xml:space="preserve">create_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> â€“ the context of the caller.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group</literal_strong> â€“ the Group object of the group to be created.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group_from_src()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_group_from_src',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.create_group_from_src" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_group_from_src" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_group_from_src"><desc_name xml:space="preserve">create_group_from_src</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter><desc_parameter xml:space="preserve">group_snapshot=None</desc_parameter><desc_parameter xml:space="preserve">snapshots=None</desc_parameter><desc_parameter xml:space="preserve">source_group=None</desc_parameter><desc_parameter xml:space="preserve">source_vols=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group from source.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> â€“ the context of the caller.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group</literal_strong> â€“ the Group object to be created.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volumes</literal_strong> â€“ a list of Volume objects in the group.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group_snapshot</literal_strong> â€“ the GroupSnapshot object as source.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">snapshots</literal_strong> â€“ a list of snapshot objects in group_snapshot.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">source_group</literal_strong> â€“ the Group object as source.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">source_vols</literal_strong> â€“ a list of volume objects in the source_group.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update, volumes_model_update</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_group_snapshot()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_group_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.create_group_snapshot" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_group_snapshot" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_group_snapshot"><desc_name xml:space="preserve">create_group_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a group_snapshot.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> â€“ the context of the caller.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group_snapshot</literal_strong> â€“ the GroupSnapshot object to be created.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">snapshots</literal_strong> â€“ a list of Snapshot objects in the group_snapshot.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update, snapshots_model_update</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.create_snapshot" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_snapshot" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a GPFS snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.create_volume" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_volume" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a GPFS volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.create_volume_from_snapshot" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_volume_from_snapshot" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a GPFS volume from a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_group()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.delete_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.delete_group" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.delete_group" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.delete_group"><desc_name xml:space="preserve">delete_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a group.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> â€“ the context of the caller.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group</literal_strong> â€“ the Group object of the group to be deleted.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volumes</literal_strong> â€“ a list of Volume objects in the group.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update, volumes_model_update</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_group_snapshot()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.delete_group_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.delete_group_snapshot" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.delete_group_snapshot" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.delete_group_snapshot"><desc_name xml:space="preserve">delete_group_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a group_snapshot.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> â€“ the context of the caller.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group_snapshot</literal_strong> â€“ the GroupSnapshot object to be deleted.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">snapshots</literal_strong> â€“ a list of snapshot objects in the group_snapshot.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update, snapshots_model_update</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.delete_snapshot" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.delete_snapshot" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a GPFS snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.delete_volume" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.delete_volume" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.do_setup" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.do_setup" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Determine storage back end capabilities.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ensure_export()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.ensure_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.ensure_export" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.ensure_export" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.ensure_export"><desc_name xml:space="preserve">ensure_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Synchronously recreates an export for a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.extend_volume" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.extend_volume" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend an existing volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.get_volume_stats" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.get_volume_stats" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get volume stats.</paragraph>
                        <paragraph>If â€˜refreshâ€™ is True, or stats have never been updated, run update
                            the stats first.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.initialize_connection" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.initialize_connection" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'local_path()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.local_path',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.local_path" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.local_path" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.local_path"><desc_name xml:space="preserve">local_path</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the local path for the specified volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'migrate_volume()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.migrate_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.migrate_volume" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.migrate_volume" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.migrate_volume"><desc_name xml:space="preserve">migrate_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Attempt to migrate a volume to specified host.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove_export()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.remove_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.remove_export" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.remove_export" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.remove_export"><desc_name xml:space="preserve">remove_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Removes an export for a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'retype()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.retype',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.retype" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.retype" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.retype"><desc_name xml:space="preserve">retype</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_type</desc_parameter><desc_parameter xml:space="preserve">diff</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Modify volume to be of new type.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.terminate_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.terminate_connection" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.terminate_connection" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.terminate_connection"><desc_name xml:space="preserve">terminate_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_group()\ (GPFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSDriver.update_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSDriver" first="False" fullname="GPFSDriver.update_group" ids="cinder.volume.drivers.ibm.gpfs.GPFSDriver.update_group" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSDriver.update_group"><desc_name xml:space="preserve">update_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">add_volumes=None</desc_parameter><desc_parameter xml:space="preserve">remove_volumes=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Updates a group.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> â€“ the context of the caller.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group</literal_strong> â€“ the Group object of the group to be updated.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">add_volumes</literal_strong> â€“ a list of Volume objects to be added.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">remove_volumes</literal_strong> â€“ a list of Volume objects to be removed.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update, add_volumes_update, remove_volumes_update</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GPFSNFSDriver\ (class\ in\ cinder.volume.drivers.ibm.gpfs)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="GPFSNFSDriver" ids="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">GPFSNFSDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.volume.drivers.ibm.gpfs.GPFSDriver" reftitle="cinder.volume.drivers.ibm.gpfs.GPFSDriver"><literal classes="xref py py-class">cinder.volume.drivers.ibm.gpfs.GPFSDriver</literal></reference>, <reference internal="True" reftitle="cinder.volume.drivers.nfs.NfsDriver" refuri="cinder.volume.drivers.nfs#cinder.volume.drivers.nfs.NfsDriver"><literal classes="xref py py-class">cinder.volume.drivers.nfs.NfsDriver</literal></reference>, <reference internal="True" reftitle="cinder.volume.drivers.san.san.SanDriver" refuri="cinder.volume.drivers.san.san#cinder.volume.drivers.san.san.SanDriver"><literal classes="xref py py-class">cinder.volume.drivers.san.san.SanDriver</literal></reference></paragraph>
                <paragraph>GPFS cinder driver extension.</paragraph>
                <paragraph>This extends the capability of existing GPFS cinder driver
                    to be able to create cinder volumes when cinder volume service
                    is not running on GPFS node.</paragraph>
                <index entries="['single',\ 'CI_WIKI_NAME\ (GPFSNFSDriver\ attribute)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GPFSNFSDriver" first="False" fullname="GPFSNFSDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.CI_WIKI_NAME" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'IBM_GPFS_NFS_CI'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (GPFSNFSDriver\ attribute)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GPFSNFSDriver" first="False" fullname="GPFSNFSDriver.VERSION" ids="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.VERSION" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '1.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (GPFSNFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSNFSDriver" first="False" fullname="GPFSNFSDriver.create_cloned_volume" ids="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.create_cloned_volume" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a GPFS volume from another volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (GPFSNFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSNFSDriver" first="False" fullname="GPFSNFSDriver.create_volume" ids="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.create_volume" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a GPFS volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (GPFSNFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSNFSDriver" first="False" fullname="GPFSNFSDriver.create_volume_from_snapshot" ids="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.create_volume_from_snapshot" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a GPFS volume from a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (GPFSNFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSNFSDriver" first="False" fullname="GPFSNFSDriver.delete_volume" ids="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.delete_volume" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (GPFSNFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSNFSDriver" first="False" fullname="GPFSNFSDriver.do_setup" ids="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.do_setup" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (GPFSNFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSNFSDriver" first="False" fullname="GPFSNFSDriver.get_volume_stats" ids="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.get_volume_stats" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get volume stats.</paragraph>
                        <paragraph>If â€˜refreshâ€™ is True, or stats have never been updated, run update
                            the stats first.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'local_path()\ (GPFSNFSDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.local_path',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSNFSDriver" first="False" fullname="GPFSNFSDriver.local_path" ids="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.local_path" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSNFSDriver.local_path"><desc_name xml:space="preserve">local_path</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the local path for the specified volume.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GPFSRemoteDriver\ (class\ in\ cinder.volume.drivers.ibm.gpfs)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSRemoteDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="GPFSRemoteDriver" ids="cinder.volume.drivers.ibm.gpfs.GPFSRemoteDriver" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSRemoteDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">GPFSRemoteDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.volume.drivers.ibm.gpfs.GPFSDriver" reftitle="cinder.volume.drivers.ibm.gpfs.GPFSDriver"><literal classes="xref py py-class">cinder.volume.drivers.ibm.gpfs.GPFSDriver</literal></reference>, <reference internal="True" reftitle="cinder.volume.drivers.san.san.SanDriver" refuri="cinder.volume.drivers.san.san#cinder.volume.drivers.san.san.SanDriver"><literal classes="xref py py-class">cinder.volume.drivers.san.san.SanDriver</literal></reference></paragraph>
                <paragraph>GPFS cinder driver extension.</paragraph>
                <paragraph>This extends the capability of existing GPFS cinder driver
                    to be able to run the driver when cinder volume service
                    is not running on GPFS node where as Nova Compute is a GPFS
                    client. This deployment is typically in Container based
                    OpenStack environment.</paragraph>
                <index entries="['single',\ 'CI_WIKI_NAME\ (GPFSRemoteDriver\ attribute)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSRemoteDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GPFSRemoteDriver" first="False" fullname="GPFSRemoteDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.ibm.gpfs.GPFSRemoteDriver.CI_WIKI_NAME" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSRemoteDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'IBM_GPFS_REMOTE_CI'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (GPFSRemoteDriver\ attribute)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSRemoteDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GPFSRemoteDriver" first="False" fullname="GPFSRemoteDriver.VERSION" ids="cinder.volume.drivers.ibm.gpfs.GPFSRemoteDriver.VERSION" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSRemoteDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '1.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (GPFSRemoteDriver\ method)',\ 'cinder.volume.drivers.ibm.gpfs.GPFSRemoteDriver.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GPFSRemoteDriver" first="False" fullname="GPFSRemoteDriver.do_setup" ids="cinder.volume.drivers.ibm.gpfs.GPFSRemoteDriver.do_setup" module="cinder.volume.drivers.ibm.gpfs" names="cinder.volume.drivers.ibm.gpfs.GPFSRemoteDriver.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
