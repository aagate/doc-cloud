<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.lvm.rst">
    <section ids="module-cinder.volume.drivers.lvm the-cinder-volume-drivers-lvm-module" names="the\ cinder.volume.drivers.lvm\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.lvm" reftitle="cinder.volume.drivers.lvm"><literal classes="xref py py-mod">cinder.volume.drivers.lvm</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.lvm\ (module)',\ 'module-cinder.volume.drivers.lvm',\ '',\ None]"></index>
        <paragraph>Driver for Linux servers running LVM.</paragraph>
        <index entries="['single',\ 'LVMVolumeDriver\ (class\ in\ cinder.volume.drivers.lvm)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="LVMVolumeDriver" ids="cinder.volume.drivers.lvm.LVMVolumeDriver" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">LVMVolumeDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vg_obj=None</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.driver.VolumeDriver" refuri="cinder.volume.driver#cinder.volume.driver.VolumeDriver"><literal classes="xref py py-class">cinder.volume.driver.VolumeDriver</literal></reference></paragraph>
                <paragraph>Executes commands relating to Volumes.</paragraph>
                <index entries="['single',\ 'CI_WIKI_NAME\ (LVMVolumeDriver\ attribute)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.CI_WIKI_NAME" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'Cinder_Jenkins'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (LVMVolumeDriver\ attribute)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.VERSION" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.VERSION" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '3.0.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_setup_error()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.check_for_setup_error',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.check_for_setup_error" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.check_for_setup_error" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.check_for_setup_error"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Verify that requirements are in place to use LVM driver.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'clone_image()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.clone_image',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.clone_image" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.clone_image" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.clone_image"><desc_name xml:space="preserve">clone_image</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_location</desc_parameter><desc_parameter xml:space="preserve">image_meta</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_image_to_volume()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.copy_image_to_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.copy_image_to_volume" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.copy_image_to_volume" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.copy_image_to_volume"><desc_name xml:space="preserve">copy_image_to_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter><desc_parameter xml:space="preserve">image_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Fetch the image from image_service and write it to the volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_volume_to_image()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.copy_volume_to_image',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.copy_volume_to_image" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.copy_volume_to_image" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.copy_volume_to_image"><desc_name xml:space="preserve">copy_volume_to_image</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter><desc_parameter xml:space="preserve">image_meta</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Copy the volume to the specified image.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.create_cloned_volume" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.create_cloned_volume" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a clone of the specified volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_export()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.create_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.create_export" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.create_export" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.create_export"><desc_name xml:space="preserve">create_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">vg=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.create_snapshot" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.create_snapshot" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.create_volume" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.create_volume" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.create_volume_from_snapshot" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.create_volume_from_snapshot" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a volume from a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.delete_snapshot" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.delete_snapshot" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.delete_volume" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.delete_volume" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ensure_export()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.ensure_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.ensure_export" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.ensure_export" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.ensure_export"><desc_name xml:space="preserve">ensure_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.extend_volume" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.extend_volume" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend an existing volume’s size.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_manageable_snapshots()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.get_manageable_snapshots',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.get_manageable_snapshots" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.get_manageable_snapshots" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.get_manageable_snapshots"><desc_name xml:space="preserve">get_manageable_snapshots</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cinder_snapshots</desc_parameter><desc_parameter xml:space="preserve">marker</desc_parameter><desc_parameter xml:space="preserve">limit</desc_parameter><desc_parameter xml:space="preserve">offset</desc_parameter><desc_parameter xml:space="preserve">sort_keys</desc_parameter><desc_parameter xml:space="preserve">sort_dirs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_manageable_volumes()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.get_manageable_volumes',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.get_manageable_volumes" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.get_manageable_volumes" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.get_manageable_volumes"><desc_name xml:space="preserve">get_manageable_volumes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cinder_volumes</desc_parameter><desc_parameter xml:space="preserve">marker</desc_parameter><desc_parameter xml:space="preserve">limit</desc_parameter><desc_parameter xml:space="preserve">offset</desc_parameter><desc_parameter xml:space="preserve">sort_keys</desc_parameter><desc_parameter xml:space="preserve">sort_dirs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_pool()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.get_pool',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.get_pool" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.get_pool" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.get_pool"><desc_name xml:space="preserve">get_pool</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.get_volume_stats" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.get_volume_stats" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get volume status.</paragraph>
                        <paragraph>If ‘refresh’ is True, run update the stats first.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.initialize_connection" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.initialize_connection" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'local_path()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.local_path',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.local_path" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.local_path" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.local_path"><desc_name xml:space="preserve">local_path</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">vg=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.manage_existing" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Manages an existing LV.</paragraph>
                        <paragraph>Renames the LV to match the expected name for the volume.
                            Error checking done by manage_existing_get_size is not repeated.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_get_size()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.manage_existing_get_size" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing_get_size" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing_get_size"><desc_name xml:space="preserve">manage_existing_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_object_get_size()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing_object_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.manage_existing_object_get_size" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing_object_get_size" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing_object_get_size"><desc_name xml:space="preserve">manage_existing_object_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">existing_object</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter><desc_parameter xml:space="preserve">object_type</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return size of an existing LV for manage existing volume/snapshot.</paragraph>
                        <paragraph>existing_ref is a dictionary of the form:
                            {‘source-name’: &lt;name of LV&gt;}</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_snapshot()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.manage_existing_snapshot" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing_snapshot" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing_snapshot"><desc_name xml:space="preserve">manage_existing_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_snapshot_get_size()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing_snapshot_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.manage_existing_snapshot_get_size" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing_snapshot_get_size" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.manage_existing_snapshot_get_size"><desc_name xml:space="preserve">manage_existing_snapshot_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'migrate_volume()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.migrate_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.migrate_volume" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.migrate_volume" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.migrate_volume"><desc_name xml:space="preserve">migrate_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">thin=False</desc_parameter><desc_parameter xml:space="preserve">mirror_count=0</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Optimize the migration if the destination is on the same server.</paragraph>
                        <paragraph>If the specified host is another back-end on the same server, and
                            the volume is not attached, we can do the migration locally without
                            going through iSCSI.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove_export()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.remove_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.remove_export" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.remove_export" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.remove_export"><desc_name xml:space="preserve">remove_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'retype()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.retype',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.retype" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.retype" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.retype"><desc_name xml:space="preserve">retype</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_type</desc_parameter><desc_parameter xml:space="preserve">diff</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Retypes a volume, allow QoS and extra_specs change.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert_to_snapshot()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.revert_to_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.revert_to_snapshot" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.revert_to_snapshot" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.revert_to_snapshot"><desc_name xml:space="preserve">revert_to_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Revert a volume to a snapshot</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.terminate_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.terminate_connection" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.terminate_connection" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.terminate_connection"><desc_name xml:space="preserve">terminate_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_migrated_volume()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.update_migrated_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.update_migrated_volume" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.update_migrated_volume" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.update_migrated_volume"><desc_name xml:space="preserve">update_migrated_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_volume</desc_parameter><desc_parameter xml:space="preserve">original_volume_status</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return model update from LVM for migrated volume.</paragraph>
                        <paragraph>This method should rename the back-end volume name(id) on the
                            destination host back to its original name(id) on the source host.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> – The context used to run the method update_migrated_volume</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – The original volume that was migrated to this backend</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">new_volume</literal_strong> – The migration volume object that was created on
                                                this backend as part of the migration process</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">original_volume_status</literal_strong> – The status of the original volume</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update to update DB with any needed changes</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'validate_connector()\ (LVMVolumeDriver\ method)',\ 'cinder.volume.drivers.lvm.LVMVolumeDriver.validate_connector',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVMVolumeDriver" first="False" fullname="LVMVolumeDriver.validate_connector" ids="cinder.volume.drivers.lvm.LVMVolumeDriver.validate_connector" module="cinder.volume.drivers.lvm" names="cinder.volume.drivers.lvm.LVMVolumeDriver.validate_connector"><desc_name xml:space="preserve">validate_connector</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
