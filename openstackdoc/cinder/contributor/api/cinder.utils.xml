<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.utils.rst">
    <section ids="module-cinder.utils the-cinder-utils-module" names="the\ cinder.utils\ module">
        <title>The <reference internal="True" refid="module-cinder.utils" reftitle="cinder.utils"><literal classes="xref py py-mod">cinder.utils</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.utils\ (module)',\ 'module-cinder.utils',\ '',\ None]"></index>
        <paragraph>Utilities and helper functions.</paragraph>
        <index entries="['single',\ 'ComparableMixin\ (class\ in\ cinder.utils)',\ 'cinder.utils.ComparableMixin',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ComparableMixin" ids="cinder.utils.ComparableMixin" module="cinder.utils" names="cinder.utils.ComparableMixin"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ComparableMixin</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DO_NOTHING\ (in\ module\ cinder.utils)',\ 'cinder.utils.DO_NOTHING',\ '',\ None]"></index>
        <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
            <desc_signature class="" first="False" fullname="DO_NOTHING" ids="cinder.utils.DO_NOTHING" module="cinder.utils" names="cinder.utils.DO_NOTHING"><desc_name xml:space="preserve">DO_NOTHING</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class that literrally does nothing.</paragraph>
                <paragraph>We inherit from str in case it’s called with json.dumps.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DoNothing\ (class\ in\ cinder.utils)',\ 'cinder.utils.DoNothing',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="DoNothing" ids="cinder.utils.DoNothing" module="cinder.utils" names="cinder.utils.DoNothing"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">DoNothing</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">str</literal></paragraph>
                <paragraph>Class that literrally does nothing.</paragraph>
                <paragraph>We inherit from str in case it’s called with json.dumps.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'TraceWrapperMetaclass\ (class\ in\ cinder.utils)',\ 'cinder.utils.TraceWrapperMetaclass',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="TraceWrapperMetaclass" ids="cinder.utils.TraceWrapperMetaclass" module="cinder.utils" names="cinder.utils.TraceWrapperMetaclass"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">TraceWrapperMetaclass</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">type</literal></paragraph>
                <paragraph>Metaclass that wraps all methods of a class with trace_method.</paragraph>
                <paragraph>This metaclass will cause every function inside of the class to be
                    decorated with the trace_method decorator.</paragraph>
                <paragraph>To use the metaclass you define a class like so:
                    @six.add_metaclass(utils.TraceWrapperMetaclass)
                    class MyClass(object):</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'TraceWrapperWithABCMetaclass\ (class\ in\ cinder.utils)',\ 'cinder.utils.TraceWrapperWithABCMetaclass',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="TraceWrapperWithABCMetaclass" ids="cinder.utils.TraceWrapperWithABCMetaclass" module="cinder.utils" names="cinder.utils.TraceWrapperWithABCMetaclass"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">TraceWrapperWithABCMetaclass</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">abc.ABCMeta</literal>, <reference internal="True" refid="cinder.utils.TraceWrapperMetaclass" reftitle="cinder.utils.TraceWrapperMetaclass"><literal classes="xref py py-class">cinder.utils.TraceWrapperMetaclass</literal></reference></paragraph>
                <paragraph>Metaclass that wraps all methods of a class with trace.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'add_visible_admin_metadata()\ (in\ module\ cinder.utils)',\ 'cinder.utils.add_visible_admin_metadata',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="add_visible_admin_metadata" ids="cinder.utils.add_visible_admin_metadata" module="cinder.utils" names="cinder.utils.add_visible_admin_metadata"><desc_name xml:space="preserve">add_visible_admin_metadata</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Add user-visible admin metadata to regular metadata.</paragraph>
                <paragraph>Extracts the admin metadata keys that are to be made visible to
                    non-administrators, and adds them to the regular metadata structure for the
                    passed-in volume.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'as_int()\ (in\ module\ cinder.utils)',\ 'cinder.utils.as_int',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="as_int" ids="cinder.utils.as_int" module="cinder.utils" names="cinder.utils.as_int"><desc_name xml:space="preserve">as_int</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">obj</desc_parameter><desc_parameter xml:space="preserve">quiet=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'brick_attach_volume_encryptor()\ (in\ module\ cinder.utils)',\ 'cinder.utils.brick_attach_volume_encryptor',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="brick_attach_volume_encryptor" ids="cinder.utils.brick_attach_volume_encryptor" module="cinder.utils" names="cinder.utils.brick_attach_volume_encryptor"><desc_name xml:space="preserve">brick_attach_volume_encryptor</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">attach_info</desc_parameter><desc_parameter xml:space="preserve">encryption</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Attach encryption layer.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'brick_detach_volume_encryptor()\ (in\ module\ cinder.utils)',\ 'cinder.utils.brick_detach_volume_encryptor',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="brick_detach_volume_encryptor" ids="cinder.utils.brick_detach_volume_encryptor" module="cinder.utils" names="cinder.utils.brick_detach_volume_encryptor"><desc_name xml:space="preserve">brick_detach_volume_encryptor</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">attach_info</desc_parameter><desc_parameter xml:space="preserve">encryption</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Detach encryption layer.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'brick_get_connector()\ (in\ module\ cinder.utils)',\ 'cinder.utils.brick_get_connector',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="brick_get_connector" ids="cinder.utils.brick_get_connector" module="cinder.utils" names="cinder.utils.brick_get_connector"><desc_name xml:space="preserve">brick_get_connector</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">protocol</desc_parameter><desc_parameter xml:space="preserve">driver=None</desc_parameter><desc_parameter xml:space="preserve">use_multipath=False</desc_parameter><desc_parameter xml:space="preserve">device_scan_attempts=3</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Wrapper to get a brick connector object.</paragraph>
                <paragraph>This automatically populates the required protocol as well
                    as the root_helper needed to execute commands.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'brick_get_connector_properties()\ (in\ module\ cinder.utils)',\ 'cinder.utils.brick_get_connector_properties',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="brick_get_connector_properties" ids="cinder.utils.brick_get_connector_properties" module="cinder.utils" names="cinder.utils.brick_get_connector_properties"><desc_name xml:space="preserve">brick_get_connector_properties</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">multipath=False</desc_parameter><desc_parameter xml:space="preserve">enforce_multipath=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Wrapper to automatically set root_helper in brick calls.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">multipath</literal_strong> – A boolean indicating whether the connector can
                                        support multipath.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">enforce_multipath</literal_strong> – If True, it raises exception when multipath=True
                                        is specified but multipathd is not running.
                                        If False, it falls back to multipath=False
                                        when multipathd is not running.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'brick_get_encryptor()\ (in\ module\ cinder.utils)',\ 'cinder.utils.brick_get_encryptor',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="brick_get_encryptor" ids="cinder.utils.brick_get_encryptor" module="cinder.utils" names="cinder.utils.brick_get_encryptor"><desc_name xml:space="preserve">brick_get_encryptor</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">connection_info</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Wrapper to get a brick encryptor object.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'build_or_str()\ (in\ module\ cinder.utils)',\ 'cinder.utils.build_or_str',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="build_or_str" ids="cinder.utils.build_or_str" module="cinder.utils" names="cinder.utils.build_or_str"><desc_name xml:space="preserve">build_or_str</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">elements</desc_parameter><desc_parameter xml:space="preserve">str_format=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Builds a string of elements joined by ‘or’.</paragraph>
                <paragraph>Will join strings with the ‘or’ word and if a str_format is provided it
                    will be used to format the resulted joined string.
                    If there are no elements an empty string will be returned.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">elements</literal_strong> (<literal_emphasis>String</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>iterable of strings.</literal_emphasis>) – Elements we want to join.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">str_format</literal_strong> (<literal_emphasis>String.</literal_emphasis>) – String to use to format the response.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'calculate_virtual_free_capacity()\ (in\ module\ cinder.utils)',\ 'cinder.utils.calculate_virtual_free_capacity',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="calculate_virtual_free_capacity" ids="cinder.utils.calculate_virtual_free_capacity" module="cinder.utils" names="cinder.utils.calculate_virtual_free_capacity"><desc_name xml:space="preserve">calculate_virtual_free_capacity</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">total_capacity</desc_parameter><desc_parameter xml:space="preserve">free_capacity</desc_parameter><desc_parameter xml:space="preserve">provisioned_capacity</desc_parameter><desc_parameter xml:space="preserve">thin_provisioning_support</desc_parameter><desc_parameter xml:space="preserve">max_over_subscription_ratio</desc_parameter><desc_parameter xml:space="preserve">reserved_percentage</desc_parameter><desc_parameter xml:space="preserve">thin</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Calculate the virtual free capacity based on thin provisioning support.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">total_capacity</literal_strong> – total_capacity_gb of a host_state or pool.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">free_capacity</literal_strong> – free_capacity_gb of a host_state or pool.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">provisioned_capacity</literal_strong> – provisioned_capacity_gb of a host_state
                                        or pool.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">thin_provisioning_support</literal_strong> – thin_provisioning_support of
                                        a host_state or a pool.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">max_over_subscription_ratio</literal_strong> – max_over_subscription_ratio of
                                        a host_state or a pool</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">reserved_percentage</literal_strong> – reserved_percentage of a host_state or
                                        a pool.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">thin</literal_strong> – whether volume to be provisioned is thin</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>the calculated virtual free capacity.</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_exclusive_options()\ (in\ module\ cinder.utils)',\ 'cinder.utils.check_exclusive_options',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_exclusive_options" ids="cinder.utils.check_exclusive_options" module="cinder.utils" names="cinder.utils.check_exclusive_options"><desc_name xml:space="preserve">check_exclusive_options</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Checks that only one of the provided options is actually not-none.</paragraph>
                <paragraph>Iterates over all the kwargs passed in and checks that only one of said
                    arguments is not-none, if more than one is not-none then an exception will
                    be raised with the names of those arguments who were not-none.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_metadata_properties()\ (in\ module\ cinder.utils)',\ 'cinder.utils.check_metadata_properties',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_metadata_properties" ids="cinder.utils.check_metadata_properties" module="cinder.utils" names="cinder.utils.check_metadata_properties"><desc_name xml:space="preserve">check_metadata_properties</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">metadata=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Checks that the volume metadata properties are valid.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_ssh_injection()\ (in\ module\ cinder.utils)',\ 'cinder.utils.check_ssh_injection',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_ssh_injection" ids="cinder.utils.check_ssh_injection" module="cinder.utils" names="cinder.utils.check_ssh_injection"><desc_name xml:space="preserve">check_ssh_injection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cmd_list</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_string_length()\ (in\ module\ cinder.utils)',\ 'cinder.utils.check_string_length',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_string_length" ids="cinder.utils.check_string_length" module="cinder.utils" names="cinder.utils.check_string_length"><desc_name xml:space="preserve">check_string_length</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">value</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">min_length=0</desc_parameter><desc_parameter xml:space="preserve">max_length=None</desc_parameter><desc_parameter xml:space="preserve">allow_all_spaces=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Check the length of specified string.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">value</literal_strong> – the value of the string</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">name</literal_strong> – the name of the string</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">min_length</literal_strong> – the min_length of the string</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">max_length</literal_strong> – the max_length of the string</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'convert_str()\ (in\ module\ cinder.utils)',\ 'cinder.utils.convert_str',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="convert_str" ids="cinder.utils.convert_str" module="cinder.utils" names="cinder.utils.convert_str"><desc_name xml:space="preserve">convert_str</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">text</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Convert to native string.</paragraph>
                <paragraph>Convert bytes and Unicode strings to native strings:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>convert to bytes on Python 2:
                            encode Unicode using encodeutils.safe_encode()</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>convert to Unicode on Python 3: decode bytes from UTF-8</paragraph>
                    </list_item>
                </bullet_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'execute()\ (in\ module\ cinder.utils)',\ 'cinder.utils.execute',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="execute" ids="cinder.utils.execute" module="cinder.utils" names="cinder.utils.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*cmd</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Convenience wrapper around oslo’s execute() method.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_blkdev_major_minor()\ (in\ module\ cinder.utils)',\ 'cinder.utils.get_blkdev_major_minor',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_blkdev_major_minor" ids="cinder.utils.get_blkdev_major_minor" module="cinder.utils" names="cinder.utils.get_blkdev_major_minor"><desc_name xml:space="preserve">get_blkdev_major_minor</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">lookup_for_file=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Get ‘major:minor’ number of block device.</paragraph>
                <paragraph>Get the device’s ‘major:minor’ number of a block device to control
                    I/O ratelimit of the specified path.
                    If lookup_for_file is True and the path is a regular file, lookup a disk
                    device which the file lies on and returns the result for the device.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_bool_param()\ (in\ module\ cinder.utils)',\ 'cinder.utils.get_bool_param',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_bool_param" ids="cinder.utils.get_bool_param" module="cinder.utils" names="cinder.utils.get_bool_param"><desc_name xml:space="preserve">get_bool_param</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">param_string</desc_parameter><desc_parameter xml:space="preserve">params</desc_parameter><desc_parameter xml:space="preserve">default=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_file_gid()\ (in\ module\ cinder.utils)',\ 'cinder.utils.get_file_gid',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_file_gid" ids="cinder.utils.get_file_gid" module="cinder.utils" names="cinder.utils.get_file_gid"><desc_name xml:space="preserve">get_file_gid</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>This primarily exists to make unit testing easier.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_file_mode()\ (in\ module\ cinder.utils)',\ 'cinder.utils.get_file_mode',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_file_mode" ids="cinder.utils.get_file_mode" module="cinder.utils" names="cinder.utils.get_file_mode"><desc_name xml:space="preserve">get_file_mode</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>This primarily exists to make unit testing easier.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_file_size()\ (in\ module\ cinder.utils)',\ 'cinder.utils.get_file_size',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_file_size" ids="cinder.utils.get_file_size" module="cinder.utils" names="cinder.utils.get_file_size"><desc_name xml:space="preserve">get_file_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the file size.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_log_levels()\ (in\ module\ cinder.utils)',\ 'cinder.utils.get_log_levels',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_log_levels" ids="cinder.utils.get_log_levels" module="cinder.utils" names="cinder.utils.get_log_levels"><desc_name xml:space="preserve">get_log_levels</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">prefix</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_log_method()\ (in\ module\ cinder.utils)',\ 'cinder.utils.get_log_method',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_log_method" ids="cinder.utils.get_log_method" module="cinder.utils" names="cinder.utils.get_log_method"><desc_name xml:space="preserve">get_log_method</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">level_string</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_root_helper()\ (in\ module\ cinder.utils)',\ 'cinder.utils.get_root_helper',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_root_helper" ids="cinder.utils.get_root_helper" module="cinder.utils" names="cinder.utils.get_root_helper"><desc_name xml:space="preserve">get_root_helper</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'if_notifications_enabled()\ (in\ module\ cinder.utils)',\ 'cinder.utils.if_notifications_enabled',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="if_notifications_enabled" ids="cinder.utils.if_notifications_enabled" module="cinder.utils" names="cinder.utils.if_notifications_enabled"><desc_name xml:space="preserve">if_notifications_enabled</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Calls decorated method only if notifications are enabled.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'is_blk_device()\ (in\ module\ cinder.utils)',\ 'cinder.utils.is_blk_device',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_blk_device" ids="cinder.utils.is_blk_device" module="cinder.utils" names="cinder.utils.is_blk_device"><desc_name xml:space="preserve">is_blk_device</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dev</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'is_none_string()\ (in\ module\ cinder.utils)',\ 'cinder.utils.is_none_string',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_none_string" ids="cinder.utils.is_none_string" module="cinder.utils" names="cinder.utils.is_none_string"><desc_name xml:space="preserve">is_none_string</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">val</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Check if a string represents a None value.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'last_completed_audit_period()\ (in\ module\ cinder.utils)',\ 'cinder.utils.last_completed_audit_period',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="last_completed_audit_period" ids="cinder.utils.last_completed_audit_period" module="cinder.utils" names="cinder.utils.last_completed_audit_period"><desc_name xml:space="preserve">last_completed_audit_period</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">unit=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>This method gives you the most recently <emphasis>completed</emphasis> audit period.</paragraph>
                <definition_list>
                    <definition_list_item>
                        <term>arguments:</term>
                        <definition>
                            <definition_list>
                                <definition_list_item>
                                    <term>units: string, one of ‘hour’, ‘day’, ‘month’, ‘year’</term>
                                    <definition>
                                        <paragraph>Periods normally begin at the beginning (UTC) of the
                                            period unit (So a ‘day’ period begins at midnight UTC,
                                            a ‘month’ unit on the 1st, a ‘year’ on Jan, 1)
                                            unit string may be appended with an optional offset
                                            like so:  <reference refuri="mailto:'day@18">‘day@18</reference>’  This will begin the period at 18:00
                                            UTC.  <reference refuri="mailto:'month@15">‘month@15</reference>’ starts a monthly period on the 15th,
                                            and year@3 begins a yearly one on March 1st.</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term>returns:  2 tuple of datetimes (begin, end)</term>
                        <definition>
                            <paragraph>The begin timestamp of this audit period is the same as the
                                end of the previous.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'log_unsupported_driver_warning()\ (in\ module\ cinder.utils)',\ 'cinder.utils.log_unsupported_driver_warning',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="log_unsupported_driver_warning" ids="cinder.utils.log_unsupported_driver_warning" module="cinder.utils" names="cinder.utils.log_unsupported_driver_warning"><desc_name xml:space="preserve">log_unsupported_driver_warning</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">driver</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Annoy the log about unsupported drivers.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'make_dev_path()\ (in\ module\ cinder.utils)',\ 'cinder.utils.make_dev_path',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="make_dev_path" ids="cinder.utils.make_dev_path" module="cinder.utils" names="cinder.utils.make_dev_path"><desc_name xml:space="preserve">make_dev_path</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dev</desc_parameter><desc_parameter xml:space="preserve">partition=None</desc_parameter><desc_parameter xml:space="preserve">base='/dev'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a path to a particular device.</paragraph>
                <doctest_block xml:space="preserve">&gt;&gt;&gt; make_dev_path('xvdc')
/dev/xvdc</doctest_block>
                <doctest_block xml:space="preserve">&gt;&gt;&gt; make_dev_path('xvdc', 1)
/dev/xvdc1</doctest_block>
            </desc_content>
        </desc>
        <index entries="['single',\ 'monkey_patch()\ (in\ module\ cinder.utils)',\ 'cinder.utils.monkey_patch',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="monkey_patch" ids="cinder.utils.monkey_patch" module="cinder.utils" names="cinder.utils.monkey_patch"><desc_name xml:space="preserve">monkey_patch</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Patches decorators for all functions in a specified module.</paragraph>
                <paragraph>If the CONF.monkey_patch set as True,
                    this function patches a decorator
                    for all functions in specified modules.</paragraph>
                <paragraph>You can set decorators for each modules
                    using CONF.monkey_patch_modules.
                    The format is “Module path:Decorator function”.
                    Example: ‘cinder.api.ec2.cloud:’      cinder.openstack.common.notifier.api.notify_decorator’</paragraph>
                <paragraph>Parameters of the decorator are as follows.
                    (See cinder.openstack.common.notifier.api.notify_decorator)</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">name</literal_strong> – name of the function</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">function</literal_strong> – object of the function</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'notifications_enabled()\ (in\ module\ cinder.utils)',\ 'cinder.utils.notifications_enabled',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="notifications_enabled" ids="cinder.utils.notifications_enabled" module="cinder.utils" names="cinder.utils.notifications_enabled"><desc_name xml:space="preserve">notifications_enabled</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">conf</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Check if oslo notifications are enabled.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'paths_normcase_equal()\ (in\ module\ cinder.utils)',\ 'cinder.utils.paths_normcase_equal',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="paths_normcase_equal" ids="cinder.utils.paths_normcase_equal" module="cinder.utils" names="cinder.utils.paths_normcase_equal"><desc_name xml:space="preserve">paths_normcase_equal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path_a</desc_parameter><desc_parameter xml:space="preserve">path_b</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'read_file_as_root()\ (in\ module\ cinder.utils)',\ 'cinder.utils.read_file_as_root',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="read_file_as_root" ids="cinder.utils.read_file_as_root" module="cinder.utils" names="cinder.utils.read_file_as_root"><desc_name xml:space="preserve">read_file_as_root</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">file_path</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Secure helper to read file as root.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'remove_invalid_filter_options()\ (in\ module\ cinder.utils)',\ 'cinder.utils.remove_invalid_filter_options',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="remove_invalid_filter_options" ids="cinder.utils.remove_invalid_filter_options" module="cinder.utils" names="cinder.utils.remove_invalid_filter_options"><desc_name xml:space="preserve">remove_invalid_filter_options</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">filters</desc_parameter><desc_parameter xml:space="preserve">allowed_search_options</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Remove search options that are not valid for non-admin API/context.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'require_driver_initialized()\ (in\ module\ cinder.utils)',\ 'cinder.utils.require_driver_initialized',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="require_driver_initialized" ids="cinder.utils.require_driver_initialized" module="cinder.utils" names="cinder.utils.require_driver_initialized"><desc_name xml:space="preserve">require_driver_initialized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">driver</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Verifies if <title_reference>driver</title_reference> is initialized</paragraph>
                <paragraph>If the driver is not initialized, an exception will be raised.</paragraph>
                <field_list>
                    <field>
                        <field_name>Params driver</field_name>
                        <field_body>
                            <paragraph>The driver instance.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Raises</field_name>
                        <field_body>
                            <paragraph><title_reference>exception.DriverNotInitialized</title_reference></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'resolve_hostname()\ (in\ module\ cinder.utils)',\ 'cinder.utils.resolve_hostname',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="resolve_hostname" ids="cinder.utils.resolve_hostname" module="cinder.utils" names="cinder.utils.resolve_hostname"><desc_name xml:space="preserve">resolve_hostname</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">hostname</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Resolves host name to IP address.</paragraph>
                <paragraph>Resolves a host name (my.data.point.com) to an IP address (10.12.143.11).
                    This routine also works if the data passed in hostname is already an IP.
                    In this case, the same IP address will be returned.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">hostname</literal_strong> – Host name to resolve.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>IP Address for Host name.</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'retry()\ (in\ module\ cinder.utils)',\ 'cinder.utils.retry',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="retry" ids="cinder.utils.retry" module="cinder.utils" names="cinder.utils.retry"><desc_name xml:space="preserve">retry</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">exceptions</desc_parameter><desc_parameter xml:space="preserve">interval=1</desc_parameter><desc_parameter xml:space="preserve">retries=3</desc_parameter><desc_parameter xml:space="preserve">backoff_rate=2</desc_parameter><desc_parameter xml:space="preserve">wait_random=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'robust_file_write()\ (in\ module\ cinder.utils)',\ 'cinder.utils.robust_file_write',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="robust_file_write" ids="cinder.utils.robust_file_write" module="cinder.utils" names="cinder.utils.robust_file_write"><desc_name xml:space="preserve">robust_file_write</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">directory</desc_parameter><desc_parameter xml:space="preserve">filename</desc_parameter><desc_parameter xml:space="preserve">data</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Robust file write.</paragraph>
                <paragraph>Use “write to temp file and rename” model for writing the
                    persistence file.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">directory</literal_strong> – Target directory to create a file.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">filename</literal_strong> – File name to store specified data.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">data</literal_strong> – String data.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'sanitize_hostname()\ (in\ module\ cinder.utils)',\ 'cinder.utils.sanitize_hostname',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="sanitize_hostname" ids="cinder.utils.sanitize_hostname" module="cinder.utils" names="cinder.utils.sanitize_hostname"><desc_name xml:space="preserve">sanitize_hostname</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">hostname</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a hostname which conforms to RFC-952 and RFC-1123 specs.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'service_expired_time()\ (in\ module\ cinder.utils)',\ 'cinder.utils.service_expired_time',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="service_expired_time" ids="cinder.utils.service_expired_time" module="cinder.utils" names="cinder.utils.service_expired_time"><desc_name xml:space="preserve">service_expired_time</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">with_timezone=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'set_log_levels()\ (in\ module\ cinder.utils)',\ 'cinder.utils.set_log_levels',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="set_log_levels" ids="cinder.utils.set_log_levels" module="cinder.utils" names="cinder.utils.set_log_levels"><desc_name xml:space="preserve">set_log_levels</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">prefix</desc_parameter><desc_parameter xml:space="preserve">level_string</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'setup_tracing()\ (in\ module\ cinder.utils)',\ 'cinder.utils.setup_tracing',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="setup_tracing" ids="cinder.utils.setup_tracing" module="cinder.utils" names="cinder.utils.setup_tracing"><desc_name xml:space="preserve">setup_tracing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">trace_flags</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Set global variables for each trace flag.</paragraph>
                <paragraph>Sets variables TRACE_METHOD and TRACE_API, which represent
                    whether to log methods or api traces.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">trace_flags</literal_strong> – a list of strings</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'tempdir()\ (in\ module\ cinder.utils)',\ 'cinder.utils.tempdir',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="tempdir" ids="cinder.utils.tempdir" module="cinder.utils" names="cinder.utils.tempdir"><desc_name xml:space="preserve">tempdir</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'temporary_chown()\ (in\ module\ cinder.utils)',\ 'cinder.utils.temporary_chown',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="temporary_chown" ids="cinder.utils.temporary_chown" module="cinder.utils" names="cinder.utils.temporary_chown"><desc_name xml:space="preserve">temporary_chown</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">owner_uid=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Temporarily chown a path.</paragraph>
                <field_list>
                    <field>
                        <field_name>Params owner_uid</field_name>
                        <field_body>
                            <paragraph>UID of temporary owner (defaults to current user)</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'trace()\ (in\ module\ cinder.utils)',\ 'cinder.utils.trace',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="trace" ids="cinder.utils.trace" module="cinder.utils" names="cinder.utils.trace"><desc_name xml:space="preserve">trace</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Trace calls to the decorated function.</paragraph>
                <paragraph>This decorator should always be defined as the outermost decorator so it
                    is defined last. This is important so it does not interfere
                    with other decorators.</paragraph>
                <paragraph>Using this decorator on a function will cause its execution to be logged at
                    <title_reference>DEBUG</title_reference> level with arguments, return values, and exceptions.</paragraph>
                <field_list>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>a function decorator</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'trace_api()\ (in\ module\ cinder.utils)',\ 'cinder.utils.trace_api',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="trace_api" ids="cinder.utils.trace_api" module="cinder.utils" names="cinder.utils.trace_api"><desc_name xml:space="preserve">trace_api</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Decorates a function if TRACE_API is true.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'trace_method()\ (in\ module\ cinder.utils)',\ 'cinder.utils.trace_method',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="trace_method" ids="cinder.utils.trace_method" module="cinder.utils" names="cinder.utils.trace_method"><desc_name xml:space="preserve">trace_method</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Decorates a function if TRACE_METHOD is true.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'validate_dictionary_string_length()\ (in\ module\ cinder.utils)',\ 'cinder.utils.validate_dictionary_string_length',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="validate_dictionary_string_length" ids="cinder.utils.validate_dictionary_string_length" module="cinder.utils" names="cinder.utils.validate_dictionary_string_length"><desc_name xml:space="preserve">validate_dictionary_string_length</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">specs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Check the length of each key and value of dictionary.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'validate_integer()\ (in\ module\ cinder.utils)',\ 'cinder.utils.validate_integer',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="validate_integer" ids="cinder.utils.validate_integer" module="cinder.utils" names="cinder.utils.validate_integer"><desc_name xml:space="preserve">validate_integer</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">value</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">min_value=None</desc_parameter><desc_parameter xml:space="preserve">max_value=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Make sure that value is a valid integer, potentially within range.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">value</literal_strong> – the value of the integer</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">name</literal_strong> – the name of the integer</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">min_length</literal_strong> – the min_length of the integer</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">max_length</literal_strong> – the max_length of the integer</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>integer</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'walk_class_hierarchy()\ (in\ module\ cinder.utils)',\ 'cinder.utils.walk_class_hierarchy',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="walk_class_hierarchy" ids="cinder.utils.walk_class_hierarchy" module="cinder.utils" names="cinder.utils.walk_class_hierarchy"><desc_name xml:space="preserve">walk_class_hierarchy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">clazz</desc_parameter><desc_parameter xml:space="preserve">encountered=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Walk class hierarchy, yielding most derived classes first.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
