<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.brick.local_dev.lvm.rst">
    <section ids="module-cinder.brick.local_dev.lvm the-cinder-brick-local-dev-lvm-module" names="the\ cinder.brick.local_dev.lvm\ module">
        <title>The <reference internal="True" refid="module-cinder.brick.local_dev.lvm" reftitle="cinder.brick.local_dev.lvm"><literal classes="xref py py-mod">cinder.brick.local_dev.lvm</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.brick.local_dev.lvm\ (module)',\ 'module-cinder.brick.local_dev.lvm',\ '',\ None]"></index>
        <paragraph>LVM class for performing LVM operations.</paragraph>
        <index entries="['single',\ 'LVM\ (class\ in\ cinder.brick.local_dev.lvm)',\ 'cinder.brick.local_dev.lvm.LVM',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="LVM" ids="cinder.brick.local_dev.lvm.LVM" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">LVM</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vg_name</desc_parameter><desc_parameter xml:space="preserve">root_helper</desc_parameter><desc_parameter xml:space="preserve">create_vg=False</desc_parameter><desc_parameter xml:space="preserve">physical_volumes=None</desc_parameter><desc_parameter xml:space="preserve">lvm_type='default'</desc_parameter><desc_parameter xml:space="preserve">executor=&lt;function execute&gt;</desc_parameter><desc_parameter xml:space="preserve">lvm_conf=None</desc_parameter><desc_parameter xml:space="preserve">suppress_fd_warn=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">os_brick.executor.Executor</literal></paragraph>
                <paragraph>LVM object to enable various LVM related operations.</paragraph>
                <index entries="['single',\ 'LVM_CMD_PREFIX\ (LVM\ attribute)',\ 'cinder.brick.local_dev.lvm.LVM.LVM_CMD_PREFIX',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="LVM" first="False" fullname="LVM.LVM_CMD_PREFIX" ids="cinder.brick.local_dev.lvm.LVM.LVM_CMD_PREFIX" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.LVM_CMD_PREFIX"><desc_name xml:space="preserve">LVM_CMD_PREFIX</desc_name><desc_annotation xml:space="preserve"> = ['env', 'LC_ALL=C']</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'activate_lv()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.activate_lv',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.activate_lv" ids="cinder.brick.local_dev.lvm.LVM.activate_lv" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.activate_lv"><desc_name xml:space="preserve">activate_lv</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">is_snapshot=False</desc_parameter><desc_parameter xml:space="preserve">permanent=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Ensure that logical volume/snapshot logical volume is activated.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Name of LV to activate</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">is_snapshot</literal_strong> – whether LV is a snapshot</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">permanent</literal_strong> – whether we should drop skipactivation flag</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><literal_strong>putils.ProcessExecutionError</literal_strong> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_lv_snapshot()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.create_lv_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.create_lv_snapshot" ids="cinder.brick.local_dev.lvm.LVM.create_lv_snapshot" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.create_lv_snapshot"><desc_name xml:space="preserve">create_lv_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">source_lv_name</desc_parameter><desc_parameter xml:space="preserve">lv_type='default'</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a snapshot of a logical volume.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Name to assign to new snapshot</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">source_lv_name</literal_strong> – Name of Logical Volume to snapshot</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">lv_type</literal_strong> – Type of LV (default or thin)</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_thin_pool()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.create_thin_pool',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.create_thin_pool" ids="cinder.brick.local_dev.lvm.LVM.create_thin_pool" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.create_thin_pool"><desc_name xml:space="preserve">create_thin_pool</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name=None</desc_parameter><desc_parameter xml:space="preserve">size_str=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a thin provisioning pool for this VG.</paragraph>
                        <paragraph>The syntax here is slightly different than the default
                            lvcreate -T, so we’ll just write a custom cmd here
                            and do it.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Name to use for pool, default is “&lt;vg-name&gt;-pool”</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">size_str</literal_strong> – Size to allocate for pool, default is entire VG</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The size string passed to the lvcreate command</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.create_volume" ids="cinder.brick.local_dev.lvm.LVM.create_volume" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">size_str</desc_parameter><desc_parameter xml:space="preserve">lv_type='default'</desc_parameter><desc_parameter xml:space="preserve">mirror_count=0</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a logical volume on the object’s VG.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Name to use when creating Logical Volume</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">size_str</literal_strong> – Size to use when creating Logical Volume</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">lv_type</literal_strong> – Type of Volume (default or thin)</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">mirror_count</literal_strong> – Use LVM mirroring with specified count</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'deactivate_lv()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.deactivate_lv',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.deactivate_lv" ids="cinder.brick.local_dev.lvm.LVM.deactivate_lv" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.deactivate_lv"><desc_name xml:space="preserve">deactivate_lv</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.delete',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.delete" ids="cinder.brick.local_dev.lvm.LVM.delete" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.delete"><desc_name xml:space="preserve">delete</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete logical volume or snapshot.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">name</literal_strong> – Name of LV to delete</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.extend_volume" ids="cinder.brick.local_dev.lvm.LVM.extend_volume" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">lv_name</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend the size of an existing volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_all_physical_volumes()\ (LVM\ static\ method)',\ 'cinder.brick.local_dev.lvm.LVM.get_all_physical_volumes',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="LVM" first="False" fullname="LVM.get_all_physical_volumes" ids="cinder.brick.local_dev.lvm.LVM.get_all_physical_volumes" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.get_all_physical_volumes"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">get_all_physical_volumes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">root_helper</desc_parameter><desc_parameter xml:space="preserve">vg_name=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Static method to get all PVs on a system.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">root_helper</literal_strong> – root_helper to use for execute</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">vg_name</literal_strong> – optional, gathers info for only the specified VG</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>List of Dictionaries with PV info</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_all_volume_groups()\ (LVM\ static\ method)',\ 'cinder.brick.local_dev.lvm.LVM.get_all_volume_groups',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="LVM" first="False" fullname="LVM.get_all_volume_groups" ids="cinder.brick.local_dev.lvm.LVM.get_all_volume_groups" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.get_all_volume_groups"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">get_all_volume_groups</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">root_helper</desc_parameter><desc_parameter xml:space="preserve">vg_name=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Static method to get all VGs on a system.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">root_helper</literal_strong> – root_helper to use for execute</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">vg_name</literal_strong> – optional, gathers info for only the specified VG</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>List of Dictionaries with VG info</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_lv_info()\ (LVM\ static\ method)',\ 'cinder.brick.local_dev.lvm.LVM.get_lv_info',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="LVM" first="False" fullname="LVM.get_lv_info" ids="cinder.brick.local_dev.lvm.LVM.get_lv_info" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.get_lv_info"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">get_lv_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">root_helper</desc_parameter><desc_parameter xml:space="preserve">vg_name=None</desc_parameter><desc_parameter xml:space="preserve">lv_name=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Retrieve info about LVs (all, in a VG, or a single LV).</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">root_helper</literal_strong> – root_helper to use for execute</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">vg_name</literal_strong> – optional, gathers info for only the specified VG</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">lv_name</literal_strong> – optional, gathers info for only the specified LV</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>List of Dictionaries with LV info</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_lvm_version()\ (LVM\ static\ method)',\ 'cinder.brick.local_dev.lvm.LVM.get_lvm_version',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="LVM" first="False" fullname="LVM.get_lvm_version" ids="cinder.brick.local_dev.lvm.LVM.get_lvm_version" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.get_lvm_version"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">get_lvm_version</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">root_helper</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Static method to get LVM version from system.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">root_helper</literal_strong> – root_helper to use for execute</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>version 3-tuple</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.get_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.get_volume" ids="cinder.brick.local_dev.lvm.LVM.get_volume" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.get_volume"><desc_name xml:space="preserve">get_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get reference object of volume specified by name.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>dict representation of Logical Volume if exists</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volumes()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.get_volumes',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.get_volumes" ids="cinder.brick.local_dev.lvm.LVM.get_volumes" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.get_volumes"><desc_name xml:space="preserve">get_volumes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">lv_name=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get all LV’s associated with this instantiation (VG).</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>List of Dictionaries with LV info</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'lv_get_origin()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.lv_get_origin',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.lv_get_origin" ids="cinder.brick.local_dev.lvm.LVM.lv_get_origin" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.lv_get_origin"><desc_name xml:space="preserve">lv_get_origin</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the origin of an LV that is a snapshot, None otherwise.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'lv_has_snapshot()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.lv_has_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.lv_has_snapshot" ids="cinder.brick.local_dev.lvm.LVM.lv_has_snapshot" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.lv_has_snapshot"><desc_name xml:space="preserve">lv_has_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'lv_is_open()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.lv_is_open',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.lv_is_open" ids="cinder.brick.local_dev.lvm.LVM.lv_is_open" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.lv_is_open"><desc_name xml:space="preserve">lv_is_open</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return True if LV is currently open, False otherwise.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'lv_is_snapshot()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.lv_is_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.lv_is_snapshot" ids="cinder.brick.local_dev.lvm.LVM.lv_is_snapshot" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.lv_is_snapshot"><desc_name xml:space="preserve">lv_is_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return True if LV is a snapshot, False otherwise.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'rename_volume()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.rename_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.rename_volume" ids="cinder.brick.local_dev.lvm.LVM.rename_volume" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.rename_volume"><desc_name xml:space="preserve">rename_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">lv_name</desc_parameter><desc_parameter xml:space="preserve">new_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Change the name of an existing volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.revert" ids="cinder.brick.local_dev.lvm.LVM.revert" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Revert an LV to snapshot.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">snapshot_name</literal_strong> – Name of snapshot to revert</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'supports_lvchange_ignoreskipactivation\ (LVM\ attribute)',\ 'cinder.brick.local_dev.lvm.LVM.supports_lvchange_ignoreskipactivation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="LVM" first="False" fullname="LVM.supports_lvchange_ignoreskipactivation" ids="cinder.brick.local_dev.lvm.LVM.supports_lvchange_ignoreskipactivation" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.supports_lvchange_ignoreskipactivation"><desc_name xml:space="preserve">supports_lvchange_ignoreskipactivation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Property indicating whether lvchange can ignore skip activation.</paragraph>
                        <paragraph>Check for LVM version &gt;= 2.02.99.
                            (LVM2 git: ab789c1bc add –ignoreactivationskip to lvchange)</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'supports_pvs_ignoreskippedcluster()\ (LVM\ static\ method)',\ 'cinder.brick.local_dev.lvm.LVM.supports_pvs_ignoreskippedcluster',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="LVM" first="False" fullname="LVM.supports_pvs_ignoreskippedcluster" ids="cinder.brick.local_dev.lvm.LVM.supports_pvs_ignoreskippedcluster" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.supports_pvs_ignoreskippedcluster"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">supports_pvs_ignoreskippedcluster</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">root_helper</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Property indicating whether pvs supports –ignoreskippedcluster</paragraph>
                        <paragraph>Check for LVM version &gt;= 2.02.103.
                            (LVM2 git: baf95bbff cmdline: Add –ignoreskippedcluster.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'supports_snapshot_lv_activation\ (LVM\ attribute)',\ 'cinder.brick.local_dev.lvm.LVM.supports_snapshot_lv_activation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="LVM" first="False" fullname="LVM.supports_snapshot_lv_activation" ids="cinder.brick.local_dev.lvm.LVM.supports_snapshot_lv_activation" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.supports_snapshot_lv_activation"><desc_name xml:space="preserve">supports_snapshot_lv_activation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Property indicating whether snap activation changes are supported.</paragraph>
                        <paragraph>Check for LVM version &gt;= 2.02.91.
                            (LVM2 git: e8a40f6 Allow to activate snapshot)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True/False indicating support</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'supports_thin_provisioning()\ (LVM\ static\ method)',\ 'cinder.brick.local_dev.lvm.LVM.supports_thin_provisioning',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="LVM" first="False" fullname="LVM.supports_thin_provisioning" ids="cinder.brick.local_dev.lvm.LVM.supports_thin_provisioning" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.supports_thin_provisioning"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">supports_thin_provisioning</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">root_helper</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Static method to check for thin LVM support on a system.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">root_helper</literal_strong> – root_helper to use for execute</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True if supported, False otherwise</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_volume_group_info()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.update_volume_group_info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.update_volume_group_info" ids="cinder.brick.local_dev.lvm.LVM.update_volume_group_info" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.update_volume_group_info"><desc_name xml:space="preserve">update_volume_group_info</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update VG info for this instantiation.</paragraph>
                        <paragraph>Used to update member fields of object and
                            provide a dict of info for caller.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Dictionaries of VG info</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'vg_mirror_free_space()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.vg_mirror_free_space',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.vg_mirror_free_space" ids="cinder.brick.local_dev.lvm.LVM.vg_mirror_free_space" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.vg_mirror_free_space"><desc_name xml:space="preserve">vg_mirror_free_space</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mirror_count</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'vg_mirror_size()\ (LVM\ method)',\ 'cinder.brick.local_dev.lvm.LVM.vg_mirror_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LVM" first="False" fullname="LVM.vg_mirror_size" ids="cinder.brick.local_dev.lvm.LVM.vg_mirror_size" module="cinder.brick.local_dev.lvm" names="cinder.brick.local_dev.lvm.LVM.vg_mirror_size"><desc_name xml:space="preserve">vg_mirror_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mirror_count</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
