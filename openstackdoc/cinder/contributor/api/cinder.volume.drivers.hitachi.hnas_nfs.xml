<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.hitachi.hnas_nfs.rst">
    <section ids="module-cinder.volume.drivers.hitachi.hnas_nfs the-cinder-volume-drivers-hitachi-hnas-nfs-module" names="the\ cinder.volume.drivers.hitachi.hnas_nfs\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.hitachi.hnas_nfs" reftitle="cinder.volume.drivers.hitachi.hnas_nfs"><literal classes="xref py py-mod">cinder.volume.drivers.hitachi.hnas_nfs</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.hitachi.hnas_nfs\ (module)',\ 'module-cinder.volume.drivers.hitachi.hnas_nfs',\ '',\ None]"></index>
        <paragraph>Volume driver for HNAS NFS storage.</paragraph>
        <index entries="['single',\ 'HNASNFSDriver\ (class\ in\ cinder.volume.drivers.hitachi.hnas_nfs)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="HNASNFSDriver" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">HNASNFSDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.drivers.nfs.NfsDriver" refuri="cinder.volume.drivers.nfs#cinder.volume.drivers.nfs.NfsDriver"><literal classes="xref py py-class">cinder.volume.drivers.nfs.NfsDriver</literal></reference></paragraph>
                <paragraph>Base class for Hitachi NFS driver.</paragraph>
                <paragraph>Executes commands relating to Volumes.</paragraph>
                <paragraph>Version history:</paragraph>
                <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">Version 1.0.0: Initial driver version
Version 2.2.0: Added support to SSH authentication
Version 3.0.0: Added pool aware scheduling
Version 4.0.0: Added manage/unmanage features
Version 4.1.0: Fixed XML parser checks on blank options
Version 5.0.0: Remove looping in driver initialization
               Code cleaning up
               New communication interface between the driver and HNAS
               Removed the option to use local SSC (ssh_enabled=False)
               Updated to use versioned objects
               Changed the class name to HNASNFSDriver
               Deprecated XML config file
               Added support to manage/unmanage snapshots features
               Fixed driver stats reporting
Version 6.0.0: Deprecated hnas_svcX_vol_type configuration
               Added list-manageable volumes/snapshots support
               Rename snapshots to link with its original volume</literal_block>
                <index entries="['single',\ 'CI_WIKI_NAME\ (HNASNFSDriver\ attribute)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.CI_WIKI_NAME" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'Hitachi_HNAS_CI'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'SUPPORTED\ (HNASNFSDriver\ attribute)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.SUPPORTED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.SUPPORTED" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.SUPPORTED" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.SUPPORTED"><desc_name xml:space="preserve">SUPPORTED</desc_name><desc_annotation xml:space="preserve"> = False</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (HNASNFSDriver\ attribute)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.VERSION" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.VERSION" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '6.0.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.create_cloned_volume" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.create_cloned_volume" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a clone of the specified volume.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – reference to the volume being created</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">src_vref</literal_strong> – reference to the source volume</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>the provider_location of the cloned volume</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.create_snapshot" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.create_snapshot" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a snapshot.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">snapshot</literal_strong> – dictionary snapshot reference</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>the provider_location of the snapshot created</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.create_volume" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.create_volume" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a volume.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">volume</literal_strong> – volume reference</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>the volume provider_location</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.create_volume_from_snapshot" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.create_volume_from_snapshot" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a volume from a snapshot.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – volume to be created</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">snapshot</literal_strong> – source snapshot</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>the provider_location of the volume created</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.delete_snapshot" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.delete_snapshot" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a snapshot.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">snapshot</literal_strong> – dictionary snapshot reference</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.do_setup" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.do_setup" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Perform internal driver setup.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.extend_volume" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.extend_volume" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend an existing volume.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – dictionary volume reference</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">new_size</literal_strong> – int size in GB to extend</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.InvalidResults" refuri="cinder.exception#cinder.exception.InvalidResults"><literal_strong>InvalidResults</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_manageable_snapshots()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.get_manageable_snapshots',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.get_manageable_snapshots" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.get_manageable_snapshots" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.get_manageable_snapshots"><desc_name xml:space="preserve">get_manageable_snapshots</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cinder_snapshots</desc_parameter><desc_parameter xml:space="preserve">marker</desc_parameter><desc_parameter xml:space="preserve">limit</desc_parameter><desc_parameter xml:space="preserve">offset</desc_parameter><desc_parameter xml:space="preserve">sort_keys</desc_parameter><desc_parameter xml:space="preserve">sort_dirs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>List snapshots on the backend available for management by Cinder.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_manageable_volumes()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.get_manageable_volumes',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.get_manageable_volumes" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.get_manageable_volumes" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.get_manageable_volumes"><desc_name xml:space="preserve">get_manageable_volumes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cinder_volumes</desc_parameter><desc_parameter xml:space="preserve">marker</desc_parameter><desc_parameter xml:space="preserve">limit</desc_parameter><desc_parameter xml:space="preserve">offset</desc_parameter><desc_parameter xml:space="preserve">sort_keys</desc_parameter><desc_parameter xml:space="preserve">sort_dirs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>List volumes on the backend available for management by Cinder.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.get_volume_stats" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.get_volume_stats" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get volume stats.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">refresh</literal_strong> – if it is True, update the stats first.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>dictionary with the stats from HNAS</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                        <literal_block classes="code python" xml:space="preserve"><inline classes="name">_stats</inline><inline classes="punctuation">[</inline><inline classes="literal string single">'pools'</inline><inline classes="punctuation">]</inline> <inline classes="operator">=</inline> <inline classes="punctuation">{</inline>
    <inline classes="literal string single">'total_capacity_gb'</inline><inline classes="punctuation">:</inline> <inline classes="name">total</inline> <inline classes="name">size</inline> <inline classes="name">of</inline> <inline classes="name">the</inline> <inline classes="name">pool</inline><inline classes="punctuation">,</inline>
    <inline classes="literal string single">'free_capacity_gb'</inline><inline classes="punctuation">:</inline> <inline classes="name">the</inline> <inline classes="name">available</inline> <inline classes="name">size</inline><inline classes="punctuation">,</inline>
    <inline classes="literal string single">'QoS_support'</inline><inline classes="punctuation">:</inline> <inline classes="name builtin">bool</inline> <inline classes="name">to</inline> <inline classes="name">indicate</inline> <inline classes="keyword">if</inline> <inline classes="name">QoS</inline> <inline classes="operator word">is</inline> <inline classes="name">supported</inline><inline classes="punctuation">,</inline>
    <inline classes="literal string single">'reserved_percentage'</inline><inline classes="punctuation">:</inline> <inline classes="name">percentage</inline> <inline classes="name">of</inline> <inline classes="name">size</inline> <inline classes="name">reserved</inline><inline classes="punctuation">,</inline>
    <inline classes="literal string single">'max_over_subscription_ratio'</inline><inline classes="punctuation">:</inline> <inline classes="name">oversubscription</inline> <inline classes="name">rate</inline><inline classes="punctuation">,</inline>
    <inline classes="literal string single">'thin_provisioning_support'</inline><inline classes="punctuation">:</inline> <inline classes="name">thin</inline> <inline classes="name">support</inline> <inline classes="punctuation">(</inline><inline classes="name builtin pseudo">True</inline><inline classes="punctuation">),</inline>
    <inline classes="punctuation">}</inline></literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.manage_existing" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.manage_existing" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_vol_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Manages an existing volume.</paragraph>
                        <paragraph>The specified Cinder volume is to be taken into Cinder management.
                            The driver will verify its existence and then rename it to the
                            new Cinder volume name. It is expected that the existing volume
                            reference is an NFS share point and some [/path]/volume;
                            e.g., 10.10.32.1:/openstack/vol_to_manage
                            or 10.10.32.1:/openstack/some_directory/vol_to_manage</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – cinder volume to manage</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">existing_vol_ref</literal_strong> – driver-specific information used to identify a
                                                volume</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>the provider location</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal_strong>VolumeBackendAPIException</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_get_size()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.manage_existing_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.manage_existing_get_size" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.manage_existing_get_size" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.manage_existing_get_size"><desc_name xml:space="preserve">manage_existing_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_vol_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the size of volume to be managed by manage_existing.</paragraph>
                        <paragraph>When calculating the size, round up to the next GB.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – cinder volume to manage</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">existing_vol_ref</literal_strong> – existing volume to take under management</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>the size of the volume or raise error</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal_strong>VolumeBackendAPIException</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_snapshot()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.manage_existing_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.manage_existing_snapshot" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.manage_existing_snapshot" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.manage_existing_snapshot"><desc_name xml:space="preserve">manage_existing_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Brings an existing backend storage object under Cinder management.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">snapshot</literal_strong> – Cinder volume snapshot to manage</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">existing_ref</literal_strong> – Driver-specific information used to identify a
                                                volume snapshot</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_snapshot_get_size()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.manage_existing_snapshot_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.manage_existing_snapshot_get_size" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.manage_existing_snapshot_get_size" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.manage_existing_snapshot_get_size"><desc_name xml:space="preserve">manage_existing_snapshot_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.unmanage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.unmanage" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.unmanage" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.unmanage"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Removes the specified volume from Cinder management.</paragraph>
                        <paragraph>It does not delete the underlying backend storage object. A log entry
                            will be made to notify the Admin that the volume is no longer being
                            managed.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">volume</literal_strong> – cinder volume to unmanage</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage_snapshot()\ (HNASNFSDriver\ method)',\ 'cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.unmanage_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HNASNFSDriver" first="False" fullname="HNASNFSDriver.unmanage_snapshot" ids="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.unmanage_snapshot" module="cinder.volume.drivers.hitachi.hnas_nfs" names="cinder.volume.drivers.hitachi.hnas_nfs.HNASNFSDriver.unmanage_snapshot"><desc_name xml:space="preserve">unmanage_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Removes the specified snapshot from Cinder management.</paragraph>
                        <paragraph>Does not delete the underlying backend storage object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">snapshot</literal_strong> – Cinder volume snapshot to unmanage</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
