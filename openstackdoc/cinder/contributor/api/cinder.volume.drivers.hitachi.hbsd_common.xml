<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.hitachi.hbsd_common.rst">
    <section ids="module-cinder.volume.drivers.hitachi.hbsd_common the-cinder-volume-drivers-hitachi-hbsd-common-module" names="the\ cinder.volume.drivers.hitachi.hbsd_common\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.hitachi.hbsd_common" reftitle="cinder.volume.drivers.hitachi.hbsd_common"><literal classes="xref py py-mod">cinder.volume.drivers.hitachi.hbsd_common</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.hitachi.hbsd_common\ (module)',\ 'module-cinder.volume.drivers.hitachi.hbsd_common',\ '',\ None]"></index>
        <paragraph>Common class for Hitachi storage drivers.</paragraph>
        <index entries="['single',\ 'HBSDCommon\ (class\ in\ cinder.volume.drivers.hitachi.hbsd_common)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="HBSDCommon" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">HBSDCommon</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">conf</desc_parameter><desc_parameter xml:space="preserve">parent</desc_parameter><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">db</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'add_lun()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.add_lun',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.add_lun" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.add_lun" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.add_lun"><desc_name xml:space="preserve">add_lun</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">command</desc_parameter><desc_parameter xml:space="preserve">hostgroups</desc_parameter><desc_parameter xml:space="preserve">ldev</desc_parameter><desc_parameter xml:space="preserve">is_once=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'add_volinfo()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.add_volinfo',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.add_volinfo" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.add_volinfo" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.add_volinfo"><desc_name xml:space="preserve">add_volinfo</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ldev</desc_parameter><desc_parameter xml:space="preserve">id=None</desc_parameter><desc_parameter xml:space="preserve">type='volume'</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_param()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.check_param',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.check_param" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.check_param" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.check_param"><desc_name xml:space="preserve">check_param</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_volume_status()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.check_volume_status',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.check_volume_status" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.check_volume_status" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.check_volume_status"><desc_name xml:space="preserve">check_volume_status</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">is_vvol</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_async_data()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.copy_async_data',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.copy_async_data" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.copy_async_data" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.copy_async_data"><desc_name xml:space="preserve">copy_async_data</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pvol</desc_parameter><desc_parameter xml:space="preserve">svol</desc_parameter><desc_parameter xml:space="preserve">is_vvol</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_data()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.copy_data',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.copy_data" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.copy_data" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.copy_data"><desc_name xml:space="preserve">copy_data</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pvol</desc_parameter><desc_parameter xml:space="preserve">size</desc_parameter><desc_parameter xml:space="preserve">p_is_vvol</desc_parameter><desc_parameter xml:space="preserve">method</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_sync_data()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.copy_sync_data',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.copy_sync_data" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.copy_sync_data" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.copy_sync_data"><desc_name xml:space="preserve">copy_sync_data</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">src_ldev</desc_parameter><desc_parameter xml:space="preserve">dest_ldev</desc_parameter><desc_parameter xml:space="preserve">size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.create_cloned_volume" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_cloned_volume" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_ldev()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_ldev',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.create_ldev" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_ldev" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_ldev"><desc_name xml:space="preserve">create_ldev</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">size</desc_parameter><desc_parameter xml:space="preserve">ldev_range</desc_parameter><desc_parameter xml:space="preserve">pool_id</desc_parameter><desc_parameter xml:space="preserve">is_vvol</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_lock_file()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_lock_file',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.create_lock_file" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_lock_file" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_lock_file"><desc_name xml:space="preserve">create_lock_file</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.create_snapshot" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_snapshot" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.create_volume" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_volume" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.create_volume_from_snapshot" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_volume_from_snapshot" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_ldev()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.delete_ldev',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.delete_ldev" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.delete_ldev" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.delete_ldev"><desc_name xml:space="preserve">delete_ldev</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ldev</desc_parameter><desc_parameter xml:space="preserve">is_vvol</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_pair()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.delete_pair',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.delete_pair" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.delete_pair" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.delete_pair"><desc_name xml:space="preserve">delete_pair</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ldev</desc_parameter><desc_parameter xml:space="preserve">all_split=True</desc_parameter><desc_parameter xml:space="preserve">is_vvol=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.delete_snapshot" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.delete_snapshot" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.delete_volume" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.delete_volume" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.extend_volume" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.extend_volume" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_copy_method()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_copy_method',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.get_copy_method" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_copy_method" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_copy_method"><desc_name xml:space="preserve">get_copy_method</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_is_vvol()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_is_vvol',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.get_is_vvol" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_is_vvol" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_is_vvol"><desc_name xml:space="preserve">get_is_vvol</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">obj</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_ldev()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_ldev',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.get_ldev" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_ldev" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_ldev"><desc_name xml:space="preserve">get_ldev</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">obj</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_snapshot_is_vvol()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_snapshot_is_vvol',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.get_snapshot_is_vvol" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_snapshot_is_vvol" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_snapshot_is_vvol"><desc_name xml:space="preserve">get_snapshot_is_vvol</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_snapshot_metadata()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_snapshot_metadata',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.get_snapshot_metadata" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_snapshot_metadata" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_snapshot_metadata"><desc_name xml:space="preserve">get_snapshot_metadata</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_value()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_value',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.get_value" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_value" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_value"><desc_name xml:space="preserve">get_value</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">obj</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">key</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.get_volume" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_volume" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_volume"><desc_name xml:space="preserve">get_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_is_vvol()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_volume_is_vvol',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.get_volume_is_vvol" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_volume_is_vvol" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_volume_is_vvol"><desc_name xml:space="preserve">get_volume_is_vvol</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_metadata()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_volume_metadata',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.get_volume_metadata" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_volume_metadata" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.get_volume_metadata"><desc_name xml:space="preserve">get_volume_metadata</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'init_volinfo()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.init_volinfo',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.init_volinfo" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.init_volinfo" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.init_volinfo"><desc_name xml:space="preserve">init_volinfo</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vol_info</desc_parameter><desc_parameter xml:space="preserve">ldev</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.manage_existing" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.manage_existing" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Manage an existing Hitachi storage volume.</paragraph>
                        <paragraph>existing_ref is a dictionary of the form:</paragraph>
                        <paragraph>For HUS 100 Family:</paragraph>
                        <literal_block highlight_args="{}" language="default" linenos="False" xml:space="preserve">{
    'ldev': &lt;logical device number on storage&gt;,
    'unit_name': &lt;storage device name&gt;
}</literal_block>
                        <paragraph>For VSP G1000/VSP/HUS VM:</paragraph>
                        <literal_block highlight_args="{}" language="default" linenos="False" xml:space="preserve">{
    'ldev': &lt;logical device number on storage&gt;,
    'serial_number': &lt;product number of storage system&gt;
}</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_get_size()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.manage_existing_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.manage_existing_get_size" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.manage_existing_get_size" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.manage_existing_get_size"><desc_name xml:space="preserve">manage_existing_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'output_backend_available_once()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.output_backend_available_once',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.output_backend_available_once" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.output_backend_available_once" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.output_backend_available_once"><desc_name xml:space="preserve">output_backend_available_once</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'output_param_to_log()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.output_param_to_log',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.output_param_to_log" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.output_param_to_log" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.output_param_to_log"><desc_name xml:space="preserve">output_param_to_log</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">storage_protocol</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.unmanage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.unmanage" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.unmanage" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.unmanage"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Remove the specified volume from Cinder management.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_volume_stats()\ (HBSDCommon\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.update_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HBSDCommon" first="False" fullname="HBSDCommon.update_volume_stats" ids="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.update_volume_stats" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.HBSDCommon.update_volume_stats"><desc_name xml:space="preserve">update_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">storage_protocol</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'TryLock\ (class\ in\ cinder.volume.drivers.hitachi.hbsd_common)',\ 'cinder.volume.drivers.hitachi.hbsd_common.TryLock',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="TryLock" ids="cinder.volume.drivers.hitachi.hbsd_common.TryLock" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.TryLock"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">TryLock</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'set_desc()\ (TryLock\ method)',\ 'cinder.volume.drivers.hitachi.hbsd_common.TryLock.set_desc',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="TryLock" first="False" fullname="TryLock.set_desc" ids="cinder.volume.drivers.hitachi.hbsd_common.TryLock.set_desc" module="cinder.volume.drivers.hitachi.hbsd_common" names="cinder.volume.drivers.hitachi.hbsd_common.TryLock.set_desc"><desc_name xml:space="preserve">set_desc</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">description</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
