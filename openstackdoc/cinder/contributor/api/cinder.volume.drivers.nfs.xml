<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.nfs.rst">
    <section ids="module-cinder.volume.drivers.nfs the-cinder-volume-drivers-nfs-module" names="the\ cinder.volume.drivers.nfs\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.nfs" reftitle="cinder.volume.drivers.nfs"><literal classes="xref py py-mod">cinder.volume.drivers.nfs</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.nfs\ (module)',\ 'module-cinder.volume.drivers.nfs',\ '',\ None]"></index>
        <index entries="['single',\ 'NfsDriver\ (class\ in\ cinder.volume.drivers.nfs)',\ 'cinder.volume.drivers.nfs.NfsDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NfsDriver" ids="cinder.volume.drivers.nfs.NfsDriver" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NfsDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">execute=&lt;function execute&gt;</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.drivers.remotefs.RemoteFSSnapDriverDistributed" refuri="cinder.volume.drivers.remotefs#cinder.volume.drivers.remotefs.RemoteFSSnapDriverDistributed"><literal classes="xref py py-class">cinder.volume.drivers.remotefs.RemoteFSSnapDriverDistributed</literal></reference>, <reference internal="True" reftitle="cinder.volume.driver.ExtendVD" refuri="cinder.volume.driver#cinder.volume.driver.ExtendVD"><literal classes="xref py py-class">cinder.volume.driver.ExtendVD</literal></reference></paragraph>
                <paragraph>NFS based cinder driver.</paragraph>
                <paragraph>Creates file on NFS share for using it as block device on hypervisor.</paragraph>
                <index entries="['single',\ 'CI_WIKI_NAME\ (NfsDriver\ attribute)',\ 'cinder.volume.drivers.nfs.NfsDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.nfs.NfsDriver.CI_WIKI_NAME" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'Cinder_Jenkins'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (NfsDriver\ attribute)',\ 'cinder.volume.drivers.nfs.NfsDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.VERSION" ids="cinder.volume.drivers.nfs.NfsDriver.VERSION" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '1.4.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (NfsDriver\ method)',\ 'cinder.volume.drivers.nfs.NfsDriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.create_snapshot" ids="cinder.volume.drivers.nfs.NfsDriver.create_snapshot" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Apply locking to the create snapshot operation.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (NfsDriver\ method)',\ 'cinder.volume.drivers.nfs.NfsDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.create_volume" ids="cinder.volume.drivers.nfs.NfsDriver.create_volume" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Apply locking to the create volume operation.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (NfsDriver\ method)',\ 'cinder.volume.drivers.nfs.NfsDriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.delete_snapshot" ids="cinder.volume.drivers.nfs.NfsDriver.delete_snapshot" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Apply locking to the delete snapshot operation.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (NfsDriver\ method)',\ 'cinder.volume.drivers.nfs.NfsDriver.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.delete_volume" ids="cinder.volume.drivers.nfs.NfsDriver.delete_volume" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (NfsDriver\ method)',\ 'cinder.volume.drivers.nfs.NfsDriver.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.do_setup" ids="cinder.volume.drivers.nfs.NfsDriver.do_setup" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Any initialization the volume driver does while starting.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'driver_prefix\ (NfsDriver\ attribute)',\ 'cinder.volume.drivers.nfs.NfsDriver.driver_prefix',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.driver_prefix" ids="cinder.volume.drivers.nfs.NfsDriver.driver_prefix" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.driver_prefix"><desc_name xml:space="preserve">driver_prefix</desc_name><desc_annotation xml:space="preserve"> = 'nfs'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'driver_volume_type\ (NfsDriver\ attribute)',\ 'cinder.volume.drivers.nfs.NfsDriver.driver_volume_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.driver_volume_type" ids="cinder.volume.drivers.nfs.NfsDriver.driver_volume_type" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.driver_volume_type"><desc_name xml:space="preserve">driver_volume_type</desc_name><desc_annotation xml:space="preserve"> = 'nfs'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (NfsDriver\ method)',\ 'cinder.volume.drivers.nfs.NfsDriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.extend_volume" ids="cinder.volume.drivers.nfs.NfsDriver.extend_volume" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend an existing volume to the new size.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (NfsDriver\ method)',\ 'cinder.volume.drivers.nfs.NfsDriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.initialize_connection" ids="cinder.volume.drivers.nfs.NfsDriver.initialize_connection" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'set_nas_security_options()\ (NfsDriver\ method)',\ 'cinder.volume.drivers.nfs.NfsDriver.set_nas_security_options',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.set_nas_security_options" ids="cinder.volume.drivers.nfs.NfsDriver.set_nas_security_options" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.set_nas_security_options"><desc_name xml:space="preserve">set_nas_security_options</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">is_new_cinder_install</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Determine the setting to use for Secure NAS options.</paragraph>
                        <paragraph>Value of each NAS Security option is checked and updated. If the
                            option is currently ‘auto’, then it is set to either true or false
                            based upon if this is a new Cinder installation. The RemoteFS variable
                            ‘_execute_as_root’ will be updated for this driver.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">is_new_cinder_install</literal_strong> – bool indication of new Cinder install</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_migrated_volume()\ (NfsDriver\ method)',\ 'cinder.volume.drivers.nfs.NfsDriver.update_migrated_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.update_migrated_volume" ids="cinder.volume.drivers.nfs.NfsDriver.update_migrated_volume" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.update_migrated_volume"><desc_name xml:space="preserve">update_migrated_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_volume</desc_parameter><desc_parameter xml:space="preserve">original_volume_status</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the keys and values updated from NFS for migrated volume.</paragraph>
                        <paragraph>This method should rename the back-end volume name(id) on the
                            destination host back to its original name(id) on the source host.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ctxt</literal_strong> – The context used to run the method update_migrated_volume</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> – The original volume that was migrated to this backend</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">new_volume</literal_strong> – The migration volume object that was created on
                                                this backend as part of the migration process</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">original_volume_status</literal_strong> – The status of the original volume</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>model_update to update DB with any needed changes</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'volume_backend_name\ (NfsDriver\ attribute)',\ 'cinder.volume.drivers.nfs.NfsDriver.volume_backend_name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NfsDriver" first="False" fullname="NfsDriver.volume_backend_name" ids="cinder.volume.drivers.nfs.NfsDriver.volume_backend_name" module="cinder.volume.drivers.nfs" names="cinder.volume.drivers.nfs.NfsDriver.volume_backend_name"><desc_name xml:space="preserve">volume_backend_name</desc_name><desc_annotation xml:space="preserve"> = 'Generic_NFS'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
