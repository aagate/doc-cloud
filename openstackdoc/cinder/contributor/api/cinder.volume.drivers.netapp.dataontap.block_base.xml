<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.netapp.dataontap.block_base.rst">
    <section ids="module-cinder.volume.drivers.netapp.dataontap.block_base the-cinder-volume-drivers-netapp-dataontap-block-base-module" names="the\ cinder.volume.drivers.netapp.dataontap.block_base\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.netapp.dataontap.block_base" reftitle="cinder.volume.drivers.netapp.dataontap.block_base"><literal classes="xref py py-mod">cinder.volume.drivers.netapp.dataontap.block_base</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.netapp.dataontap.block_base\ (module)',\ 'module-cinder.volume.drivers.netapp.dataontap.block_base',\ '',\ None]"></index>
        <paragraph>Volume driver library for NetApp 7/C-mode block storage systems.</paragraph>
        <index entries="['single',\ 'NetAppBlockStorageLibrary\ (class\ in\ cinder.volume.drivers.netapp.dataontap.block_base)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NetAppBlockStorageLibrary" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NetAppBlockStorageLibrary</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">driver_name</desc_parameter><desc_parameter xml:space="preserve">driver_protocol</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>NetApp block storage library for Data ONTAP.</paragraph>
                <index entries="['single',\ 'ALLOWED_IGROUP_HOST_TYPES\ (NetAppBlockStorageLibrary\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.ALLOWED_IGROUP_HOST_TYPES',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.ALLOWED_IGROUP_HOST_TYPES" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.ALLOWED_IGROUP_HOST_TYPES" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.ALLOWED_IGROUP_HOST_TYPES"><desc_name xml:space="preserve">ALLOWED_IGROUP_HOST_TYPES</desc_name><desc_annotation xml:space="preserve"> = ['linux', 'aix', 'hpux', 'windows', 'solaris', 'netware', 'default', 'vmware', 'openvms', 'xen', 'hyper_v']</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ALLOWED_LUN_OS_TYPES\ (NetAppBlockStorageLibrary\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.ALLOWED_LUN_OS_TYPES',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.ALLOWED_LUN_OS_TYPES" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.ALLOWED_LUN_OS_TYPES" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.ALLOWED_LUN_OS_TYPES"><desc_name xml:space="preserve">ALLOWED_LUN_OS_TYPES</desc_name><desc_annotation xml:space="preserve"> = ['linux', 'aix', 'hpux', 'image', 'windows', 'windows_2008', 'windows_gpt', 'solaris', 'solaris_efi', 'netware', 'openvms', 'hyper_v']</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DEFAULT_FILTER_FUNCTION\ (NetAppBlockStorageLibrary\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.DEFAULT_FILTER_FUNCTION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.DEFAULT_FILTER_FUNCTION" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.DEFAULT_FILTER_FUNCTION" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.DEFAULT_FILTER_FUNCTION"><desc_name xml:space="preserve">DEFAULT_FILTER_FUNCTION</desc_name><desc_annotation xml:space="preserve"> = 'capabilities.utilization &lt; 70'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DEFAULT_GOODNESS_FUNCTION\ (NetAppBlockStorageLibrary\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.DEFAULT_GOODNESS_FUNCTION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.DEFAULT_GOODNESS_FUNCTION" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.DEFAULT_GOODNESS_FUNCTION" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.DEFAULT_GOODNESS_FUNCTION"><desc_name xml:space="preserve">DEFAULT_GOODNESS_FUNCTION</desc_name><desc_annotation xml:space="preserve"> = '100 - capabilities.utilization'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DEFAULT_HOST_TYPE\ (NetAppBlockStorageLibrary\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.DEFAULT_HOST_TYPE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.DEFAULT_HOST_TYPE" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.DEFAULT_HOST_TYPE" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.DEFAULT_HOST_TYPE"><desc_name xml:space="preserve">DEFAULT_HOST_TYPE</desc_name><desc_annotation xml:space="preserve"> = 'linux'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DEFAULT_LUN_OS\ (NetAppBlockStorageLibrary\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.DEFAULT_LUN_OS',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.DEFAULT_LUN_OS" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.DEFAULT_LUN_OS" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.DEFAULT_LUN_OS"><desc_name xml:space="preserve">DEFAULT_LUN_OS</desc_name><desc_annotation xml:space="preserve"> = 'linux'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'REQUIRED_FLAGS\ (NetAppBlockStorageLibrary\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.REQUIRED_FLAGS',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.REQUIRED_FLAGS" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.REQUIRED_FLAGS" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.REQUIRED_FLAGS"><desc_name xml:space="preserve">REQUIRED_FLAGS</desc_name><desc_annotation xml:space="preserve"> = ['netapp_login', 'netapp_password', 'netapp_server_hostname']</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (NetAppBlockStorageLibrary\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.VERSION" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.VERSION" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '1.0.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_setup_error()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.check_for_setup_error',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.check_for_setup_error" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.check_for_setup_error" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.check_for_setup_error"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check that the driver is working and can communicate.</paragraph>
                        <paragraph>Discovers the LUNs on the NetApp server.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.create_cloned_volume" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_cloned_volume" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_export()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.create_export" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_export" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_export"><desc_name xml:space="preserve">create_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to get the export info for a new volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.create_snapshot" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_snapshot" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point for creating a snapshot.</paragraph>
                        <paragraph>This driver implements snapshots by using efficient single-file
                            (LUN) cloning.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.create_volume" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_volume" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point for creating a new volume (Data ONTAP LUN).</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.create_volume_from_snapshot" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_volume_from_snapshot" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.delete_snapshot" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.delete_snapshot" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point for deleting a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.delete_volume" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.delete_volume" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point for destroying existing volumes.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.do_setup" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.do_setup" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ensure_export()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.ensure_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.ensure_export" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.ensure_export" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.ensure_export"><desc_name xml:space="preserve">ensure_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to get the export info for an existing volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.extend_volume" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.extend_volume" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to increase the size of a volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_default_filter_function()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.get_default_filter_function',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.get_default_filter_function" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.get_default_filter_function" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.get_default_filter_function"><desc_name xml:space="preserve">get_default_filter_function</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the default filter_function string.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_default_goodness_function()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.get_default_goodness_function',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.get_default_goodness_function" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.get_default_goodness_function" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.get_default_goodness_function"><desc_name xml:space="preserve">get_default_goodness_function</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the default goodness_function string.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_pool()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.get_pool',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.get_pool" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.get_pool" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.get_pool"><desc_name xml:space="preserve">get_pool</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return pool name where volume resides.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">volume</literal_strong> – The volume hosted by the driver.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Name of the pool where given volume is hosted.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.get_volume_stats" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.get_volume_stats" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter><desc_parameter xml:space="preserve">filter_function=None</desc_parameter><desc_parameter xml:space="preserve">goodness_function=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get volume stats.</paragraph>
                        <paragraph>If ‘refresh’ is True, update the stats first.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection_fc()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.initialize_connection_fc',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.initialize_connection_fc" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.initialize_connection_fc" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.initialize_connection_fc"><desc_name xml:space="preserve">initialize_connection_fc</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Initializes the connection and returns connection info.</paragraph>
                        <paragraph>Assign any created volume to a compute node/host so that it can be
                            used from that host.</paragraph>
                        <paragraph>The driver returns a driver_volume_type of ‘fibre_channel’.
                            The target_wwn can be a single entry or a list of wwns that
                            correspond to the list of remote wwn(s) that will export the volume.
                            Example return values:</paragraph>
                        <literal_block highlight_args="{}" language="default" linenos="False" xml:space="preserve">{
    'driver_volume_type': 'fibre_channel',
    'data': {
        'target_discovered': True,
        'target_lun': 1,
        'target_wwn': '500a098280feeba5',
        'initiator_target_map': {
            '21000024ff406cc3': ['500a098280feeba5'],
            '21000024ff406cc2': ['500a098280feeba5']
        }
    }
}</literal_block>
                        <paragraph>Or</paragraph>
                        <literal_block highlight_args="{}" language="default" linenos="False" xml:space="preserve"> {
    'driver_volume_type': 'fibre_channel',
    'data': {
        'target_discovered': True,
        'target_lun': 1,
        'target_wwn': ['500a098280feeba5', '500a098290feeba5',
                       '500a098190feeba5', '500a098180feeba5'],
        'initiator_target_map': {
            '21000024ff406cc3': ['500a098280feeba5',
                                 '500a098290feeba5'],
            '21000024ff406cc2': ['500a098190feeba5',
                                 '500a098180feeba5']
        }
    }
}</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection_iscsi()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.initialize_connection_iscsi',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.initialize_connection_iscsi" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.initialize_connection_iscsi" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.initialize_connection_iscsi"><desc_name xml:space="preserve">initialize_connection_iscsi</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to attach a volume to an instance.</paragraph>
                        <paragraph>Do the LUN masking on the storage system so the initiator can access
                            the LUN on the target. Also return the iSCSI properties so the
                            initiator can find the LUN. This implementation does not call
                            _get_iscsi_properties() to get the properties because cannot store the
                            LUN number in the database. We only find out what the LUN number will
                            be during this method call so we construct the properties dictionary
                            ourselves.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.manage_existing" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.manage_existing" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Brings an existing storage object under Cinder management.</paragraph>
                        <paragraph>existing_ref can contain source-id or source-name or both.
                            source-id: lun uuid.
                            source-name: complete lun path eg. /vol/vol0/lun.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_get_size()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.manage_existing_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.manage_existing_get_size" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.manage_existing_get_size" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.manage_existing_get_size"><desc_name xml:space="preserve">manage_existing_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return size of volume to be managed by manage_existing.</paragraph>
                        <paragraph>When calculating the size, round up to the next GB.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove_export()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.remove_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.remove_export" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.remove_export" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.remove_export"><desc_name xml:space="preserve">remove_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to remove an export for a volume.</paragraph>
                        <paragraph>Since exporting is idempotent in this driver, we have nothing
                            to do for unexporting.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection_fc()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.terminate_connection_fc',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.terminate_connection_fc" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.terminate_connection_fc" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.terminate_connection_fc"><desc_name xml:space="preserve">terminate_connection_fc</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Disallow connection from connector.</paragraph>
                        <paragraph>Return empty data if other volumes are in the same zone.
                            The FibreChannel ZoneManager doesn’t remove zones
                            if there isn’t an initiator_target_map in the
                            return of terminate_connection.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>data - the target_wwns and initiator_target_map if the
                                        zone is to be removed, otherwise the same map with
                                        an empty dict for the ‘data’ key</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection_iscsi()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.terminate_connection_iscsi',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.terminate_connection_iscsi" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.terminate_connection_iscsi" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.terminate_connection_iscsi"><desc_name xml:space="preserve">terminate_connection_iscsi</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to unattach a volume from an instance.</paragraph>
                        <paragraph>Unmask the LUN on the storage system so the given initiator can no
                            longer access it.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage()\ (NetAppBlockStorageLibrary\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.unmanage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppBlockStorageLibrary" first="False" fullname="NetAppBlockStorageLibrary.unmanage" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.unmanage" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppBlockStorageLibrary.unmanage"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Removes the specified volume from Cinder management.</paragraph>
                        <paragraph>Does not delete the underlying backend storage object.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NetAppLun\ (class\ in\ cinder.volume.drivers.netapp.dataontap.block_base)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppLun',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NetAppLun" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppLun" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppLun"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NetAppLun</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">handle</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">size</desc_parameter><desc_parameter xml:space="preserve">metadata_dict</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Represents a LUN on NetApp storage.</paragraph>
                <index entries="['single',\ 'get_metadata_property()\ (NetAppLun\ method)',\ 'cinder.volume.drivers.netapp.dataontap.block_base.NetAppLun.get_metadata_property',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppLun" first="False" fullname="NetAppLun.get_metadata_property" ids="cinder.volume.drivers.netapp.dataontap.block_base.NetAppLun.get_metadata_property" module="cinder.volume.drivers.netapp.dataontap.block_base" names="cinder.volume.drivers.netapp.dataontap.block_base.NetAppLun.get_metadata_property"><desc_name xml:space="preserve">get_metadata_property</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">prop</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the metadata property of a LUN.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
