<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.netapp.dataontap.nfs_base.rst">
    <section ids="module-cinder.volume.drivers.netapp.dataontap.nfs_base the-cinder-volume-drivers-netapp-dataontap-nfs-base-module" names="the\ cinder.volume.drivers.netapp.dataontap.nfs_base\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.netapp.dataontap.nfs_base" reftitle="cinder.volume.drivers.netapp.dataontap.nfs_base"><literal classes="xref py py-mod">cinder.volume.drivers.netapp.dataontap.nfs_base</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base\ (module)',\ 'module-cinder.volume.drivers.netapp.dataontap.nfs_base',\ '',\ None]"></index>
        <paragraph>Volume driver for NetApp NFS storage.</paragraph>
        <index entries="['single',\ 'NetAppNfsDriver\ (class\ in\ cinder.volume.drivers.netapp.dataontap.nfs_base)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NetAppNfsDriver" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NetAppNfsDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.driver.ManageableVD" refuri="cinder.volume.driver#cinder.volume.driver.ManageableVD"><literal classes="xref py py-class">cinder.volume.driver.ManageableVD</literal></reference>, <reference internal="True" reftitle="cinder.volume.driver.CloneableImageVD" refuri="cinder.volume.driver#cinder.volume.driver.CloneableImageVD"><literal classes="xref py py-class">cinder.volume.driver.CloneableImageVD</literal></reference>, <reference internal="True" reftitle="cinder.volume.drivers.nfs.NfsDriver" refuri="cinder.volume.drivers.nfs#cinder.volume.drivers.nfs.NfsDriver"><literal classes="xref py py-class">cinder.volume.drivers.nfs.NfsDriver</literal></reference></paragraph>
                <paragraph>Base class for NetApp NFS driver for Data ONTAP.</paragraph>
                <index entries="['single',\ 'CI_WIKI_NAME\ (NetAppNfsDriver\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.CI_WIKI_NAME" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'NetApp_CI'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DEFAULT_FILTER_FUNCTION\ (NetAppNfsDriver\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.DEFAULT_FILTER_FUNCTION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.DEFAULT_FILTER_FUNCTION" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.DEFAULT_FILTER_FUNCTION" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.DEFAULT_FILTER_FUNCTION"><desc_name xml:space="preserve">DEFAULT_FILTER_FUNCTION</desc_name><desc_annotation xml:space="preserve"> = 'capabilities.utilization &lt; 70'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DEFAULT_GOODNESS_FUNCTION\ (NetAppNfsDriver\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.DEFAULT_GOODNESS_FUNCTION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.DEFAULT_GOODNESS_FUNCTION" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.DEFAULT_GOODNESS_FUNCTION" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.DEFAULT_GOODNESS_FUNCTION"><desc_name xml:space="preserve">DEFAULT_GOODNESS_FUNCTION</desc_name><desc_annotation xml:space="preserve"> = '100 - capabilities.utilization'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'REQUIRED_FLAGS\ (NetAppNfsDriver\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.REQUIRED_FLAGS',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.REQUIRED_FLAGS" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.REQUIRED_FLAGS" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.REQUIRED_FLAGS"><desc_name xml:space="preserve">REQUIRED_FLAGS</desc_name><desc_annotation xml:space="preserve"> = ['netapp_login', 'netapp_password', 'netapp_server_hostname']</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (NetAppNfsDriver\ attribute)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.VERSION" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.VERSION" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '1.0.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_setup_error()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.check_for_setup_error',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.check_for_setup_error" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.check_for_setup_error" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.check_for_setup_error"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns an error if prerequisites arenâ€™t met.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'clone_image()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.clone_image',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.clone_image" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.clone_image" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.clone_image"><desc_name xml:space="preserve">clone_image</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_location</desc_parameter><desc_parameter xml:space="preserve">image_meta</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a volume efficiently from an existing image.</paragraph>
                        <paragraph>image_location is a string whose format depends on the
                            image service backend in use. The driver should use it
                            to determine whether cloning is possible.</paragraph>
                        <paragraph>Returns a dict of volume properties eg. provider_location,
                            boolean indicating whether cloning occurred.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_image_to_volume()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.copy_image_to_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.copy_image_to_volume" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.copy_image_to_volume" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.copy_image_to_volume"><desc_name xml:space="preserve">copy_image_to_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter><desc_parameter xml:space="preserve">image_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Fetch the image from image_service and write it to the volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.create_cloned_volume" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.create_cloned_volume" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a clone of the specified volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.create_snapshot" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.create_snapshot" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.create_volume" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.create_volume" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a volume.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">volume</literal_strong> â€“ volume reference</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.create_volume_from_snapshot" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.create_volume_from_snapshot" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a volume from a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.delete_snapshot" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.delete_snapshot" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.do_setup" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.do_setup" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.extend_volume" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.extend_volume" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend an existing volume to the new size.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_default_filter_function()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.get_default_filter_function',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.get_default_filter_function" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.get_default_filter_function" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.get_default_filter_function"><desc_name xml:space="preserve">get_default_filter_function</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the default filter_function string.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_default_goodness_function()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.get_default_goodness_function',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.get_default_goodness_function" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.get_default_goodness_function" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.get_default_goodness_function"><desc_name xml:space="preserve">get_default_goodness_function</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the default goodness_function string.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_pool()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.get_pool',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.get_pool" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.get_pool" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.get_pool"><desc_name xml:space="preserve">get_pool</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return pool name where volume resides.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">volume</literal_strong> â€“ The volume hosted by the driver.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Name of the pool where given volume is hosted.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.manage_existing" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.manage_existing" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_vol_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Manages an existing volume.</paragraph>
                        <paragraph>The specified Cinder volume is to be taken into Cinder management.
                            The driver will verify its existence and then rename it to the
                            new Cinder volume name. It is expected that the existing volume
                            reference is an NFS share point and some [/path]/volume;
                            e.g., 10.10.32.1:/openstack/vol_to_manage
                            or 10.10.32.1:/openstack/some_directory/vol_to_manage</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> â€“ Cinder volume to manage</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">existing_vol_ref</literal_strong> â€“ Driver-specific information used to identify a
                                                volume</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_get_size()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.manage_existing_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.manage_existing_get_size" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.manage_existing_get_size" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.manage_existing_get_size"><desc_name xml:space="preserve">manage_existing_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_vol_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the size of volume to be managed by manage_existing.</paragraph>
                        <paragraph>When calculating the size, round up to the next GB.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume</literal_strong> â€“ Cinder volume to manage</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">existing_vol_ref</literal_strong> â€“ Existing volume to take under management</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage()\ (NetAppNfsDriver\ method)',\ 'cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.unmanage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NetAppNfsDriver" first="False" fullname="NetAppNfsDriver.unmanage" ids="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.unmanage" module="cinder.volume.drivers.netapp.dataontap.nfs_base" names="cinder.volume.drivers.netapp.dataontap.nfs_base.NetAppNfsDriver.unmanage"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Removes the specified volume from Cinder management.</paragraph>
                        <paragraph>Does not delete the underlying backend storage object. A log entry
                            will be made to notify the Admin that the volume is no longer being
                            managed.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">volume</literal_strong> â€“ Cinder volume to unmanage</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
