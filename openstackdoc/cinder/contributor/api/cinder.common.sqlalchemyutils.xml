<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.common.sqlalchemyutils.rst">
    <section ids="module-cinder.common.sqlalchemyutils the-cinder-common-sqlalchemyutils-module" names="the\ cinder.common.sqlalchemyutils\ module">
        <title>The <reference internal="True" refid="module-cinder.common.sqlalchemyutils" reftitle="cinder.common.sqlalchemyutils"><literal classes="xref py py-mod">cinder.common.sqlalchemyutils</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.common.sqlalchemyutils\ (module)',\ 'module-cinder.common.sqlalchemyutils',\ '',\ None]"></index>
        <paragraph>Implementation of paginate query.</paragraph>
        <index entries="['single',\ 'paginate_query()\ (in\ module\ cinder.common.sqlalchemyutils)',\ 'cinder.common.sqlalchemyutils.paginate_query',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="paginate_query" ids="cinder.common.sqlalchemyutils.paginate_query" module="cinder.common.sqlalchemyutils" names="cinder.common.sqlalchemyutils.paginate_query"><desc_name xml:space="preserve">paginate_query</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">query</desc_parameter><desc_parameter xml:space="preserve">model</desc_parameter><desc_parameter xml:space="preserve">limit</desc_parameter><desc_parameter xml:space="preserve">sort_keys</desc_parameter><desc_parameter xml:space="preserve">marker=None</desc_parameter><desc_parameter xml:space="preserve">sort_dir=None</desc_parameter><desc_parameter xml:space="preserve">sort_dirs=None</desc_parameter><desc_parameter xml:space="preserve">offset=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns a query with sorting / pagination criteria added.</paragraph>
                <paragraph>Pagination works by requiring a unique sort_key, specified by sort_keys.
                    (If sort_keys is not unique, then we risk looping through values.)
                    We use the last row in the previous page as the ‘marker’ for pagination.
                    So we must return values that follow the passed marker in the order.
                    With a single-valued sort_key, this would be easy: sort_key &gt; X.
                    With a compound-values sort_key, (k1, k2, k3) we must do this to repeat
                    the lexicographical ordering:
                    (k1 &gt; X1) or (k1 == X1 &amp;&amp; k2 &gt; X2) or (k1 == X1 &amp;&amp; k2 == X2 &amp;&amp; k3 &gt; X3)</paragraph>
                <paragraph>We also have to cope with different sort_directions.</paragraph>
                <paragraph>Typically, the id of the last row is used as the client-facing pagination
                    marker, then the actual marker object must be fetched from the db and
                    passed in to us as marker.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">query</literal_strong> – the query object to which we should add paging/sorting</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">model</literal_strong> – the ORM model class</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">limit</literal_strong> – maximum number of items to return</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">sort_keys</literal_strong> – array of attributes by which results should be sorted</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">marker</literal_strong> – the last item of the previous page; we returns the next
                                        results after this value.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">sort_dir</literal_strong> – direction in which results should be sorted (asc, desc)</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">sort_dirs</literal_strong> – per-column array of sort_dirs, corresponding to sort_keys</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">offset</literal_strong> – the number of items to skip from the marker or from the
                                        first element.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>sqlalchemy.orm.query.Query</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The query with sorting/pagination added.</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
    </section>
</document>
