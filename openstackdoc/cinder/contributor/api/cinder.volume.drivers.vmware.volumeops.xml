<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.vmware.volumeops.rst">
    <section ids="module-cinder.volume.drivers.vmware.volumeops the-cinder-volume-drivers-vmware-volumeops-module" names="the\ cinder.volume.drivers.vmware.volumeops\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.vmware.volumeops" reftitle="cinder.volume.drivers.vmware.volumeops"><literal classes="xref py py-mod">cinder.volume.drivers.vmware.volumeops</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.vmware.volumeops\ (module)',\ 'module-cinder.volume.drivers.vmware.volumeops',\ '',\ None]"></index>
        <paragraph>Implements operations on volumes residing on VMware datastores.</paragraph>
        <index entries="['single',\ 'ControllerType\ (class\ in\ cinder.volume.drivers.vmware.volumeops)',\ 'cinder.volume.drivers.vmware.volumeops.ControllerType',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ControllerType" ids="cinder.volume.drivers.vmware.volumeops.ControllerType" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.ControllerType"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ControllerType</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Encapsulate various controller types.</paragraph>
                <index entries="['single',\ 'BUS_LOGIC\ (ControllerType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.ControllerType.BUS_LOGIC',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ControllerType" first="False" fullname="ControllerType.BUS_LOGIC" ids="cinder.volume.drivers.vmware.volumeops.ControllerType.BUS_LOGIC" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.ControllerType.BUS_LOGIC"><desc_name xml:space="preserve">BUS_LOGIC</desc_name><desc_annotation xml:space="preserve"> = 'VirtualBusLogicController'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'CONTROLLER_TYPE_DICT\ (ControllerType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.ControllerType.CONTROLLER_TYPE_DICT',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ControllerType" first="False" fullname="ControllerType.CONTROLLER_TYPE_DICT" ids="cinder.volume.drivers.vmware.volumeops.ControllerType.CONTROLLER_TYPE_DICT" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.ControllerType.CONTROLLER_TYPE_DICT"><desc_name xml:space="preserve">CONTROLLER_TYPE_DICT</desc_name><desc_annotation xml:space="preserve"> = {'lsiLogic': 'VirtualLsiLogicController', 'busLogic': 'VirtualBusLogicController', 'lsiLogicsas': 'VirtualLsiLogicSASController', 'paraVirtual': 'ParaVirtualSCSIController', 'ide': 'VirtualIDEController'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'IDE\ (ControllerType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.ControllerType.IDE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ControllerType" first="False" fullname="ControllerType.IDE" ids="cinder.volume.drivers.vmware.volumeops.ControllerType.IDE" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.ControllerType.IDE"><desc_name xml:space="preserve">IDE</desc_name><desc_annotation xml:space="preserve"> = 'VirtualIDEController'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'LSI_LOGIC\ (ControllerType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.ControllerType.LSI_LOGIC',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ControllerType" first="False" fullname="ControllerType.LSI_LOGIC" ids="cinder.volume.drivers.vmware.volumeops.ControllerType.LSI_LOGIC" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.ControllerType.LSI_LOGIC"><desc_name xml:space="preserve">LSI_LOGIC</desc_name><desc_annotation xml:space="preserve"> = 'VirtualLsiLogicController'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'LSI_LOGIC_SAS\ (ControllerType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.ControllerType.LSI_LOGIC_SAS',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ControllerType" first="False" fullname="ControllerType.LSI_LOGIC_SAS" ids="cinder.volume.drivers.vmware.volumeops.ControllerType.LSI_LOGIC_SAS" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.ControllerType.LSI_LOGIC_SAS"><desc_name xml:space="preserve">LSI_LOGIC_SAS</desc_name><desc_annotation xml:space="preserve"> = 'VirtualLsiLogicSASController'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'PARA_VIRTUAL\ (ControllerType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.ControllerType.PARA_VIRTUAL',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ControllerType" first="False" fullname="ControllerType.PARA_VIRTUAL" ids="cinder.volume.drivers.vmware.volumeops.ControllerType.PARA_VIRTUAL" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.ControllerType.PARA_VIRTUAL"><desc_name xml:space="preserve">PARA_VIRTUAL</desc_name><desc_annotation xml:space="preserve"> = 'ParaVirtualSCSIController'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_controller_type()\ (ControllerType\ static\ method)',\ 'cinder.volume.drivers.vmware.volumeops.ControllerType.get_controller_type',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="ControllerType" first="False" fullname="ControllerType.get_controller_type" ids="cinder.volume.drivers.vmware.volumeops.ControllerType.get_controller_type" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.ControllerType.get_controller_type"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">get_controller_type</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">adapter_type</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the disk controller type based on the given adapter type.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">adapter_type</literal_strong> – disk adapter type</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>controller type corresponding to the given adapter type</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph>InvalidAdapterTypeException</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'is_scsi_controller()\ (ControllerType\ static\ method)',\ 'cinder.volume.drivers.vmware.volumeops.ControllerType.is_scsi_controller',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="ControllerType" first="False" fullname="ControllerType.is_scsi_controller" ids="cinder.volume.drivers.vmware.volumeops.ControllerType.is_scsi_controller" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.ControllerType.is_scsi_controller"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">is_scsi_controller</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">controller_type</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check if the given controller is a SCSI controller.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">controller_type</literal_strong> – controller type</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True if the controller is a SCSI controller</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'FlatExtentVirtualDiskPath\ (class\ in\ cinder.volume.drivers.vmware.volumeops)',\ 'cinder.volume.drivers.vmware.volumeops.FlatExtentVirtualDiskPath',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="FlatExtentVirtualDiskPath" ids="cinder.volume.drivers.vmware.volumeops.FlatExtentVirtualDiskPath" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.FlatExtentVirtualDiskPath"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">FlatExtentVirtualDiskPath</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ds_name</desc_parameter><desc_parameter xml:space="preserve">folder_path</desc_parameter><desc_parameter xml:space="preserve">disk_name</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.volume.drivers.vmware.volumeops.VirtualDiskPath" reftitle="cinder.volume.drivers.vmware.volumeops.VirtualDiskPath"><literal classes="xref py py-class">cinder.volume.drivers.vmware.volumeops.VirtualDiskPath</literal></reference></paragraph>
                <paragraph>Paths of files in a non-monolithic disk with a single flat extent.</paragraph>
                <index entries="['single',\ 'get_flat_extent_ds_file_path()\ (FlatExtentVirtualDiskPath\ method)',\ 'cinder.volume.drivers.vmware.volumeops.FlatExtentVirtualDiskPath.get_flat_extent_ds_file_path',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FlatExtentVirtualDiskPath" first="False" fullname="FlatExtentVirtualDiskPath.get_flat_extent_ds_file_path" ids="cinder.volume.drivers.vmware.volumeops.FlatExtentVirtualDiskPath.get_flat_extent_ds_file_path" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.FlatExtentVirtualDiskPath.get_flat_extent_ds_file_path"><desc_name xml:space="preserve">get_flat_extent_ds_file_path</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get datastore file path of the flat extent.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_flat_extent_file_path()\ (FlatExtentVirtualDiskPath\ method)',\ 'cinder.volume.drivers.vmware.volumeops.FlatExtentVirtualDiskPath.get_flat_extent_file_path',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FlatExtentVirtualDiskPath" first="False" fullname="FlatExtentVirtualDiskPath.get_flat_extent_file_path" ids="cinder.volume.drivers.vmware.volumeops.FlatExtentVirtualDiskPath.get_flat_extent_file_path" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.FlatExtentVirtualDiskPath.get_flat_extent_file_path"><desc_name xml:space="preserve">get_flat_extent_file_path</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get absolute file path of the flat extent.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'MonolithicSparseVirtualDiskPath\ (class\ in\ cinder.volume.drivers.vmware.volumeops)',\ 'cinder.volume.drivers.vmware.volumeops.MonolithicSparseVirtualDiskPath',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="MonolithicSparseVirtualDiskPath" ids="cinder.volume.drivers.vmware.volumeops.MonolithicSparseVirtualDiskPath" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.MonolithicSparseVirtualDiskPath"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">MonolithicSparseVirtualDiskPath</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ds_name</desc_parameter><desc_parameter xml:space="preserve">folder_path</desc_parameter><desc_parameter xml:space="preserve">disk_name</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.volume.drivers.vmware.volumeops.VirtualDiskPath" reftitle="cinder.volume.drivers.vmware.volumeops.VirtualDiskPath"><literal classes="xref py py-class">cinder.volume.drivers.vmware.volumeops.VirtualDiskPath</literal></reference></paragraph>
                <paragraph>Paths of file comprising a monolithic sparse disk.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VMwareVolumeOps\ (class\ in\ cinder.volume.drivers.vmware.volumeops)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="VMwareVolumeOps" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">VMwareVolumeOps</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">session</desc_parameter><desc_parameter xml:space="preserve">max_objects</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Manages volume operations.</paragraph>
                <index entries="['single',\ 'attach_disk_to_backing()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.attach_disk_to_backing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.attach_disk_to_backing" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.attach_disk_to_backing" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.attach_disk_to_backing"><desc_name xml:space="preserve">attach_disk_to_backing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">size_in_kb</desc_parameter><desc_parameter xml:space="preserve">disk_type</desc_parameter><desc_parameter xml:space="preserve">adapter_type</desc_parameter><desc_parameter xml:space="preserve">profile_id</desc_parameter><desc_parameter xml:space="preserve">vmdk_ds_file_path</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Attach an existing virtual disk to the backing VM.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backing</literal_strong> – reference to the backing VM</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">size_in_kb</literal_strong> – disk size in KB</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">disk_type</literal_strong> – virtual disk type</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">adapter_type</literal_strong> – disk adapter type</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">profile_id</literal_strong> – storage policy profile identification</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">vmdk_ds_file_path</literal_strong> – datastore file path of the virtual disk to
                                                be attached</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'cancel_retrieval()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.cancel_retrieval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.cancel_retrieval" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.cancel_retrieval" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.cancel_retrieval"><desc_name xml:space="preserve">cancel_retrieval</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">retrieve_result</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Cancel retrieval of results if necessary.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">retrieve_result</literal_strong> – Result from RetrievePropertiesEx</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'change_backing_profile()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.change_backing_profile',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.change_backing_profile" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.change_backing_profile" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.change_backing_profile"><desc_name xml:space="preserve">change_backing_profile</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">profile_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Change storage profile of the backing VM.</paragraph>
                        <paragraph>The current profile is removed if the new profile is None.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'clone_backing()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.clone_backing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.clone_backing" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.clone_backing" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.clone_backing"><desc_name xml:space="preserve">clone_backing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">clone_type</desc_parameter><desc_parameter xml:space="preserve">datastore</desc_parameter><desc_parameter xml:space="preserve">disk_type=None</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter><desc_parameter xml:space="preserve">resource_pool=None</desc_parameter><desc_parameter xml:space="preserve">extra_config=None</desc_parameter><desc_parameter xml:space="preserve">folder=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Clone backing.</paragraph>
                        <paragraph>If the clone_type is ‘full’, then a full clone of the source volume
                            backing will be created. Else, if it is ‘linked’, then a linked clone
                            of the source volume backing will be created.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Name for the clone</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backing</literal_strong> – Reference to the backing entity</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">snapshot</literal_strong> – Snapshot point from which the clone should be done</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">clone_type</literal_strong> – Whether a full clone or linked clone is to be made</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">datastore</literal_strong> – Reference to the datastore entity</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">disk_type</literal_strong> – Disk type of the clone</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">host</literal_strong> – Target host</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">resource_pool</literal_strong> – Target resource pool</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">extra_config</literal_strong> – Key-value pairs to be written to backing’s
                                                extra-config</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">folder</literal_strong> – The location of the clone</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'continue_retrieval()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.continue_retrieval',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.continue_retrieval" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.continue_retrieval" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.continue_retrieval"><desc_name xml:space="preserve">continue_retrieval</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">retrieve_result</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Continue retrieval of results if necessary.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">retrieve_result</literal_strong> – Result from RetrievePropertiesEx</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_vmdk_file()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.copy_vmdk_file',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.copy_vmdk_file" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.copy_vmdk_file" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.copy_vmdk_file"><desc_name xml:space="preserve">copy_vmdk_file</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">src_dc_ref</desc_parameter><desc_parameter xml:space="preserve">src_vmdk_file_path</desc_parameter><desc_parameter xml:space="preserve">dest_vmdk_file_path</desc_parameter><desc_parameter xml:space="preserve">dest_dc_ref=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Copy contents of the src vmdk file to dest vmdk file.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">src_dc_ref</literal_strong> – Reference to datacenter containing src datastore</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">src_vmdk_file_path</literal_strong> – Source vmdk file path</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dest_vmdk_file_path</literal_strong> – Destination vmdk file path</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dest_dc_ref</literal_strong> – Reference to datacenter of dest datastore.
                                                If unspecified, source datacenter is used.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_backing()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_backing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.create_backing" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_backing" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_backing"><desc_name xml:space="preserve">create_backing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">size_kb</desc_parameter><desc_parameter xml:space="preserve">disk_type</desc_parameter><desc_parameter xml:space="preserve">folder</desc_parameter><desc_parameter xml:space="preserve">resource_pool</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">ds_name</desc_parameter><desc_parameter xml:space="preserve">profileId=None</desc_parameter><desc_parameter xml:space="preserve">adapter_type='lsiLogic'</desc_parameter><desc_parameter xml:space="preserve">extra_config=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create backing for the volume.</paragraph>
                        <paragraph>Creates a VM with one VMDK based on the given inputs.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Name of the backing</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">size_kb</literal_strong> – Size in KB of the backing</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">disk_type</literal_strong> – VMDK type for the disk</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">folder</literal_strong> – Folder, where to create the backing under</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">resource_pool</literal_strong> – Resource pool reference</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">host</literal_strong> – Host reference</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ds_name</literal_strong> – Datastore name where the disk is to be provisioned</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">profileId</literal_strong> – Storage profile ID to be associated with backing</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">adapter_type</literal_strong> – Disk adapter type</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">extra_config</literal_strong> – Key-value pairs to be written to backing’s
                                                extra-config</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Reference to the created backing entity</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_backing_disk_less()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_backing_disk_less',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.create_backing_disk_less" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_backing_disk_less" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_backing_disk_less"><desc_name xml:space="preserve">create_backing_disk_less</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">folder</desc_parameter><desc_parameter xml:space="preserve">resource_pool</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">ds_name</desc_parameter><desc_parameter xml:space="preserve">profileId=None</desc_parameter><desc_parameter xml:space="preserve">extra_config=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create disk-less volume backing.</paragraph>
                        <paragraph>This type of backing is useful for creating volume from image. The
                            downloaded image from the image service can be copied to a virtual
                            disk of desired provisioning type and added to the backing VM.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Name of the backing</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">folder</literal_strong> – Folder where the backing is created</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">resource_pool</literal_strong> – Resource pool reference</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">host</literal_strong> – Host reference</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ds_name</literal_strong> – Name of the datastore used for VM storage</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">profileId</literal_strong> – Storage profile ID to be associated with backing</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">extra_config</literal_strong> – Key-value pairs to be written to backing’s
                                                extra-config</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Reference to the created backing entity</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_datastore_folder()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_datastore_folder',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.create_datastore_folder" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_datastore_folder" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_datastore_folder"><desc_name xml:space="preserve">create_datastore_folder</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ds_name</desc_parameter><desc_parameter xml:space="preserve">folder_path</desc_parameter><desc_parameter xml:space="preserve">datacenter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a datastore folder.</paragraph>
                        <paragraph>This method returns silently if the folder already exists.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ds_name</literal_strong> – datastore name</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">folder_path</literal_strong> – path of folder to create</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">datacenter</literal_strong> – datacenter of target datastore</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_flat_extent_virtual_disk_descriptor()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_flat_extent_virtual_disk_descriptor',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.create_flat_extent_virtual_disk_descriptor" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_flat_extent_virtual_disk_descriptor" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_flat_extent_virtual_disk_descriptor"><desc_name xml:space="preserve">create_flat_extent_virtual_disk_descriptor</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dc_ref</desc_parameter><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">size_in_kb</desc_parameter><desc_parameter xml:space="preserve">adapter_type</desc_parameter><desc_parameter xml:space="preserve">disk_type</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create descriptor for a single flat extent virtual disk.</paragraph>
                        <paragraph>To create the descriptor, we create a virtual disk and delete its flat
                            extent.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dc_ref</literal_strong> – reference to the datacenter</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">path</literal_strong> – descriptor datastore file path</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">size_in_kb</literal_strong> – size of the virtual disk in KB</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">adapter_type</literal_strong> – virtual disk adapter type</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">disk_type</literal_strong> – type of the virtual disk</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_folder()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_folder',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.create_folder" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_folder" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_folder"><desc_name xml:space="preserve">create_folder</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">parent_folder</desc_parameter><desc_parameter xml:space="preserve">child_folder_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates child folder under the given parent folder.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">parent_folder</literal_strong> – Reference to the parent folder</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">child_folder_name</literal_strong> – Name of the child folder</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Reference to the child folder</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.create_snapshot" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_snapshot" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">description</desc_parameter><desc_parameter xml:space="preserve">quiesce=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create snapshot of the backing with given name and description.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backing</literal_strong> – Reference to the backing entity</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Snapshot name</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">description</literal_strong> – Snapshot description</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">quiesce</literal_strong> – Whether to quiesce the backing when taking snapshot</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Created snapshot entity reference</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_virtual_disk()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_virtual_disk',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.create_virtual_disk" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_virtual_disk" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_virtual_disk"><desc_name xml:space="preserve">create_virtual_disk</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dc_ref</desc_parameter><desc_parameter xml:space="preserve">vmdk_ds_file_path</desc_parameter><desc_parameter xml:space="preserve">size_in_kb</desc_parameter><desc_parameter xml:space="preserve">adapter_type='busLogic'</desc_parameter><desc_parameter xml:space="preserve">disk_type='preallocated'</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create virtual disk with the given settings.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dc_ref</literal_strong> – datacenter reference</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">vmdk_ds_file_path</literal_strong> – datastore file path of the virtual disk</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">size_in_kb</literal_strong> – disk size in KB</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">adapter_type</literal_strong> – disk adapter type</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">disk_type</literal_strong> – vmdk type</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_vm_inventory_folder()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_vm_inventory_folder',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.create_vm_inventory_folder" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_vm_inventory_folder" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.create_vm_inventory_folder"><desc_name xml:space="preserve">create_vm_inventory_folder</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">datacenter</desc_parameter><desc_parameter xml:space="preserve">path_comp</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create and return a VM inventory folder.</paragraph>
                        <paragraph>This method caches references to inventory folders returned.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">datacenter</literal_strong> – Reference to datacenter</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">path_comp</literal_strong> – Path components as a list</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_backing()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.delete_backing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.delete_backing" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.delete_backing" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.delete_backing"><desc_name xml:space="preserve">delete_backing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete the backing.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">backing</literal_strong> – Managed object reference to the backing</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_file()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.delete_file',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.delete_file" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.delete_file" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.delete_file"><desc_name xml:space="preserve">delete_file</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">file_path</desc_parameter><desc_parameter xml:space="preserve">datacenter=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete file or folder on the datastore.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">file_path</literal_strong> – Datastore path of the file or folder</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.delete_snapshot" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.delete_snapshot" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete a given snapshot from volume backing.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backing</literal_strong> – Reference to the backing entity</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Snapshot name</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_vmdk_file()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.delete_vmdk_file',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.delete_vmdk_file" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.delete_vmdk_file" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.delete_vmdk_file"><desc_name xml:space="preserve">delete_vmdk_file</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vmdk_file_path</desc_parameter><desc_parameter xml:space="preserve">dc_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete given vmdk files.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">vmdk_file_path</literal_strong> – VMDK file path to be deleted</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dc_ref</literal_strong> – Reference to datacenter that contains this VMDK file</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'detach_disk_from_backing()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.detach_disk_from_backing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.detach_disk_from_backing" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.detach_disk_from_backing" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.detach_disk_from_backing"><desc_name xml:space="preserve">detach_disk_from_backing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">disk_device</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Detach the given disk from backing.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_virtual_disk()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.extend_virtual_disk',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.extend_virtual_disk" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.extend_virtual_disk" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.extend_virtual_disk"><desc_name xml:space="preserve">extend_virtual_disk</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">requested_size_in_gb</desc_parameter><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">dc_ref</desc_parameter><desc_parameter xml:space="preserve">eager_zero=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend the virtual disk to the requested size.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">requested_size_in_gb</literal_strong> – Size of the volume in GB</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">path</literal_strong> – Datastore path of the virtual disk to extend</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dc_ref</literal_strong> – Reference to datacenter</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">eager_zero</literal_strong> – Boolean determining if the free space
                                                is zeroed out</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_backing()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_backing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_backing" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_backing" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_backing"><desc_name xml:space="preserve">get_backing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the backing based on name.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">name</literal_strong> – Name of the backing</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Managed object reference to the backing</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_cluster_hosts()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_cluster_hosts',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_cluster_hosts" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_cluster_hosts" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_cluster_hosts"><desc_name xml:space="preserve">get_cluster_hosts</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cluster</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get hosts in the given cluster.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">cluster</literal_strong> – cluster reference</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>references to hosts in the cluster</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_cluster_refs()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_cluster_refs',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_cluster_refs" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_cluster_refs" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_cluster_refs"><desc_name xml:space="preserve">get_cluster_refs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">names</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get references to given clusters.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">names</literal_strong> – list of cluster names</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Dictionary of cluster names to references</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_connected_hosts()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_connected_hosts',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_connected_hosts" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_connected_hosts" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_connected_hosts"><desc_name xml:space="preserve">get_connected_hosts</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">datastore</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get all the hosts to which the datastore is connected and usable.</paragraph>
                        <paragraph>The datastore is considered to be usable for a host only if it is
                            writable, mounted and accessible.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">datastore</literal_strong> – Reference to the datastore entity</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>List of managed object references of all connected
                                        hosts</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_create_spec()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_create_spec',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_create_spec" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_create_spec" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_create_spec"><desc_name xml:space="preserve">get_create_spec</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">size_kb</desc_parameter><desc_parameter xml:space="preserve">disk_type</desc_parameter><desc_parameter xml:space="preserve">ds_name</desc_parameter><desc_parameter xml:space="preserve">profile_id=None</desc_parameter><desc_parameter xml:space="preserve">adapter_type='lsiLogic'</desc_parameter><desc_parameter xml:space="preserve">extra_config=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return spec for creating backing with a single disk.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – name of the backing</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">size_kb</literal_strong> – disk size in KB</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">disk_type</literal_strong> – disk provisioning type</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ds_name</literal_strong> – datastore name where the disk is to be provisioned</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">profile_id</literal_strong> – storage policy profile identification</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">adapter_type</literal_strong> – disk adapter type</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">extra_config</literal_strong> – key-value pairs to be written to backing’s
                                                extra-config</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>spec for creation</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_datastore()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_datastore',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_datastore" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_datastore" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_datastore"><desc_name xml:space="preserve">get_datastore</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get datastore where the backing resides.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">backing</literal_strong> – Reference to the backing</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Datastore reference to which the backing belongs</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_dc()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_dc',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_dc" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_dc" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_dc"><desc_name xml:space="preserve">get_dc</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">child</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get parent datacenter up the hierarchy via ‘parent’ property.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">child</literal_strong> – Reference of the child entity</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Parent Datacenter of the param child entity</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_disk_device()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_disk_device',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_disk_device" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_disk_device" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_disk_device"><desc_name xml:space="preserve">get_disk_device</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vm</desc_parameter><desc_parameter xml:space="preserve">vmdk_path</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the disk device of the VM which corresponds to the given path.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">vm</literal_strong> – VM reference</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">vmdk_path</literal_strong> – Datastore path of virtual disk</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Matching disk device</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_disk_size()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_disk_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_disk_size" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_disk_size" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_disk_size"><desc_name xml:space="preserve">get_disk_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get disk size of the backing.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">backing</literal_strong> – backing VM reference</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>disk size in bytes</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_entity_by_inventory_path()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_entity_by_inventory_path',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_entity_by_inventory_path" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_entity_by_inventory_path" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_entity_by_inventory_path"><desc_name xml:space="preserve">get_entity_by_inventory_path</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the managed object identified by the given inventory path.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">path</literal_strong> – Inventory path</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Reference to the managed object</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_entity_name()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_entity_name',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_entity_name" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_entity_name" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_entity_name"><desc_name xml:space="preserve">get_entity_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">entity</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get name of the managed entity.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">entity</literal_strong> – Reference to the entity</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Name of the managed entity</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_host()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_host',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_host" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_host" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_host"><desc_name xml:space="preserve">get_host</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">instance</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get host under which instance is present.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">instance</literal_strong> – Managed object reference of the instance VM</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Host managing the instance VM</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_hosts()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_hosts',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_hosts" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_hosts" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_hosts"><desc_name xml:space="preserve">get_hosts</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get all host from the inventory.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>All the hosts from the inventory</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_path_name()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_path_name',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_path_name" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_path_name" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_path_name"><desc_name xml:space="preserve">get_path_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get path name of the backing.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">backing</literal_strong> – Reference to the backing entity</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Path name of the backing</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_snapshot()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_snapshot" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_snapshot" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_snapshot"><desc_name xml:space="preserve">get_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get snapshot of the backing with given name.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backing</literal_strong> – Reference to the backing entity</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Snapshot name</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Snapshot entity of the backing with given name</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_summary()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_summary',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_summary" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_summary" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_summary"><desc_name xml:space="preserve">get_summary</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">datastore</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get datastore summary.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">datastore</literal_strong> – Reference to the datastore</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>‘summary’ property of the datastore</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_vmdk_path()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_vmdk_path',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_vmdk_path" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_vmdk_path" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_vmdk_path"><desc_name xml:space="preserve">get_vmdk_path</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the vmdk file name of the backing.</paragraph>
                        <paragraph>The vmdk file path of the backing returned is of the form:
                            “[datastore1] my_folder/my_vm.vmdk”</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">backing</literal_strong> – Reference to the backing</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>VMDK file path of the backing</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_vmfolder()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_vmfolder',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.get_vmfolder" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_vmfolder" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.get_vmfolder"><desc_name xml:space="preserve">get_vmfolder</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">datacenter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the vmFolder.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">datacenter</literal_strong> – Reference to the datacenter entity</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>vmFolder property of the datacenter</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'is_datastore_accessible()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.is_datastore_accessible',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.is_datastore_accessible" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.is_datastore_accessible" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.is_datastore_accessible"><desc_name xml:space="preserve">is_datastore_accessible</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">datastore</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check if the datastore is accessible to the given host.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">datastore</literal_strong> – datastore reference</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True if the datastore is accessible</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'move_backing_to_folder()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.move_backing_to_folder',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.move_backing_to_folder" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.move_backing_to_folder" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.move_backing_to_folder"><desc_name xml:space="preserve">move_backing_to_folder</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">folder</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Move the volume backing to the folder.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backing</literal_strong> – Reference to the backing</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">folder</literal_strong> – Reference to the folder</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'move_vmdk_file()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.move_vmdk_file',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.move_vmdk_file" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.move_vmdk_file" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.move_vmdk_file"><desc_name xml:space="preserve">move_vmdk_file</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">src_dc_ref</desc_parameter><desc_parameter xml:space="preserve">src_vmdk_file_path</desc_parameter><desc_parameter xml:space="preserve">dest_vmdk_file_path</desc_parameter><desc_parameter xml:space="preserve">dest_dc_ref=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Move the given vmdk file to another datastore location.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">src_dc_ref</literal_strong> – Reference to datacenter containing src datastore</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">src_vmdk_file_path</literal_strong> – Source vmdk file path</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dest_vmdk_file_path</literal_strong> – Destination vmdk file path</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dest_dc_ref</literal_strong> – Reference to datacenter of dest datastore.
                                                If unspecified, source datacenter is used.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'relocate_backing()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.relocate_backing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.relocate_backing" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.relocate_backing" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.relocate_backing"><desc_name xml:space="preserve">relocate_backing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">datastore</desc_parameter><desc_parameter xml:space="preserve">resource_pool</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">disk_type=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Relocates backing to the input datastore and resource pool.</paragraph>
                        <paragraph>The implementation uses moveAllDiskBackingsAndAllowSharing disk move
                            type.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backing</literal_strong> – Reference to the backing</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">datastore</literal_strong> – Reference to the datastore</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">resource_pool</literal_strong> – Reference to the resource pool</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">host</literal_strong> – Reference to the host</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">disk_type</literal_strong> – destination disk type</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'rename_backing()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.rename_backing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.rename_backing" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.rename_backing" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.rename_backing"><desc_name xml:space="preserve">rename_backing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">new_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Rename backing VM.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backing</literal_strong> – VM to be renamed</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">new_name</literal_strong> – new VM name</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'snapshot_exists()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.snapshot_exists',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.snapshot_exists" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.snapshot_exists" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.snapshot_exists"><desc_name xml:space="preserve">snapshot_exists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check if the given backing contains snapshots.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_backing_disk_uuid()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.update_backing_disk_uuid',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.update_backing_disk_uuid" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.update_backing_disk_uuid" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.update_backing_disk_uuid"><desc_name xml:space="preserve">update_backing_disk_uuid</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">disk_uuid</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update backing VM’s disk UUID.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">backing</literal_strong> – Reference to backing VM</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">disk_uuid</literal_strong> – New disk UUID</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_backing_extra_config()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.update_backing_extra_config',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.update_backing_extra_config" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.update_backing_extra_config" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.update_backing_extra_config"><desc_name xml:space="preserve">update_backing_extra_config</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">extra_config</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_backing_uuid()\ (VMwareVolumeOps\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.update_backing_uuid',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VMwareVolumeOps" first="False" fullname="VMwareVolumeOps.update_backing_uuid" ids="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.update_backing_uuid" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VMwareVolumeOps.update_backing_uuid"><desc_name xml:space="preserve">update_backing_uuid</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backing</desc_parameter><desc_parameter xml:space="preserve">uuid</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VirtualDiskAdapterType\ (class\ in\ cinder.volume.drivers.vmware.volumeops)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="VirtualDiskAdapterType" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">VirtualDiskAdapterType</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Supported virtual disk adapter types.</paragraph>
                <index entries="['single',\ 'BUS_LOGIC\ (VirtualDiskAdapterType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.BUS_LOGIC',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VirtualDiskAdapterType" first="False" fullname="VirtualDiskAdapterType.BUS_LOGIC" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.BUS_LOGIC" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.BUS_LOGIC"><desc_name xml:space="preserve">BUS_LOGIC</desc_name><desc_annotation xml:space="preserve"> = 'busLogic'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'IDE\ (VirtualDiskAdapterType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.IDE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VirtualDiskAdapterType" first="False" fullname="VirtualDiskAdapterType.IDE" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.IDE" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.IDE"><desc_name xml:space="preserve">IDE</desc_name><desc_annotation xml:space="preserve"> = 'ide'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'LSI_LOGIC\ (VirtualDiskAdapterType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.LSI_LOGIC',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VirtualDiskAdapterType" first="False" fullname="VirtualDiskAdapterType.LSI_LOGIC" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.LSI_LOGIC" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.LSI_LOGIC"><desc_name xml:space="preserve">LSI_LOGIC</desc_name><desc_annotation xml:space="preserve"> = 'lsiLogic'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'LSI_LOGIC_SAS\ (VirtualDiskAdapterType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.LSI_LOGIC_SAS',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VirtualDiskAdapterType" first="False" fullname="VirtualDiskAdapterType.LSI_LOGIC_SAS" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.LSI_LOGIC_SAS" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.LSI_LOGIC_SAS"><desc_name xml:space="preserve">LSI_LOGIC_SAS</desc_name><desc_annotation xml:space="preserve"> = 'lsiLogicsas'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'PARA_VIRTUAL\ (VirtualDiskAdapterType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.PARA_VIRTUAL',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VirtualDiskAdapterType" first="False" fullname="VirtualDiskAdapterType.PARA_VIRTUAL" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.PARA_VIRTUAL" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.PARA_VIRTUAL"><desc_name xml:space="preserve">PARA_VIRTUAL</desc_name><desc_annotation xml:space="preserve"> = 'paraVirtual'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_adapter_type()\ (VirtualDiskAdapterType\ static\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.get_adapter_type',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="VirtualDiskAdapterType" first="False" fullname="VirtualDiskAdapterType.get_adapter_type" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.get_adapter_type" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.get_adapter_type"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">get_adapter_type</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">extra_spec_adapter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the adapter type to be used in VirtualDiskSpec.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">extra_spec_adapter</literal_strong> – adapter type in the extra_spec</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>adapter type to be used in VirtualDiskSpec</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'is_valid()\ (VirtualDiskAdapterType\ static\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.is_valid',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="VirtualDiskAdapterType" first="False" fullname="VirtualDiskAdapterType.is_valid" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.is_valid" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.is_valid"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">is_valid</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">adapter_type</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check if the given adapter type is valid.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">adapter_type</literal_strong> – adapter type to check</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True if valid</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'validate()\ (VirtualDiskAdapterType\ static\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.validate',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="VirtualDiskAdapterType" first="False" fullname="VirtualDiskAdapterType.validate" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.validate" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskAdapterType.validate"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">validate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">extra_spec_adapter_type</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Validate the given adapter type in extra_spec.</paragraph>
                        <paragraph>This method throws an instance of InvalidAdapterTypeException if the
                            given adapter type is invalid.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">extra_spec_adapter_type</literal_strong> – adapter type in extra_spec</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph>InvalidAdapterTypeException</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VirtualDiskPath\ (class\ in\ cinder.volume.drivers.vmware.volumeops)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskPath',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="VirtualDiskPath" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskPath" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskPath"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">VirtualDiskPath</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ds_name</desc_parameter><desc_parameter xml:space="preserve">folder_path</desc_parameter><desc_parameter xml:space="preserve">disk_name</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Class representing paths of files comprising a virtual disk.</paragraph>
                <index entries="['single',\ 'get_datastore_file_path()\ (VirtualDiskPath\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskPath.get_datastore_file_path',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VirtualDiskPath" first="False" fullname="VirtualDiskPath.get_datastore_file_path" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskPath.get_datastore_file_path" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskPath.get_datastore_file_path"><desc_name xml:space="preserve">get_datastore_file_path</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ds_name</desc_parameter><desc_parameter xml:space="preserve">file_path</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get datastore path corresponding to the given file path.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ds_name</literal_strong> – name of the datastore containing the file represented
                                                by the given file path</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">file_path</literal_strong> – absolute path of the file</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>datastore file path</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_descriptor_ds_file_path()\ (VirtualDiskPath\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskPath.get_descriptor_ds_file_path',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VirtualDiskPath" first="False" fullname="VirtualDiskPath.get_descriptor_ds_file_path" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskPath.get_descriptor_ds_file_path" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskPath.get_descriptor_ds_file_path"><desc_name xml:space="preserve">get_descriptor_ds_file_path</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get datastore file path of the virtual disk descriptor.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_descriptor_file_path()\ (VirtualDiskPath\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskPath.get_descriptor_file_path',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VirtualDiskPath" first="False" fullname="VirtualDiskPath.get_descriptor_file_path" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskPath.get_descriptor_file_path" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskPath.get_descriptor_file_path"><desc_name xml:space="preserve">get_descriptor_file_path</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get absolute file path of the virtual disk descriptor.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VirtualDiskType\ (class\ in\ cinder.volume.drivers.vmware.volumeops)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskType',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="VirtualDiskType" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskType" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskType"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">VirtualDiskType</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Supported virtual disk types.</paragraph>
                <index entries="['single',\ 'EAGER_ZEROED_THICK\ (VirtualDiskType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskType.EAGER_ZEROED_THICK',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VirtualDiskType" first="False" fullname="VirtualDiskType.EAGER_ZEROED_THICK" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.EAGER_ZEROED_THICK" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.EAGER_ZEROED_THICK"><desc_name xml:space="preserve">EAGER_ZEROED_THICK</desc_name><desc_annotation xml:space="preserve"> = 'eagerZeroedThick'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'EXTRA_SPEC_DISK_TYPE_DICT\ (VirtualDiskType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskType.EXTRA_SPEC_DISK_TYPE_DICT',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VirtualDiskType" first="False" fullname="VirtualDiskType.EXTRA_SPEC_DISK_TYPE_DICT" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.EXTRA_SPEC_DISK_TYPE_DICT" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.EXTRA_SPEC_DISK_TYPE_DICT"><desc_name xml:space="preserve">EXTRA_SPEC_DISK_TYPE_DICT</desc_name><desc_annotation xml:space="preserve"> = {'eagerZeroedThick': 'eagerZeroedThick', 'thick': 'preallocated', 'thin': 'thin'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'PREALLOCATED\ (VirtualDiskType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskType.PREALLOCATED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VirtualDiskType" first="False" fullname="VirtualDiskType.PREALLOCATED" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.PREALLOCATED" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.PREALLOCATED"><desc_name xml:space="preserve">PREALLOCATED</desc_name><desc_annotation xml:space="preserve"> = 'preallocated'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'THIN\ (VirtualDiskType\ attribute)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskType.THIN',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VirtualDiskType" first="False" fullname="VirtualDiskType.THIN" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.THIN" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.THIN"><desc_name xml:space="preserve">THIN</desc_name><desc_annotation xml:space="preserve"> = 'thin'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_virtual_disk_type()\ (VirtualDiskType\ static\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskType.get_virtual_disk_type',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="VirtualDiskType" first="False" fullname="VirtualDiskType.get_virtual_disk_type" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.get_virtual_disk_type" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.get_virtual_disk_type"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">get_virtual_disk_type</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">extra_spec_disk_type</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return disk type corresponding to the extra_spec disk type.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">extra_spec_disk_type</literal_strong> – disk type in extra_spec</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>virtual disk type</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph>InvalidDiskTypeException</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'is_valid()\ (VirtualDiskType\ static\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskType.is_valid',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="VirtualDiskType" first="False" fullname="VirtualDiskType.is_valid" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.is_valid" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.is_valid"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">is_valid</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">extra_spec_disk_type</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check if the given disk type in extra_spec is valid.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">extra_spec_disk_type</literal_strong> – disk type in extra_spec</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True if valid</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'validate()\ (VirtualDiskType\ static\ method)',\ 'cinder.volume.drivers.vmware.volumeops.VirtualDiskType.validate',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="VirtualDiskType" first="False" fullname="VirtualDiskType.validate" ids="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.validate" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.VirtualDiskType.validate"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">validate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">extra_spec_disk_type</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Validate the given disk type in extra_spec.</paragraph>
                        <paragraph>This method throws an instance of InvalidDiskTypeException if the given
                            disk type is invalid.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">extra_spec_disk_type</literal_strong> – disk type in extra_spec</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph>InvalidDiskTypeException</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'split_datastore_path()\ (in\ module\ cinder.volume.drivers.vmware.volumeops)',\ 'cinder.volume.drivers.vmware.volumeops.split_datastore_path',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="split_datastore_path" ids="cinder.volume.drivers.vmware.volumeops.split_datastore_path" module="cinder.volume.drivers.vmware.volumeops" names="cinder.volume.drivers.vmware.volumeops.split_datastore_path"><desc_name xml:space="preserve">split_datastore_path</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">datastore_path</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Split the datastore path to components.</paragraph>
                <paragraph>return the datastore name, relative folder path and the file name</paragraph>
                <paragraph>E.g. datastore_path = [datastore1] my_volume/my_volume.vmdk, returns
                    (datastore1, my_volume/, my_volume.vmdk)</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">datastore_path</literal_strong> – Datastore path of a file</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>Parsed datastore name, relative folder path and file name</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
    </section>
</document>
