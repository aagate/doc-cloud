<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.zonemanager.fc_san_lookup_service.rst">
    <section ids="module-cinder.zonemanager.fc_san_lookup_service the-cinder-zonemanager-fc-san-lookup-service-module" names="the\ cinder.zonemanager.fc_san_lookup_service\ module">
        <title>The <reference internal="True" refid="module-cinder.zonemanager.fc_san_lookup_service" reftitle="cinder.zonemanager.fc_san_lookup_service"><literal classes="xref py py-mod">cinder.zonemanager.fc_san_lookup_service</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.zonemanager.fc_san_lookup_service\ (module)',\ 'module-cinder.zonemanager.fc_san_lookup_service',\ '',\ None]"></index>
        <paragraph>Base Lookup Service for name server lookup to find the initiator to target port
            mapping for available SAN contexts.
            Vendor specific lookup classes are expected to implement the interfaces
            defined in this class.</paragraph>
        <index entries="['single',\ 'FCSanLookupService\ (class\ in\ cinder.zonemanager.fc_san_lookup_service)',\ 'cinder.zonemanager.fc_san_lookup_service.FCSanLookupService',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="FCSanLookupService" ids="cinder.zonemanager.fc_san_lookup_service.FCSanLookupService" module="cinder.zonemanager.fc_san_lookup_service" names="cinder.zonemanager.fc_san_lookup_service.FCSanLookupService"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">FCSanLookupService</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.zonemanager.fc_common.FCCommon" refuri="cinder.zonemanager.fc_common#cinder.zonemanager.fc_common.FCCommon"><literal classes="xref py py-class">cinder.zonemanager.fc_common.FCCommon</literal></reference></paragraph>
                <paragraph>Base Lookup Service.</paragraph>
                <paragraph>Base Lookup Service for name server lookup to find the initiator to
                    target port mapping for available SAN contexts.</paragraph>
                <index entries="['single',\ 'get_device_mapping_from_network()\ (FCSanLookupService\ method)',\ 'cinder.zonemanager.fc_san_lookup_service.FCSanLookupService.get_device_mapping_from_network',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FCSanLookupService" first="False" fullname="FCSanLookupService.get_device_mapping_from_network" ids="cinder.zonemanager.fc_san_lookup_service.FCSanLookupService.get_device_mapping_from_network" module="cinder.zonemanager.fc_san_lookup_service" names="cinder.zonemanager.fc_san_lookup_service.FCSanLookupService.get_device_mapping_from_network"><desc_name xml:space="preserve">get_device_mapping_from_network</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">initiator_list</desc_parameter><desc_parameter xml:space="preserve">target_list</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get device mapping from FC network.</paragraph>
                        <paragraph>Gets a filtered list of initiator ports and target ports for each SAN
                            available.
                            :param initiator_list: list of initiator port WWN
                            :param target_list: list of target port WWN
                            :returns: device wwn map in following format</paragraph>
                        <literal_block highlight_args="{}" language="python" linenos="False" xml:space="preserve">{
    &lt;San name&gt;: {
        'initiator_port_wwn_list':
        ('200000051E55A100', '200000051E55A121'..)
        'target_port_wwn_list':
        ('100000051E55A100', '100000051E55A121'..)
    }
}</literal_block>
                        <field_list>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><literal_strong>Exception</literal_strong> â€“ when a lookup service implementation is not
                                        specified in cinder.conf:fc_san_lookup_service</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'lookup_service\ (FCSanLookupService\ attribute)',\ 'cinder.zonemanager.fc_san_lookup_service.FCSanLookupService.lookup_service',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCSanLookupService" first="False" fullname="FCSanLookupService.lookup_service" ids="cinder.zonemanager.fc_san_lookup_service.FCSanLookupService.lookup_service" module="cinder.zonemanager.fc_san_lookup_service" names="cinder.zonemanager.fc_san_lookup_service.FCSanLookupService.lookup_service"><desc_name xml:space="preserve">lookup_service</desc_name><desc_annotation xml:space="preserve"> = None</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
