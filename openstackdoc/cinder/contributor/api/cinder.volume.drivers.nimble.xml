<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.nimble.rst">
    <section ids="module-cinder.volume.drivers.nimble the-cinder-volume-drivers-nimble-module" names="the\ cinder.volume.drivers.nimble\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.nimble" reftitle="cinder.volume.drivers.nimble"><literal classes="xref py py-mod">cinder.volume.drivers.nimble</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.nimble\ (module)',\ 'module-cinder.volume.drivers.nimble',\ '',\ None]"></index>
        <paragraph>Volume driver for Nimble Storage.</paragraph>
        <paragraph>This driver supports Nimble Storage controller CS-Series and Nimble AF Arrays.</paragraph>
        <index entries="['single',\ 'NimbleAPIException',\ 'cinder.volume.drivers.nimble.NimbleAPIException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NimbleAPIException" ids="cinder.volume.drivers.nimble.NimbleAPIException" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleAPIException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NimbleAPIException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (NimbleAPIException\ attribute)',\ 'cinder.volume.drivers.nimble.NimbleAPIException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NimbleAPIException" first="False" fullname="NimbleAPIException.message" ids="cinder.volume.drivers.nimble.NimbleAPIException.message" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleAPIException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unexpected response from Nimble API'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NimbleBaseVolumeDriver\ (class\ in\ cinder.volume.drivers.nimble)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NimbleBaseVolumeDriver" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NimbleBaseVolumeDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.drivers.san.san.SanDriver" refuri="cinder.volume.drivers.san.san#cinder.volume.drivers.san.san.SanDriver"><literal classes="xref py py-class">cinder.volume.drivers.san.san.SanDriver</literal></reference></paragraph>
                <paragraph>OpenStack driver to enable Nimble Controller.</paragraph>
                <paragraph>Version history:</paragraph>
                <literal_block highlight_args="{}" language="none" linenos="False" xml:space="preserve">1.0 - Initial driver
1.1.1 - Updated VERSION to Nimble driver version
1.1.2 - Update snap-quota to unlimited
2.0.0 - Added Extra Spec Capability
        Correct capacity reporting
        Added Manage/Unmanage volume support
2.0.1 - Added multi-initiator support through extra-specs
2.0.2 - Fixed supporting extra specs while cloning vols
3.0.0 - Newton Support for Force Backup
3.1.0 - Fibre Channel Support
4.0.0 - Migrate from SOAP to REST API
        Add support for Group Scoped Target
4.0.1 - Add QoS and dedupe support</literal_block>
                <index entries="['single',\ 'CI_WIKI_NAME\ (NimbleBaseVolumeDriver\ attribute)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.CI_WIKI_NAME" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'Nimble_Storage_CI'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (NimbleBaseVolumeDriver\ attribute)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.VERSION" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.VERSION" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '4.0.1'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.create_cloned_volume" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_cloned_volume" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a clone of the specified volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_export()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.create_export" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_export" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_export"><desc_name xml:space="preserve">create_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to get the export info for a new volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.create_snapshot" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_snapshot" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.create_volume" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_volume" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a new volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.create_volume_from_snapshot" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_volume_from_snapshot" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a volume from a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.delete_snapshot" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.delete_snapshot" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.delete_volume" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.delete_volume" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete the specified volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.do_setup" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.do_setup" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Setup the Nimble Cinder volume driver.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ensure_export()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.ensure_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.ensure_export" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.ensure_export" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.ensure_export"><desc_name xml:space="preserve">ensure_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to get the export info for an existing volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.extend_volume" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.extend_volume" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend an existing volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_lun_number()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.get_lun_number',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.get_lun_number" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.get_lun_number" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.get_lun_number"><desc_name xml:space="preserve">get_lun_number</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">initiator_group_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.get_volume_stats" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.get_volume_stats" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get volume stats. This is more of getting group stats.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'is_volume_backup_clone()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.is_volume_backup_clone',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.is_volume_backup_clone" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.is_volume_backup_clone" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.is_volume_backup_clone"><desc_name xml:space="preserve">is_volume_backup_clone</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>check if the volume is created through cinder-backup workflow.</paragraph>
                        <paragraph>:param volume</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.manage_existing" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.manage_existing" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">external_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Manage an existing nimble volume (import to cinder)</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_get_size()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.manage_existing_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.manage_existing_get_size" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.manage_existing_get_size" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.manage_existing_get_size"><desc_name xml:space="preserve">manage_existing_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">external_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return size of an existing volume</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage()\ (NimbleBaseVolumeDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.unmanage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleBaseVolumeDriver" first="False" fullname="NimbleBaseVolumeDriver.unmanage" ids="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.unmanage" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver.unmanage"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Removes the specified volume from Cinder management.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NimbleDriverException',\ 'cinder.volume.drivers.nimble.NimbleDriverException',\ '',\ None]"></index>
        <desc desctype="exception" domain="py" noindex="False" objtype="exception">
            <desc_signature class="" first="False" fullname="NimbleDriverException" ids="cinder.volume.drivers.nimble.NimbleDriverException" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleDriverException"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NimbleDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                <index entries="['single',\ 'message\ (NimbleDriverException\ attribute)',\ 'cinder.volume.drivers.nimble.NimbleDriverException.message',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="NimbleDriverException" first="False" fullname="NimbleDriverException.message" ids="cinder.volume.drivers.nimble.NimbleDriverException.message" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleDriverException.message"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Nimble Cinder Driver exception'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NimbleFCDriver\ (class\ in\ cinder.volume.drivers.nimble)',\ 'cinder.volume.drivers.nimble.NimbleFCDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NimbleFCDriver" ids="cinder.volume.drivers.nimble.NimbleFCDriver" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleFCDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NimbleFCDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver" reftitle="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver"><literal classes="xref py py-class">cinder.volume.drivers.nimble.NimbleBaseVolumeDriver</literal></reference>, <reference internal="True" reftitle="cinder.volume.driver.FibreChannelDriver" refuri="cinder.volume.driver#cinder.volume.driver.FibreChannelDriver"><literal classes="xref py py-class">cinder.volume.driver.FibreChannelDriver</literal></reference></paragraph>
                <paragraph>OpenStack driver to enable Nimble FC Driver Controller.</paragraph>
                <index entries="['single',\ 'get_wwpns_from_array()\ (NimbleFCDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleFCDriver.get_wwpns_from_array',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleFCDriver" first="False" fullname="NimbleFCDriver.get_wwpns_from_array" ids="cinder.volume.drivers.nimble.NimbleFCDriver.get_wwpns_from_array" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleFCDriver.get_wwpns_from_array"><desc_name xml:space="preserve">get_wwpns_from_array</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">array_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Retrieve the wwpns from the array</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (NimbleFCDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleFCDriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleFCDriver" first="False" fullname="NimbleFCDriver.initialize_connection" ids="cinder.volume.drivers.nimble.NimbleFCDriver.initialize_connection" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleFCDriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection()\ (NimbleFCDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleFCDriver.terminate_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleFCDriver" first="False" fullname="NimbleFCDriver.terminate_connection" ids="cinder.volume.drivers.nimble.NimbleFCDriver.terminate_connection" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleFCDriver.terminate_connection"><desc_name xml:space="preserve">terminate_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NimbleISCSIDriver\ (class\ in\ cinder.volume.drivers.nimble)',\ 'cinder.volume.drivers.nimble.NimbleISCSIDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NimbleISCSIDriver" ids="cinder.volume.drivers.nimble.NimbleISCSIDriver" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleISCSIDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NimbleISCSIDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver" reftitle="cinder.volume.drivers.nimble.NimbleBaseVolumeDriver"><literal classes="xref py py-class">cinder.volume.drivers.nimble.NimbleBaseVolumeDriver</literal></reference>, <reference internal="True" reftitle="cinder.volume.drivers.san.san.SanISCSIDriver" refuri="cinder.volume.drivers.san.san#cinder.volume.drivers.san.san.SanISCSIDriver"><literal classes="xref py py-class">cinder.volume.drivers.san.san.SanISCSIDriver</literal></reference></paragraph>
                <paragraph>OpenStack driver to enable Nimble ISCSI Controller.</paragraph>
                <index entries="['single',\ 'initialize_connection()\ (NimbleISCSIDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleISCSIDriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleISCSIDriver" first="False" fullname="NimbleISCSIDriver.initialize_connection" ids="cinder.volume.drivers.nimble.NimbleISCSIDriver.initialize_connection" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleISCSIDriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to attach a volume to an instance.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection()\ (NimbleISCSIDriver\ method)',\ 'cinder.volume.drivers.nimble.NimbleISCSIDriver.terminate_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleISCSIDriver" first="False" fullname="NimbleISCSIDriver.terminate_connection" ids="cinder.volume.drivers.nimble.NimbleISCSIDriver.terminate_connection" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleISCSIDriver.terminate_connection"><desc_name xml:space="preserve">terminate_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Driver entry point to unattach a volume from an instance.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'NimbleRestAPIExecutor\ (class\ in\ cinder.volume.drivers.nimble)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NimbleRestAPIExecutor" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NimbleRestAPIExecutor</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">api_version=1</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Makes Nimble REST API calls.</paragraph>
                <index entries="['single',\ 'add_acl()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.add_acl',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.add_acl" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.add_acl" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.add_acl"><desc_name xml:space="preserve">add_acl</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">initiator_group_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'add_initiator_to_igroup()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.add_initiator_to_igroup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.add_initiator_to_igroup" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.add_initiator_to_igroup" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.add_initiator_to_igroup"><desc_name xml:space="preserve">add_initiator_to_igroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">initiator_grp_name</desc_parameter><desc_parameter xml:space="preserve">initiator_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'add_initiator_to_igroup_fc()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.add_initiator_to_igroup_fc',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.add_initiator_to_igroup_fc" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.add_initiator_to_igroup_fc" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.add_initiator_to_igroup_fc"><desc_name xml:space="preserve">add_initiator_to_igroup_fc</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">initiator_grp_name</desc_parameter><desc_parameter xml:space="preserve">wwpn</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'clone_vol()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.clone_vol',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.clone_vol" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.clone_vol" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.clone_vol"><desc_name xml:space="preserve">clone_vol</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">reserve</desc_parameter><desc_parameter xml:space="preserve">is_gst_enabled</desc_parameter><desc_parameter xml:space="preserve">protocol</desc_parameter><desc_parameter xml:space="preserve">pool_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_initiator_group()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.create_initiator_group',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.create_initiator_group" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.create_initiator_group" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.create_initiator_group"><desc_name xml:space="preserve">create_initiator_group</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">initiator_grp_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_initiator_group_fc()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.create_initiator_group_fc',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.create_initiator_group_fc" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.create_initiator_group_fc" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.create_initiator_group_fc"><desc_name xml:space="preserve">create_initiator_group_fc</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">initiator_grp_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_vol()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.create_vol',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.create_vol" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.create_vol" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.create_vol"><desc_name xml:space="preserve">create_vol</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">pool_name</desc_parameter><desc_parameter xml:space="preserve">reserve</desc_parameter><desc_parameter xml:space="preserve">protocol</desc_parameter><desc_parameter xml:space="preserve">is_gst_enabled</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.delete',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.delete" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.delete" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.delete"><desc_name xml:space="preserve">delete</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">api</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snap()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.delete_snap',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.delete_snap" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.delete_snap" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.delete_snap"><desc_name xml:space="preserve">delete_snap</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_name</desc_parameter><desc_parameter xml:space="preserve">snap_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_vol()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.delete_vol',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.delete_vol" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.delete_vol" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.delete_vol"><desc_name xml:space="preserve">delete_vol</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'edit_vol()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.edit_vol',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.edit_vol" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.edit_vol" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.edit_vol"><desc_name xml:space="preserve">edit_vol</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_name</desc_parameter><desc_parameter xml:space="preserve">data</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'enable_group_scoped_target()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.enable_group_scoped_target',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.enable_group_scoped_target" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.enable_group_scoped_target" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.enable_group_scoped_target"><desc_name xml:space="preserve">enable_group_scoped_target</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get"><desc_name xml:space="preserve">get</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">api</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_acl_record()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_acl_record',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_acl_record" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_acl_record" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_acl_record"><desc_name xml:space="preserve">get_acl_record</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_id</desc_parameter><desc_parameter xml:space="preserve">initiator_group_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_fc_interface_list()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_fc_interface_list',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_fc_interface_list" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_fc_interface_list" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_fc_interface_list"><desc_name xml:space="preserve">get_fc_interface_list</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">array_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>getFibreChannelInterfaceList API to get FC interfaces on array.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_folder_id()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_folder_id',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_folder_id" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_folder_id" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_folder_id"><desc_name xml:space="preserve">get_folder_id</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">folder_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_folder_info()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_folder_info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_folder_info" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_folder_info" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_folder_info"><desc_name xml:space="preserve">get_folder_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">folder_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_group_id()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_group_id',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_group_id" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_group_id" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_group_id"><desc_name xml:space="preserve">get_group_id</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_group_info()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_group_info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_group_info" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_group_info" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_group_info"><desc_name xml:space="preserve">get_group_info</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_initiator_grp_id()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_initiator_grp_id',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_initiator_grp_id" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_initiator_grp_id" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_initiator_grp_id"><desc_name xml:space="preserve">get_initiator_grp_id</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">initiator_grp_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_initiator_grp_id_by_name()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_initiator_grp_id_by_name',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_initiator_grp_id_by_name" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_initiator_grp_id_by_name" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_initiator_grp_id_by_name"><desc_name xml:space="preserve">get_initiator_grp_id_by_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">initiator_group_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_initiator_grp_list()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_initiator_grp_list',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_initiator_grp_list" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_initiator_grp_list" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_initiator_grp_list"><desc_name xml:space="preserve">get_initiator_grp_list</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_netconfig()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_netconfig',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_netconfig" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_netconfig" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_netconfig"><desc_name xml:space="preserve">get_netconfig</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">role</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_performance_policy_id()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_performance_policy_id',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_performance_policy_id" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_performance_policy_id" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_performance_policy_id"><desc_name xml:space="preserve">get_performance_policy_id</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">perf_policy_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_pool_id()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_pool_id',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_pool_id" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_pool_id" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_pool_id"><desc_name xml:space="preserve">get_pool_id</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pool_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_pool_info()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_pool_info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_pool_info" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_pool_info" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_pool_info"><desc_name xml:space="preserve">get_pool_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pool_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_query()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_query',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_query" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_query" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_query"><desc_name xml:space="preserve">get_query</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">api</desc_parameter><desc_parameter xml:space="preserve">query</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_snap_info()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_snap_info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_snap_info" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_snap_info" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_snap_info"><desc_name xml:space="preserve">get_snap_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snap_name</desc_parameter><desc_parameter xml:space="preserve">vol_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_snap_info_by_id()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_snap_info_by_id',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_snap_info_by_id" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_snap_info_by_id" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_snap_info_by_id"><desc_name xml:space="preserve">get_snap_info_by_id</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snap_id</desc_parameter><desc_parameter xml:space="preserve">vol_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_snap_info_detail()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_snap_info_detail',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_snap_info_detail" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_snap_info_detail" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_snap_info_detail"><desc_name xml:space="preserve">get_snap_info_detail</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snap_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_vol_info()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_vol_info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_vol_info" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_vol_info" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_vol_info"><desc_name xml:space="preserve">get_vol_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_id_by_name()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_volume_id_by_name',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_volume_id_by_name" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_volume_id_by_name" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_volume_id_by_name"><desc_name xml:space="preserve">get_volume_id_by_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_name()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_volume_name',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.get_volume_name" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_volume_name" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.get_volume_name"><desc_name xml:space="preserve">get_volume_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'login()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.login',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.login" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.login" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.login"><desc_name xml:space="preserve">login</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'online_snap()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.online_snap',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.online_snap" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.online_snap" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.online_snap"><desc_name xml:space="preserve">online_snap</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_name</desc_parameter><desc_parameter xml:space="preserve">online_flag</desc_parameter><desc_parameter xml:space="preserve">snap_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'online_vol()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.online_vol',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.online_vol" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.online_vol" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.online_vol"><desc_name xml:space="preserve">online_vol</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_name</desc_parameter><desc_parameter xml:space="preserve">online_flag</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'post()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.post',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.post" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.post" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.post"><desc_name xml:space="preserve">post</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">api</desc_parameter><desc_parameter xml:space="preserve">payload</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'put()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.put',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.put" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.put" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.put"><desc_name xml:space="preserve">put</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">api</desc_parameter><desc_parameter xml:space="preserve">payload</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove_acl()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.remove_acl',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.remove_acl" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.remove_acl" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.remove_acl"><desc_name xml:space="preserve">remove_acl</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">initiator_group_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'snap_vol()\ (NimbleRestAPIExecutor\ method)',\ 'cinder.volume.drivers.nimble.NimbleRestAPIExecutor.snap_vol',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NimbleRestAPIExecutor" first="False" fullname="NimbleRestAPIExecutor.snap_vol" ids="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.snap_vol" module="cinder.volume.drivers.nimble" names="cinder.volume.drivers.nimble.NimbleRestAPIExecutor.snap_vol"><desc_name xml:space="preserve">snap_vol</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
