<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.flows.manager.manage_existing.rst">
    <section ids="module-cinder.volume.flows.manager.manage_existing the-cinder-volume-flows-manager-manage-existing-module" names="the\ cinder.volume.flows.manager.manage_existing\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.flows.manager.manage_existing" reftitle="cinder.volume.flows.manager.manage_existing"><literal classes="xref py py-mod">cinder.volume.flows.manager.manage_existing</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.flows.manager.manage_existing\ (module)',\ 'module-cinder.volume.flows.manager.manage_existing',\ '',\ None]"></index>
        <index entries="['single',\ 'ManageExistingTask\ (class\ in\ cinder.volume.flows.manager.manage_existing)',\ 'cinder.volume.flows.manager.manage_existing.ManageExistingTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ManageExistingTask" ids="cinder.volume.flows.manager.manage_existing.ManageExistingTask" module="cinder.volume.flows.manager.manage_existing" names="cinder.volume.flows.manager.manage_existing.ManageExistingTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ManageExistingTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">db</desc_parameter><desc_parameter xml:space="preserve">driver</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Brings an existing volume under Cinder management.</paragraph>
                <index entries="['single',\ 'default_provides\ (ManageExistingTask\ attribute)',\ 'cinder.volume.flows.manager.manage_existing.ManageExistingTask.default_provides',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ManageExistingTask" first="False" fullname="ManageExistingTask.default_provides" ids="cinder.volume.flows.manager.manage_existing.ManageExistingTask.default_provides" module="cinder.volume.flows.manager.manage_existing" names="cinder.volume.flows.manager.manage_existing.ManageExistingTask.default_provides"><desc_name xml:space="preserve">default_provides</desc_name><desc_annotation xml:space="preserve"> = {'volume'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'execute()\ (ManageExistingTask\ method)',\ 'cinder.volume.flows.manager.manage_existing.ManageExistingTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ManageExistingTask" first="False" fullname="ManageExistingTask.execute" ids="cinder.volume.flows.manager.manage_existing.ManageExistingTask.execute" module="cinder.volume.flows.manager.manage_existing" names="cinder.volume.flows.manager.manage_existing.ManageExistingTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">manage_existing_ref</desc_parameter><desc_parameter xml:space="preserve">size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'PrepareForQuotaReservationTask\ (class\ in\ cinder.volume.flows.manager.manage_existing)',\ 'cinder.volume.flows.manager.manage_existing.PrepareForQuotaReservationTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="PrepareForQuotaReservationTask" ids="cinder.volume.flows.manager.manage_existing.PrepareForQuotaReservationTask" module="cinder.volume.flows.manager.manage_existing" names="cinder.volume.flows.manager.manage_existing.PrepareForQuotaReservationTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">PrepareForQuotaReservationTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">db</desc_parameter><desc_parameter xml:space="preserve">driver</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Gets the volume size from the driver.</paragraph>
                <index entries="['single',\ 'default_provides\ (PrepareForQuotaReservationTask\ attribute)',\ 'cinder.volume.flows.manager.manage_existing.PrepareForQuotaReservationTask.default_provides',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="PrepareForQuotaReservationTask" first="False" fullname="PrepareForQuotaReservationTask.default_provides" ids="cinder.volume.flows.manager.manage_existing.PrepareForQuotaReservationTask.default_provides" module="cinder.volume.flows.manager.manage_existing" names="cinder.volume.flows.manager.manage_existing.PrepareForQuotaReservationTask.default_provides"><desc_name xml:space="preserve">default_provides</desc_name><desc_annotation xml:space="preserve"> = {'size', 'volume_properties', 'volume_spec', 'volume_type_id'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'execute()\ (PrepareForQuotaReservationTask\ method)',\ 'cinder.volume.flows.manager.manage_existing.PrepareForQuotaReservationTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PrepareForQuotaReservationTask" first="False" fullname="PrepareForQuotaReservationTask.execute" ids="cinder.volume.flows.manager.manage_existing.PrepareForQuotaReservationTask.execute" module="cinder.volume.flows.manager.manage_existing" names="cinder.volume.flows.manager.manage_existing.PrepareForQuotaReservationTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">manage_existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (PrepareForQuotaReservationTask\ method)',\ 'cinder.volume.flows.manager.manage_existing.PrepareForQuotaReservationTask.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PrepareForQuotaReservationTask" first="False" fullname="PrepareForQuotaReservationTask.revert" ids="cinder.volume.flows.manager.manage_existing.PrepareForQuotaReservationTask.revert" module="cinder.volume.flows.manager.manage_existing" names="cinder.volume.flows.manager.manage_existing.PrepareForQuotaReservationTask.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">result</desc_parameter><desc_parameter xml:space="preserve">flow_failures</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_flow()\ (in\ module\ cinder.volume.flows.manager.manage_existing)',\ 'cinder.volume.flows.manager.manage_existing.get_flow',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_flow" ids="cinder.volume.flows.manager.manage_existing.get_flow" module="cinder.volume.flows.manager.manage_existing" names="cinder.volume.flows.manager.manage_existing.get_flow"><desc_name xml:space="preserve">get_flow</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">db</desc_parameter><desc_parameter xml:space="preserve">driver</desc_parameter><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">ref</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Constructs and returns the manager entrypoint flow.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
