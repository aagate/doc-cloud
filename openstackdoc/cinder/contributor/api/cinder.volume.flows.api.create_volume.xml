<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.flows.api.create_volume.rst">
    <section ids="module-cinder.volume.flows.api.create_volume the-cinder-volume-flows-api-create-volume-module" names="the\ cinder.volume.flows.api.create_volume\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.flows.api.create_volume" reftitle="cinder.volume.flows.api.create_volume"><literal classes="xref py py-mod">cinder.volume.flows.api.create_volume</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.flows.api.create_volume\ (module)',\ 'module-cinder.volume.flows.api.create_volume',\ '',\ None]"></index>
        <index entries="['single',\ 'EntryCreateTask\ (class\ in\ cinder.volume.flows.api.create_volume)',\ 'cinder.volume.flows.api.create_volume.EntryCreateTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EntryCreateTask" ids="cinder.volume.flows.api.create_volume.EntryCreateTask" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.EntryCreateTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EntryCreateTask</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Creates an entry for the given volume creation in the database.</paragraph>
                <paragraph>Reversion strategy: remove the volume_id created from the database.</paragraph>
                <index entries="['single',\ 'default_provides\ (EntryCreateTask\ attribute)',\ 'cinder.volume.flows.api.create_volume.EntryCreateTask.default_provides',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="EntryCreateTask" first="False" fullname="EntryCreateTask.default_provides" ids="cinder.volume.flows.api.create_volume.EntryCreateTask.default_provides" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.EntryCreateTask.default_provides"><desc_name xml:space="preserve">default_provides</desc_name><desc_annotation xml:space="preserve"> = {'volume_properties', 'volume', 'volume_id'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'execute()\ (EntryCreateTask\ method)',\ 'cinder.volume.flows.api.create_volume.EntryCreateTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EntryCreateTask" first="False" fullname="EntryCreateTask.execute" ids="cinder.volume.flows.api.create_volume.EntryCreateTask.execute" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.EntryCreateTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">optional_args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a database entry for the given inputs and returns details.</paragraph>
                        <paragraph>Accesses the database and creates a new entry for the to be created
                            volume using the given volume properties which are extracted from the
                            input kwargs (and associated requirements this task needs). These
                            requirements should be previously satisfied and validated by a
                            pre-cursor task.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (EntryCreateTask\ method)',\ 'cinder.volume.flows.api.create_volume.EntryCreateTask.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EntryCreateTask" first="False" fullname="EntryCreateTask.revert" ids="cinder.volume.flows.api.create_volume.EntryCreateTask.revert" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.EntryCreateTask.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">result</desc_parameter><desc_parameter xml:space="preserve">optional_args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ExtractVolumeRequestTask\ (class\ in\ cinder.volume.flows.api.create_volume)',\ 'cinder.volume.flows.api.create_volume.ExtractVolumeRequestTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ExtractVolumeRequestTask" ids="cinder.volume.flows.api.create_volume.ExtractVolumeRequestTask" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.ExtractVolumeRequestTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ExtractVolumeRequestTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">image_service</desc_parameter><desc_parameter xml:space="preserve">availability_zones</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Processes an api request values into a validated set of values.</paragraph>
                <paragraph>This tasks responsibility is to take in a set of inputs that will form
                    a potential volume request and validates those values against a set of
                    conditions and/or translates those values into a valid set and then returns
                    the validated/translated values for use by other tasks.</paragraph>
                <paragraph>Reversion strategy: N/A</paragraph>
                <index entries="['single',\ 'default_provides\ (ExtractVolumeRequestTask\ attribute)',\ 'cinder.volume.flows.api.create_volume.ExtractVolumeRequestTask.default_provides',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ExtractVolumeRequestTask" first="False" fullname="ExtractVolumeRequestTask.default_provides" ids="cinder.volume.flows.api.create_volume.ExtractVolumeRequestTask.default_provides" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.ExtractVolumeRequestTask.default_provides"><desc_name xml:space="preserve">default_provides</desc_name><desc_annotation xml:space="preserve"> = {'availability_zone', 'volume_type', 'source_replicaid', 'consistencygroup_id', 'cgsnapshot_id', 'refresh_az', 'group_id', 'source_volid', 'qos_specs', 'size', 'volume_type_id', 'encryption_key_id', 'snapshot_id'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'execute()\ (ExtractVolumeRequestTask\ method)',\ 'cinder.volume.flows.api.create_volume.ExtractVolumeRequestTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ExtractVolumeRequestTask" first="False" fullname="ExtractVolumeRequestTask.execute" ids="cinder.volume.flows.api.create_volume.ExtractVolumeRequestTask.execute" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.ExtractVolumeRequestTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">size</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter><desc_parameter xml:space="preserve">image_id</desc_parameter><desc_parameter xml:space="preserve">source_volume</desc_parameter><desc_parameter xml:space="preserve">availability_zone</desc_parameter><desc_parameter xml:space="preserve">volume_type</desc_parameter><desc_parameter xml:space="preserve">metadata</desc_parameter><desc_parameter xml:space="preserve">key_manager</desc_parameter><desc_parameter xml:space="preserve">source_replica</desc_parameter><desc_parameter xml:space="preserve">consistencygroup</desc_parameter><desc_parameter xml:space="preserve">cgsnapshot</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QuotaCommitTask\ (class\ in\ cinder.volume.flows.api.create_volume)',\ 'cinder.volume.flows.api.create_volume.QuotaCommitTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="QuotaCommitTask" ids="cinder.volume.flows.api.create_volume.QuotaCommitTask" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.QuotaCommitTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">QuotaCommitTask</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Commits the reservation.</paragraph>
                <paragraph>Reversion strategy: N/A (the rollback will be handled by the task that did
                    the initial reservation (see: QuotaReserveTask).</paragraph>
                <paragraph>Warning Warning: if the process that is running this reserve and commit
                    process fails (or is killed before the quota is rolled back or committed
                    it does appear like the quota will never be rolled back). This makes
                    software upgrades hard (inflight operations will need to be stopped or
                    allowed to complete before the upgrade can occur). <emphasis>In the future</emphasis> when
                    taskflow has persistence built-in this should be easier to correct via
                    an automated or manual process.</paragraph>
                <index entries="['single',\ 'execute()\ (QuotaCommitTask\ method)',\ 'cinder.volume.flows.api.create_volume.QuotaCommitTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaCommitTask" first="False" fullname="QuotaCommitTask.execute" ids="cinder.volume.flows.api.create_volume.QuotaCommitTask.execute" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.QuotaCommitTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">reservations</desc_parameter><desc_parameter xml:space="preserve">volume_properties</desc_parameter><desc_parameter xml:space="preserve">optional_args</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (QuotaCommitTask\ method)',\ 'cinder.volume.flows.api.create_volume.QuotaCommitTask.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaCommitTask" first="False" fullname="QuotaCommitTask.revert" ids="cinder.volume.flows.api.create_volume.QuotaCommitTask.revert" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.QuotaCommitTask.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">result</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'QuotaReserveTask\ (class\ in\ cinder.volume.flows.api.create_volume)',\ 'cinder.volume.flows.api.create_volume.QuotaReserveTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="QuotaReserveTask" ids="cinder.volume.flows.api.create_volume.QuotaReserveTask" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.QuotaReserveTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">QuotaReserveTask</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Reserves a single volume with the given size &amp; the given volume type.</paragraph>
                <paragraph>Reversion strategy: rollback the quota reservation.</paragraph>
                <paragraph>Warning Warning: if the process that is running this reserve and commit
                    process fails (or is killed before the quota is rolled back or committed
                    it does appear like the quota will never be rolled back). This makes
                    software upgrades hard (inflight operations will need to be stopped or
                    allowed to complete before the upgrade can occur). <emphasis>In the future</emphasis> when
                    taskflow has persistence built-in this should be easier to correct via
                    an automated or manual process.</paragraph>
                <index entries="['single',\ 'default_provides\ (QuotaReserveTask\ attribute)',\ 'cinder.volume.flows.api.create_volume.QuotaReserveTask.default_provides',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="QuotaReserveTask" first="False" fullname="QuotaReserveTask.default_provides" ids="cinder.volume.flows.api.create_volume.QuotaReserveTask.default_provides" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.QuotaReserveTask.default_provides"><desc_name xml:space="preserve">default_provides</desc_name><desc_annotation xml:space="preserve"> = {'reservations'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'execute()\ (QuotaReserveTask\ method)',\ 'cinder.volume.flows.api.create_volume.QuotaReserveTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaReserveTask" first="False" fullname="QuotaReserveTask.execute" ids="cinder.volume.flows.api.create_volume.QuotaReserveTask.execute" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.QuotaReserveTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">size</desc_parameter><desc_parameter xml:space="preserve">volume_type_id</desc_parameter><desc_parameter xml:space="preserve">group_snapshot</desc_parameter><desc_parameter xml:space="preserve">optional_args</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (QuotaReserveTask\ method)',\ 'cinder.volume.flows.api.create_volume.QuotaReserveTask.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="QuotaReserveTask" first="False" fullname="QuotaReserveTask.revert" ids="cinder.volume.flows.api.create_volume.QuotaReserveTask.revert" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.QuotaReserveTask.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">result</desc_parameter><desc_parameter xml:space="preserve">optional_args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeCastTask\ (class\ in\ cinder.volume.flows.api.create_volume)',\ 'cinder.volume.flows.api.create_volume.VolumeCastTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="VolumeCastTask" ids="cinder.volume.flows.api.create_volume.VolumeCastTask" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.VolumeCastTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">VolumeCastTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scheduler_rpcapi</desc_parameter><desc_parameter xml:space="preserve">volume_rpcapi</desc_parameter><desc_parameter xml:space="preserve">db</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Performs a volume create cast to the scheduler or to the volume manager.</paragraph>
                <paragraph>This will signal a transition of the api workflow to another child and/or
                    related workflow on another component.</paragraph>
                <paragraph>Reversion strategy: rollback source volume status and error out newly
                    created volume.</paragraph>
                <index entries="['single',\ 'execute()\ (VolumeCastTask\ method)',\ 'cinder.volume.flows.api.create_volume.VolumeCastTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VolumeCastTask" first="False" fullname="VolumeCastTask.execute" ids="cinder.volume.flows.api.create_volume.VolumeCastTask.execute" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.VolumeCastTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (VolumeCastTask\ method)',\ 'cinder.volume.flows.api.create_volume.VolumeCastTask.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VolumeCastTask" first="False" fullname="VolumeCastTask.revert" ids="cinder.volume.flows.api.create_volume.VolumeCastTask.revert" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.VolumeCastTask.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">result</desc_parameter><desc_parameter xml:space="preserve">flow_failures</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_flow()\ (in\ module\ cinder.volume.flows.api.create_volume)',\ 'cinder.volume.flows.api.create_volume.get_flow',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_flow" ids="cinder.volume.flows.api.create_volume.get_flow" module="cinder.volume.flows.api.create_volume" names="cinder.volume.flows.api.create_volume.get_flow"><desc_name xml:space="preserve">get_flow</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">db_api</desc_parameter><desc_parameter xml:space="preserve">image_service_api</desc_parameter><desc_parameter xml:space="preserve">availability_zones</desc_parameter><desc_parameter xml:space="preserve">create_what</desc_parameter><desc_parameter xml:space="preserve">scheduler_rpcapi=None</desc_parameter><desc_parameter xml:space="preserve">volume_rpcapi=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Constructs and returns the api entrypoint flow.</paragraph>
                <paragraph>This flow will do the following:</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Inject keys &amp; values for dependent tasks.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Extracts and validates the input keys &amp; values.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Reserves the quota (reverts quota on any failures).</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Creates the database entry.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Commits the quota.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Casts to volume manager or scheduler for further processing.</paragraph>
                    </list_item>
                </enumerated_list>
            </desc_content>
        </desc>
    </section>
</document>
