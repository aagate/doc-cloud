<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.flows.api.manage_existing.rst">
    <section ids="module-cinder.volume.flows.api.manage_existing the-cinder-volume-flows-api-manage-existing-module" names="the\ cinder.volume.flows.api.manage_existing\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.flows.api.manage_existing" reftitle="cinder.volume.flows.api.manage_existing"><literal classes="xref py py-mod">cinder.volume.flows.api.manage_existing</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.flows.api.manage_existing\ (module)',\ 'module-cinder.volume.flows.api.manage_existing',\ '',\ None]"></index>
        <index entries="['single',\ 'EntryCreateTask\ (class\ in\ cinder.volume.flows.api.manage_existing)',\ 'cinder.volume.flows.api.manage_existing.EntryCreateTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="EntryCreateTask" ids="cinder.volume.flows.api.manage_existing.EntryCreateTask" module="cinder.volume.flows.api.manage_existing" names="cinder.volume.flows.api.manage_existing.EntryCreateTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">EntryCreateTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">db</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Creates an entry for the given volume creation in the database.</paragraph>
                <paragraph>Reversion strategy: remove the volume_id created from the database.</paragraph>
                <index entries="['single',\ 'default_provides\ (EntryCreateTask\ attribute)',\ 'cinder.volume.flows.api.manage_existing.EntryCreateTask.default_provides',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="EntryCreateTask" first="False" fullname="EntryCreateTask.default_provides" ids="cinder.volume.flows.api.manage_existing.EntryCreateTask.default_provides" module="cinder.volume.flows.api.manage_existing" names="cinder.volume.flows.api.manage_existing.EntryCreateTask.default_provides"><desc_name xml:space="preserve">default_provides</desc_name><desc_annotation xml:space="preserve"> = {'volume_properties', 'volume'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'execute()\ (EntryCreateTask\ method)',\ 'cinder.volume.flows.api.manage_existing.EntryCreateTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EntryCreateTask" first="False" fullname="EntryCreateTask.execute" ids="cinder.volume.flows.api.manage_existing.EntryCreateTask.execute" module="cinder.volume.flows.api.manage_existing" names="cinder.volume.flows.api.manage_existing.EntryCreateTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a database entry for the given inputs and returns details.</paragraph>
                        <paragraph>Accesses the database and creates a new entry for the to be created
                            volume using the given volume properties which are extracted from the
                            input kwargs.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (EntryCreateTask\ method)',\ 'cinder.volume.flows.api.manage_existing.EntryCreateTask.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="EntryCreateTask" first="False" fullname="EntryCreateTask.revert" ids="cinder.volume.flows.api.manage_existing.EntryCreateTask.revert" module="cinder.volume.flows.api.manage_existing" names="cinder.volume.flows.api.manage_existing.EntryCreateTask.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">result</desc_parameter><desc_parameter xml:space="preserve">optional_args=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ManageCastTask\ (class\ in\ cinder.volume.flows.api.manage_existing)',\ 'cinder.volume.flows.api.manage_existing.ManageCastTask',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ManageCastTask" ids="cinder.volume.flows.api.manage_existing.ManageCastTask" module="cinder.volume.flows.api.manage_existing" names="cinder.volume.flows.api.manage_existing.ManageCastTask"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ManageCastTask</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scheduler_rpcapi</desc_parameter><desc_parameter xml:space="preserve">db</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.flow_utils.CinderTask" refuri="cinder.flow_utils#cinder.flow_utils.CinderTask"><literal classes="xref py py-class">cinder.flow_utils.CinderTask</literal></reference></paragraph>
                <paragraph>Performs a volume manage cast to the scheduler and to the volume manager.</paragraph>
                <paragraph>This which will signal a transition of the api workflow to another child
                    and/or related workflow.</paragraph>
                <index entries="['single',\ 'execute()\ (ManageCastTask\ method)',\ 'cinder.volume.flows.api.manage_existing.ManageCastTask.execute',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ManageCastTask" first="False" fullname="ManageCastTask.execute" ids="cinder.volume.flows.api.manage_existing.ManageCastTask.execute" module="cinder.volume.flows.api.manage_existing" names="cinder.volume.flows.api.manage_existing.ManageCastTask.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'revert()\ (ManageCastTask\ method)',\ 'cinder.volume.flows.api.manage_existing.ManageCastTask.revert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ManageCastTask" first="False" fullname="ManageCastTask.revert" ids="cinder.volume.flows.api.manage_existing.ManageCastTask.revert" module="cinder.volume.flows.api.manage_existing" names="cinder.volume.flows.api.manage_existing.ManageCastTask.revert"><desc_name xml:space="preserve">revert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">result</desc_parameter><desc_parameter xml:space="preserve">flow_failures</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_flow()\ (in\ module\ cinder.volume.flows.api.manage_existing)',\ 'cinder.volume.flows.api.manage_existing.get_flow',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_flow" ids="cinder.volume.flows.api.manage_existing.get_flow" module="cinder.volume.flows.api.manage_existing" names="cinder.volume.flows.api.manage_existing.get_flow"><desc_name xml:space="preserve">get_flow</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scheduler_rpcapi</desc_parameter><desc_parameter xml:space="preserve">db_api</desc_parameter><desc_parameter xml:space="preserve">create_what</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Constructs and returns the api entrypoint flow.</paragraph>
                <paragraph>This flow will do the following:</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Inject keys &amp; values for dependent tasks.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Extracts and validates the input keys &amp; values.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Creates the database entry.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Casts to volume manager and scheduler for further processing.</paragraph>
                    </list_item>
                </enumerated_list>
            </desc_content>
        </desc>
    </section>
</document>
