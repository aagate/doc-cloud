<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.synology.synology_common.rst">
    <section ids="module-cinder.volume.drivers.synology.synology_common the-cinder-volume-drivers-synology-synology-common-module" names="the\ cinder.volume.drivers.synology.synology_common\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.synology.synology_common" reftitle="cinder.volume.drivers.synology.synology_common"><literal classes="xref py py-mod">cinder.volume.drivers.synology.synology_common</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.synology.synology_common\ (module)',\ 'module-cinder.volume.drivers.synology.synology_common',\ '',\ None]"></index>
        <index entries="['single',\ 'AESCipher\ (class\ in\ cinder.volume.drivers.synology.synology_common)',\ 'cinder.volume.drivers.synology.synology_common.AESCipher',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="AESCipher" ids="cinder.volume.drivers.synology.synology_common.AESCipher" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.AESCipher"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">AESCipher</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">password</desc_parameter><desc_parameter xml:space="preserve">key_length=32</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Encrypt with OpenSSL-compatible way</paragraph>
                <index entries="['single',\ 'SALT_MAGIC\ (AESCipher\ attribute)',\ 'cinder.volume.drivers.synology.synology_common.AESCipher.SALT_MAGIC',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AESCipher" first="False" fullname="AESCipher.SALT_MAGIC" ids="cinder.volume.drivers.synology.synology_common.AESCipher.SALT_MAGIC" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.AESCipher.SALT_MAGIC"><desc_name xml:space="preserve">SALT_MAGIC</desc_name><desc_annotation xml:space="preserve"> = 'Salted__'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'encrypt()\ (AESCipher\ method)',\ 'cinder.volume.drivers.synology.synology_common.AESCipher.encrypt',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="AESCipher" first="False" fullname="AESCipher.encrypt" ids="cinder.volume.drivers.synology.synology_common.AESCipher.encrypt" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.AESCipher.encrypt"><desc_name xml:space="preserve">encrypt</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">text</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'APIRequest\ (class\ in\ cinder.volume.drivers.synology.synology_common)',\ 'cinder.volume.drivers.synology.synology_common.APIRequest',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="APIRequest" ids="cinder.volume.drivers.synology.synology_common.APIRequest" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.APIRequest"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">APIRequest</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">port</desc_parameter><desc_parameter xml:space="preserve">username</desc_parameter><desc_parameter xml:space="preserve">password</desc_parameter><desc_parameter xml:space="preserve">https=False</desc_parameter><desc_parameter xml:space="preserve">ssl_verify=True</desc_parameter><desc_parameter xml:space="preserve">one_time_pass=None</desc_parameter><desc_parameter xml:space="preserve">device_id=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'new_session()\ (APIRequest\ method)',\ 'cinder.volume.drivers.synology.synology_common.APIRequest.new_session',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="APIRequest" first="False" fullname="APIRequest.new_session" ids="cinder.volume.drivers.synology.synology_common.APIRequest.new_session" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.APIRequest.new_session"><desc_name xml:space="preserve">new_session</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'request()\ (APIRequest\ method)',\ 'cinder.volume.drivers.synology.synology_common.APIRequest.request',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="APIRequest" first="False" fullname="APIRequest.request" ids="cinder.volume.drivers.synology.synology_common.APIRequest.request" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.APIRequest.request"><desc_name xml:space="preserve">request</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">api</desc_parameter><desc_parameter xml:space="preserve">method</desc_parameter><desc_parameter xml:space="preserve">version</desc_parameter><desc_parameter xml:space="preserve">**params</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'Session\ (class\ in\ cinder.volume.drivers.synology.synology_common)',\ 'cinder.volume.drivers.synology.synology_common.Session',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Session" ids="cinder.volume.drivers.synology.synology_common.Session" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.Session"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">Session</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">port</desc_parameter><desc_parameter xml:space="preserve">username</desc_parameter><desc_parameter xml:space="preserve">password</desc_parameter><desc_parameter xml:space="preserve">https=False</desc_parameter><desc_parameter xml:space="preserve">ssl_verify=True</desc_parameter><desc_parameter xml:space="preserve">one_time_pass=None</desc_parameter><desc_parameter xml:space="preserve">device_id=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'did()\ (Session\ method)',\ 'cinder.volume.drivers.synology.synology_common.Session.did',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Session" first="False" fullname="Session.did" ids="cinder.volume.drivers.synology.synology_common.Session.did" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.Session.did"><desc_name xml:space="preserve">did</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'query()\ (Session\ method)',\ 'cinder.volume.drivers.synology.synology_common.Session.query',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Session" first="False" fullname="Session.query" ids="cinder.volume.drivers.synology.synology_common.Session.query" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.Session.query"><desc_name xml:space="preserve">query</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">api</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'sid()\ (Session\ method)',\ 'cinder.volume.drivers.synology.synology_common.Session.sid',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Session" first="False" fullname="Session.sid" ids="cinder.volume.drivers.synology.synology_common.Session.sid" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.Session.sid"><desc_name xml:space="preserve">sid</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'url_prefix()\ (Session\ method)',\ 'cinder.volume.drivers.synology.synology_common.Session.url_prefix',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Session" first="False" fullname="Session.url_prefix" ids="cinder.volume.drivers.synology.synology_common.Session.url_prefix" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.Session.url_prefix"><desc_name xml:space="preserve">url_prefix</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SynoCommon\ (class\ in\ cinder.volume.drivers.synology.synology_common)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SynoCommon" ids="cinder.volume.drivers.synology.synology_common.SynoCommon" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">SynoCommon</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">config</desc_parameter><desc_parameter xml:space="preserve">driver_type</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Manage Cinder volumes on Synology storage</paragraph>
                <index entries="['single',\ 'CINDER_LUN\ (SynoCommon\ attribute)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.CINDER_LUN',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.CINDER_LUN" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.CINDER_LUN" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.CINDER_LUN"><desc_name xml:space="preserve">CINDER_LUN</desc_name><desc_annotation xml:space="preserve"> = 'CINDER'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'METADATA_DS_SNAPSHOT_UUID\ (SynoCommon\ attribute)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.METADATA_DS_SNAPSHOT_UUID',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.METADATA_DS_SNAPSHOT_UUID" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.METADATA_DS_SNAPSHOT_UUID" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.METADATA_DS_SNAPSHOT_UUID"><desc_name xml:space="preserve">METADATA_DS_SNAPSHOT_UUID</desc_name><desc_annotation xml:space="preserve"> = 'ds_snapshot_UUID'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'TARGET_NAME_PREFIX\ (SynoCommon\ attribute)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.TARGET_NAME_PREFIX',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.TARGET_NAME_PREFIX" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.TARGET_NAME_PREFIX" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.TARGET_NAME_PREFIX"><desc_name xml:space="preserve">TARGET_NAME_PREFIX</desc_name><desc_annotation xml:space="preserve"> = 'Cinder-Target-'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_setup_error()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.check_for_setup_error',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.check_for_setup_error" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.check_for_setup_error" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.check_for_setup_error"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_response()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.check_response',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.check_response" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.check_response" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.check_response"><desc_name xml:space="preserve">check_response</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">out</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_value_valid()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.check_value_valid',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.check_value_valid" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.check_value_valid" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.check_value_valid"><desc_name xml:space="preserve">check_value_valid</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">obj</desc_parameter><desc_parameter xml:space="preserve">key_array</desc_parameter><desc_parameter xml:space="preserve">value_type=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.create_cloned_volume" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.create_cloned_volume" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_iscsi_export()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.create_iscsi_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.create_iscsi_export" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.create_iscsi_export" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.create_iscsi_export"><desc_name xml:space="preserve">create_iscsi_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_name</desc_parameter><desc_parameter xml:space="preserve">identifier</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.create_snapshot" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.create_snapshot" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.create_volume" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.create_volume" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.create_volume_from_snapshot" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.create_volume_from_snapshot" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.delete_snapshot" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.delete_snapshot" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.delete_volume" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.delete_volume" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'exec_webapi()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.exec_webapi',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.exec_webapi" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.exec_webapi" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.exec_webapi"><desc_name xml:space="preserve">exec_webapi</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">api</desc_parameter><desc_parameter xml:space="preserve">method</desc_parameter><desc_parameter xml:space="preserve">version</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.extend_volume" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.extend_volume" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_ip()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.get_ip',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.get_ip" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.get_ip" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.get_ip"><desc_name xml:space="preserve">get_ip</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_iqn_and_trgid()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.get_iqn_and_trgid',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.get_iqn_and_trgid" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.get_iqn_and_trgid" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.get_iqn_and_trgid"><desc_name xml:space="preserve">get_iqn_and_trgid</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">location</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_iscsi_properties()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.get_iscsi_properties',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.get_iscsi_properties" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.get_iscsi_properties" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.get_iscsi_properties"><desc_name xml:space="preserve">get_iscsi_properties</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_provider_location()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.get_provider_location',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.get_provider_location" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.get_provider_location" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.get_provider_location"><desc_name xml:space="preserve">get_provider_location</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iqn</desc_parameter><desc_parameter xml:space="preserve">trg_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'is_lun_mapped()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.is_lun_mapped',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.is_lun_mapped" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.is_lun_mapped" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.is_lun_mapped"><desc_name xml:space="preserve">is_lun_mapped</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">lun_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove_iscsi_export()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.remove_iscsi_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.remove_iscsi_export" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.remove_iscsi_export" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.remove_iscsi_export"><desc_name xml:space="preserve">remove_iscsi_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_name</desc_parameter><desc_parameter xml:space="preserve">trg_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_migrated_volume()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.update_migrated_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.update_migrated_volume" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.update_migrated_volume" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.update_migrated_volume"><desc_name xml:space="preserve">update_migrated_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_volume_stats()\ (SynoCommon\ method)',\ 'cinder.volume.drivers.synology.synology_common.SynoCommon.update_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SynoCommon" first="False" fullname="SynoCommon.update_volume_stats" ids="cinder.volume.drivers.synology.synology_common.SynoCommon.update_volume_stats" module="cinder.volume.drivers.synology.synology_common" names="cinder.volume.drivers.synology.synology_common.SynoCommon.update_volume_stats"><desc_name xml:space="preserve">update_volume_stats</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update volume statistics.</paragraph>
                        <paragraph>Three kinds of data are stored on the Synology backend pool:
                            1. Thin volumes (LUNs on the pool),
                            2. Thick volumes (LUNs on the pool),
                            3. Other user data.</paragraph>
                        <paragraph>other_user_data_gb is the size of the 3rd one.
                            lun_provisioned_gb is the summation of all thin/thick volume
                            provisioned size.</paragraph>
                        <paragraph>Only thin type is available for Cinder volumes.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
