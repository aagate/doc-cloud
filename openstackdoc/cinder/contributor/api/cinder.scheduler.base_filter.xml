<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.scheduler.base_filter.rst">
    <section ids="module-cinder.scheduler.base_filter the-cinder-scheduler-base-filter-module" names="the\ cinder.scheduler.base_filter\ module">
        <title>The <reference internal="True" refid="module-cinder.scheduler.base_filter" reftitle="cinder.scheduler.base_filter"><literal classes="xref py py-mod">cinder.scheduler.base_filter</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.scheduler.base_filter\ (module)',\ 'module-cinder.scheduler.base_filter',\ '',\ None]"></index>
        <paragraph>Filter support</paragraph>
        <index entries="['single',\ 'BaseFilter\ (class\ in\ cinder.scheduler.base_filter)',\ 'cinder.scheduler.base_filter.BaseFilter',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BaseFilter" ids="cinder.scheduler.base_filter.BaseFilter" module="cinder.scheduler.base_filter" names="cinder.scheduler.base_filter.BaseFilter"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">BaseFilter</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Base class for all filter classes.</paragraph>
                <index entries="['single',\ 'filter_all()\ (BaseFilter\ method)',\ 'cinder.scheduler.base_filter.BaseFilter.filter_all',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BaseFilter" first="False" fullname="BaseFilter.filter_all" ids="cinder.scheduler.base_filter.BaseFilter.filter_all" module="cinder.scheduler.base_filter" names="cinder.scheduler.base_filter.BaseFilter.filter_all"><desc_name xml:space="preserve">filter_all</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">filter_obj_list</desc_parameter><desc_parameter xml:space="preserve">filter_properties</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Yield objects that pass the filter.</paragraph>
                        <paragraph>Can be overridden in a subclass, if you need to base filtering
                            decisions on all objects.  Otherwise, one can just override
                            _filter_one() to filter a single object.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'run_filter_for_index()\ (BaseFilter\ method)',\ 'cinder.scheduler.base_filter.BaseFilter.run_filter_for_index',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BaseFilter" first="False" fullname="BaseFilter.run_filter_for_index" ids="cinder.scheduler.base_filter.BaseFilter.run_filter_for_index" module="cinder.scheduler.base_filter" names="cinder.scheduler.base_filter.BaseFilter.run_filter_for_index"><desc_name xml:space="preserve">run_filter_for_index</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">index</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return True if the filter needs to be run for n-th instances.</paragraph>
                        <paragraph>Only need to override this if a filter needs anything other than
                            “first only” or “all” behaviour.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'run_filter_once_per_request\ (BaseFilter\ attribute)',\ 'cinder.scheduler.base_filter.BaseFilter.run_filter_once_per_request',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BaseFilter" first="False" fullname="BaseFilter.run_filter_once_per_request" ids="cinder.scheduler.base_filter.BaseFilter.run_filter_once_per_request" module="cinder.scheduler.base_filter" names="cinder.scheduler.base_filter.BaseFilter.run_filter_once_per_request"><desc_name xml:space="preserve">run_filter_once_per_request</desc_name><desc_annotation xml:space="preserve"> = False</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BaseFilterHandler\ (class\ in\ cinder.scheduler.base_filter)',\ 'cinder.scheduler.base_filter.BaseFilterHandler',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BaseFilterHandler" ids="cinder.scheduler.base_filter.BaseFilterHandler" module="cinder.scheduler.base_filter" names="cinder.scheduler.base_filter.BaseFilterHandler"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">BaseFilterHandler</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">modifier_class_type</desc_parameter><desc_parameter xml:space="preserve">modifier_namespace</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.scheduler.base_handler.BaseHandler" refuri="cinder.scheduler.base_handler#cinder.scheduler.base_handler.BaseHandler"><literal classes="xref py py-class">cinder.scheduler.base_handler.BaseHandler</literal></reference></paragraph>
                <paragraph>Base class to handle loading filter classes.</paragraph>
                <paragraph>This class should be subclassed where one needs to use filters.</paragraph>
                <index entries="['single',\ 'get_filtered_objects()\ (BaseFilterHandler\ method)',\ 'cinder.scheduler.base_filter.BaseFilterHandler.get_filtered_objects',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BaseFilterHandler" first="False" fullname="BaseFilterHandler.get_filtered_objects" ids="cinder.scheduler.base_filter.BaseFilterHandler.get_filtered_objects" module="cinder.scheduler.base_filter" names="cinder.scheduler.base_filter.BaseFilterHandler.get_filtered_objects"><desc_name xml:space="preserve">get_filtered_objects</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">filter_classes</desc_parameter><desc_parameter xml:space="preserve">objs</desc_parameter><desc_parameter xml:space="preserve">filter_properties</desc_parameter><desc_parameter xml:space="preserve">index=0</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get objects after filter</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">filter_classes</literal_strong> – filters that will be used to filter the
                                                objects</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">objs</literal_strong> – objects that will be filtered</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">filter_properties</literal_strong> – client filter properties</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">index</literal_strong> – This value needs to be increased in the caller
                                                function of get_filtered_objects when handling
                                                each resource.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
