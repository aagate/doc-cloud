<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.backup.drivers.nfs.rst">
    <section ids="module-cinder.backup.drivers.nfs the-cinder-backup-drivers-nfs-module" names="the\ cinder.backup.drivers.nfs\ module">
        <title>The <reference internal="True" refid="module-cinder.backup.drivers.nfs" reftitle="cinder.backup.drivers.nfs"><literal classes="xref py py-mod">cinder.backup.drivers.nfs</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.backup.drivers.nfs\ (module)',\ 'module-cinder.backup.drivers.nfs',\ '',\ None]"></index>
        <paragraph>Implementation of a backup service that uses NFS storage as the backend.</paragraph>
        <index entries="['single',\ 'NFSBackupDriver\ (class\ in\ cinder.backup.drivers.nfs)',\ 'cinder.backup.drivers.nfs.NFSBackupDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NFSBackupDriver" ids="cinder.backup.drivers.nfs.NFSBackupDriver" module="cinder.backup.drivers.nfs" names="cinder.backup.drivers.nfs.NFSBackupDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">NFSBackupDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">db=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.backup.drivers.posix.PosixBackupDriver" refuri="cinder.backup.drivers.posix#cinder.backup.drivers.posix.PosixBackupDriver"><literal classes="xref py py-class">cinder.backup.drivers.posix.PosixBackupDriver</literal></reference></paragraph>
                <paragraph>Provides backup, restore and delete using NFS supplied repository.</paragraph>
                <index entries="['single',\ 'check_for_setup_error()\ (NFSBackupDriver\ method)',\ 'cinder.backup.drivers.nfs.NFSBackupDriver.check_for_setup_error',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NFSBackupDriver" first="False" fullname="NFSBackupDriver.check_for_setup_error" ids="cinder.backup.drivers.nfs.NFSBackupDriver.check_for_setup_error" module="cinder.backup.drivers.nfs" names="cinder.backup.drivers.nfs.NFSBackupDriver.check_for_setup_error"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Raises error if any required configuration flag is missing.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_backup_driver()\ (in\ module\ cinder.backup.drivers.nfs)',\ 'cinder.backup.drivers.nfs.get_backup_driver',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_backup_driver" ids="cinder.backup.drivers.nfs.get_backup_driver" module="cinder.backup.drivers.nfs" names="cinder.backup.drivers.nfs.get_backup_driver"><desc_name xml:space="preserve">get_backup_driver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </section>
</document>
