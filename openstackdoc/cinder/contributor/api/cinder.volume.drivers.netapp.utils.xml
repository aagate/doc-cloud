<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.netapp.utils.rst">
    <section ids="module-cinder.volume.drivers.netapp.utils the-cinder-volume-drivers-netapp-utils-module" names="the\ cinder.volume.drivers.netapp.utils\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.netapp.utils" reftitle="cinder.volume.drivers.netapp.utils"><literal classes="xref py py-mod">cinder.volume.drivers.netapp.utils</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.netapp.utils\ (module)',\ 'module-cinder.volume.drivers.netapp.utils',\ '',\ None]"></index>
        <paragraph>Utilities for NetApp drivers.</paragraph>
        <paragraph>This module contains common utilities to be used by one or more
            NetApp drivers to achieve the desired functionality.</paragraph>
        <index entries="['single',\ 'BitSet\ (class\ in\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.BitSet',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BitSet" ids="cinder.volume.drivers.netapp.utils.BitSet" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.BitSet"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">BitSet</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">value=0</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'is_set()\ (BitSet\ method)',\ 'cinder.volume.drivers.netapp.utils.BitSet.is_set',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BitSet" first="False" fullname="BitSet.is_set" ids="cinder.volume.drivers.netapp.utils.BitSet.is_set" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.BitSet.is_set"><desc_name xml:space="preserve">is_set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bit</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'set()\ (BitSet\ method)',\ 'cinder.volume.drivers.netapp.utils.BitSet.set',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BitSet" first="False" fullname="BitSet.set" ids="cinder.volume.drivers.netapp.utils.BitSet.set" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.BitSet.set"><desc_name xml:space="preserve">set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bit</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unset()\ (BitSet\ method)',\ 'cinder.volume.drivers.netapp.utils.BitSet.unset',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BitSet" first="False" fullname="BitSet.unset" ids="cinder.volume.drivers.netapp.utils.BitSet.unset" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.BitSet.unset"><desc_name xml:space="preserve">unset</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bit</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'FeatureState\ (class\ in\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.FeatureState',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="FeatureState" ids="cinder.volume.drivers.netapp.utils.FeatureState" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.FeatureState"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">FeatureState</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">supported=True</desc_parameter><desc_parameter xml:space="preserve">minimum_version=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'Features\ (class\ in\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.Features',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Features" ids="cinder.volume.drivers.netapp.utils.Features" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.Features"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">Features</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'add_feature()\ (Features\ method)',\ 'cinder.volume.drivers.netapp.utils.Features.add_feature',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Features" first="False" fullname="Features.add_feature" ids="cinder.volume.drivers.netapp.utils.Features.add_feature" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.Features.add_feature"><desc_name xml:space="preserve">add_feature</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">supported=True</desc_parameter><desc_parameter xml:space="preserve">min_version=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'OpenStackInfo\ (class\ in\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.OpenStackInfo',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="OpenStackInfo" ids="cinder.volume.drivers.netapp.utils.OpenStackInfo" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.OpenStackInfo"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">OpenStackInfo</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>OS/distribution, release, and version.</paragraph>
                <paragraph>NetApp uses these fields as content for EMS log entry.</paragraph>
                <index entries="['single',\ 'PACKAGE_NAME\ (OpenStackInfo\ attribute)',\ 'cinder.volume.drivers.netapp.utils.OpenStackInfo.PACKAGE_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="OpenStackInfo" first="False" fullname="OpenStackInfo.PACKAGE_NAME" ids="cinder.volume.drivers.netapp.utils.OpenStackInfo.PACKAGE_NAME" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.OpenStackInfo.PACKAGE_NAME"><desc_name xml:space="preserve">PACKAGE_NAME</desc_name><desc_annotation xml:space="preserve"> = 'python-cinder'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'info()\ (OpenStackInfo\ method)',\ 'cinder.volume.drivers.netapp.utils.OpenStackInfo.info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="OpenStackInfo" first="False" fullname="OpenStackInfo.info" ids="cinder.volume.drivers.netapp.utils.OpenStackInfo.info" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.OpenStackInfo.info"><desc_name xml:space="preserve">info</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_flags()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.check_flags',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_flags" ids="cinder.volume.drivers.netapp.utils.check_flags" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.check_flags"><desc_name xml:space="preserve">check_flags</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">required_flags</desc_parameter><desc_parameter xml:space="preserve">configuration</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Ensure that the flags we care about are set.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_for_invalid_qos_spec_combination()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.check_for_invalid_qos_spec_combination',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_for_invalid_qos_spec_combination" ids="cinder.volume.drivers.netapp.utils.check_for_invalid_qos_spec_combination" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.check_for_invalid_qos_spec_combination"><desc_name xml:space="preserve">check_for_invalid_qos_spec_combination</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">info</desc_parameter><desc_parameter xml:space="preserve">volume_type</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Invalidate QOS spec if both legacy and non-legacy info is present.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_backend_qos_spec_from_volume_type()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.get_backend_qos_spec_from_volume_type',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_backend_qos_spec_from_volume_type" ids="cinder.volume.drivers.netapp.utils.get_backend_qos_spec_from_volume_type" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.get_backend_qos_spec_from_volume_type"><desc_name xml:space="preserve">get_backend_qos_spec_from_volume_type</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_type</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_iscsi_connection_properties()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.get_iscsi_connection_properties',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_iscsi_connection_properties" ids="cinder.volume.drivers.netapp.utils.get_iscsi_connection_properties" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.get_iscsi_connection_properties"><desc_name xml:space="preserve">get_iscsi_connection_properties</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">lun_id</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">iqn</desc_parameter><desc_parameter xml:space="preserve">address</desc_parameter><desc_parameter xml:space="preserve">port</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_legacy_qos_policy()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.get_legacy_qos_policy',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_legacy_qos_policy" ids="cinder.volume.drivers.netapp.utils.get_legacy_qos_policy" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.get_legacy_qos_policy"><desc_name xml:space="preserve">get_legacy_qos_policy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">extra_specs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return legacy qos policy information if present in extra specs.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_pool_name_filter_regex()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.get_pool_name_filter_regex',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_pool_name_filter_regex" ids="cinder.volume.drivers.netapp.utils.get_pool_name_filter_regex" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.get_pool_name_filter_regex"><desc_name xml:space="preserve">get_pool_name_filter_regex</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">configuration</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Build the regex for filtering pools by name</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">configuration</literal_strong> – The volume driver configuration</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Raises</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="cinder.exception.InvalidConfigurationValue" refuri="cinder.exception#cinder.exception.InvalidConfigurationValue"><literal_strong>InvalidConfigurationValue</literal_strong></reference> – if configured regex pattern is invalid</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>A compiled regex for filtering pool names</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_qos_policy_group_name()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.get_qos_policy_group_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_qos_policy_group_name" ids="cinder.volume.drivers.netapp.utils.get_qos_policy_group_name" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.get_qos_policy_group_name"><desc_name xml:space="preserve">get_qos_policy_group_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return the name of backend QOS policy group based on its volume id.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_qos_policy_group_name_from_info()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.get_qos_policy_group_name_from_info',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_qos_policy_group_name_from_info" ids="cinder.volume.drivers.netapp.utils.get_qos_policy_group_name_from_info" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.get_qos_policy_group_name_from_info"><desc_name xml:space="preserve">get_qos_policy_group_name_from_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">qos_policy_group_info</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return the name of a QOS policy group given qos policy group info.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_valid_backend_qos_spec_from_volume_type()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.get_valid_backend_qos_spec_from_volume_type',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_valid_backend_qos_spec_from_volume_type" ids="cinder.volume.drivers.netapp.utils.get_valid_backend_qos_spec_from_volume_type" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.get_valid_backend_qos_spec_from_volume_type"><desc_name xml:space="preserve">get_valid_backend_qos_spec_from_volume_type</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">volume_type</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Given a volume type, return the associated Cinder QoS spec.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_valid_qos_policy_group_info()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.get_valid_qos_policy_group_info',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_valid_qos_policy_group_info" ids="cinder.volume.drivers.netapp.utils.get_valid_qos_policy_group_info" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.get_valid_qos_policy_group_info"><desc_name xml:space="preserve">get_valid_qos_policy_group_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">extra_specs=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Given a volume, return information for QOS provisioning.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_volume_extra_specs()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.get_volume_extra_specs',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_volume_extra_specs" ids="cinder.volume.drivers.netapp.utils.get_volume_extra_specs" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.get_volume_extra_specs"><desc_name xml:space="preserve">get_volume_extra_specs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Provides extra specs associated with volume.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_volume_type_from_volume()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.get_volume_type_from_volume',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_volume_type_from_volume" ids="cinder.volume.drivers.netapp.utils.get_volume_type_from_volume" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.get_volume_type_from_volume"><desc_name xml:space="preserve">get_volume_type_from_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Provides volume type associated with volume.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'hashabledict\ (class\ in\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.hashabledict',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="hashabledict" ids="cinder.volume.drivers.netapp.utils.hashabledict" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.hashabledict"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">hashabledict</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">dict</literal></paragraph>
                <paragraph>A hashable dictionary that is comparable (i.e. in unit tests, etc.)</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'log_extra_spec_warnings()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.log_extra_spec_warnings',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="log_extra_spec_warnings" ids="cinder.volume.drivers.netapp.utils.log_extra_spec_warnings" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.log_extra_spec_warnings"><desc_name xml:space="preserve">log_extra_spec_warnings</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">extra_specs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'map_dict_to_lower()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.map_dict_to_lower',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="map_dict_to_lower" ids="cinder.volume.drivers.netapp.utils.map_dict_to_lower" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.map_dict_to_lower"><desc_name xml:space="preserve">map_dict_to_lower</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">input_dict</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return an equivalent to the input dictionary with lower-case keys.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'map_qos_spec()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.map_qos_spec',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="map_qos_spec" ids="cinder.volume.drivers.netapp.utils.map_qos_spec" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.map_qos_spec"><desc_name xml:space="preserve">map_qos_spec</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">qos_spec</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Map Cinder QOS spec to limit/throughput-value as used in client API.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'resolve_hostname()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.resolve_hostname',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="resolve_hostname" ids="cinder.volume.drivers.netapp.utils.resolve_hostname" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.resolve_hostname"><desc_name xml:space="preserve">resolve_hostname</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">hostname</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Resolves host name to IP address.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'round_down()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.round_down',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="round_down" ids="cinder.volume.drivers.netapp.utils.round_down" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.round_down"><desc_name xml:space="preserve">round_down</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">value</desc_parameter><desc_parameter xml:space="preserve">precision='0.00'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'set_safe_attr()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.set_safe_attr',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="set_safe_attr" ids="cinder.volume.drivers.netapp.utils.set_safe_attr" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.set_safe_attr"><desc_name xml:space="preserve">set_safe_attr</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">instance</desc_parameter><desc_parameter xml:space="preserve">attr</desc_parameter><desc_parameter xml:space="preserve">val</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Sets the attribute in a thread safe manner.</paragraph>
                <paragraph>Returns if new val was set on attribute.
                    If attr already had the value then False.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'to_bool()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.to_bool',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="to_bool" ids="cinder.volume.drivers.netapp.utils.to_bool" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.to_bool"><desc_name xml:space="preserve">to_bool</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">val</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Converts true, yes, y, 1 to True, False otherwise.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'validate_instantiation()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.validate_instantiation',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="validate_instantiation" ids="cinder.volume.drivers.netapp.utils.validate_instantiation" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.validate_instantiation"><desc_name xml:space="preserve">validate_instantiation</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Checks if a driver is instantiated other than by the unified driver.</paragraph>
                <paragraph>Helps check direct instantiation of netapp drivers.
                    Call this function in every netapp block driver constructor.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'validate_qos_spec()\ (in\ module\ cinder.volume.drivers.netapp.utils)',\ 'cinder.volume.drivers.netapp.utils.validate_qos_spec',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="validate_qos_spec" ids="cinder.volume.drivers.netapp.utils.validate_qos_spec" module="cinder.volume.drivers.netapp.utils" names="cinder.volume.drivers.netapp.utils.validate_qos_spec"><desc_name xml:space="preserve">validate_qos_spec</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">qos_spec</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Check validity of Cinder qos spec for our backend.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
