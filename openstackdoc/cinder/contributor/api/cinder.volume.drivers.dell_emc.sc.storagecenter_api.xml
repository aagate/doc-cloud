<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.dell_emc.sc.storagecenter_api.rst">
    <section ids="module-cinder.volume.drivers.dell_emc.sc.storagecenter_api the-cinder-volume-drivers-dell-emc-sc-storagecenter-api-module" names="the\ cinder.volume.drivers.dell_emc.sc.storagecenter_api\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.dell_emc.sc.storagecenter_api" reftitle="cinder.volume.drivers.dell_emc.sc.storagecenter_api"><literal classes="xref py py-mod">cinder.volume.drivers.dell_emc.sc.storagecenter_api</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api\ (module)',\ 'module-cinder.volume.drivers.dell_emc.sc.storagecenter_api',\ '',\ None]"></index>
        <paragraph>Interface for interacting with the Dell Storage Center array.</paragraph>
        <index entries="['single',\ 'HttpClient\ (class\ in\ cinder.volume.drivers.dell_emc.sc.storagecenter_api)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="HttpClient" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">HttpClient</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">port</desc_parameter><desc_parameter xml:space="preserve">user</desc_parameter><desc_parameter xml:space="preserve">password</desc_parameter><desc_parameter xml:space="preserve">verify</desc_parameter><desc_parameter xml:space="preserve">apiversion</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Helper for making the REST calls.</paragraph>
                <index entries="['single',\ 'delete()\ (HttpClient\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient.delete',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HttpClient" first="False" fullname="HttpClient.delete" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient.delete" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient.delete"><desc_name xml:space="preserve">delete</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">url</desc_parameter><desc_parameter xml:space="preserve">payload=None</desc_parameter><desc_parameter xml:space="preserve">async=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get()\ (HttpClient\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient.get',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HttpClient" first="False" fullname="HttpClient.get" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient.get" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient.get"><desc_name xml:space="preserve">get</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">url</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'post()\ (HttpClient\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient.post',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HttpClient" first="False" fullname="HttpClient.post" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient.post" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient.post"><desc_name xml:space="preserve">post</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">url</desc_parameter><desc_parameter xml:space="preserve">payload</desc_parameter><desc_parameter xml:space="preserve">async=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'put()\ (HttpClient\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient.put',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HttpClient" first="False" fullname="HttpClient.put" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient.put" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.HttpClient.put"><desc_name xml:space="preserve">put</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">url</desc_parameter><desc_parameter xml:space="preserve">payload</desc_parameter><desc_parameter xml:space="preserve">async=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'LegacyPayloadFilter\ (class\ in\ cinder.volume.drivers.dell_emc.sc.storagecenter_api)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.LegacyPayloadFilter',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="LegacyPayloadFilter" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.LegacyPayloadFilter" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.LegacyPayloadFilter"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">LegacyPayloadFilter</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">filter_type='AND'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Simple class for creating filters for interacting with the Dell
                    Storage API 15.1 and 15.2.</paragraph>
                <index entries="['single',\ 'append()\ (LegacyPayloadFilter\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.LegacyPayloadFilter.append',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LegacyPayloadFilter" first="False" fullname="LegacyPayloadFilter.append" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.LegacyPayloadFilter.append" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.LegacyPayloadFilter.append"><desc_name xml:space="preserve">append</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">val</desc_parameter><desc_parameter xml:space="preserve">filtertype='Equals'</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'PayloadFilter\ (class\ in\ cinder.volume.drivers.dell_emc.sc.storagecenter_api)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.PayloadFilter',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="PayloadFilter" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.PayloadFilter" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.PayloadFilter"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">PayloadFilter</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">filtertype='AND'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Simple class for creating filters for interacting with the Dell
                    Storage API 15.3 and later.</paragraph>
                <index entries="['single',\ 'append()\ (PayloadFilter\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.PayloadFilter.append',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PayloadFilter" first="False" fullname="PayloadFilter.append" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.PayloadFilter.append" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.PayloadFilter.append"><desc_name xml:space="preserve">append</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">val</desc_parameter><desc_parameter xml:space="preserve">filtertype='Equals'</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SCApi\ (class\ in\ cinder.volume.drivers.dell_emc.sc.storagecenter_api)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SCApi" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">SCApi</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">host</desc_parameter><desc_parameter xml:space="preserve">port</desc_parameter><desc_parameter xml:space="preserve">user</desc_parameter><desc_parameter xml:space="preserve">password</desc_parameter><desc_parameter xml:space="preserve">verify</desc_parameter><desc_parameter xml:space="preserve">apiversion</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Handles calls to Dell SC and EM via the REST API interface.</paragraph>
                <definition_list>
                    <definition_list_item>
                        <term>Version history:</term>
                        <definition>
                            <paragraph>1.0.0 - Initial driver
                                1.1.0 - Added extra spec support for Storage Profile selection
                                1.2.0 - Added consistency group support.
                                2.0.0 - Switched to inheriting functional objects rather than volume
                                driver.
                                2.1.0 - Added support for ManageableVD.
                                2.2.0 - Added API 2.2 support.
                                2.3.0 - Added Legacy Port Mode Support
                                2.3.1 - Updated error handling.
                                2.4.0 - Added Replication V2 support.
                                2.4.1 - Updated Replication support to V2.1.
                                2.5.0 - ManageableSnapshotsVD implemented.
                                3.0.0 - ProviderID utilized.
                                3.1.0 - Failback supported.
                                3.2.0 - Live Volume support.
                                3.3.0 - Support for a secondary DSM.
                                3.4.0 - Support for excluding a domain.
                                3.5.0 - Support for AFO.
                                3.6.0 - Server type support.
                                3.7.0 - Support for Data Reduction, Group QOS and Volume QOS.
                                4.0.0 - Driver moved to dell_emc.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
                <index entries="['single',\ 'APIDRIVERVERSION\ (SCApi\ attribute)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.APIDRIVERVERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.APIDRIVERVERSION" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.APIDRIVERVERSION" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.APIDRIVERVERSION"><desc_name xml:space="preserve">APIDRIVERVERSION</desc_name><desc_annotation xml:space="preserve"> = '4.0.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'break_replication()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.break_replication',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.break_replication" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.break_replication" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.break_replication"><desc_name xml:space="preserve">break_replication</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volumename</desc_parameter><desc_parameter xml:space="preserve">instance_id</desc_parameter><desc_parameter xml:space="preserve">destssn</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>This just breaks the replication.</paragraph>
                        <paragraph>If we find the source we just delete the replication.  If the source
                            is down then we find the destination and unmap it.  Fail pretty much
                            every time this goes south.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volumename</literal_strong> – Volume name is the guid from the cinder volume.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">instance_id</literal_strong> – Storage Center volume object instance id.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">destssn</literal_strong> – Destination ssn.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Replication SC volume object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'cg_except_on_no_support()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.cg_except_on_no_support',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.cg_except_on_no_support" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.cg_except_on_no_support" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.cg_except_on_no_support"><desc_name xml:space="preserve">cg_except_on_no_support</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'close_connection()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.close_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.close_connection" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.close_connection" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.close_connection"><desc_name xml:space="preserve">close_connection</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Logout of Dell REST API.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.create_cloned_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_cloned_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volumename</desc_parameter><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">storage_profile</desc_parameter><desc_parameter xml:space="preserve">replay_profile_list</desc_parameter><desc_parameter xml:space="preserve">volume_qos</desc_parameter><desc_parameter xml:space="preserve">group_qos</desc_parameter><desc_parameter xml:space="preserve">dr_profile</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a volume named volumename from a copy of scvolume.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volumename</literal_strong> – Name of new volume.  This is the cinder volume ID.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – Dell volume object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">storage_profile</literal_strong> – Storage profile.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replay_profile_list</literal_strong> – List of snapshot profiles.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume_qos</literal_strong> – Volume QOS Profile to use.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group_qos</literal_strong> – Group QOS Profile to use.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dr_profile</literal_strong> – Data reduction profile to use.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The new volume’s Dell volume object.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal_strong>VolumeBackendAPIException</literal_strong></reference> – if error doing copy.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_live_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_live_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.create_live_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_live_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_live_volume"><desc_name xml:space="preserve">create_live_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">remotessn</desc_parameter><desc_parameter xml:space="preserve">active=False</desc_parameter><desc_parameter xml:space="preserve">sync=False</desc_parameter><desc_parameter xml:space="preserve">autofailover=False</desc_parameter><desc_parameter xml:space="preserve">primaryqos='CinderQOS'</desc_parameter><desc_parameter xml:space="preserve">secondaryqos='CinderQOS'</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>This create’s a live volume instead of a replication.</paragraph>
                        <paragraph>Servers are not created at this point so we cannot map up a remote
                            server immediately.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – Source SC Volume</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">remotessn</literal_strong> – Destination SSN.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">active</literal_strong> – Replicate the active replay boolean.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">sync</literal_strong> – Sync replication boolean.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">autofailover</literal_strong> – enable autofailover and failback boolean.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">primaryqos</literal_strong> – QOS node name for the primary side.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">secondaryqos</literal_strong> – QOS node name for the remote side.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>ScLiveVolume object or None on failure.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_replay()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_replay',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.create_replay" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_replay" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_replay"><desc_name xml:space="preserve">create_replay</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">replayid</desc_parameter><desc_parameter xml:space="preserve">expire</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Takes a snapshot of a volume.</paragraph>
                        <paragraph>One could snap a volume before it has been activated, so activate
                            by mapping and unmapping to a random server and let them.  This
                            should be a fail but the Tempest tests require it.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – Volume to snapshot.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replayid</literal_strong> – Name to use for the snapshot.  This is a portion of
                                                the snapshot ID as we do not have space for the
                                                entire GUID in the replay description.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">expire</literal_strong> – Time in minutes before the replay expires.  For most
                                                snapshots this will be 0 (never expire) but if we are
                                                cloning a volume we will snap it right before creating
                                                the clone.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The Dell replay object or None.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal_strong>VolumeBackendAPIException</literal_strong></reference> – On failure to intialize volume.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_replay_profile()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_replay_profile',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.create_replay_profile" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_replay_profile" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_replay_profile"><desc_name xml:space="preserve">create_replay_profile</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a replay profile on the Dell SC.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">name</literal_strong> – The ID of the consistency group.  This will be matched to
                                        the name on the Dell SC.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>SC profile or None.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_replication()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_replication',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.create_replication" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_replication" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_replication"><desc_name xml:space="preserve">create_replication</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">destssn</desc_parameter><desc_parameter xml:space="preserve">qosnode</desc_parameter><desc_parameter xml:space="preserve">synchronous</desc_parameter><desc_parameter xml:space="preserve">diskfolder</desc_parameter><desc_parameter xml:space="preserve">replicate_active</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create repl from scvol to destssn.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – Dell SC volume object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">destssn</literal_strong> – Destination SSN string.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">qosnode</literal_strong> – Name of Dell SC QOS Node for this replication.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">synchronous</literal_strong> – Boolean.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">diskfolder</literal_strong> – optional disk folder name.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replicate_active</literal_strong> – replicate active replay.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Dell SC replication object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_server()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_server',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.create_server" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_server" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_server"><desc_name xml:space="preserve">create_server</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">wwnlist</desc_parameter><desc_parameter xml:space="preserve">serveros</desc_parameter><desc_parameter xml:space="preserve">ssn=-1</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a server with multiple WWNS associated with it.</paragraph>
                        <paragraph>Same as create_server except it can take a list of HBAs.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">wwnlist</literal_strong> – A list of FC WWNs or iSCSI IQNs associated with this
                                                server.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">serveros</literal_strong> – Name of server OS to use when creating the server.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ssn</literal_strong> – ssn of the backend SC to use. Default if -1.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Dell server object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_view_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_view_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.create_view_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_view_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_view_volume"><desc_name xml:space="preserve">create_view_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volname</desc_parameter><desc_parameter xml:space="preserve">screplay</desc_parameter><desc_parameter xml:space="preserve">replay_profile_string</desc_parameter><desc_parameter xml:space="preserve">volume_qos</desc_parameter><desc_parameter xml:space="preserve">group_qos</desc_parameter><desc_parameter xml:space="preserve">dr_profile</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a new volume named volname from the screplay.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volname</literal_strong> – Name of new volume.  This is the cinder volume ID.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">screplay</literal_strong> – Dell replay object from which to make a new volume.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replay_profile_string</literal_strong> – Profiles to be applied to the volume</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume_qos</literal_strong> – Volume QOS Profile to use.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group_qos</literal_strong> – Group QOS Profile to use.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dr_profile</literal_strong> – Data reduction profile to use.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Dell volume object or None.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.create_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">size</desc_parameter><desc_parameter xml:space="preserve">storage_profile=None</desc_parameter><desc_parameter xml:space="preserve">replay_profile_string=None</desc_parameter><desc_parameter xml:space="preserve">volume_qos=None</desc_parameter><desc_parameter xml:space="preserve">group_qos=None</desc_parameter><desc_parameter xml:space="preserve">datareductionprofile=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a new volume on the Storage Center.</paragraph>
                        <paragraph>It will create it in a folder called self.vfname.  If self.vfname
                            does not exist it will create it.  If it cannot create it
                            the volume will be created in the root.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Name of the volume to be created on the Dell SC backend.
                                                This is the cinder volume ID.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">size</literal_strong> – The size of the volume to be created in GB.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">storage_profile</literal_strong> – Optional storage profile to set for the volume.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replay_profile_string</literal_strong> – Optional replay profile to set for
                                                the volume.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">volume_qos</literal_strong> – Volume QOS profile name.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group_qos</literal_strong> – Group QOS profile name.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">datareductionprofile</literal_strong> – Data reduction profile name</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Dell Volume object or None.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_cg_replay()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_cg_replay',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.delete_cg_replay" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_cg_replay" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_cg_replay"><desc_name xml:space="preserve">delete_cg_replay</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">profile</desc_parameter><desc_parameter xml:space="preserve">replayid</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Finds a Dell cg replay by replayid string and expires it.</paragraph>
                        <paragraph>Once marked for expiration we do not return the replay as a snapshot
                            even though it might still exist.  (Backend requirements.)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">cg_name</literal_strong> – Consistency Group name.  This is the ReplayProfileName.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replayid</literal_strong> – Name to search for.  This is a portion of the snapshot
                                                ID as we do not have space for the entire GUID in the
                                                replay description.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Boolean for success or failure.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_live_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_live_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.delete_live_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_live_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_live_volume"><desc_name xml:space="preserve">delete_live_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">sclivevolume</desc_parameter><desc_parameter xml:space="preserve">deletesecondaryvolume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes the live volume.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">sclivevolume</literal_strong> – ScLiveVolume object to be whacked.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Boolean on success/fail.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_replay()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_replay',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.delete_replay" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_replay" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_replay"><desc_name xml:space="preserve">delete_replay</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">replayid</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Finds a Dell replay by replayid string and expires it.</paragraph>
                        <paragraph>Once marked for expiration we do not return the replay as a snapshot
                            even though it might still exist.  (Backend requirements.)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – Dell volume object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replayid</literal_strong> – Name to search for.  This is a portion of the snapshot
                                                ID as we do not have space for the entire GUID in the
                                                replay description.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Boolean for success or failure.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_replay_profile()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_replay_profile',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.delete_replay_profile" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_replay_profile" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_replay_profile"><desc_name xml:space="preserve">delete_replay_profile</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">profile</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete the replay profile from the Dell SC.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">profile</literal_strong> – SC replay profile.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Nothing.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal_strong>VolumeBackendAPIException</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_replication()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_replication',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.delete_replication" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_replication" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_replication"><desc_name xml:space="preserve">delete_replication</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">destssn</desc_parameter><desc_parameter xml:space="preserve">deletedestvolume=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes the SC replication object from scvolume to the destssn.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – Dell SC Volume object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">destssn</literal_strong> – SC the replication is replicating to.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">deletedestvolume</literal_strong> – Delete or keep dest volume.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True on success.  False on fail.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.delete_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">provider_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes the volume from the SC backend array.</paragraph>
                        <paragraph>If the volume cannot be found we claim success.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Name of the volume to search for.  This is the cinder
                                                volume ID.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">provider_id</literal_strong> – This is the instanceId</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Boolean indicating success or failure.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'expand_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.expand_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.expand_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.expand_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.expand_volume"><desc_name xml:space="preserve">expand_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">newsize</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Expands scvolume to newsize GBs.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – Dell volume object to be expanded.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">newsize</literal_strong> – The new size of the volume object.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The updated Dell volume object on success or None on failure.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_common_replay()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_common_replay',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.find_common_replay" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_common_replay" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_common_replay"><desc_name xml:space="preserve">find_common_replay</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">svolume</desc_parameter><desc_parameter xml:space="preserve">dvolume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Finds the common replay between two volumes.</paragraph>
                        <paragraph>This assumes that one volume was replicated from the other. This
                            should return the most recent replay.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">svolume</literal_strong> – Source SC Volume.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dvolume</literal_strong> – Destination SC Volume.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Common replay or None.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_iscsi_properties()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_iscsi_properties',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.find_iscsi_properties" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_iscsi_properties" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_iscsi_properties"><desc_name xml:space="preserve">find_iscsi_properties</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">scserver</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Finds target information for a given Dell scvolume object mapping.</paragraph>
                        <paragraph>The data coming back is both the preferred path and all the paths.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – The dell sc volume object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scserver</literal_strong> – The dell sc server object.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>iSCSI property dictionary.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal_strong>VolumeBackendAPIException</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_repl_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_repl_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.find_repl_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_repl_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_repl_volume"><desc_name xml:space="preserve">find_repl_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">destssn</desc_parameter><desc_parameter xml:space="preserve">instance_id=None</desc_parameter><desc_parameter xml:space="preserve">source=False</desc_parameter><desc_parameter xml:space="preserve">destination=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Find our replay destination volume on the destssn.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Name to search for.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">destssn</literal_strong> – Where to look for the volume.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">instance_id</literal_strong> – If we know our exact volume ID use that.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">source</literal_strong> – Replication source boolen.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">destination</literal_strong> – Replication destination boolean.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>SC Volume object or None</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_replay()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_replay',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.find_replay" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_replay" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_replay"><desc_name xml:space="preserve">find_replay</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">replayid</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Searches for the replay by replayid.</paragraph>
                        <paragraph>replayid is stored in the replay’s description attribute.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – Dell volume object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replayid</literal_strong> – Name to search for.  This is a portion of the
                                                snapshot ID as we do not have space for the entire
                                                GUID in the replay description.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Dell replay object or None.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_replay_profile()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_replay_profile',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.find_replay_profile" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_replay_profile" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_replay_profile"><desc_name xml:space="preserve">find_replay_profile</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Finds the Dell SC replay profile object name.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">name</literal_strong> – Name of the replay profile object. This is the
                                        consistency group id.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Dell SC replay profile or None.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal_strong>VolumeBackendAPIException</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_sc()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_sc',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.find_sc" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_sc" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_sc"><desc_name xml:space="preserve">find_sc</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ssn=-1</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check that the SC is there and being managed by EM.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The SC SSN.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal_strong>VolumeBackendAPIException</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_server()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_server',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.find_server" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_server" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_server"><desc_name xml:space="preserve">find_server</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">instance_name</desc_parameter><desc_parameter xml:space="preserve">ssn=-1</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Hunts for a server on the Dell backend by instance_name.</paragraph>
                        <paragraph>The instance_name is the same as the server’s HBA.  This is the  IQN or
                            WWN listed in the connector.  If found, the server the HBA is attached
                            to, if any, is returned.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">instance_name</literal_strong> – instance_name is a FC WWN or iSCSI IQN from
                                                the connector.  In cinder a server is identified
                                                by its HBA.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ssn</literal_strong> – Storage center to search.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Dell server object or None.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.find_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_volume"><desc_name xml:space="preserve">find_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">provider_id</desc_parameter><desc_parameter xml:space="preserve">islivevol=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Find the volume by name or instanceId.</paragraph>
                        <paragraph>We check if we can use provider_id before using it. If so then
                            we expect to find it by provider_id.</paragraph>
                        <paragraph>We also conclude our failover at this point. If we are failed over we
                            run _import_one to rename the volume.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Volume name.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">provider_id</literal_strong> – instanceId of the volume if known.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">islivevol</literal_strong> – Is this a live volume.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>sc volume object or None.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal_strong>VolumeBackendAPIException</literal_strong></reference> – if unable to import.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'find_wwns()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_wwns',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.find_wwns" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_wwns" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.find_wwns"><desc_name xml:space="preserve">find_wwns</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">scserver</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Finds the lun and wwns of the mapped volume.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – Storage Center volume object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scserver</literal_strong> – Storage Center server opbject.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Lun, wwns, initiator target map</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'flip_replication()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.flip_replication',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.flip_replication" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.flip_replication" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.flip_replication"><desc_name xml:space="preserve">flip_replication</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">svolume</desc_parameter><desc_parameter xml:space="preserve">dvolume</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">replicationtype</desc_parameter><desc_parameter xml:space="preserve">qosnode</desc_parameter><desc_parameter xml:space="preserve">activereplay</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Enables replication from current destination volume to source.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">svolume</literal_strong> – Current source. New destination.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dvolume</literal_strong> – Current destination.  New source.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Volume name.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replicationtype</literal_strong> – Sync or async</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">qosnode</literal_strong> – qos node for the new source ssn.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">activereplay</literal_strong> – replicate the active replay.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True/False.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_live_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_live_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.get_live_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_live_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_live_volume"><desc_name xml:space="preserve">get_live_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">primaryid</desc_parameter><desc_parameter xml:space="preserve">name=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get’s the live ScLiveVolume object for the vol with primaryid.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">primaryid</literal_strong> – InstanceId of the primary volume.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – Volume name associated with this live volume.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>ScLiveVolume object or None</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_screplication()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_screplication',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.get_screplication" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_screplication" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_screplication"><desc_name xml:space="preserve">get_screplication</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">destssn</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Find the screplication object for the volume on the dest backend.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – </paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">destssn</literal_strong> – </paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_storage_usage()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_storage_usage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.get_storage_usage" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_storage_usage" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_storage_usage"><desc_name xml:space="preserve">get_storage_usage</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Gets the storage usage object from the Dell backend.</paragraph>
                        <paragraph>This contains capacity and usage information for the SC.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The SC storageusage object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_unmanaged_volume_size()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_unmanaged_volume_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.get_unmanaged_volume_size" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_unmanaged_volume_size" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_unmanaged_volume_size"><desc_name xml:space="preserve">get_unmanaged_volume_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">existing</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Looks up the volume named existing and returns its size string.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">existing</literal_strong> – Existing volume dict.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The SC configuredSize string.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.ManageExistingInvalidReference" refuri="cinder.exception#cinder.exception.ManageExistingInvalidReference"><literal_strong>ManageExistingInvalidReference</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.get_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_volume"><desc_name xml:space="preserve">get_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">provider_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the scvolume associated with provider_id.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">provider_id</literal_strong> – This is the instanceId</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Dell SCVolume object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_count()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_volume_count',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.get_volume_count" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_volume_count" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.get_volume_count"><desc_name xml:space="preserve">get_volume_count</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scserver</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the number of volumes attached to specified Dell server.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">scserver</literal_strong> – The Dell backend server object.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Mapping count.  -1 if there was an error.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'is_failed_over()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.is_failed_over',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.is_failed_over" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.is_failed_over" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.is_failed_over"><desc_name xml:space="preserve">is_failed_over</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">provider_id</desc_parameter><desc_parameter xml:space="preserve">sclivevolume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'is_swapped()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.is_swapped',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.is_swapped" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.is_swapped" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.is_swapped"><desc_name xml:space="preserve">is_swapped</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">provider_id</desc_parameter><desc_parameter xml:space="preserve">sclivevolume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.manage_existing" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.manage_existing" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">newname</desc_parameter><desc_parameter xml:space="preserve">existing</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Finds the volume named existing and renames it.</paragraph>
                        <block_quote>
                            <paragraph>This checks a few things. The volume has to exist.  There can
                                only be one volume by that name.  Since cinder manages volumes
                                by the GB it has to be defined on a GB boundary.</paragraph>
                            <paragraph>This renames existing to newname.  newname is the guid from
                                the cinder volume[‘id’].  The volume is moved to the defined
                                cinder volume folder.</paragraph>
                        </block_quote>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">newname</literal_strong> – Name to rename the volume to.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">existing</literal_strong> – The existing volume dict..</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>scvolume.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal_strong>VolumeBackendAPIException</literal_strong></reference><literal_strong>, </literal_strong><reference internal="True" reftitle="cinder.exception.ManageExistingInvalidReference" refuri="cinder.exception#cinder.exception.ManageExistingInvalidReference"><literal_strong>ManageExistingInvalidReference</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_replay()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.manage_replay',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.manage_replay" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.manage_replay" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.manage_replay"><desc_name xml:space="preserve">manage_replay</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">screplay</desc_parameter><desc_parameter xml:space="preserve">replayid</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Basically renames the screplay and sets it to never expire.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">screplay</literal_strong> – DellSC object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replayid</literal_strong> – New name for replay.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True on success.  False on fail.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'map_secondary_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.map_secondary_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.map_secondary_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.map_secondary_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.map_secondary_volume"><desc_name xml:space="preserve">map_secondary_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">sclivevol</desc_parameter><desc_parameter xml:space="preserve">scdestsrv</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Map’s the secondary volume or a LiveVolume to destsrv.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">sclivevol</literal_strong> – ScLiveVolume object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scdestsrv</literal_strong> – ScServer object for the destination.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>ScMappingProfile object or None on failure.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'map_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.map_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.map_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.map_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.map_volume"><desc_name xml:space="preserve">map_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">scserver</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Maps the Dell backend volume object to the Dell server object.</paragraph>
                        <paragraph>The check for the Dell server object existence is elsewhere;  does not
                            create the Dell server object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – Storage Center volume object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scserver</literal_strong> – Storage Center server object.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>SC mapping profile or None</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'open_connection()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.open_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.open_connection" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.open_connection" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.open_connection"><desc_name xml:space="preserve">open_connection</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Authenticate with Dell REST interface.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><literal_strong>VolumeBackendAPIException.</literal_strong> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove_mappings()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.remove_mappings',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.remove_mappings" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.remove_mappings" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.remove_mappings"><desc_name xml:space="preserve">remove_mappings</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvol</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Peels all the mappings off of scvol.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">scvol</literal_strong> – Storage Center volume object.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True/False on Success/Failure.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'rename_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.rename_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.rename_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.rename_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.rename_volume"><desc_name xml:space="preserve">rename_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Rename scvolume to name.</paragraph>
                        <paragraph>This is mostly used by update_migrated_volume.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – The Dell volume object to be renamed.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">name</literal_strong> – The new volume name.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Boolean indicating success or failure.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'replicate_to_common()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.replicate_to_common',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.replicate_to_common" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.replicate_to_common" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.replicate_to_common"><desc_name xml:space="preserve">replicate_to_common</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">svolume</desc_parameter><desc_parameter xml:space="preserve">dvolume</desc_parameter><desc_parameter xml:space="preserve">qosnode</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Reverses a replication between two volumes.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">fovolume</literal_strong> – Failed over volume. (Current)</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ovolume</literal_strong> – Original source volume.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">qosnode</literal_strong> – QOS node name to use to create the replay.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>ScReplication object or None.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'replication_progress()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.replication_progress',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.replication_progress" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.replication_progress" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.replication_progress"><desc_name xml:space="preserve">replication_progress</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">screplid</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get’s the current progress of the replication.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">screplid</literal_strong> – instanceId of the ScReplication object.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Boolean for synced, float of remaining bytes. (Or None, None.)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'size_to_gb()\ (SCApi\ static\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.size_to_gb',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.size_to_gb" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.size_to_gb" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.size_to_gb"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">size_to_gb</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">spacestring</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Splits a SC size string into GB and a remainder.</paragraph>
                        <paragraph>Space is returned in a string like …
                            7.38197504E8 Bytes
                            Need to split that apart and convert to GB.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">spacestring</literal_strong> – SC size string.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Size in GB and remainder in byte.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'snap_cg_replay()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.snap_cg_replay',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.snap_cg_replay" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.snap_cg_replay" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.snap_cg_replay"><desc_name xml:space="preserve">snap_cg_replay</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">profile</desc_parameter><desc_parameter xml:space="preserve">replayid</desc_parameter><desc_parameter xml:space="preserve">expire</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Snaps a replay of a consistency group.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">profile</literal_strong> – The name of the consistency group profile.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replayid</literal_strong> – The name of the replay.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">expire</literal_strong> – Time in mintues before a replay expires.  0 means no
                                                expiration.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Dell SC replay object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'start_replication()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.start_replication',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.start_replication" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.start_replication" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.start_replication"><desc_name xml:space="preserve">start_replication</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">svolume</desc_parameter><desc_parameter xml:space="preserve">dvolume</desc_parameter><desc_parameter xml:space="preserve">replicationtype</desc_parameter><desc_parameter xml:space="preserve">qosnode</desc_parameter><desc_parameter xml:space="preserve">activereplay</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Starts a replication between volumes.</paragraph>
                        <paragraph>Requires the dvolume to be in an appropriate state to start this.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">svolume</literal_strong> – Source SC Volume.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dvolume</literal_strong> – Destiation SC Volume</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replicationtype</literal_strong> – Asynchronous or synchronous.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">qosnode</literal_strong> – QOS node name.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">activereplay</literal_strong> – Boolean to replicate the active replay or not.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>ScReplication object or None.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'swap_roles_live_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.swap_roles_live_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.swap_roles_live_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.swap_roles_live_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.swap_roles_live_volume"><desc_name xml:space="preserve">swap_roles_live_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">sclivevolume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Swap live volume roles.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">sclivevolume</literal_strong> – Dell SC live volume object.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True/False on success/failure.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.unmanage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.unmanage" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.unmanage" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.unmanage"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Unmanage our volume.</paragraph>
                        <paragraph>We simply rename with with a prefix of <title_reference>Unmanaged_</title_reference>  That’s it.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – The Dell SC volume object.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Nothing.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal_strong>VolumeBackendAPIException</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage_replay()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.unmanage_replay',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.unmanage_replay" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.unmanage_replay" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.unmanage_replay"><desc_name xml:space="preserve">unmanage_replay</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">screplay</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Basically sets the expireTime</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">screplay</literal_strong> – DellSC object.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True on success.  False on fail.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmap_all()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.unmap_all',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.unmap_all" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.unmap_all" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.unmap_all"><desc_name xml:space="preserve">unmap_all</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmap_volume()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.unmap_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.unmap_volume" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.unmap_volume" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.unmap_volume"><desc_name xml:space="preserve">unmap_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">scserver</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Unmaps the Dell volume object from the Dell server object.</paragraph>
                        <paragraph>Deletes all mappings to a Dell server object, not just the ones on
                            the path defined in cinder.conf.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – Storage Center volume object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scserver</literal_strong> – Storage Center server object.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True or False.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_cg_volumes()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_cg_volumes',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.update_cg_volumes" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_cg_volumes" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_cg_volumes"><desc_name xml:space="preserve">update_cg_volumes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">profile</desc_parameter><desc_parameter xml:space="preserve">add_volumes=None</desc_parameter><desc_parameter xml:space="preserve">remove_volumes=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Adds or removes the profile from the specified volumes</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">profile</literal_strong> – Dell SC replay profile object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">add_volumes</literal_strong> – List of volumes we are adding to the consistency
                                                group. (Which is to say we are adding the profile
                                                to this list of volumes.)</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">remove_volumes</literal_strong> – List of volumes we are removing from the
                                                consistency group. (Which is to say we are
                                                removing the profile from this list of volumes.)</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True/False on success/failure.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_datareduction_profile()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_datareduction_profile',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.update_datareduction_profile" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_datareduction_profile" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_datareduction_profile"><desc_name xml:space="preserve">update_datareduction_profile</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">dr_profile</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update a volume’s Data Reduction Profile</paragraph>
                        <paragraph>Changes the volume setting to use a different data reduction profile.
                            If dr_profile is None, will reset to the default profile for the
                            cinder user account.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – The Storage Center volume to be updated.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">dr_profile</literal_strong> – The requested data reduction profile name.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True if successful, False otherwise.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_qos_profile()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_qos_profile',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.update_qos_profile" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_qos_profile" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_qos_profile"><desc_name xml:space="preserve">update_qos_profile</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">qosprofile</desc_parameter><desc_parameter xml:space="preserve">grouptype=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update a volume’s QOS profile</paragraph>
                        <paragraph>Changes the volume setting to use a different QOS Profile.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – The Storage Center volume to be updated.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">qosprofile</literal_strong> – The requested QOS profile name.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">grouptype</literal_strong> – Is this a group QOS profile?</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True if successful, False otherwise.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_replay_profiles()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_replay_profiles',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.update_replay_profiles" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_replay_profiles" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_replay_profiles"><desc_name xml:space="preserve">update_replay_profiles</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">replay_profile_string</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update our replay profiles.</paragraph>
                        <paragraph>If the replay_profile_string is empty we look for the user’s default
                            profiles. If those aren’t found we look for the Daily profile.</paragraph>
                        <paragraph>Note that this is in addition to the CG profiles which we do not touch.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – SC Volume object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replay_profile_string</literal_strong> – Comma separated string of replay profile
                                                names.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True/False.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_replicate_active_replay()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_replicate_active_replay',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.update_replicate_active_replay" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_replicate_active_replay" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_replicate_active_replay"><desc_name xml:space="preserve">update_replicate_active_replay</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">replactive</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Enables or disables replicating the active replay for given vol.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – SC Volume object.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">replactive</literal_strong> – True or False</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True or False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_storage_profile()\ (SCApi\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_storage_profile',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApi" first="False" fullname="SCApi.update_storage_profile" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_storage_profile" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApi.update_storage_profile"><desc_name xml:space="preserve">update_storage_profile</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scvolume</desc_parameter><desc_parameter xml:space="preserve">storage_profile</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update a volume’s Storage Profile.</paragraph>
                        <paragraph>Changes the volume setting to use a different Storage Profile. If
                            storage_profile is None, will reset to the default profile for the
                            cinder user account.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scvolume</literal_strong> – The Storage Center volume to be updated.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">storage_profile</literal_strong> – The requested Storage Profile name.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True if successful, False otherwise.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SCApiHelper\ (class\ in\ cinder.volume.drivers.dell_emc.sc.storagecenter_api)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApiHelper',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SCApiHelper" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApiHelper" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApiHelper"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">SCApiHelper</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">config</desc_parameter><desc_parameter xml:space="preserve">active_backend_id</desc_parameter><desc_parameter xml:space="preserve">storage_protocol</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Helper class for API access.  Handles opening and closing the
                    connection to the Dell REST API.</paragraph>
                <index entries="['single',\ 'open_connection()\ (SCApiHelper\ method)',\ 'cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApiHelper.open_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SCApiHelper" first="False" fullname="SCApiHelper.open_connection" ids="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApiHelper.open_connection" module="cinder.volume.drivers.dell_emc.sc.storagecenter_api" names="cinder.volume.drivers.dell_emc.sc.storagecenter_api.SCApiHelper.open_connection"><desc_name xml:space="preserve">open_connection</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates the SCApi object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>SCApi object.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Raises</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="cinder.exception#cinder.exception.VolumeBackendAPIException"><literal_strong>VolumeBackendAPIException</literal_strong></reference> – </paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
