<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.api.contrib.volume_manage.rst">
    <section ids="module-cinder.api.contrib.volume_manage the-cinder-api-contrib-volume-manage-module" names="the\ cinder.api.contrib.volume_manage\ module">
        <title>The <reference internal="True" refid="module-cinder.api.contrib.volume_manage" reftitle="cinder.api.contrib.volume_manage"><literal classes="xref py py-mod">cinder.api.contrib.volume_manage</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.api.contrib.volume_manage\ (module)',\ 'module-cinder.api.contrib.volume_manage',\ '',\ None]"></index>
        <index entries="['single',\ 'VolumeManageController\ (class\ in\ cinder.api.contrib.volume_manage)',\ 'cinder.api.contrib.volume_manage.VolumeManageController',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="VolumeManageController" ids="cinder.api.contrib.volume_manage.VolumeManageController" module="cinder.api.contrib.volume_manage" names="cinder.api.contrib.volume_manage.VolumeManageController"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">VolumeManageController</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.api.openstack.wsgi.Controller" refuri="cinder.api.openstack.wsgi#cinder.api.openstack.wsgi.Controller"><literal classes="xref py py-class">cinder.api.openstack.wsgi.Controller</literal></reference></paragraph>
                <paragraph>The /os-volume-manage controller for the OpenStack API.</paragraph>
                <index entries="['single',\ 'create()\ (VolumeManageController\ method)',\ 'cinder.api.contrib.volume_manage.VolumeManageController.create',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VolumeManageController" first="False" fullname="VolumeManageController.create" ids="cinder.api.contrib.volume_manage.VolumeManageController.create" module="cinder.api.contrib.volume_manage" names="cinder.api.contrib.volume_manage.VolumeManageController.create"><desc_name xml:space="preserve">create</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">req</desc_parameter><desc_parameter xml:space="preserve">body</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Instruct Cinder to manage a storage object.</paragraph>
                        <paragraph>Manages an existing backend storage object (e.g. a Linux logical
                            volume or a SAN disk) by creating the Cinder objects required to manage
                            it, and possibly renaming the backend storage object
                            (driver dependent)</paragraph>
                        <paragraph>From an API perspective, this operation behaves very much like a
                            volume creation operation, except that properties such as image,
                            snapshot and volume references don’t make sense, because we are taking
                            an existing storage object into Cinder management.</paragraph>
                        <paragraph>Required HTTP Body:</paragraph>
                        <literal_block highlight_args="{}" language="json" linenos="False" xml:space="preserve">{
  "volume": {
    "host": "&lt;Cinder host on which the existing storage resides&gt;",
    "cluster": "&lt;Cinder cluster on which the storage resides&gt;",
    "ref": "&lt;Driver-specific reference to existing storage object&gt;"
  }
}</literal_block>
                        <paragraph>See the appropriate Cinder drivers’ implementations of the
                            manage_volume method to find out the accepted format of ‘ref’.</paragraph>
                        <paragraph>This API call will return with an error if any of the above elements
                            are missing from the request, or if the ‘host’ element refers to a
                            cinder host that is not registered.</paragraph>
                        <paragraph>The volume will later enter the error state if it is discovered that
                            ‘ref’ is bad.</paragraph>
                        <paragraph>Optional elements to ‘volume’ are:</paragraph>
                        <literal_block xml:space="preserve">name               A name for the new volume.
description        A description for the new volume.
volume_type        ID or name of a volume type to associate with
                   the new Cinder volume. Does not necessarily
                   guarantee that the managed volume will have the
                   properties described in the volume_type. The
                   driver may choose to fail if it identifies that
                   the specified volume_type is not compatible with
                   the backend storage object.
metadata           Key/value pairs to be associated with the new
                   volume.
availability_zone  The availability zone to associate with the new
                   volume.
bootable           If set to True, marks the volume as bootable.</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'detail()\ (VolumeManageController\ method)',\ 'cinder.api.contrib.volume_manage.VolumeManageController.detail',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VolumeManageController" first="False" fullname="VolumeManageController.detail" ids="cinder.api.contrib.volume_manage.VolumeManageController.detail" module="cinder.api.contrib.volume_manage" names="cinder.api.contrib.volume_manage.VolumeManageController.detail"><desc_name xml:space="preserve">detail</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">req</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns a detailed list of volumes available to manage.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'index()\ (VolumeManageController\ method)',\ 'cinder.api.contrib.volume_manage.VolumeManageController.index',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VolumeManageController" first="False" fullname="VolumeManageController.index" ids="cinder.api.contrib.volume_manage.VolumeManageController.index" module="cinder.api.contrib.volume_manage" names="cinder.api.contrib.volume_manage.VolumeManageController.index"><desc_name xml:space="preserve">index</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">req</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns a summary list of volumes available to manage.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'wsgi_actions\ (VolumeManageController\ attribute)',\ 'cinder.api.contrib.volume_manage.VolumeManageController.wsgi_actions',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeManageController" first="False" fullname="VolumeManageController.wsgi_actions" ids="cinder.api.contrib.volume_manage.VolumeManageController.wsgi_actions" module="cinder.api.contrib.volume_manage" names="cinder.api.contrib.volume_manage.VolumeManageController.wsgi_actions"><desc_name xml:space="preserve">wsgi_actions</desc_name><desc_annotation xml:space="preserve"> = {}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'wsgi_extensions\ (VolumeManageController\ attribute)',\ 'cinder.api.contrib.volume_manage.VolumeManageController.wsgi_extensions',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VolumeManageController" first="False" fullname="VolumeManageController.wsgi_extensions" ids="cinder.api.contrib.volume_manage.VolumeManageController.wsgi_extensions" module="cinder.api.contrib.volume_manage" names="cinder.api.contrib.volume_manage.VolumeManageController.wsgi_extensions"><desc_name xml:space="preserve">wsgi_extensions</desc_name><desc_annotation xml:space="preserve"> = [('index', None), ('detail', None)]</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'Volume_manage\ (class\ in\ cinder.api.contrib.volume_manage)',\ 'cinder.api.contrib.volume_manage.Volume_manage',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Volume_manage" ids="cinder.api.contrib.volume_manage.Volume_manage" module="cinder.api.contrib.volume_manage" names="cinder.api.contrib.volume_manage.Volume_manage"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">Volume_manage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ext_mgr</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.api.extensions.ExtensionDescriptor" refuri="cinder.api.extensions#cinder.api.extensions.ExtensionDescriptor"><literal classes="xref py py-class">cinder.api.extensions.ExtensionDescriptor</literal></reference></paragraph>
                <paragraph>Allows existing backend storage to be ‘managed’ by Cinder.</paragraph>
                <index entries="['single',\ 'alias\ (Volume_manage\ attribute)',\ 'cinder.api.contrib.volume_manage.Volume_manage.alias',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Volume_manage" first="False" fullname="Volume_manage.alias" ids="cinder.api.contrib.volume_manage.Volume_manage.alias" module="cinder.api.contrib.volume_manage" names="cinder.api.contrib.volume_manage.Volume_manage.alias"><desc_name xml:space="preserve">alias</desc_name><desc_annotation xml:space="preserve"> = 'os-volume-manage'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_resources()\ (Volume_manage\ method)',\ 'cinder.api.contrib.volume_manage.Volume_manage.get_resources',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Volume_manage" first="False" fullname="Volume_manage.get_resources" ids="cinder.api.contrib.volume_manage.Volume_manage.get_resources" module="cinder.api.contrib.volume_manage" names="cinder.api.contrib.volume_manage.Volume_manage.get_resources"><desc_name xml:space="preserve">get_resources</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'name\ (Volume_manage\ attribute)',\ 'cinder.api.contrib.volume_manage.Volume_manage.name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Volume_manage" first="False" fullname="Volume_manage.name" ids="cinder.api.contrib.volume_manage.Volume_manage.name" module="cinder.api.contrib.volume_manage" names="cinder.api.contrib.volume_manage.Volume_manage.name"><desc_name xml:space="preserve">name</desc_name><desc_annotation xml:space="preserve"> = 'VolumeManage'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'updated\ (Volume_manage\ attribute)',\ 'cinder.api.contrib.volume_manage.Volume_manage.updated',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Volume_manage" first="False" fullname="Volume_manage.updated" ids="cinder.api.contrib.volume_manage.Volume_manage.updated" module="cinder.api.contrib.volume_manage" names="cinder.api.contrib.volume_manage.Volume_manage.updated"><desc_name xml:space="preserve">updated</desc_name><desc_annotation xml:space="preserve"> = '2014-02-10T00:00:00+00:00'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
