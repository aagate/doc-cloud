<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.interface.backup_chunked_driver.rst">
    <section ids="module-cinder.interface.backup_chunked_driver the-cinder-interface-backup-chunked-driver-module" names="the\ cinder.interface.backup_chunked_driver\ module">
        <title>The <reference internal="True" refid="module-cinder.interface.backup_chunked_driver" reftitle="cinder.interface.backup_chunked_driver"><literal classes="xref py py-mod">cinder.interface.backup_chunked_driver</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.interface.backup_chunked_driver\ (module)',\ 'module-cinder.interface.backup_chunked_driver',\ '',\ None]"></index>
        <paragraph>Backup driver with ‘chunked’ backup operations.</paragraph>
        <index entries="['single',\ 'BackupChunkedDriver\ (class\ in\ cinder.interface.backup_chunked_driver)',\ 'cinder.interface.backup_chunked_driver.BackupChunkedDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BackupChunkedDriver" ids="cinder.interface.backup_chunked_driver.BackupChunkedDriver" module="cinder.interface.backup_chunked_driver" names="cinder.interface.backup_chunked_driver.BackupChunkedDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">BackupChunkedDriver</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.interface.backup_driver.BackupDriver" refuri="cinder.interface.backup_driver#cinder.interface.backup_driver.BackupDriver"><literal classes="xref py py-class">cinder.interface.backup_driver.BackupDriver</literal></reference></paragraph>
                <paragraph>Backup driver that supports ‘chunked’ backups.</paragraph>
                <index entries="['single',\ 'delete_object()\ (BackupChunkedDriver\ method)',\ 'cinder.interface.backup_chunked_driver.BackupChunkedDriver.delete_object',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupChunkedDriver" first="False" fullname="BackupChunkedDriver.delete_object" ids="cinder.interface.backup_chunked_driver.BackupChunkedDriver.delete_object" module="cinder.interface.backup_chunked_driver" names="cinder.interface.backup_chunked_driver.BackupChunkedDriver.delete_object"><desc_name xml:space="preserve">delete_object</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">container</desc_parameter><desc_parameter xml:space="preserve">object_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete object from container.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">container</literal_strong> – The container to modify.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">object_name</literal_strong> – The object name to delete.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_container_entries()\ (BackupChunkedDriver\ method)',\ 'cinder.interface.backup_chunked_driver.BackupChunkedDriver.get_container_entries',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupChunkedDriver" first="False" fullname="BackupChunkedDriver.get_container_entries" ids="cinder.interface.backup_chunked_driver.BackupChunkedDriver.get_container_entries" module="cinder.interface.backup_chunked_driver" names="cinder.interface.backup_chunked_driver.BackupChunkedDriver.get_container_entries"><desc_name xml:space="preserve">get_container_entries</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">container</desc_parameter><desc_parameter xml:space="preserve">prefix</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get container entry names.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">container</literal_strong> – The container from which to get entries.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">prefix</literal_strong> – The prefix used to match entries.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_extra_metadata()\ (BackupChunkedDriver\ method)',\ 'cinder.interface.backup_chunked_driver.BackupChunkedDriver.get_extra_metadata',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupChunkedDriver" first="False" fullname="BackupChunkedDriver.get_extra_metadata" ids="cinder.interface.backup_chunked_driver.BackupChunkedDriver.get_extra_metadata" module="cinder.interface.backup_chunked_driver" names="cinder.interface.backup_chunked_driver.BackupChunkedDriver.get_extra_metadata"><desc_name xml:space="preserve">get_extra_metadata</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backup</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return extra metadata to use in prepare_backup.</paragraph>
                        <paragraph>This method allows for collection of extra metadata in prepare_backup()
                            which will be passed to get_object_reader() and get_object_writer().
                            Subclass extensions can use this extra information to optimize
                            data transfers.</paragraph>
                        <block_quote>
                            <field_list>
                                <field>
                                    <field_name>returns</field_name>
                                    <field_body>
                                        <paragraph>json serializable object</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </block_quote>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_object_reader()\ (BackupChunkedDriver\ method)',\ 'cinder.interface.backup_chunked_driver.BackupChunkedDriver.get_object_reader',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupChunkedDriver" first="False" fullname="BackupChunkedDriver.get_object_reader" ids="cinder.interface.backup_chunked_driver.BackupChunkedDriver.get_object_reader" module="cinder.interface.backup_chunked_driver" names="cinder.interface.backup_chunked_driver.BackupChunkedDriver.get_object_reader"><desc_name xml:space="preserve">get_object_reader</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">container</desc_parameter><desc_parameter xml:space="preserve">object_name</desc_parameter><desc_parameter xml:space="preserve">extra_metadata=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns a reader object for the backed up chunk.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">container</literal_strong> – The container to read from.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">object_name</literal_strong> – The object name to read.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">extra_metadata</literal_strong> – Extra metadata to be included.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_object_writer()\ (BackupChunkedDriver\ method)',\ 'cinder.interface.backup_chunked_driver.BackupChunkedDriver.get_object_writer',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupChunkedDriver" first="False" fullname="BackupChunkedDriver.get_object_writer" ids="cinder.interface.backup_chunked_driver.BackupChunkedDriver.get_object_writer" module="cinder.interface.backup_chunked_driver" names="cinder.interface.backup_chunked_driver.BackupChunkedDriver.get_object_writer"><desc_name xml:space="preserve">get_object_writer</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">container</desc_parameter><desc_parameter xml:space="preserve">object_name</desc_parameter><desc_parameter xml:space="preserve">extra_metadata=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns a writer which stores the chunk data in backup repository.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">container</literal_strong> – The container to write to.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">object_name</literal_strong> – The object name to write.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">extra_metadata</literal_strong> – Extra metadata to be included.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>A context handler that can be used in a “with” context.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'put_container()\ (BackupChunkedDriver\ method)',\ 'cinder.interface.backup_chunked_driver.BackupChunkedDriver.put_container',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupChunkedDriver" first="False" fullname="BackupChunkedDriver.put_container" ids="cinder.interface.backup_chunked_driver.BackupChunkedDriver.put_container" module="cinder.interface.backup_chunked_driver" names="cinder.interface.backup_chunked_driver.BackupChunkedDriver.put_container"><desc_name xml:space="preserve">put_container</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">container</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create the container if needed. No failure if it pre-exists.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">container</literal_strong> – The container to write into.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_container_name()\ (BackupChunkedDriver\ method)',\ 'cinder.interface.backup_chunked_driver.BackupChunkedDriver.update_container_name',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupChunkedDriver" first="False" fullname="BackupChunkedDriver.update_container_name" ids="cinder.interface.backup_chunked_driver.BackupChunkedDriver.update_container_name" module="cinder.interface.backup_chunked_driver" names="cinder.interface.backup_chunked_driver.BackupChunkedDriver.update_container_name"><desc_name xml:space="preserve">update_container_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backup</desc_parameter><desc_parameter xml:space="preserve">container</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Allows sub-classes to override container name.</paragraph>
                        <paragraph>This method exists so that sub-classes can override the container name
                            as it comes in to the driver in the backup object. Implementations
                            should return None if no change to the container name is desired.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
