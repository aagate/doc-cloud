<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.api.common.rst">
    <section ids="module-cinder.api.common the-cinder-api-common-module" names="the\ cinder.api.common\ module">
        <title>The <reference internal="True" refid="module-cinder.api.common" reftitle="cinder.api.common"><literal classes="xref py py-mod">cinder.api.common</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.api.common\ (module)',\ 'module-cinder.api.common',\ '',\ None]"></index>
        <index entries="['single',\ 'METADATA_TYPES\ (class\ in\ cinder.api.common)',\ 'cinder.api.common.METADATA_TYPES',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="METADATA_TYPES" ids="cinder.api.common.METADATA_TYPES" module="cinder.api.common" names="cinder.api.common.METADATA_TYPES"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">METADATA_TYPES</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">enum.Enum</literal></paragraph>
                <paragraph>An enumeration.</paragraph>
                <index entries="['single',\ 'image\ (METADATA_TYPES\ attribute)',\ 'cinder.api.common.METADATA_TYPES.image',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="METADATA_TYPES" first="False" fullname="METADATA_TYPES.image" ids="cinder.api.common.METADATA_TYPES.image" module="cinder.api.common" names="cinder.api.common.METADATA_TYPES.image"><desc_name xml:space="preserve">image</desc_name><desc_annotation xml:space="preserve"> = 2</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'user\ (METADATA_TYPES\ attribute)',\ 'cinder.api.common.METADATA_TYPES.user',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="METADATA_TYPES" first="False" fullname="METADATA_TYPES.user" ids="cinder.api.common.METADATA_TYPES.user" module="cinder.api.common" names="cinder.api.common.METADATA_TYPES.user"><desc_name xml:space="preserve">user</desc_name><desc_annotation xml:space="preserve"> = 1</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ViewBuilder\ (class\ in\ cinder.api.common)',\ 'cinder.api.common.ViewBuilder',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ViewBuilder" ids="cinder.api.common.ViewBuilder" module="cinder.api.common" names="cinder.api.common.ViewBuilder"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ViewBuilder</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Model API responses as dictionaries.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'convert_filter_attributes()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.convert_filter_attributes',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="convert_filter_attributes" ids="cinder.api.common.convert_filter_attributes" module="cinder.api.common" names="cinder.api.common.convert_filter_attributes"><desc_name xml:space="preserve">convert_filter_attributes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">filters</desc_parameter><desc_parameter xml:space="preserve">resource</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_cluster_host()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.get_cluster_host',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_cluster_host" ids="cinder.api.common.get_cluster_host" module="cinder.api.common" names="cinder.api.common.get_cluster_host"><desc_name xml:space="preserve">get_cluster_host</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">req</desc_parameter><desc_parameter xml:space="preserve">params</desc_parameter><desc_parameter xml:space="preserve">cluster_version=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Get cluster and host from the parameters.</paragraph>
                <paragraph>This method checks the presence of cluster and host parameters and returns
                    them depending on the cluster_version.</paragraph>
                <paragraph>If cluster_version is False we will never return the cluster_name and we
                    will require the presence of the host parameter.</paragraph>
                <paragraph>If cluster_version is None we will always check for the presence of the
                    cluster parameter, and if cluster_version is a string with a version we
                    will only check for the presence of the parameter if the version of the
                    request is not less than  it.  In both cases we will require one and only
                    one parameter, host or cluster.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_enabled_resource_filters()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.get_enabled_resource_filters',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_enabled_resource_filters" ids="cinder.api.common.get_enabled_resource_filters" module="cinder.api.common" names="cinder.api.common.get_enabled_resource_filters"><desc_name xml:space="preserve">get_enabled_resource_filters</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">resource=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Get list of configured/allowed filters for the specified resource.</paragraph>
                <paragraph>This method checks resource_query_filters_file and returns dictionary
                    which contains the specified resource and its allowed filters:</paragraph>
                <literal_block highlight_args="{}" language="json" linenos="False" xml:space="preserve">{
    "resource": ["filter1", "filter2", "filter3"]
}</literal_block>
                <paragraph>if resource is not specified, all of the configuration will be returned,
                    and if the resource is not found, empty dict will be returned.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_pagination_params()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.get_pagination_params',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_pagination_params" ids="cinder.api.common.get_pagination_params" module="cinder.api.common" names="cinder.api.common.get_pagination_params"><desc_name xml:space="preserve">get_pagination_params</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">params</desc_parameter><desc_parameter xml:space="preserve">max_limit=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return marker, limit, offset tuple from request.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">params</literal_strong> – <title_reference>wsgi.Request</title_reference>’s GET dictionary, possibly containing
                                ‘marker’,  ‘limit’, and ‘offset’ variables. ‘marker’ is the
                                id of the last element the client has seen, ‘limit’ is the
                                maximum number of items to return and ‘offset’ is the number
                                of items to skip from the marker or from the first element.
                                If ‘limit’ is not specified, or &gt; max_limit, we default to
                                max_limit. Negative values for either offset or limit will
                                cause exc.HTTPBadRequest() exceptions to be raised. If no
                                offset is present we’ll default to 0 and if no marker is
                                present we’ll default to None.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Max_limit</field_name>
                        <field_body>
                            <paragraph>Max value ‘limit’ return value can take</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>Tuple (marker, limit, offset)</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_request_url()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.get_request_url',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_request_url" ids="cinder.api.common.get_request_url" module="cinder.api.common" names="cinder.api.common.get_request_url"><desc_name xml:space="preserve">get_request_url</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">request</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_sort_params()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.get_sort_params',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_sort_params" ids="cinder.api.common.get_sort_params" module="cinder.api.common" names="cinder.api.common.get_sort_params"><desc_name xml:space="preserve">get_sort_params</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">params</desc_parameter><desc_parameter xml:space="preserve">default_key='created_at'</desc_parameter><desc_parameter xml:space="preserve">default_dir='desc'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Retrieves sort keys/directions parameters.</paragraph>
                <paragraph>Processes the parameters to create a list of sort keys and sort directions
                    that correspond to either the ‘sort’ parameter or the ‘sort_key’ and
                    ‘sort_dir’ parameter values. The value of the ‘sort’ parameter is a comma-
                    separated list of sort keys, each key is optionally appended with
                    ‘:&lt;sort_direction&gt;’.</paragraph>
                <paragraph>Note that the ‘sort_key’ and ‘sort_dir’ parameters are deprecated in kilo
                    and an exception is raised if they are supplied with the ‘sort’ parameter.</paragraph>
                <paragraph>The sort parameters are removed from the request parameters by this
                    function.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">params</literal_strong> – webob.multidict of request parameters (from
                                        cinder.api.openstack.wsgi.Request.params)</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">default_key</literal_strong> – default sort key value, added to the list if no
                                        sort keys are supplied</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">default_dir</literal_strong> – default sort dir value, added to the list if the
                                        corresponding key does not have a direction
                                        specified</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>list of sort keys, list of sort dirs</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Raises</field_name>
                        <field_body>
                            <paragraph><literal_strong>webob.exc.HTTPBadRequest</literal_strong> – If both ‘sort’ and either ‘sort_key’ or
                                ‘sort_dir’ are supplied parameters</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'limited()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.limited',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="limited" ids="cinder.api.common.limited" module="cinder.api.common" names="cinder.api.common.limited"><desc_name xml:space="preserve">limited</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">items</desc_parameter><desc_parameter xml:space="preserve">request</desc_parameter><desc_parameter xml:space="preserve">max_limit=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a slice of items according to requested offset and limit.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">items</literal_strong> – A sliceable entity</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">request</literal_strong> – <literal>wsgi.Request</literal> possibly containing ‘offset’ and ‘limit’
                                        GET variables. ‘offset’ is where to start in the list,
                                        and ‘limit’ is the maximum number of items to return. If
                                        ‘limit’ is not specified, 0, or &gt; max_limit, we default
                                        to max_limit. Negative values for either offset or limit
                                        will cause exc.HTTPBadRequest() exceptions to be raised.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">max_limit</literal_strong> – The maximum number of items to return from ‘items’</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'limited_by_marker()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.limited_by_marker',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="limited_by_marker" ids="cinder.api.common.limited_by_marker" module="cinder.api.common" names="cinder.api.common.limited_by_marker"><desc_name xml:space="preserve">limited_by_marker</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">items</desc_parameter><desc_parameter xml:space="preserve">request</desc_parameter><desc_parameter xml:space="preserve">max_limit=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a slice of items according to the requested marker and limit.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'process_general_filtering()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.process_general_filtering',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="process_general_filtering" ids="cinder.api.common.process_general_filtering" module="cinder.api.common" names="cinder.api.common.process_general_filtering"><desc_name xml:space="preserve">process_general_filtering</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">resource</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'reject_invalid_filters()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.reject_invalid_filters',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="reject_invalid_filters" ids="cinder.api.common.reject_invalid_filters" module="cinder.api.common" names="cinder.api.common.reject_invalid_filters"><desc_name xml:space="preserve">reject_invalid_filters</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">filters</desc_parameter><desc_parameter xml:space="preserve">resource</desc_parameter><desc_parameter xml:space="preserve">enable_like_filter=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'remove_version_from_href()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.remove_version_from_href',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="remove_version_from_href" ids="cinder.api.common.remove_version_from_href" module="cinder.api.common" names="cinder.api.common.remove_version_from_href"><desc_name xml:space="preserve">remove_version_from_href</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">href</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Removes the first API version from the href.</paragraph>
                <paragraph>Given: ‘<reference refuri="http://cinder.example.com/v1.1/123">http://cinder.example.com/v1.1/123</reference>’
                    Returns: ‘<reference refuri="http://cinder.example.com/123">http://cinder.example.com/123</reference>’</paragraph>
                <paragraph>Given: ‘<reference refuri="http://cinder.example.com/v1.1">http://cinder.example.com/v1.1</reference>’
                    Returns: ‘<reference refuri="http://cinder.example.com">http://cinder.example.com</reference>’</paragraph>
                <paragraph>Given: ‘<reference refuri="http://cinder.example.com/volume/drivers/v1.1/flashsystem">http://cinder.example.com/volume/drivers/v1.1/flashsystem</reference>’
                    Returns: ‘<reference refuri="http://cinder.example.com/volume/drivers/flashsystem">http://cinder.example.com/volume/drivers/flashsystem</reference>’</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'validate_key_names()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.validate_key_names',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="validate_key_names" ids="cinder.api.common.validate_key_names" module="cinder.api.common" names="cinder.api.common.validate_key_names"><desc_name xml:space="preserve">validate_key_names</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">key_names_list</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Validate each item of the list to match key name regex.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'validate_policy()\ (in\ module\ cinder.api.common)',\ 'cinder.api.common.validate_policy',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="validate_policy" ids="cinder.api.common.validate_policy" module="cinder.api.common" names="cinder.api.common.validate_policy"><desc_name xml:space="preserve">validate_policy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">action</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </section>
</document>
