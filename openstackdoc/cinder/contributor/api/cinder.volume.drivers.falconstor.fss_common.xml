<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.falconstor.fss_common.rst">
    <section ids="module-cinder.volume.drivers.falconstor.fss_common the-cinder-volume-drivers-falconstor-fss-common-module" names="the\ cinder.volume.drivers.falconstor.fss_common\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.falconstor.fss_common" reftitle="cinder.volume.drivers.falconstor.fss_common"><literal classes="xref py py-mod">cinder.volume.drivers.falconstor.fss_common</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.falconstor.fss_common\ (module)',\ 'module-cinder.volume.drivers.falconstor.fss_common',\ '',\ None]"></index>
        <paragraph>Volume driver for FalconStor FSS storage system.</paragraph>
        <paragraph>This driver requires FSS-8.00-8865 or later.</paragraph>
        <index entries="['single',\ 'FalconstorBaseDriver\ (class\ in\ cinder.volume.drivers.falconstor.fss_common)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="FalconstorBaseDriver" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">FalconstorBaseDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.drivers.san.san.SanDriver" refuri="cinder.volume.drivers.san.san#cinder.volume.drivers.san.san.SanDriver"><literal classes="xref py py-class">cinder.volume.drivers.san.san.SanDriver</literal></reference></paragraph>
                <index entries="['single',\ 'attach_volume()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.attach_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.attach_volume" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.attach_volume" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.attach_volume"><desc_name xml:space="preserve">attach_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">instance_uuid</desc_parameter><desc_parameter xml:space="preserve">host_name</desc_parameter><desc_parameter xml:space="preserve">mountpoint</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_setup_error()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.check_for_setup_error',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.check_for_setup_error" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.check_for_setup_error" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.check_for_setup_error"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cgsnapshot()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_cgsnapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.create_cgsnapshot" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_cgsnapshot" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_cgsnapshot"><desc_name xml:space="preserve">create_cgsnapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">cgsnapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a cgsnapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.create_cloned_volume" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_cloned_volume" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a clone of the specified volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_consistencygroup()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_consistencygroup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.create_consistencygroup" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_consistencygroup" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_consistencygroup"><desc_name xml:space="preserve">create_consistencygroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a consistencygroup.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_export()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.create_export" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_export" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_export"><desc_name xml:space="preserve">create_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.create_snapshot" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_snapshot" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.create_volume" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_volume" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a volume.</paragraph>
                        <paragraph>We  use the metadata of the volume to create variety volume.</paragraph>
                        <paragraph>Create a thin provisioned volume :</paragraph>
                        <literal_block classes="code console" xml:space="preserve"><inline classes="generic output">create --volume-type FSS-THIN
    --metadata thinsize=&lt;thin-volume-size&gt; volume-size</inline></literal_block>
                        <paragraph>Create a LUN that is a Timeview of another LUN at a specified CDP tag:</paragraph>
                        <literal_block classes="code console" xml:space="preserve"><inline classes="generic output">create --volume-type FSS --metadata timeview=&lt;vid&gt;
    cdptag=&lt;tag&gt; volume-size</inline></literal_block>
                        <paragraph>Create a LUN that is a Timeview of another LUN at a specified Timemark:</paragraph>
                        <literal_block classes="code console" xml:space="preserve"><inline classes="generic output">create --volume-type FSS --metadata timeview=&lt;vid&gt;
    rawtimestamp=&lt;rawtimestamp&gt; volume-size</inline></literal_block>
                        <paragraph>Create a mirrored volume :</paragraph>
                        <literal_block classes="code console" xml:space="preserve"><inline classes="generic output">create --volume-type FSS --metadata mirrored=true</inline></literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.create_volume_from_snapshot" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_volume_from_snapshot" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates a volume from a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_cgsnapshot()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.delete_cgsnapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.delete_cgsnapshot" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.delete_cgsnapshot" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.delete_cgsnapshot"><desc_name xml:space="preserve">delete_cgsnapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">cgsnapshot</desc_parameter><desc_parameter xml:space="preserve">snapshots</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a cgsnapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_consistencygroup()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.delete_consistencygroup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.delete_consistencygroup" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.delete_consistencygroup" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.delete_consistencygroup"><desc_name xml:space="preserve">delete_consistencygroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">volumes</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a consistency group.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.delete_snapshot" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.delete_snapshot" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.delete_volume" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.delete_volume" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Disconnect all hosts and delete the volume</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'detach_volume()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.detach_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.detach_volume" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.detach_volume" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.detach_volume"><desc_name xml:space="preserve">detach_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">attachment=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'do_setup()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.do_setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.do_setup" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.do_setup" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.do_setup"><desc_name xml:space="preserve">do_setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ensure_export()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.ensure_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.ensure_export" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.ensure_export" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.ensure_export"><desc_name xml:space="preserve">ensure_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.extend_volume" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.extend_volume" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend volume to new_size.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.get_volume_stats" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.get_volume_stats" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.manage_existing',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.manage_existing" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.manage_existing" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.manage_existing"><desc_name xml:space="preserve">manage_existing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Convert an existing FSS volume to a Cinder volume.</paragraph>
                        <paragraph>We expect a volume id in the existing_ref that matches one in FSS.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'manage_existing_get_size()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.manage_existing_get_size',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.manage_existing_get_size" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.manage_existing_get_size" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.manage_existing_get_size"><desc_name xml:space="preserve">manage_existing_get_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">existing_ref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get size of an existing FSS volume.</paragraph>
                        <paragraph>We expect a volume id in the existing_ref that matches one in FSS.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove_export()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.remove_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.remove_export" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.remove_export" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.remove_export"><desc_name xml:space="preserve">remove_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'unmanage()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.unmanage',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.unmanage" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.unmanage" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.unmanage"><desc_name xml:space="preserve">unmanage</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Remove Cinder management from FSS volume</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_consistencygroup()\ (FalconstorBaseDriver\ method)',\ 'cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.update_consistencygroup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FalconstorBaseDriver" first="False" fullname="FalconstorBaseDriver.update_consistencygroup" ids="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.update_consistencygroup" module="cinder.volume.drivers.falconstor.fss_common" names="cinder.volume.drivers.falconstor.fss_common.FalconstorBaseDriver.update_consistencygroup"><desc_name xml:space="preserve">update_consistencygroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">group</desc_parameter><desc_parameter xml:space="preserve">add_volumes=None</desc_parameter><desc_parameter xml:space="preserve">remove_volumes=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
