<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.backup.drivers.swift.rst">
    <section ids="module-cinder.backup.drivers.swift the-cinder-backup-drivers-swift-module" names="the\ cinder.backup.drivers.swift\ module">
        <title>The <reference internal="True" refid="module-cinder.backup.drivers.swift" reftitle="cinder.backup.drivers.swift"><literal classes="xref py py-mod">cinder.backup.drivers.swift</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.backup.drivers.swift\ (module)',\ 'module-cinder.backup.drivers.swift',\ '',\ None]"></index>
        <paragraph>Implementation of a backup service that uses Swift as the backend</paragraph>
        <paragraph><strong>Related Flags</strong></paragraph>
        <field_list>
            <field>
                <field_name>backup_swift_url</field_name>
                <field_body>
                    <paragraph>The URL of the Swift endpoint (default: None, use catalog).</paragraph>
                </field_body>
            </field>
            <field>
                <field_name>backup_swift_auth_url</field_name>
                <field_body>
                    <paragraph>The URL of the Keystone endpoint for authentication
                        (default: None, use catalog).</paragraph>
                </field_body>
            </field>
            <field>
                <field_name>swift_catalog_info</field_name>
                <field_body>
                    <paragraph>Info to match when looking for swift in the service ‘
                        catalog.</paragraph>
                </field_body>
            </field>
            <field>
                <field_name>keystone_catalog_info</field_name>
                <field_body>
                    <paragraph>Info to match when looking for keystone in the service
                        catalog.</paragraph>
                </field_body>
            </field>
            <field>
                <field_name>backup_swift_object_size</field_name>
                <field_body>
                    <paragraph>The size in bytes of the Swift objects used
                        for volume backups (default: 52428800).</paragraph>
                </field_body>
            </field>
            <field>
                <field_name>backup_swift_retry_attempts</field_name>
                <field_body>
                    <paragraph>The number of retries to make for Swift
                        operations (default: 10).</paragraph>
                </field_body>
            </field>
            <field>
                <field_name>backup_swift_retry_backoff</field_name>
                <field_body>
                    <paragraph>The backoff time in seconds between retrying
                        failed Swift operations (default: 10).</paragraph>
                </field_body>
            </field>
            <field>
                <field_name>backup_compression_algorithm</field_name>
                <field_body>
                    <paragraph>Compression algorithm to use for volume
                        backups. Supported options are:
                        None (to disable), zlib and bz2 (default: zlib)</paragraph>
                </field_body>
            </field>
            <field>
                <field_name>backup_swift_ca_cert_file</field_name>
                <field_body>
                    <paragraph>The location of the CA certificate file to use
                        for swift client requests (default: None)</paragraph>
                </field_body>
            </field>
            <field>
                <field_name>backup_swift_auth_insecure</field_name>
                <field_body>
                    <paragraph>If true, bypass verification of server’s
                        certificate for SSL connections (default: False)</paragraph>
                </field_body>
            </field>
        </field_list>
        <index entries="['single',\ 'SwiftBackupDriver\ (class\ in\ cinder.backup.drivers.swift)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SwiftBackupDriver" ids="cinder.backup.drivers.swift.SwiftBackupDriver" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">SwiftBackupDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">db=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.backup.chunkeddriver.ChunkedBackupDriver" refuri="cinder.backup.chunkeddriver#cinder.backup.chunkeddriver.ChunkedBackupDriver"><literal classes="xref py py-class">cinder.backup.chunkeddriver.ChunkedBackupDriver</literal></reference></paragraph>
                <paragraph>Provides backup, restore and delete of backup objects within Swift.</paragraph>
                <index entries="['single',\ 'SwiftBackupDriver.SwiftObjectReader\ (class\ in\ cinder.backup.drivers.swift)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectReader',\ '',\ None]"></index>
                <desc desctype="class" domain="py" noindex="False" objtype="class">
                    <desc_signature class="SwiftBackupDriver" first="False" fullname="SwiftBackupDriver.SwiftObjectReader" ids="cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectReader" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectReader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">SwiftObjectReader</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">container</desc_parameter><desc_parameter xml:space="preserve">object_name</desc_parameter><desc_parameter xml:space="preserve">conn</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                        <index entries="['single',\ 'read()\ (SwiftBackupDriver.SwiftObjectReader\ method)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectReader.read',\ '',\ None]"></index>
                        <desc desctype="method" domain="py" noindex="False" objtype="method">
                            <desc_signature class="SwiftBackupDriver.SwiftObjectReader" first="False" fullname="SwiftBackupDriver.SwiftObjectReader.read" ids="cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectReader.read" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectReader.read"><desc_name xml:space="preserve">read</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'SwiftBackupDriver.SwiftObjectWriter\ (class\ in\ cinder.backup.drivers.swift)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectWriter',\ '',\ None]"></index>
                <desc desctype="class" domain="py" noindex="False" objtype="class">
                    <desc_signature class="SwiftBackupDriver" first="False" fullname="SwiftBackupDriver.SwiftObjectWriter" ids="cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectWriter" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectWriter"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">SwiftObjectWriter</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">container</desc_parameter><desc_parameter xml:space="preserve">object_name</desc_parameter><desc_parameter xml:space="preserve">conn</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                        <index entries="['single',\ 'close()\ (SwiftBackupDriver.SwiftObjectWriter\ method)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectWriter.close',\ '',\ None]"></index>
                        <desc desctype="method" domain="py" noindex="False" objtype="method">
                            <desc_signature class="SwiftBackupDriver.SwiftObjectWriter" first="False" fullname="SwiftBackupDriver.SwiftObjectWriter.close" ids="cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectWriter.close" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectWriter.close"><desc_name xml:space="preserve">close</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'write()\ (SwiftBackupDriver.SwiftObjectWriter\ method)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectWriter.write',\ '',\ None]"></index>
                        <desc desctype="method" domain="py" noindex="False" objtype="method">
                            <desc_signature class="SwiftBackupDriver.SwiftObjectWriter" first="False" fullname="SwiftBackupDriver.SwiftObjectWriter.write" ids="cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectWriter.write" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.SwiftObjectWriter.write"><desc_name xml:space="preserve">write</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">data</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_setup_errors()\ (SwiftBackupDriver\ method)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.check_for_setup_errors',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SwiftBackupDriver" first="False" fullname="SwiftBackupDriver.check_for_setup_errors" ids="cinder.backup.drivers.swift.SwiftBackupDriver.check_for_setup_errors" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.check_for_setup_errors"><desc_name xml:space="preserve">check_for_setup_errors</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_object()\ (SwiftBackupDriver\ method)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.delete_object',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SwiftBackupDriver" first="False" fullname="SwiftBackupDriver.delete_object" ids="cinder.backup.drivers.swift.SwiftBackupDriver.delete_object" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.delete_object"><desc_name xml:space="preserve">delete_object</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">container</desc_parameter><desc_parameter xml:space="preserve">object_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Deletes a backup object from a Swift object store.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_container_entries()\ (SwiftBackupDriver\ method)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.get_container_entries',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SwiftBackupDriver" first="False" fullname="SwiftBackupDriver.get_container_entries" ids="cinder.backup.drivers.swift.SwiftBackupDriver.get_container_entries" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.get_container_entries"><desc_name xml:space="preserve">get_container_entries</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">container</desc_parameter><desc_parameter xml:space="preserve">prefix</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get container entry names</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_extra_metadata()\ (SwiftBackupDriver\ method)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.get_extra_metadata',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SwiftBackupDriver" first="False" fullname="SwiftBackupDriver.get_extra_metadata" ids="cinder.backup.drivers.swift.SwiftBackupDriver.get_extra_metadata" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.get_extra_metadata"><desc_name xml:space="preserve">get_extra_metadata</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backup</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Swift driver does not use any extra metadata.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_object_reader()\ (SwiftBackupDriver\ method)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.get_object_reader',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SwiftBackupDriver" first="False" fullname="SwiftBackupDriver.get_object_reader" ids="cinder.backup.drivers.swift.SwiftBackupDriver.get_object_reader" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.get_object_reader"><desc_name xml:space="preserve">get_object_reader</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">container</desc_parameter><desc_parameter xml:space="preserve">object_name</desc_parameter><desc_parameter xml:space="preserve">extra_metadata=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return reader object.</paragraph>
                        <paragraph>Returns a reader object that retrieves a chunk of backed-up volume data
                            from a Swift object store.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_object_writer()\ (SwiftBackupDriver\ method)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.get_object_writer',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SwiftBackupDriver" first="False" fullname="SwiftBackupDriver.get_object_writer" ids="cinder.backup.drivers.swift.SwiftBackupDriver.get_object_writer" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.get_object_writer"><desc_name xml:space="preserve">get_object_writer</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">container</desc_parameter><desc_parameter xml:space="preserve">object_name</desc_parameter><desc_parameter xml:space="preserve">extra_metadata=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return a writer object.</paragraph>
                        <paragraph>Returns a writer object that stores a chunk of volume data in a
                            Swift object store.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize()\ (SwiftBackupDriver\ method)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.initialize',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SwiftBackupDriver" first="False" fullname="SwiftBackupDriver.initialize" ids="cinder.backup.drivers.swift.SwiftBackupDriver.initialize" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.initialize"><desc_name xml:space="preserve">initialize</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'put_container()\ (SwiftBackupDriver\ method)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.put_container',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SwiftBackupDriver" first="False" fullname="SwiftBackupDriver.put_container" ids="cinder.backup.drivers.swift.SwiftBackupDriver.put_container" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.put_container"><desc_name xml:space="preserve">put_container</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">container</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create the container if needed. No failure if it pre-exists.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_container_name()\ (SwiftBackupDriver\ method)',\ 'cinder.backup.drivers.swift.SwiftBackupDriver.update_container_name',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SwiftBackupDriver" first="False" fullname="SwiftBackupDriver.update_container_name" ids="cinder.backup.drivers.swift.SwiftBackupDriver.update_container_name" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.SwiftBackupDriver.update_container_name"><desc_name xml:space="preserve">update_container_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">backup</desc_parameter><desc_parameter xml:space="preserve">container</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Use the container name as provided - don’t update.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_backup_driver()\ (in\ module\ cinder.backup.drivers.swift)',\ 'cinder.backup.drivers.swift.get_backup_driver',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_backup_driver" ids="cinder.backup.drivers.swift.get_backup_driver" module="cinder.backup.drivers.swift" names="cinder.backup.drivers.swift.get_backup_driver"><desc_name xml:space="preserve">get_backup_driver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </section>
</document>
