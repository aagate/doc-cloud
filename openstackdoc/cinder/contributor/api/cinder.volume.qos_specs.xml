<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.qos_specs.rst">
    <section ids="module-cinder.volume.qos_specs the-cinder-volume-qos-specs-module" names="the\ cinder.volume.qos_specs\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.qos_specs" reftitle="cinder.volume.qos_specs"><literal classes="xref py py-mod">cinder.volume.qos_specs</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.qos_specs\ (module)',\ 'module-cinder.volume.qos_specs',\ '',\ None]"></index>
        <paragraph>The QoS Specs Implementation</paragraph>
        <index entries="['single',\ 'associate_qos_with_type()\ (in\ module\ cinder.volume.qos_specs)',\ 'cinder.volume.qos_specs.associate_qos_with_type',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="associate_qos_with_type" ids="cinder.volume.qos_specs.associate_qos_with_type" module="cinder.volume.qos_specs" names="cinder.volume.qos_specs.associate_qos_with_type"><desc_name xml:space="preserve">associate_qos_with_type</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">specs_id</desc_parameter><desc_parameter xml:space="preserve">type_id</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Associate qos_specs with volume type.</paragraph>
                <paragraph>Associate target qos specs with specific volume type.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">specs_id</literal_strong> – qos specs ID to associate with</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">type_id</literal_strong> – volume type ID to associate with</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Raises</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.VolumeTypeNotFound" refuri="cinder.exception#cinder.exception.VolumeTypeNotFound"><literal_strong>VolumeTypeNotFound</literal_strong></reference> – if volume type doesn’t exist</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.QoSSpecsNotFound" refuri="cinder.exception#cinder.exception.QoSSpecsNotFound"><literal_strong>QoSSpecsNotFound</literal_strong></reference> – if qos specs doesn’t exist</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.InvalidVolumeType" refuri="cinder.exception#cinder.exception.InvalidVolumeType"><literal_strong>InvalidVolumeType</literal_strong></reference> – if volume type is already associated
                                        with qos specs other than given one.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><reference internal="True" reftitle="cinder.exception.QoSSpecsAssociateFailed" refuri="cinder.exception#cinder.exception.QoSSpecsAssociateFailed"><literal_strong>QoSSpecsAssociateFailed</literal_strong></reference> – if there was general DB error</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'create()\ (in\ module\ cinder.volume.qos_specs)',\ 'cinder.volume.qos_specs.create',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="create" ids="cinder.volume.qos_specs.create" module="cinder.volume.qos_specs" names="cinder.volume.qos_specs.create"><desc_name xml:space="preserve">create</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">specs=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Creates qos_specs.</paragraph>
                <definition_list>
                    <definition_list_item>
                        <term>:param specs dictionary that contains specifications for QoS</term>
                        <definition>
                            <definition_list>
                                <definition_list_item>
                                    <term>e.g. {‘consumer’: ‘front-end’,</term>
                                    <definition>
                                        <paragraph>‘total_iops_sec’: 1000,
                                            ‘total_bytes_sec’: 1024000}</paragraph>
                                    </definition>
                                </definition_list_item>
                            </definition_list>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </desc_content>
        </desc>
        <index entries="['single',\ 'delete()\ (in\ module\ cinder.volume.qos_specs)',\ 'cinder.volume.qos_specs.delete',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="delete" ids="cinder.volume.qos_specs.delete" module="cinder.volume.qos_specs" names="cinder.volume.qos_specs.delete"><desc_name xml:space="preserve">delete</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">qos_specs_id</desc_parameter><desc_parameter xml:space="preserve">force=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Marks qos specs as deleted.</paragraph>
                <paragraph>‘force’ parameter is a flag to determine whether should destroy
                    should continue when there were entities associated with the qos specs.
                    force=True indicates caller would like to mark qos specs as deleted
                    even if there was entities associate with target qos specs.
                    Trying to delete a qos specs still associated with entities will
                    cause QoSSpecsInUse exception if force=False (default).</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'delete_keys()\ (in\ module\ cinder.volume.qos_specs)',\ 'cinder.volume.qos_specs.delete_keys',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="delete_keys" ids="cinder.volume.qos_specs.delete_keys" module="cinder.volume.qos_specs" names="cinder.volume.qos_specs.delete_keys"><desc_name xml:space="preserve">delete_keys</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">qos_specs_id</desc_parameter><desc_parameter xml:space="preserve">keys</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Marks specified key of target qos specs as deleted.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'disassociate_all()\ (in\ module\ cinder.volume.qos_specs)',\ 'cinder.volume.qos_specs.disassociate_all',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="disassociate_all" ids="cinder.volume.qos_specs.disassociate_all" module="cinder.volume.qos_specs" names="cinder.volume.qos_specs.disassociate_all"><desc_name xml:space="preserve">disassociate_all</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">specs_id</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Disassociate qos_specs from all entities.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'disassociate_qos_specs()\ (in\ module\ cinder.volume.qos_specs)',\ 'cinder.volume.qos_specs.disassociate_qos_specs',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="disassociate_qos_specs" ids="cinder.volume.qos_specs.disassociate_qos_specs" module="cinder.volume.qos_specs" names="cinder.volume.qos_specs.disassociate_qos_specs"><desc_name xml:space="preserve">disassociate_qos_specs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">specs_id</desc_parameter><desc_parameter xml:space="preserve">type_id</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Disassociate qos_specs from volume type.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_all_specs()\ (in\ module\ cinder.volume.qos_specs)',\ 'cinder.volume.qos_specs.get_all_specs',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_all_specs" ids="cinder.volume.qos_specs.get_all_specs" module="cinder.volume.qos_specs" names="cinder.volume.qos_specs.get_all_specs"><desc_name xml:space="preserve">get_all_specs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">filters=None</desc_parameter><desc_parameter xml:space="preserve">marker=None</desc_parameter><desc_parameter xml:space="preserve">limit=None</desc_parameter><desc_parameter xml:space="preserve">offset=None</desc_parameter><desc_parameter xml:space="preserve">sort_keys=None</desc_parameter><desc_parameter xml:space="preserve">sort_dirs=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Get all non-deleted qos specs.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_associations()\ (in\ module\ cinder.volume.qos_specs)',\ 'cinder.volume.qos_specs.get_associations',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_associations" ids="cinder.volume.qos_specs.get_associations" module="cinder.volume.qos_specs" names="cinder.volume.qos_specs.get_associations"><desc_name xml:space="preserve">get_associations</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">qos_specs_id</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Get all associations of given qos specs.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_qos_specs()\ (in\ module\ cinder.volume.qos_specs)',\ 'cinder.volume.qos_specs.get_qos_specs',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_qos_specs" ids="cinder.volume.qos_specs.get_qos_specs" module="cinder.volume.qos_specs" names="cinder.volume.qos_specs.get_qos_specs"><desc_name xml:space="preserve">get_qos_specs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ctxt</desc_parameter><desc_parameter xml:space="preserve">spec_id</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Retrieves single qos specs by id.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'update()\ (in\ module\ cinder.volume.qos_specs)',\ 'cinder.volume.qos_specs.update',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="update" ids="cinder.volume.qos_specs.update" module="cinder.volume.qos_specs" names="cinder.volume.qos_specs.update"><desc_name xml:space="preserve">update</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">qos_specs_id</desc_parameter><desc_parameter xml:space="preserve">specs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Update qos specs.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">specs</literal_strong> – <definition_list><definition_list_item><term>dictionary that contains key/value pairs for updating</term><definition><paragraph>existing specs.</paragraph></definition></definition_list_item><definition_list_item><term>e.g. {‘consumer’: ‘front-end’,</term><definition><paragraph>’total_iops_sec’: 500,
                                                ‘total_bytes_sec’: 512000,}</paragraph></definition></definition_list_item></definition_list></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
    </section>
</document>
