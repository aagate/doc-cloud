<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.hitachi.vsp_utils.rst">
    <section ids="module-cinder.volume.drivers.hitachi.vsp_utils the-cinder-volume-drivers-hitachi-vsp-utils-module" names="the\ cinder.volume.drivers.hitachi.vsp_utils\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.hitachi.vsp_utils" reftitle="cinder.volume.drivers.hitachi.vsp_utils"><literal classes="xref py py-mod">cinder.volume.drivers.hitachi.vsp_utils</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.hitachi.vsp_utils\ (module)',\ 'module-cinder.volume.drivers.hitachi.vsp_utils',\ '',\ None]"></index>
        <paragraph>Utility module for Hitachi VSP Driver.</paragraph>
        <index entries="['single',\ 'MSG\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.MSG',\ '',\ None]"></index>
        <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
            <desc_signature class="" first="False" fullname="MSG" ids="cinder.volume.drivers.hitachi.vsp_utils.MSG" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.MSG"><desc_name xml:space="preserve">MSG</desc_name></desc_signature>
            <desc_content>
                <paragraph>alias of <reference internal="True" refid="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg" reftitle="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg"><literal classes="xref py py-class">VSPMsg</literal></reference></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VSPMsg\ (class\ in\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="VSPMsg" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">VSPMsg</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">error_info</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">enum.Enum</literal></paragraph>
                <paragraph>messages for Hitachi VSP Driver.</paragraph>
                <index entries="['single',\ 'ADD_HBA_WWN_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.ADD_HBA_WWN_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.ADD_HBA_WWN_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.ADD_HBA_WWN_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.ADD_HBA_WWN_FAILED"><desc_name xml:space="preserve">ADD_HBA_WWN_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 317, 'loglevel': 30, 'msg': 'Failed to assign the WWN. (port: %(port)s, gid: %(gid)s, wwn: %(wwn)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ADD_PAIR_TARGET_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.ADD_PAIR_TARGET_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.ADD_PAIR_TARGET_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.ADD_PAIR_TARGET_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.ADD_PAIR_TARGET_FAILED"><desc_name xml:space="preserve">ADD_PAIR_TARGET_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 638, 'loglevel': 40, 'msg': 'Failed to add the pair target.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'CONNECT_VOLUME_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CONNECT_VOLUME_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.CONNECT_VOLUME_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CONNECT_VOLUME_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CONNECT_VOLUME_FAILED"><desc_name xml:space="preserve">CONNECT_VOLUME_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 634, 'loglevel': 40, 'msg': 'Failed to attach the logical device. (LDEV: %(ldev)s, reason: %(reason)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'CREATE_HORCM_CONF_FILE_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CREATE_HORCM_CONF_FILE_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.CREATE_HORCM_CONF_FILE_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CREATE_HORCM_CONF_FILE_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CREATE_HORCM_CONF_FILE_FAILED"><desc_name xml:space="preserve">CREATE_HORCM_CONF_FILE_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 632, 'loglevel': 40, 'msg': 'Failed to open a file. (file: %(file)s, ret: %(ret)s, stderr: %(err)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'CREATE_HOST_GROUP_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CREATE_HOST_GROUP_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.CREATE_HOST_GROUP_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CREATE_HOST_GROUP_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CREATE_HOST_GROUP_FAILED"><desc_name xml:space="preserve">CREATE_HOST_GROUP_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 308, 'loglevel': 30, 'msg': 'A host group could not be added. (port: %(port)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'CREATE_ISCSI_TARGET_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CREATE_ISCSI_TARGET_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.CREATE_ISCSI_TARGET_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CREATE_ISCSI_TARGET_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CREATE_ISCSI_TARGET_FAILED"><desc_name xml:space="preserve">CREATE_ISCSI_TARGET_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 309, 'loglevel': 30, 'msg': 'An iSCSI target could not be added. (port: %(port)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'CREATE_LDEV_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CREATE_LDEV_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.CREATE_LDEV_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CREATE_LDEV_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.CREATE_LDEV_FAILED"><desc_name xml:space="preserve">CREATE_LDEV_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 636, 'loglevel': 40, 'msg': 'Failed to add the logical device.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DELETE_DEVICE_GRP_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_DEVICE_GRP_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.DELETE_DEVICE_GRP_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_DEVICE_GRP_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_DEVICE_GRP_FAILED"><desc_name xml:space="preserve">DELETE_DEVICE_GRP_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 327, 'loglevel': 30, 'msg': 'Failed to delete the configuration of full copy pair. (P-VOL: %(pvol)s, S-VOL: %(svol)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DELETE_LDEV_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_LDEV_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.DELETE_LDEV_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_LDEV_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_LDEV_FAILED"><desc_name xml:space="preserve">DELETE_LDEV_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 313, 'loglevel': 30, 'msg': 'Failed to delete a logical device. (LDEV: %(ldev)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DELETE_SI_PAIR_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_SI_PAIR_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.DELETE_SI_PAIR_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_SI_PAIR_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_SI_PAIR_FAILED"><desc_name xml:space="preserve">DELETE_SI_PAIR_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 324, 'loglevel': 30, 'msg': 'Failed to delete full copy pair. (P-VOL: %(pvol)s, S-VOL: %(svol)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DELETE_TARGET_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_TARGET_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.DELETE_TARGET_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_TARGET_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_TARGET_FAILED"><desc_name xml:space="preserve">DELETE_TARGET_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 306, 'loglevel': 30, 'msg': 'A host group or an iSCSI target could not be deleted. (port: %(port)s, gid: %(id)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DELETE_TI_PAIR_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_TI_PAIR_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.DELETE_TI_PAIR_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_TI_PAIR_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DELETE_TI_PAIR_FAILED"><desc_name xml:space="preserve">DELETE_TI_PAIR_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 325, 'loglevel': 30, 'msg': 'Failed to delete thin copy pair. (P-VOL: %(pvol)s, S-VOL: %(svol)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DISCARD_ZERO_PAGE_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DISCARD_ZERO_PAGE_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.DISCARD_ZERO_PAGE_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DISCARD_ZERO_PAGE_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DISCARD_ZERO_PAGE_FAILED"><desc_name xml:space="preserve">DISCARD_ZERO_PAGE_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 315, 'loglevel': 30, 'msg': 'Failed to perform a zero-page reclamation. (LDEV: %(ldev)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DISCONNECT_VOLUME_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DISCONNECT_VOLUME_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.DISCONNECT_VOLUME_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DISCONNECT_VOLUME_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DISCONNECT_VOLUME_FAILED"><desc_name xml:space="preserve">DISCONNECT_VOLUME_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 329, 'loglevel': 30, 'msg': 'Failed to detach the logical device. (LDEV: %(ldev)s, reason: %(reason)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DRIVER_INITIALIZATION_START\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DRIVER_INITIALIZATION_START',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.DRIVER_INITIALIZATION_START" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DRIVER_INITIALIZATION_START" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DRIVER_INITIALIZATION_START"><desc_name xml:space="preserve">DRIVER_INITIALIZATION_START</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 4, 'loglevel': 20, 'msg': 'Initialization of %(driver)s %(version)s started.', 'suffix': 'I'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DRIVER_READY_FOR_USE\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DRIVER_READY_FOR_USE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.DRIVER_READY_FOR_USE" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DRIVER_READY_FOR_USE" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.DRIVER_READY_FOR_USE"><desc_name xml:space="preserve">DRIVER_READY_FOR_USE</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 3, 'loglevel': 20, 'msg': 'The storage backend can be used. (config_group: %(config_group)s)', 'suffix': 'I'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'HORCM_LOGIN_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_LOGIN_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.HORCM_LOGIN_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_LOGIN_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_LOGIN_FAILED"><desc_name xml:space="preserve">HORCM_LOGIN_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 323, 'loglevel': 30, 'msg': 'Failed to perform user authentication of HORCM. (user: %(user)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'HORCM_RESTART_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_RESTART_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.HORCM_RESTART_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_RESTART_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_RESTART_FAILED"><desc_name xml:space="preserve">HORCM_RESTART_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 609, 'loglevel': 40, 'msg': 'Failed to restart HORCM. (inst: %(inst)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'HORCM_RESTART_FOR_SI_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_RESTART_FOR_SI_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.HORCM_RESTART_FOR_SI_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_RESTART_FOR_SI_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_RESTART_FOR_SI_FAILED"><desc_name xml:space="preserve">HORCM_RESTART_FOR_SI_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 322, 'loglevel': 30, 'msg': 'Failed to reload the configuration of full copy pair. (inst: %(inst)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'HORCM_SHUTDOWN_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_SHUTDOWN_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.HORCM_SHUTDOWN_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_SHUTDOWN_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_SHUTDOWN_FAILED"><desc_name xml:space="preserve">HORCM_SHUTDOWN_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 608, 'loglevel': 40, 'msg': 'Failed to shutdown HORCM. (inst: %(inst)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'HORCM_START_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_START_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.HORCM_START_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_START_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.HORCM_START_FAILED"><desc_name xml:space="preserve">HORCM_START_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 320, 'loglevel': 30, 'msg': 'Failed to start HORCM. (inst: %(inst)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_LDEV_ATTR_FOR_MANAGE\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_ATTR_FOR_MANAGE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_LDEV_ATTR_FOR_MANAGE" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_ATTR_FOR_MANAGE" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_ATTR_FOR_MANAGE"><desc_name xml:space="preserve">INVALID_LDEV_ATTR_FOR_MANAGE</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 702, 'loglevel': 40, 'msg': 'Failed to manage the specified LDEV (%(ldev)s). The LDEV must be an unpaired %(ldevtype)s.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_LDEV_FOR_CONNECTION\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_CONNECTION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_LDEV_FOR_CONNECTION" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_CONNECTION" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_CONNECTION"><desc_name xml:space="preserve">INVALID_LDEV_FOR_CONNECTION</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 619, 'loglevel': 40, 'msg': 'The volume %(volume_id)s to be mapped was not found.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_LDEV_FOR_DELETION\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_DELETION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_LDEV_FOR_DELETION" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_DELETION" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_DELETION"><desc_name xml:space="preserve">INVALID_LDEV_FOR_DELETION</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 304, 'loglevel': 30, 'msg': 'Failed to specify a logical device to be deleted. (method: %(method)s, id: %(id)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_LDEV_FOR_EXTENSION\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_EXTENSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_LDEV_FOR_EXTENSION" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_EXTENSION" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_EXTENSION"><desc_name xml:space="preserve">INVALID_LDEV_FOR_EXTENSION</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 613, 'loglevel': 40, 'msg': 'The volume %(volume_id)s to be extended was not found.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_LDEV_FOR_MANAGE\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_MANAGE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_LDEV_FOR_MANAGE" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_MANAGE" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_MANAGE"><desc_name xml:space="preserve">INVALID_LDEV_FOR_MANAGE</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 707, 'loglevel': 40, 'msg': 'No valid value is specified for "source-id". A valid LDEV number must be specified in "source-id" to manage the volume.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_LDEV_FOR_UNMAPPING\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_UNMAPPING',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_LDEV_FOR_UNMAPPING" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_UNMAPPING" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_UNMAPPING"><desc_name xml:space="preserve">INVALID_LDEV_FOR_UNMAPPING</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 302, 'loglevel': 30, 'msg': 'Failed to specify a logical device for the volume %(volume_id)s to be unmapped.', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_LDEV_FOR_VOLUME_COPY\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_VOLUME_COPY',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_LDEV_FOR_VOLUME_COPY" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_VOLUME_COPY" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_FOR_VOLUME_COPY"><desc_name xml:space="preserve">INVALID_LDEV_FOR_VOLUME_COPY</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 624, 'loglevel': 40, 'msg': 'The %(type)s %(id)s source to be replicated was not found.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_LDEV_PORT_FOR_MANAGE\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_PORT_FOR_MANAGE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_LDEV_PORT_FOR_MANAGE" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_PORT_FOR_MANAGE" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_PORT_FOR_MANAGE"><desc_name xml:space="preserve">INVALID_LDEV_PORT_FOR_MANAGE</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 704, 'loglevel': 40, 'msg': 'Failed to manage the specified LDEV (%(ldev)s). The LDEV must not be mapped.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_LDEV_SIZE_FOR_MANAGE\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_SIZE_FOR_MANAGE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_LDEV_SIZE_FOR_MANAGE" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_SIZE_FOR_MANAGE" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_SIZE_FOR_MANAGE"><desc_name xml:space="preserve">INVALID_LDEV_SIZE_FOR_MANAGE</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 703, 'loglevel': 40, 'msg': 'Failed to manage the specified LDEV (%(ldev)s). The LDEV size must be expressed in gigabytes.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_LDEV_STATUS_FOR_COPY\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_STATUS_FOR_COPY',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_LDEV_STATUS_FOR_COPY" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_STATUS_FOR_COPY" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_STATUS_FOR_COPY"><desc_name xml:space="preserve">INVALID_LDEV_STATUS_FOR_COPY</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 612, 'loglevel': 40, 'msg': 'The source logical device to be replicated does not exist in the storage system. (LDEV: %(ldev)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_LDEV_TYPE_FOR_UNMANAGE\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_TYPE_FOR_UNMANAGE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_LDEV_TYPE_FOR_UNMANAGE" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_TYPE_FOR_UNMANAGE" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_LDEV_TYPE_FOR_UNMANAGE"><desc_name xml:space="preserve">INVALID_LDEV_TYPE_FOR_UNMANAGE</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 706, 'loglevel': 40, 'msg': 'Failed to unmanage the volume %(volume_id)s. The volume type must be %(volume_type)s.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_PARAMETER\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_PARAMETER',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_PARAMETER" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_PARAMETER" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_PARAMETER"><desc_name xml:space="preserve">INVALID_PARAMETER</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 601, 'loglevel': 40, 'msg': 'A parameter is invalid. (%(param)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_PARAMETER_VALUE\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_PARAMETER_VALUE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_PARAMETER_VALUE" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_PARAMETER_VALUE" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_PARAMETER_VALUE"><desc_name xml:space="preserve">INVALID_PARAMETER_VALUE</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 602, 'loglevel': 40, 'msg': 'A parameter value is invalid. (%(meta)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_VOLUME_SIZE_FOR_COPY\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_VOLUME_SIZE_FOR_COPY',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_VOLUME_SIZE_FOR_COPY" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_VOLUME_SIZE_FOR_COPY" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_VOLUME_SIZE_FOR_COPY"><desc_name xml:space="preserve">INVALID_VOLUME_SIZE_FOR_COPY</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 617, 'loglevel': 40, 'msg': 'Failed to create a volume from a %(type)s. The size of the new volume must be equal to or greater than the size of the original %(type)s. (new volume: %(volume_id)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_VOLUME_SIZE_FOR_TI\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_VOLUME_SIZE_FOR_TI',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_VOLUME_SIZE_FOR_TI" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_VOLUME_SIZE_FOR_TI" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_VOLUME_SIZE_FOR_TI"><desc_name xml:space="preserve">INVALID_VOLUME_SIZE_FOR_TI</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 621, 'loglevel': 40, 'msg': 'Failed to create a volume from a %(type)s. The size of the new volume must be equal to the size of the original %(type)s when the new volume is created by %(copy_method)s. (new volume: %(volume_id)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'INVALID_VOLUME_TYPE_FOR_EXTEND\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_VOLUME_TYPE_FOR_EXTEND',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.INVALID_VOLUME_TYPE_FOR_EXTEND" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_VOLUME_TYPE_FOR_EXTEND" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.INVALID_VOLUME_TYPE_FOR_EXTEND"><desc_name xml:space="preserve">INVALID_VOLUME_TYPE_FOR_EXTEND</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 618, 'loglevel': 40, 'msg': 'The volume %(volume_id)s could not be extended. The volume type must be Normal.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'LDEV_CREATION_WAIT_TIMEOUT\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.LDEV_CREATION_WAIT_TIMEOUT',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.LDEV_CREATION_WAIT_TIMEOUT" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.LDEV_CREATION_WAIT_TIMEOUT" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.LDEV_CREATION_WAIT_TIMEOUT"><desc_name xml:space="preserve">LDEV_CREATION_WAIT_TIMEOUT</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 653, 'loglevel': 40, 'msg': 'The creation of a logical device could not be completed. (LDEV: %(ldev)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'LDEV_DELETION_WAIT_TIMEOUT\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.LDEV_DELETION_WAIT_TIMEOUT',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.LDEV_DELETION_WAIT_TIMEOUT" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.LDEV_DELETION_WAIT_TIMEOUT" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.LDEV_DELETION_WAIT_TIMEOUT"><desc_name xml:space="preserve">LDEV_DELETION_WAIT_TIMEOUT</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 652, 'loglevel': 40, 'msg': 'Failed to delete a logical device. (LDEV: %(ldev)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'LDEV_NOT_EXIST\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.LDEV_NOT_EXIST',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.LDEV_NOT_EXIST" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.LDEV_NOT_EXIST" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.LDEV_NOT_EXIST"><desc_name xml:space="preserve">LDEV_NOT_EXIST</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 319, 'loglevel': 30, 'msg': 'The logical device does not exist in the storage system. (LDEV: %(ldev)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'MAP_LDEV_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.MAP_LDEV_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.MAP_LDEV_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.MAP_LDEV_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.MAP_LDEV_FAILED"><desc_name xml:space="preserve">MAP_LDEV_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 314, 'loglevel': 30, 'msg': 'Failed to map a logical device. (LDEV: %(ldev)s, port: %(port)s, id: %(id)s, lun: %(lun)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'METHOD_END\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.METHOD_END',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.METHOD_END" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.METHOD_END" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.METHOD_END"><desc_name xml:space="preserve">METHOD_END</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 2, 'loglevel': 20, 'msg': '%(method)s ended. (config_group: %(config_group)s)', 'suffix': 'I'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'METHOD_START\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.METHOD_START',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.METHOD_START" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.METHOD_START" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.METHOD_START"><desc_name xml:space="preserve">METHOD_START</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 0, 'loglevel': 20, 'msg': '%(method)s starts. (config_group: %(config_group)s)', 'suffix': 'I'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'NO_AVAILABLE_MIRROR_UNIT\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_AVAILABLE_MIRROR_UNIT',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.NO_AVAILABLE_MIRROR_UNIT" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_AVAILABLE_MIRROR_UNIT" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_AVAILABLE_MIRROR_UNIT"><desc_name xml:space="preserve">NO_AVAILABLE_MIRROR_UNIT</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 615, 'loglevel': 40, 'msg': 'A pair could not be created. The maximum number of pair is exceeded. (copy method: %(copy_method)s, P-VOL: %(pvol)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'NO_AVAILABLE_RESOURCE\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_AVAILABLE_RESOURCE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.NO_AVAILABLE_RESOURCE" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_AVAILABLE_RESOURCE" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_AVAILABLE_RESOURCE"><desc_name xml:space="preserve">NO_AVAILABLE_RESOURCE</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 648, 'loglevel': 40, 'msg': 'There are no resources available for use. (resource: %(resource)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'NO_CONNECTED_TARGET\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_CONNECTED_TARGET',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.NO_CONNECTED_TARGET" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_CONNECTED_TARGET" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_CONNECTED_TARGET"><desc_name xml:space="preserve">NO_CONNECTED_TARGET</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 649, 'loglevel': 40, 'msg': 'The host group or iSCSI target was not found.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'NO_HBA_WWN_ADDED_TO_HOST_GRP\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_HBA_WWN_ADDED_TO_HOST_GRP',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.NO_HBA_WWN_ADDED_TO_HOST_GRP" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_HBA_WWN_ADDED_TO_HOST_GRP" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_HBA_WWN_ADDED_TO_HOST_GRP"><desc_name xml:space="preserve">NO_HBA_WWN_ADDED_TO_HOST_GRP</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 614, 'loglevel': 40, 'msg': 'No WWN is assigned. (port: %(port)s, gid: %(gid)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'NO_MAPPING_FOR_LDEV\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_MAPPING_FOR_LDEV',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.NO_MAPPING_FOR_LDEV" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_MAPPING_FOR_LDEV" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.NO_MAPPING_FOR_LDEV"><desc_name xml:space="preserve">NO_MAPPING_FOR_LDEV</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 639, 'loglevel': 40, 'msg': 'Failed to map a logical device to any pair targets. (LDEV: %(ldev)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'OBJECT_CREATED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.OBJECT_CREATED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.OBJECT_CREATED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.OBJECT_CREATED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.OBJECT_CREATED"><desc_name xml:space="preserve">OBJECT_CREATED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 6, 'loglevel': 20, 'msg': 'Created %(object)s. (%(details)s)', 'suffix': 'I'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'OUTPUT_PARAMETER_VALUES\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.OUTPUT_PARAMETER_VALUES',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.OUTPUT_PARAMETER_VALUES" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.OUTPUT_PARAMETER_VALUES" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.OUTPUT_PARAMETER_VALUES"><desc_name xml:space="preserve">OUTPUT_PARAMETER_VALUES</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 1, 'loglevel': 20, 'msg': 'The parameter of the storage backend. (config_group: %(config_group)s)', 'suffix': 'I'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'POOL_INFO_RETRIEVAL_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.POOL_INFO_RETRIEVAL_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.POOL_INFO_RETRIEVAL_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.POOL_INFO_RETRIEVAL_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.POOL_INFO_RETRIEVAL_FAILED"><desc_name xml:space="preserve">POOL_INFO_RETRIEVAL_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 620, 'loglevel': 40, 'msg': 'Failed to provide information about a pool. (pool: %(pool)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'POOL_NOT_FOUND\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.POOL_NOT_FOUND',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.POOL_NOT_FOUND" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.POOL_NOT_FOUND" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.POOL_NOT_FOUND"><desc_name xml:space="preserve">POOL_NOT_FOUND</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 640, 'loglevel': 40, 'msg': 'A pool could not be found. (pool: %(pool)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'RESOURCE_NOT_FOUND\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.RESOURCE_NOT_FOUND',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.RESOURCE_NOT_FOUND" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.RESOURCE_NOT_FOUND" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.RESOURCE_NOT_FOUND"><desc_name xml:space="preserve">RESOURCE_NOT_FOUND</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 650, 'loglevel': 40, 'msg': 'The resource %(resource)s was not found.', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'SET_CONFIG_VALUE\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.SET_CONFIG_VALUE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.SET_CONFIG_VALUE" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.SET_CONFIG_VALUE" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.SET_CONFIG_VALUE"><desc_name xml:space="preserve">SET_CONFIG_VALUE</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 5, 'loglevel': 20, 'msg': 'Set %(object)s to %(value)s.', 'suffix': 'I'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'SI_PAIR_STATUS_WAIT_TIMEOUT\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.SI_PAIR_STATUS_WAIT_TIMEOUT',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.SI_PAIR_STATUS_WAIT_TIMEOUT" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.SI_PAIR_STATUS_WAIT_TIMEOUT" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.SI_PAIR_STATUS_WAIT_TIMEOUT"><desc_name xml:space="preserve">SI_PAIR_STATUS_WAIT_TIMEOUT</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 610, 'loglevel': 40, 'msg': 'The status change of full copy pair could not be completed. (S-VOL: %(svol)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'STORAGE_COMMAND_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.STORAGE_COMMAND_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.STORAGE_COMMAND_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.STORAGE_COMMAND_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.STORAGE_COMMAND_FAILED"><desc_name xml:space="preserve">STORAGE_COMMAND_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 600, 'loglevel': 40, 'msg': 'The command %(cmd)s failed. (ret: %(ret)s, stdout: %(out)s, stderr: %(err)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'TI_PAIR_STATUS_WAIT_TIMEOUT\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.TI_PAIR_STATUS_WAIT_TIMEOUT',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.TI_PAIR_STATUS_WAIT_TIMEOUT" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.TI_PAIR_STATUS_WAIT_TIMEOUT" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.TI_PAIR_STATUS_WAIT_TIMEOUT"><desc_name xml:space="preserve">TI_PAIR_STATUS_WAIT_TIMEOUT</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 611, 'loglevel': 40, 'msg': 'The status change of thin copy pair could not be completed. (S-VOL: %(svol)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'UNABLE_TO_DELETE_PAIR\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.UNABLE_TO_DELETE_PAIR',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.UNABLE_TO_DELETE_PAIR" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.UNABLE_TO_DELETE_PAIR" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.UNABLE_TO_DELETE_PAIR"><desc_name xml:space="preserve">UNABLE_TO_DELETE_PAIR</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 616, 'loglevel': 40, 'msg': 'A pair cannot be deleted. (P-VOL: %(pvol)s, S-VOL: %(svol)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'UNMAP_LDEV_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.UNMAP_LDEV_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.UNMAP_LDEV_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.UNMAP_LDEV_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.UNMAP_LDEV_FAILED"><desc_name xml:space="preserve">UNMAP_LDEV_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 310, 'loglevel': 30, 'msg': 'Failed to unmap a logical device. (LDEV: %(ldev)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VOLUME_COPY_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.VOLUME_COPY_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.VOLUME_COPY_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.VOLUME_COPY_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.VOLUME_COPY_FAILED"><desc_name xml:space="preserve">VOLUME_COPY_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 722, 'loglevel': 40, 'msg': 'Failed to copy a volume. (copy method: %(copy_method)s, P-VOL: %(pvol)s, S-VOL: %(svol)s)', 'suffix': 'E'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'WAIT_SI_PAIR_STATUS_FAILED\ (VSPMsg\ attribute)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.WAIT_SI_PAIR_STATUS_FAILED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.WAIT_SI_PAIR_STATUS_FAILED" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.WAIT_SI_PAIR_STATUS_FAILED" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.WAIT_SI_PAIR_STATUS_FAILED"><desc_name xml:space="preserve">WAIT_SI_PAIR_STATUS_FAILED</desc_name><desc_annotation xml:space="preserve"> = {'msg_id': 326, 'loglevel': 30, 'msg': 'Failed to change the status of full copy pair. (P-VOL: %(pvol)s, S-VOL: %(svol)s)', 'suffix': 'W'}</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'output_log()\ (VSPMsg\ method)',\ 'cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.output_log',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VSPMsg" first="False" fullname="VSPMsg.output_log" ids="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.output_log" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.VSPMsg.output_log"><desc_name xml:space="preserve">output_log</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Output the message to the log file and return the message.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'build_initiator_target_map()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.build_initiator_target_map',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="build_initiator_target_map" ids="cinder.volume.drivers.hitachi.vsp_utils.build_initiator_target_map" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.build_initiator_target_map"><desc_name xml:space="preserve">build_initiator_target_map</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">target_wwns</desc_parameter><desc_parameter xml:space="preserve">lookup_service</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a dictionary mapping server-wwns and lists of storage-wwns.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_ignore_error()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.check_ignore_error',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_ignore_error" ids="cinder.volume.drivers.hitachi.vsp_utils.check_ignore_error" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.check_ignore_error"><desc_name xml:space="preserve">check_ignore_error</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ignore_error</desc_parameter><desc_parameter xml:space="preserve">stderr</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return True if ignore_error is in stderr, False otherwise.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_opt_value()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.check_opt_value',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_opt_value" ids="cinder.volume.drivers.hitachi.vsp_utils.check_opt_value" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.check_opt_value"><desc_name xml:space="preserve">check_opt_value</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">conf</desc_parameter><desc_parameter xml:space="preserve">names</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Check if the parameter names and values are valid.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_opts()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.check_opts',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_opts" ids="cinder.volume.drivers.hitachi.vsp_utils.check_opts" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.check_opts"><desc_name xml:space="preserve">check_opts</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">conf</desc_parameter><desc_parameter xml:space="preserve">opts</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Check if the specified configuration is valid.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'check_timeout()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.check_timeout',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="check_timeout" ids="cinder.volume.drivers.hitachi.vsp_utils.check_timeout" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.check_timeout"><desc_name xml:space="preserve">check_timeout</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">start_time</desc_parameter><desc_parameter xml:space="preserve">timeout</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return True if the specified time has passed, False otherwise.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'execute()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.execute',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="execute" ids="cinder.volume.drivers.hitachi.vsp_utils.execute" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.execute"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*cmd</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Run the specified command and return its results.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_ldev()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.get_ldev',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_ldev" ids="cinder.volume.drivers.hitachi.vsp_utils.get_ldev" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.get_ldev"><desc_name xml:space="preserve">get_ldev</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">obj</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Get the LDEV number from the given object and return it as integer.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_volume_metadata()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.get_volume_metadata',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_volume_metadata" ids="cinder.volume.drivers.hitachi.vsp_utils.get_volume_metadata" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.get_volume_metadata"><desc_name xml:space="preserve">get_volume_metadata</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a dictionary of the metadata of the specified volume.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'import_object()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.import_object',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="import_object" ids="cinder.volume.drivers.hitachi.vsp_utils.import_object" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.import_object"><desc_name xml:space="preserve">import_object</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">conf</desc_parameter><desc_parameter xml:space="preserve">driver_info</desc_parameter><desc_parameter xml:space="preserve">db</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Import a class and return an instance of it.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'mask_password()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.mask_password',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="mask_password" ids="cinder.volume.drivers.hitachi.vsp_utils.mask_password" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.mask_password"><desc_name xml:space="preserve">mask_password</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cmd</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a string in which the password is masked.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'output_log()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.output_log',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="output_log" ids="cinder.volume.drivers.hitachi.vsp_utils.output_log" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.output_log"><desc_name xml:space="preserve">output_log</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">msg_enum</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Output the specified message to the log file and return the message.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'output_opt_info()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.output_opt_info',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="output_opt_info" ids="cinder.volume.drivers.hitachi.vsp_utils.output_opt_info" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.output_opt_info"><desc_name xml:space="preserve">output_opt_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">conf</desc_parameter><desc_parameter xml:space="preserve">names</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Output parameter names and values to the log file.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'output_opts()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.output_opts',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="output_opts" ids="cinder.volume.drivers.hitachi.vsp_utils.output_opts" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.output_opts"><desc_name xml:space="preserve">output_opts</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">conf</desc_parameter><desc_parameter xml:space="preserve">opts</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Output parameter names and values to the log file.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'output_start_end_log()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.output_start_end_log',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="output_start_end_log" ids="cinder.volume.drivers.hitachi.vsp_utils.output_start_end_log" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.output_start_end_log"><desc_name xml:space="preserve">output_start_end_log</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">func</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Output the log of the start and the end of the method.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'output_storage_cli_info()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.output_storage_cli_info',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="output_storage_cli_info" ids="cinder.volume.drivers.hitachi.vsp_utils.output_storage_cli_info" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.output_storage_cli_info"><desc_name xml:space="preserve">output_storage_cli_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">version</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Output storage CLI info to the log file.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'require_target_existed()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.require_target_existed',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="require_target_existed" ids="cinder.volume.drivers.hitachi.vsp_utils.require_target_existed" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.require_target_existed"><desc_name xml:space="preserve">require_target_existed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">targets</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Check if the target list includes one or more members.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'update_conn_info()\ (in\ module\ cinder.volume.drivers.hitachi.vsp_utils)',\ 'cinder.volume.drivers.hitachi.vsp_utils.update_conn_info',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="update_conn_info" ids="cinder.volume.drivers.hitachi.vsp_utils.update_conn_info" module="cinder.volume.drivers.hitachi.vsp_utils" names="cinder.volume.drivers.hitachi.vsp_utils.update_conn_info"><desc_name xml:space="preserve">update_conn_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">conn_info</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">lookup_service</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Set wwn mapping list to the connection info.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
