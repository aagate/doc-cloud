<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.volume.drivers.sheepdog.rst">
    <section ids="module-cinder.volume.drivers.sheepdog the-cinder-volume-drivers-sheepdog-module" names="the\ cinder.volume.drivers.sheepdog\ module">
        <title>The <reference internal="True" refid="module-cinder.volume.drivers.sheepdog" reftitle="cinder.volume.drivers.sheepdog"><literal classes="xref py py-mod">cinder.volume.drivers.sheepdog</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.volume.drivers.sheepdog\ (module)',\ 'module-cinder.volume.drivers.sheepdog',\ '',\ None]"></index>
        <paragraph>SheepDog Volume Driver.</paragraph>
        <index entries="['single',\ 'SheepdogClient\ (class\ in\ cinder.volume.drivers.sheepdog)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SheepdogClient" ids="cinder.volume.drivers.sheepdog.SheepdogClient" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">SheepdogClient</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">node_list</desc_parameter><desc_parameter xml:space="preserve">port</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Sheepdog command executor.</paragraph>
                <index entries="['single',\ 'DOG_RESP_CLUSTER_NOT_FORMATTED\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_CLUSTER_NOT_FORMATTED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.DOG_RESP_CLUSTER_NOT_FORMATTED" ids="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_CLUSTER_NOT_FORMATTED" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_CLUSTER_NOT_FORMATTED"><desc_name xml:space="preserve">DOG_RESP_CLUSTER_NOT_FORMATTED</desc_name><desc_annotation xml:space="preserve"> = 'Cluster status: Waiting for cluster to be formatted'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DOG_RESP_CLUSTER_RUNNING\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_CLUSTER_RUNNING',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.DOG_RESP_CLUSTER_RUNNING" ids="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_CLUSTER_RUNNING" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_CLUSTER_RUNNING"><desc_name xml:space="preserve">DOG_RESP_CLUSTER_RUNNING</desc_name><desc_annotation xml:space="preserve"> = 'Cluster status: running'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DOG_RESP_CLUSTER_WAITING\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_CLUSTER_WAITING',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.DOG_RESP_CLUSTER_WAITING" ids="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_CLUSTER_WAITING" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_CLUSTER_WAITING"><desc_name xml:space="preserve">DOG_RESP_CLUSTER_WAITING</desc_name><desc_annotation xml:space="preserve"> = 'Cluster status: Waiting for other nodes to join cluster'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DOG_RESP_CONNECTION_ERROR\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_CONNECTION_ERROR',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.DOG_RESP_CONNECTION_ERROR" ids="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_CONNECTION_ERROR" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_CONNECTION_ERROR"><desc_name xml:space="preserve">DOG_RESP_CONNECTION_ERROR</desc_name><desc_annotation xml:space="preserve"> = 'failed to connect to'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DOG_RESP_SNAPSHOT_EXISTED\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_SNAPSHOT_EXISTED',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.DOG_RESP_SNAPSHOT_EXISTED" ids="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_SNAPSHOT_EXISTED" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_SNAPSHOT_EXISTED"><desc_name xml:space="preserve">DOG_RESP_SNAPSHOT_EXISTED</desc_name><desc_annotation xml:space="preserve"> = 'tag (%(snapname)s) is existed'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DOG_RESP_SNAPSHOT_NOT_FOUND\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_SNAPSHOT_NOT_FOUND',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.DOG_RESP_SNAPSHOT_NOT_FOUND" ids="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_SNAPSHOT_NOT_FOUND" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_SNAPSHOT_NOT_FOUND"><desc_name xml:space="preserve">DOG_RESP_SNAPSHOT_NOT_FOUND</desc_name><desc_annotation xml:space="preserve"> = ': Failed to find requested tag'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DOG_RESP_SNAPSHOT_VDI_NOT_FOUND\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_SNAPSHOT_VDI_NOT_FOUND',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.DOG_RESP_SNAPSHOT_VDI_NOT_FOUND" ids="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_SNAPSHOT_VDI_NOT_FOUND" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_SNAPSHOT_VDI_NOT_FOUND"><desc_name xml:space="preserve">DOG_RESP_SNAPSHOT_VDI_NOT_FOUND</desc_name><desc_annotation xml:space="preserve"> = ': No VDI found'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DOG_RESP_VDI_ALREADY_EXISTS\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_VDI_ALREADY_EXISTS',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.DOG_RESP_VDI_ALREADY_EXISTS" ids="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_VDI_ALREADY_EXISTS" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_VDI_ALREADY_EXISTS"><desc_name xml:space="preserve">DOG_RESP_VDI_ALREADY_EXISTS</desc_name><desc_annotation xml:space="preserve"> = ': VDI exists already'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DOG_RESP_VDI_NOT_FOUND\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_VDI_NOT_FOUND',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.DOG_RESP_VDI_NOT_FOUND" ids="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_VDI_NOT_FOUND" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_VDI_NOT_FOUND"><desc_name xml:space="preserve">DOG_RESP_VDI_NOT_FOUND</desc_name><desc_annotation xml:space="preserve"> = ': No VDI found'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DOG_RESP_VDI_SHRINK_NOT_SUPPORT\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_VDI_SHRINK_NOT_SUPPORT',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.DOG_RESP_VDI_SHRINK_NOT_SUPPORT" ids="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_VDI_SHRINK_NOT_SUPPORT" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_VDI_SHRINK_NOT_SUPPORT"><desc_name xml:space="preserve">DOG_RESP_VDI_SHRINK_NOT_SUPPORT</desc_name><desc_annotation xml:space="preserve"> = 'Shrinking VDIs is not implemented'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'DOG_RESP_VDI_SIZE_TOO_LARGE\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_VDI_SIZE_TOO_LARGE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.DOG_RESP_VDI_SIZE_TOO_LARGE" ids="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_VDI_SIZE_TOO_LARGE" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.DOG_RESP_VDI_SIZE_TOO_LARGE"><desc_name xml:space="preserve">DOG_RESP_VDI_SIZE_TOO_LARGE</desc_name><desc_annotation xml:space="preserve"> = 'New VDI size is too large'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'QEMU_IMG_RESP_ALREADY_EXISTS\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_ALREADY_EXISTS',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.QEMU_IMG_RESP_ALREADY_EXISTS" ids="cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_ALREADY_EXISTS" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_ALREADY_EXISTS"><desc_name xml:space="preserve">QEMU_IMG_RESP_ALREADY_EXISTS</desc_name><desc_annotation xml:space="preserve"> = ': VDI exists already'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'QEMU_IMG_RESP_CONNECTION_ERROR\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_CONNECTION_ERROR',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.QEMU_IMG_RESP_CONNECTION_ERROR" ids="cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_CONNECTION_ERROR" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_CONNECTION_ERROR"><desc_name xml:space="preserve">QEMU_IMG_RESP_CONNECTION_ERROR</desc_name><desc_annotation xml:space="preserve"> = 'Failed to connect socket: Connection refused'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'QEMU_IMG_RESP_SIZE_TOO_LARGE\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_SIZE_TOO_LARGE',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.QEMU_IMG_RESP_SIZE_TOO_LARGE" ids="cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_SIZE_TOO_LARGE" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_SIZE_TOO_LARGE"><desc_name xml:space="preserve">QEMU_IMG_RESP_SIZE_TOO_LARGE</desc_name><desc_annotation xml:space="preserve"> = 'An image is too large.'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'QEMU_IMG_RESP_SNAPSHOT_NOT_FOUND\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_SNAPSHOT_NOT_FOUND',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.QEMU_IMG_RESP_SNAPSHOT_NOT_FOUND" ids="cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_SNAPSHOT_NOT_FOUND" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_SNAPSHOT_NOT_FOUND"><desc_name xml:space="preserve">QEMU_IMG_RESP_SNAPSHOT_NOT_FOUND</desc_name><desc_annotation xml:space="preserve"> = 'Failed to find the requested tag'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'QEMU_IMG_RESP_VDI_NOT_FOUND\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_VDI_NOT_FOUND',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.QEMU_IMG_RESP_VDI_NOT_FOUND" ids="cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_VDI_NOT_FOUND" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_IMG_RESP_VDI_NOT_FOUND"><desc_name xml:space="preserve">QEMU_IMG_RESP_VDI_NOT_FOUND</desc_name><desc_annotation xml:space="preserve"> = 'No vdi found'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'QEMU_SHEEPDOG_PREFIX\ (SheepdogClient\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_SHEEPDOG_PREFIX',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.QEMU_SHEEPDOG_PREFIX" ids="cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_SHEEPDOG_PREFIX" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.QEMU_SHEEPDOG_PREFIX"><desc_name xml:space="preserve">QEMU_SHEEPDOG_PREFIX</desc_name><desc_annotation xml:space="preserve"> = 'sheepdog:'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_cluster_status()\ (SheepdogClient\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.check_cluster_status',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.check_cluster_status" ids="cinder.volume.drivers.sheepdog.SheepdogClient.check_cluster_status" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.check_cluster_status"><desc_name xml:space="preserve">check_cluster_status</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'clone()\ (SheepdogClient\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.clone',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.clone" ids="cinder.volume.drivers.sheepdog.SheepdogClient.clone" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.clone"><desc_name xml:space="preserve">clone</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">src_vdiname</desc_parameter><desc_parameter xml:space="preserve">src_snapname</desc_parameter><desc_parameter xml:space="preserve">dst_vdiname</desc_parameter><desc_parameter xml:space="preserve">size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create()\ (SheepdogClient\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.create',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.create" ids="cinder.volume.drivers.sheepdog.SheepdogClient.create" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.create"><desc_name xml:space="preserve">create</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vdiname</desc_parameter><desc_parameter xml:space="preserve">size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (SheepdogClient\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.create_snapshot" ids="cinder.volume.drivers.sheepdog.SheepdogClient.create_snapshot" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vdiname</desc_parameter><desc_parameter xml:space="preserve">snapname</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete()\ (SheepdogClient\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.delete',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.delete" ids="cinder.volume.drivers.sheepdog.SheepdogClient.delete" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.delete"><desc_name xml:space="preserve">delete</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vdiname</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (SheepdogClient\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.delete_snapshot" ids="cinder.volume.drivers.sheepdog.SheepdogClient.delete_snapshot" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vdiname</desc_parameter><desc_parameter xml:space="preserve">snapname</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_addr()\ (SheepdogClient\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.get_addr',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.get_addr" ids="cinder.volume.drivers.sheepdog.SheepdogClient.get_addr" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.get_addr"><desc_name xml:space="preserve">get_addr</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get a random node in sheepdog cluster.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_vdi_info()\ (SheepdogClient\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.get_vdi_info',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.get_vdi_info" ids="cinder.volume.drivers.sheepdog.SheepdogClient.get_vdi_info" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.get_vdi_info"><desc_name xml:space="preserve">get_vdi_info</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vdiname</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (SheepdogClient\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.get_volume_stats" ids="cinder.volume.drivers.sheepdog.SheepdogClient.get_volume_stats" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'local_path()\ (SheepdogClient\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.local_path',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.local_path" ids="cinder.volume.drivers.sheepdog.SheepdogClient.local_path" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.local_path"><desc_name xml:space="preserve">local_path</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return a sheepdog location path.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'resize()\ (SheepdogClient\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.resize',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.resize" ids="cinder.volume.drivers.sheepdog.SheepdogClient.resize" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.resize"><desc_name xml:space="preserve">resize</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vdiname</desc_parameter><desc_parameter xml:space="preserve">size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_node_list()\ (SheepdogClient\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogClient.update_node_list',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogClient" first="False" fullname="SheepdogClient.update_node_list" ids="cinder.volume.drivers.sheepdog.SheepdogClient.update_node_list" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogClient.update_node_list"><desc_name xml:space="preserve">update_node_list</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SheepdogDriver\ (class\ in\ cinder.volume.drivers.sheepdog)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SheepdogDriver" ids="cinder.volume.drivers.sheepdog.SheepdogDriver" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">SheepdogDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" reftitle="cinder.volume.driver.VolumeDriver" refuri="cinder.volume.driver#cinder.volume.driver.VolumeDriver"><literal classes="xref py py-class">cinder.volume.driver.VolumeDriver</literal></reference></paragraph>
                <paragraph>Executes commands relating to Sheepdog Volumes.</paragraph>
                <index entries="['single',\ 'CI_WIKI_NAME\ (SheepdogDriver\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.CI_WIKI_NAME',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.CI_WIKI_NAME" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.CI_WIKI_NAME" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.CI_WIKI_NAME"><desc_name xml:space="preserve">CI_WIKI_NAME</desc_name><desc_annotation xml:space="preserve"> = 'Cinder_Jenkins'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'VERSION\ (SheepdogDriver\ attribute)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.VERSION',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.VERSION" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.VERSION" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.VERSION"><desc_name xml:space="preserve">VERSION</desc_name><desc_annotation xml:space="preserve"> = '1.0.0'</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'check_for_setup_error()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.check_for_setup_error',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.check_for_setup_error" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.check_for_setup_error" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.check_for_setup_error"><desc_name xml:space="preserve">check_for_setup_error</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check cluster status and update node list.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'clone_image()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.clone_image',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.clone_image" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.clone_image" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.clone_image"><desc_name xml:space="preserve">clone_image</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_location</desc_parameter><desc_parameter xml:space="preserve">image_meta</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a volume efficiently from an existing image.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_image_to_volume()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.copy_image_to_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.copy_image_to_volume" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.copy_image_to_volume" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.copy_image_to_volume"><desc_name xml:space="preserve">copy_image_to_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter><desc_parameter xml:space="preserve">image_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'copy_volume_to_image()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.copy_volume_to_image',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.copy_volume_to_image" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.copy_volume_to_image" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.copy_volume_to_image"><desc_name xml:space="preserve">copy_volume_to_image</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">image_service</desc_parameter><desc_parameter xml:space="preserve">image_meta</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Copy the volume to the specified image.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_cloned_volume()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.create_cloned_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.create_cloned_volume" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.create_cloned_volume" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.create_cloned_volume"><desc_name xml:space="preserve">create_cloned_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">src_vref</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Clone a sheepdog volume from another volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_export()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.create_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.create_export" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.create_export" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.create_export"><desc_name xml:space="preserve">create_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Export a volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_snapshot()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.create_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.create_snapshot" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.create_snapshot" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.create_snapshot"><desc_name xml:space="preserve">create_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a sheepdog snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.create_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.create_volume" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.create_volume" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.create_volume"><desc_name xml:space="preserve">create_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a sheepdog volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'create_volume_from_snapshot()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.create_volume_from_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.create_volume_from_snapshot" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.create_volume_from_snapshot" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.create_volume_from_snapshot"><desc_name xml:space="preserve">create_volume_from_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a sheepdog volume from a snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_snapshot()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.delete_snapshot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.delete_snapshot" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.delete_snapshot" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.delete_snapshot"><desc_name xml:space="preserve">delete_snapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">snapshot</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete a sheepdog snapshot.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'delete_volume()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.delete_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.delete_volume" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.delete_volume" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.delete_volume"><desc_name xml:space="preserve">delete_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ensure_export()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.ensure_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.ensure_export" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.ensure_export" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.ensure_export"><desc_name xml:space="preserve">ensure_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Safely and synchronously recreate an export for a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'extend_volume()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.extend_volume',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.extend_volume" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.extend_volume" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.extend_volume"><desc_name xml:space="preserve">extend_volume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">new_size</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Extend an Existing Volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'get_volume_stats()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.get_volume_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.get_volume_stats" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.get_volume_stats" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.get_volume_stats"><desc_name xml:space="preserve">get_volume_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'initialize_connection()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.initialize_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.initialize_connection" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.initialize_connection" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.initialize_connection"><desc_name xml:space="preserve">initialize_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove_export()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.remove_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.remove_export" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.remove_export" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.remove_export"><desc_name xml:space="preserve">remove_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Remove an export for a logical volume.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'terminate_connection()\ (SheepdogDriver\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogDriver.terminate_connection',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogDriver" first="False" fullname="SheepdogDriver.terminate_connection" ids="cinder.volume.drivers.sheepdog.SheepdogDriver.terminate_connection" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogDriver.terminate_connection"><desc_name xml:space="preserve">terminate_connection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">connector</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'SheepdogIOWrapper\ (class\ in\ cinder.volume.drivers.sheepdog)',\ 'cinder.volume.drivers.sheepdog.SheepdogIOWrapper',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SheepdogIOWrapper" ids="cinder.volume.drivers.sheepdog.SheepdogIOWrapper" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogIOWrapper"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">SheepdogIOWrapper</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">addr</desc_parameter><desc_parameter xml:space="preserve">port</desc_parameter><desc_parameter xml:space="preserve">volume</desc_parameter><desc_parameter xml:space="preserve">snapshot_name=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">io.RawIOBase</literal></paragraph>
                <paragraph>File-like object with Sheepdog backend.</paragraph>
                <index entries="['single',\ 'fileno()\ (SheepdogIOWrapper\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogIOWrapper.fileno',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogIOWrapper" first="False" fullname="SheepdogIOWrapper.fileno" ids="cinder.volume.drivers.sheepdog.SheepdogIOWrapper.fileno" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogIOWrapper.fileno"><desc_name xml:space="preserve">fileno</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Sheepdog does not have support for fileno so we raise IOError.</paragraph>
                        <paragraph>Raising IOError is recommended way to notify caller that interface is
                            not supported - see <reference refuri="http://docs.python.org/2/library/io.html#io.IOBase">http://docs.python.org/2/library/io.html#io.IOBase</reference></paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'flush()\ (SheepdogIOWrapper\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogIOWrapper.flush',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogIOWrapper" first="False" fullname="SheepdogIOWrapper.flush" ids="cinder.volume.drivers.sheepdog.SheepdogIOWrapper.flush" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogIOWrapper.flush"><desc_name xml:space="preserve">flush</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'read()\ (SheepdogIOWrapper\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogIOWrapper.read',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogIOWrapper" first="False" fullname="SheepdogIOWrapper.read" ids="cinder.volume.drivers.sheepdog.SheepdogIOWrapper.read" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogIOWrapper.read"><desc_name xml:space="preserve">read</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">length=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'seek()\ (SheepdogIOWrapper\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogIOWrapper.seek',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogIOWrapper" first="False" fullname="SheepdogIOWrapper.seek" ids="cinder.volume.drivers.sheepdog.SheepdogIOWrapper.seek" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogIOWrapper.seek"><desc_name xml:space="preserve">seek</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">offset</desc_parameter><desc_parameter xml:space="preserve">whence=0</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'tell()\ (SheepdogIOWrapper\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogIOWrapper.tell',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogIOWrapper" first="False" fullname="SheepdogIOWrapper.tell" ids="cinder.volume.drivers.sheepdog.SheepdogIOWrapper.tell" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogIOWrapper.tell"><desc_name xml:space="preserve">tell</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'write()\ (SheepdogIOWrapper\ method)',\ 'cinder.volume.drivers.sheepdog.SheepdogIOWrapper.write',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SheepdogIOWrapper" first="False" fullname="SheepdogIOWrapper.write" ids="cinder.volume.drivers.sheepdog.SheepdogIOWrapper.write" module="cinder.volume.drivers.sheepdog" names="cinder.volume.drivers.sheepdog.SheepdogIOWrapper.write"><desc_name xml:space="preserve">write</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">data</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
