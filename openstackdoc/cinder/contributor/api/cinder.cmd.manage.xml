<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/api/cinder.cmd.manage.rst">
    <section ids="module-cinder.cmd.manage the-cinder-cmd-manage-module" names="the\ cinder.cmd.manage\ module">
        <title>The <reference internal="True" refid="module-cinder.cmd.manage" reftitle="cinder.cmd.manage"><literal classes="xref py py-mod">cinder.cmd.manage</literal></reference> Module</title>
        <index entries="['single',\ 'cinder.cmd.manage\ (module)',\ 'module-cinder.cmd.manage',\ '',\ None]"></index>
        <paragraph>CLI interface for cinder management.</paragraph>
        <index entries="['single',\ 'BackupCommands\ (class\ in\ cinder.cmd.manage)',\ 'cinder.cmd.manage.BackupCommands',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BackupCommands" ids="cinder.cmd.manage.BackupCommands" module="cinder.cmd.manage" names="cinder.cmd.manage.BackupCommands"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">BackupCommands</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Methods for managing backups.</paragraph>
                <index entries="['single',\ 'list()\ (BackupCommands\ method)',\ 'cinder.cmd.manage.BackupCommands.list',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupCommands" first="False" fullname="BackupCommands.list" ids="cinder.cmd.manage.BackupCommands.list" module="cinder.cmd.manage" names="cinder.cmd.manage.BackupCommands.list"><desc_name xml:space="preserve">list</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>List all backups.</paragraph>
                        <paragraph>List all backups (including ones in progress) and the host
                            on which the backup operation is running.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_backup_host()\ (BackupCommands\ method)',\ 'cinder.cmd.manage.BackupCommands.update_backup_host',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackupCommands" first="False" fullname="BackupCommands.update_backup_host" ids="cinder.cmd.manage.BackupCommands.update_backup_host" module="cinder.cmd.manage" names="cinder.cmd.manage.BackupCommands.update_backup_host"><desc_name xml:space="preserve">update_backup_host</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">currenthost</desc_parameter><desc_parameter xml:space="preserve">newhost</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Modify the host name associated with a backup.</paragraph>
                        <paragraph>Particularly to recover from cases where one has moved
                            their Cinder Backup node, and not set backup_use_same_backend.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'BaseCommand\ (class\ in\ cinder.cmd.manage)',\ 'cinder.cmd.manage.BaseCommand',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BaseCommand" ids="cinder.cmd.manage.BaseCommand" module="cinder.cmd.manage" names="cinder.cmd.manage.BaseCommand"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">BaseCommand</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ClusterCommands\ (class\ in\ cinder.cmd.manage)',\ 'cinder.cmd.manage.ClusterCommands',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ClusterCommands" ids="cinder.cmd.manage.ClusterCommands" module="cinder.cmd.manage" names="cinder.cmd.manage.ClusterCommands"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ClusterCommands</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.cmd.manage.BaseCommand" reftitle="cinder.cmd.manage.BaseCommand"><literal classes="xref py py-class">cinder.cmd.manage.BaseCommand</literal></reference></paragraph>
                <paragraph>Methods for managing clusters.</paragraph>
                <index entries="['single',\ 'list()\ (ClusterCommands\ method)',\ 'cinder.cmd.manage.ClusterCommands.list',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ClusterCommands" first="False" fullname="ClusterCommands.list" ids="cinder.cmd.manage.ClusterCommands.list" module="cinder.cmd.manage" names="cinder.cmd.manage.ClusterCommands.list"><desc_name xml:space="preserve">list</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Show a list of all cinder services.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove()\ (ClusterCommands\ method)',\ 'cinder.cmd.manage.ClusterCommands.remove',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ClusterCommands" first="False" fullname="ClusterCommands.remove" ids="cinder.cmd.manage.ClusterCommands.remove" module="cinder.cmd.manage" names="cinder.cmd.manage.ClusterCommands.remove"><desc_name xml:space="preserve">remove</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">recursive</desc_parameter><desc_parameter xml:space="preserve">binary</desc_parameter><desc_parameter xml:space="preserve">cluster_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Completely removes a cluster.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'rename()\ (ClusterCommands\ method)',\ 'cinder.cmd.manage.ClusterCommands.rename',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ClusterCommands" first="False" fullname="ClusterCommands.rename" ids="cinder.cmd.manage.ClusterCommands.rename" module="cinder.cmd.manage" names="cinder.cmd.manage.ClusterCommands.rename"><desc_name xml:space="preserve">rename</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">partial</desc_parameter><desc_parameter xml:space="preserve">current</desc_parameter><desc_parameter xml:space="preserve">new</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Rename cluster name for Volumes and Consistency Groups.</paragraph>
                        <paragraph>Useful when you want to rename a cluster, particularly when the
                            backend_name has been modified in a multi-backend config or we have
                            moved from a single backend to multi-backend.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ConfigCommands\ (class\ in\ cinder.cmd.manage)',\ 'cinder.cmd.manage.ConfigCommands',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ConfigCommands" ids="cinder.cmd.manage.ConfigCommands" module="cinder.cmd.manage" names="cinder.cmd.manage.ConfigCommands"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ConfigCommands</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Class for exposing the flags defined by flag_file(s).</paragraph>
                <index entries="['single',\ 'list()\ (ConfigCommands\ method)',\ 'cinder.cmd.manage.ConfigCommands.list',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ConfigCommands" first="False" fullname="ConfigCommands.list" ids="cinder.cmd.manage.ConfigCommands.list" module="cinder.cmd.manage" names="cinder.cmd.manage.ConfigCommands.list"><desc_name xml:space="preserve">list</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">param=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>List parameters configured for cinder.</paragraph>
                        <paragraph>Lists all parameters configured for cinder unless an optional argument
                            is specified.  If the parameter is specified we only print the
                            requested parameter.  If the parameter is not found an appropriate
                            error is produced by .get*().</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ConsistencyGroupCommands\ (class\ in\ cinder.cmd.manage)',\ 'cinder.cmd.manage.ConsistencyGroupCommands',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ConsistencyGroupCommands" ids="cinder.cmd.manage.ConsistencyGroupCommands" module="cinder.cmd.manage" names="cinder.cmd.manage.ConsistencyGroupCommands"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ConsistencyGroupCommands</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Methods for managing consistency groups.</paragraph>
                <index entries="['single',\ 'update_cg_host()\ (ConsistencyGroupCommands\ method)',\ 'cinder.cmd.manage.ConsistencyGroupCommands.update_cg_host',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ConsistencyGroupCommands" first="False" fullname="ConsistencyGroupCommands.update_cg_host" ids="cinder.cmd.manage.ConsistencyGroupCommands.update_cg_host" module="cinder.cmd.manage" names="cinder.cmd.manage.ConsistencyGroupCommands.update_cg_host"><desc_name xml:space="preserve">update_cg_host</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">currenthost</desc_parameter><desc_parameter xml:space="preserve">newhost</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Modify the host name associated with a Consistency Group.</paragraph>
                        <paragraph>Particularly to recover from cases where one has moved
                            a host from single backend to multi-backend, or changed the host
                            configuration option, or modified the backend_name in a multi-backend
                            config.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'DbCommands\ (class\ in\ cinder.cmd.manage)',\ 'cinder.cmd.manage.DbCommands',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="DbCommands" ids="cinder.cmd.manage.DbCommands" module="cinder.cmd.manage" names="cinder.cmd.manage.DbCommands"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">DbCommands</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Class for managing the database.</paragraph>
                <index entries="['single',\ 'online_data_migrations()\ (DbCommands\ method)',\ 'cinder.cmd.manage.DbCommands.online_data_migrations',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbCommands" first="False" fullname="DbCommands.online_data_migrations" ids="cinder.cmd.manage.DbCommands.online_data_migrations" module="cinder.cmd.manage" names="cinder.cmd.manage.DbCommands.online_data_migrations"><desc_name xml:space="preserve">online_data_migrations</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">max_count=None</desc_parameter><desc_parameter xml:space="preserve">ignore_state=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Perform online data migrations for the release in batches.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'online_migrations\ (DbCommands\ attribute)',\ 'cinder.cmd.manage.DbCommands.online_migrations',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="DbCommands" first="False" fullname="DbCommands.online_migrations" ids="cinder.cmd.manage.DbCommands.online_migrations" module="cinder.cmd.manage" names="cinder.cmd.manage.DbCommands.online_migrations"><desc_name xml:space="preserve">online_migrations</desc_name><desc_annotation xml:space="preserve"> = ()</desc_annotation></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'purge()\ (DbCommands\ method)',\ 'cinder.cmd.manage.DbCommands.purge',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbCommands" first="False" fullname="DbCommands.purge" ids="cinder.cmd.manage.DbCommands.purge" module="cinder.cmd.manage" names="cinder.cmd.manage.DbCommands.purge"><desc_name xml:space="preserve">purge</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">age_in_days</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Purge deleted rows older than a given age from cinder tables.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'sync()\ (DbCommands\ method)',\ 'cinder.cmd.manage.DbCommands.sync',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbCommands" first="False" fullname="DbCommands.sync" ids="cinder.cmd.manage.DbCommands.sync" module="cinder.cmd.manage" names="cinder.cmd.manage.DbCommands.sync"><desc_name xml:space="preserve">sync</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">version=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Sync the database up to the most recent version.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'version()\ (DbCommands\ method)',\ 'cinder.cmd.manage.DbCommands.version',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="DbCommands" first="False" fullname="DbCommands.version" ids="cinder.cmd.manage.DbCommands.version" module="cinder.cmd.manage" names="cinder.cmd.manage.DbCommands.version"><desc_name xml:space="preserve">version</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Print the current database version.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'GetLogCommands\ (class\ in\ cinder.cmd.manage)',\ 'cinder.cmd.manage.GetLogCommands',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="GetLogCommands" ids="cinder.cmd.manage.GetLogCommands" module="cinder.cmd.manage" names="cinder.cmd.manage.GetLogCommands"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">GetLogCommands</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Get logging information.</paragraph>
                <index entries="['single',\ 'errors()\ (GetLogCommands\ method)',\ 'cinder.cmd.manage.GetLogCommands.errors',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GetLogCommands" first="False" fullname="GetLogCommands.errors" ids="cinder.cmd.manage.GetLogCommands.errors" module="cinder.cmd.manage" names="cinder.cmd.manage.GetLogCommands.errors"><desc_name xml:space="preserve">errors</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get all of the errors from the log files.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'syslog()\ (GetLogCommands\ method)',\ 'cinder.cmd.manage.GetLogCommands.syslog',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GetLogCommands" first="False" fullname="GetLogCommands.syslog" ids="cinder.cmd.manage.GetLogCommands.syslog" module="cinder.cmd.manage" names="cinder.cmd.manage.GetLogCommands.syslog"><desc_name xml:space="preserve">syslog</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">num_entries=10</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get &lt;num_entries&gt; of the cinder syslog events.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'HostCommands\ (class\ in\ cinder.cmd.manage)',\ 'cinder.cmd.manage.HostCommands',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="HostCommands" ids="cinder.cmd.manage.HostCommands" module="cinder.cmd.manage" names="cinder.cmd.manage.HostCommands"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">HostCommands</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>List hosts.</paragraph>
                <index entries="['single',\ 'list()\ (HostCommands\ method)',\ 'cinder.cmd.manage.HostCommands.list',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="HostCommands" first="False" fullname="HostCommands.list" ids="cinder.cmd.manage.HostCommands.list" module="cinder.cmd.manage" names="cinder.cmd.manage.HostCommands.list"><desc_name xml:space="preserve">list</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">zone=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Show a list of all physical hosts.</paragraph>
                        <paragraph>Can be filtered by zone.
                            args: [zone]</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ServiceCommands\ (class\ in\ cinder.cmd.manage)',\ 'cinder.cmd.manage.ServiceCommands',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ServiceCommands" ids="cinder.cmd.manage.ServiceCommands" module="cinder.cmd.manage" names="cinder.cmd.manage.ServiceCommands"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ServiceCommands</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <reference internal="True" refid="cinder.cmd.manage.BaseCommand" reftitle="cinder.cmd.manage.BaseCommand"><literal classes="xref py py-class">cinder.cmd.manage.BaseCommand</literal></reference></paragraph>
                <paragraph>Methods for managing services.</paragraph>
                <index entries="['single',\ 'list()\ (ServiceCommands\ method)',\ 'cinder.cmd.manage.ServiceCommands.list',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ServiceCommands" first="False" fullname="ServiceCommands.list" ids="cinder.cmd.manage.ServiceCommands.list" module="cinder.cmd.manage" names="cinder.cmd.manage.ServiceCommands.list"><desc_name xml:space="preserve">list</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Show a list of all cinder services.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'remove()\ (ServiceCommands\ method)',\ 'cinder.cmd.manage.ServiceCommands.remove',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ServiceCommands" first="False" fullname="ServiceCommands.remove" ids="cinder.cmd.manage.ServiceCommands.remove" module="cinder.cmd.manage" names="cinder.cmd.manage.ServiceCommands.remove"><desc_name xml:space="preserve">remove</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">binary</desc_parameter><desc_parameter xml:space="preserve">host_name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Completely removes a service.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'ShellCommands\ (class\ in\ cinder.cmd.manage)',\ 'cinder.cmd.manage.ShellCommands',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ShellCommands" ids="cinder.cmd.manage.ShellCommands" module="cinder.cmd.manage" names="cinder.cmd.manage.ShellCommands"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ShellCommands</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <index entries="['single',\ 'bpython()\ (ShellCommands\ method)',\ 'cinder.cmd.manage.ShellCommands.bpython',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ShellCommands" first="False" fullname="ShellCommands.bpython" ids="cinder.cmd.manage.ShellCommands.bpython" module="cinder.cmd.manage" names="cinder.cmd.manage.ShellCommands.bpython"><desc_name xml:space="preserve">bpython</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Runs a bpython shell.</paragraph>
                        <paragraph>Falls back to Ipython/python shell if unavailable</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'ipython()\ (ShellCommands\ method)',\ 'cinder.cmd.manage.ShellCommands.ipython',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ShellCommands" first="False" fullname="ShellCommands.ipython" ids="cinder.cmd.manage.ShellCommands.ipython" module="cinder.cmd.manage" names="cinder.cmd.manage.ShellCommands.ipython"><desc_name xml:space="preserve">ipython</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Runs an Ipython shell.</paragraph>
                        <paragraph>Falls back to Python shell if unavailable</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'python()\ (ShellCommands\ method)',\ 'cinder.cmd.manage.ShellCommands.python',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ShellCommands" first="False" fullname="ShellCommands.python" ids="cinder.cmd.manage.ShellCommands.python" module="cinder.cmd.manage" names="cinder.cmd.manage.ShellCommands.python"><desc_name xml:space="preserve">python</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Runs a python shell.</paragraph>
                        <paragraph>Falls back to Python shell if unavailable</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'run()\ (ShellCommands\ method)',\ 'cinder.cmd.manage.ShellCommands.run',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ShellCommands" first="False" fullname="ShellCommands.run" ids="cinder.cmd.manage.ShellCommands.run" module="cinder.cmd.manage" names="cinder.cmd.manage.ShellCommands.run"><desc_name xml:space="preserve">run</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">shell=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Runs a Python interactive interpreter.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'script()\ (ShellCommands\ method)',\ 'cinder.cmd.manage.ShellCommands.script',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ShellCommands" first="False" fullname="ShellCommands.script" ids="cinder.cmd.manage.ShellCommands.script" module="cinder.cmd.manage" names="cinder.cmd.manage.ShellCommands.script"><desc_name xml:space="preserve">script</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Runs the script from the specified path with flags set properly.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VersionCommands\ (class\ in\ cinder.cmd.manage)',\ 'cinder.cmd.manage.VersionCommands',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="VersionCommands" ids="cinder.cmd.manage.VersionCommands" module="cinder.cmd.manage" names="cinder.cmd.manage.VersionCommands"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">VersionCommands</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Class for exposing the codebase version.</paragraph>
                <index entries="['single',\ 'list()\ (VersionCommands\ method)',\ 'cinder.cmd.manage.VersionCommands.list',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VersionCommands" first="False" fullname="VersionCommands.list" ids="cinder.cmd.manage.VersionCommands.list" module="cinder.cmd.manage" names="cinder.cmd.manage.VersionCommands.list"><desc_name xml:space="preserve">list</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'VolumeCommands\ (class\ in\ cinder.cmd.manage)',\ 'cinder.cmd.manage.VolumeCommands',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="VolumeCommands" ids="cinder.cmd.manage.VolumeCommands" module="cinder.cmd.manage" names="cinder.cmd.manage.VolumeCommands"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">VolumeCommands</desc_name></desc_signature>
            <desc_content>
                <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                <paragraph>Methods for dealing with a cloud in an odd state.</paragraph>
                <index entries="['single',\ 'delete()\ (VolumeCommands\ method)',\ 'cinder.cmd.manage.VolumeCommands.delete',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VolumeCommands" first="False" fullname="VolumeCommands.delete" ids="cinder.cmd.manage.VolumeCommands.delete" module="cinder.cmd.manage" names="cinder.cmd.manage.VolumeCommands.delete"><desc_name xml:space="preserve">delete</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delete a volume, bypassing the check that it must be available.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ 'update_host()\ (VolumeCommands\ method)',\ 'cinder.cmd.manage.VolumeCommands.update_host',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="VolumeCommands" first="False" fullname="VolumeCommands.update_host" ids="cinder.cmd.manage.VolumeCommands.update_host" module="cinder.cmd.manage" names="cinder.cmd.manage.VolumeCommands.update_host"><desc_name xml:space="preserve">update_host</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">currenthost</desc_parameter><desc_parameter xml:space="preserve">newhost</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Modify the host name associated with a volume.</paragraph>
                        <paragraph>Particularly to recover from cases where one has moved
                            their Cinder Volume node, or modified their backend_name in a
                            multi-backend config.</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ 'add_command_parsers()\ (in\ module\ cinder.cmd.manage)',\ 'cinder.cmd.manage.add_command_parsers',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="add_command_parsers" ids="cinder.cmd.manage.add_command_parsers" module="cinder.cmd.manage" names="cinder.cmd.manage.add_command_parsers"><desc_name xml:space="preserve">add_command_parsers</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">subparsers</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'args()\ (in\ module\ cinder.cmd.manage)',\ 'cinder.cmd.manage.args',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="args" ids="cinder.cmd.manage.args" module="cinder.cmd.manage" names="cinder.cmd.manage.args"><desc_name xml:space="preserve">args</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'fetch_func_args()\ (in\ module\ cinder.cmd.manage)',\ 'cinder.cmd.manage.fetch_func_args',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="fetch_func_args" ids="cinder.cmd.manage.fetch_func_args" module="cinder.cmd.manage" names="cinder.cmd.manage.fetch_func_args"><desc_name xml:space="preserve">fetch_func_args</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">func</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'get_arg_string()\ (in\ module\ cinder.cmd.manage)',\ 'cinder.cmd.manage.get_arg_string',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_arg_string" ids="cinder.cmd.manage.get_arg_string" module="cinder.cmd.manage" names="cinder.cmd.manage.get_arg_string"><desc_name xml:space="preserve">get_arg_string</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">args</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'main()\ (in\ module\ cinder.cmd.manage)',\ 'cinder.cmd.manage.main',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="main" ids="cinder.cmd.manage.main" module="cinder.cmd.manage" names="cinder.cmd.manage.main"><desc_name xml:space="preserve">main</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'methods_of()\ (in\ module\ cinder.cmd.manage)',\ 'cinder.cmd.manage.methods_of',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="methods_of" ids="cinder.cmd.manage.methods_of" module="cinder.cmd.manage" names="cinder.cmd.manage.methods_of"><desc_name xml:space="preserve">methods_of</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">obj</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return non-private methods from an object.</paragraph>
                <paragraph>Get all callable methods of an object that don’t start with underscore
                    :return: a list of tuples of the form (method_name, method)</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
