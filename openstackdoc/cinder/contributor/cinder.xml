<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/contributor/cinder.rst">
    <comment xml:space="preserve">Copyright 2010-2011 United States Government as represented by the
Administrator of the National Aeronautics and Space Administration.
All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License. You may obtain
a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.</comment>
    <section ids="common-and-misc-libraries" names="common\ and\ misc\ libraries">
        <title>Common and Misc Libraries</title>
        <paragraph>Libraries common throughout Cinder or just ones that haven’t been categorized
            very well yet.</paragraph>
        <section ids="the-cinder-context-module" names="the\ cinder.context\ module">
            <title>The <reference internal="True" reftitle="cinder.context" refuri="api/cinder.context#module-cinder.context"><literal classes="xref py py-mod">cinder.context</literal></reference> Module</title>
            <paragraph>RequestContext: context for requests that persist through all of cinder.</paragraph>
            <index entries=""></index>
            <desc desctype="class" domain="py" noindex="True" objtype="class">
                <desc_signature class="" first="False" fullname="RequestContext" module="cinder.context"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">RequestContext</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">user_id=None</desc_parameter><desc_parameter xml:space="preserve">project_id=None</desc_parameter><desc_parameter xml:space="preserve">is_admin=None</desc_parameter><desc_parameter xml:space="preserve">read_deleted='no'</desc_parameter><desc_parameter xml:space="preserve">project_name=None</desc_parameter><desc_parameter xml:space="preserve">remote_address=None</desc_parameter><desc_parameter xml:space="preserve">timestamp=None</desc_parameter><desc_parameter xml:space="preserve">quota_class=None</desc_parameter><desc_parameter xml:space="preserve">service_catalog=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">oslo_context.context.RequestContext</literal></paragraph>
                    <paragraph>Security context and request information.</paragraph>
                    <paragraph>Represents the user taking a given action within the system.</paragraph>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="RequestContext" first="False" fullname="RequestContext.deepcopy" module="cinder.context"><desc_name xml:space="preserve">deepcopy</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="RequestContext" first="False" fullname="RequestContext.elevated" module="cinder.context"><desc_name xml:space="preserve">elevated</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">read_deleted=None</desc_parameter><desc_parameter xml:space="preserve">overwrite=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Return a version of this context with admin flag set.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="classmethod" domain="py" noindex="True" objtype="classmethod">
                        <desc_signature class="RequestContext" first="False" fullname="RequestContext.from_dict" module="cinder.context"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">from_dict</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">values</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="RequestContext" first="False" fullname="RequestContext.project_id" module="cinder.context"><desc_name xml:space="preserve">project_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="RequestContext" first="False" fullname="RequestContext.read_deleted" module="cinder.context"><desc_name xml:space="preserve">read_deleted</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="RequestContext" first="False" fullname="RequestContext.to_dict" module="cinder.context"><desc_name xml:space="preserve">to_dict</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="RequestContext" first="False" fullname="RequestContext.to_policy_values" module="cinder.context"><desc_name xml:space="preserve">to_policy_values</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="RequestContext" first="False" fullname="RequestContext.user_id" module="cinder.context"><desc_name xml:space="preserve">user_id</desc_name></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_admin_context" module="cinder.context"><desc_name xml:space="preserve">get_admin_context</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">read_deleted='no'</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_internal_tenant_context" module="cinder.context"><desc_name xml:space="preserve">get_internal_tenant_context</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Build and return the Cinder internal tenant context object</paragraph>
                    <paragraph>This request context will only work for internal Cinder operations. It will
                        not be able to make requests to remote services. To do so it will need to
                        use the keystone client to get an auth_token.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="the-cinder-exception-module" names="the\ cinder.exception\ module">
            <title>The <reference internal="True" reftitle="cinder.exception" refuri="api/cinder.exception#module-cinder.exception"><literal classes="xref py py-mod">cinder.exception</literal></reference> Module</title>
            <paragraph>Cinder base exception handling.</paragraph>
            <paragraph>Includes decorator for re-raising Cinder-type exceptions.</paragraph>
            <paragraph>SHOULD include dedicated exception logging.</paragraph>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="APIException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">APIException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="APIException" first="False" fullname="APIException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Error while requesting %(service)s API.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="APITimeout" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">APITimeout</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.APIException" refuri="api/cinder.exception#cinder.exception.APIException"><literal classes="xref py py-class">cinder.exception.APIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="APITimeout" first="False" fullname="APITimeout.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Timeout while requesting %(service)s API.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="AdminRequired" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">AdminRequired</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotAuthorized" refuri="api/cinder.exception#cinder.exception.NotAuthorized"><literal classes="xref py py-class">cinder.exception.NotAuthorized</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="AdminRequired" first="False" fullname="AdminRequired.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'User does not have admin privileges'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="AttachmentSpecsNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">AttachmentSpecsNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="AttachmentSpecsNotFound" first="False" fullname="AttachmentSpecsNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Attachment %(attachment_id)s has no key %(specs_key)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BackupDriverException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BackupDriverException" first="False" fullname="BackupDriverException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backup driver reported an error: %(message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BackupFailedToGetVolumeBackend" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupFailedToGetVolumeBackend</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BackupFailedToGetVolumeBackend" first="False" fullname="BackupFailedToGetVolumeBackend.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to identify volume backend.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BackupInvalidCephArgs" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupInvalidCephArgs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.BackupDriverException" refuri="api/cinder.exception#cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BackupInvalidCephArgs" first="False" fullname="BackupInvalidCephArgs.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid Ceph args provided for backup rbd operation'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BackupLimitExceeded" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupLimitExceeded</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaError" refuri="api/cinder.exception#cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BackupLimitExceeded" first="False" fullname="BackupLimitExceeded.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Maximum number of backups allowed (%(allowed)d) exceeded'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BackupMetadataNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupMetadataNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BackupMetadataNotFound" first="False" fullname="BackupMetadataNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backup %(backup_id)s has no metadata with key %(metadata_key)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BackupMetadataUnsupportedVersion" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupMetadataUnsupportedVersion</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.BackupDriverException" refuri="api/cinder.exception#cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BackupMetadataUnsupportedVersion" first="False" fullname="BackupMetadataUnsupportedVersion.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unsupported backup metadata version requested'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BackupNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BackupNotFound" first="False" fullname="BackupNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backup %(backup_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BackupOperationError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupOperationError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BackupOperationError" first="False" fullname="BackupOperationError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'An error has occurred during backup operation'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BackupRBDOperationFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupRBDOperationFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.BackupDriverException" refuri="api/cinder.exception#cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BackupRBDOperationFailed" first="False" fullname="BackupRBDOperationFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backup RBD operation failed'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BackupVerifyUnsupportedDriver" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BackupVerifyUnsupportedDriver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.BackupDriverException" refuri="api/cinder.exception#cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BackupVerifyUnsupportedDriver" first="False" fullname="BackupVerifyUnsupportedDriver.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unsupported backup verify driver'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BadHTTPResponseStatus" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BadHTTPResponseStatus</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BadHTTPResponseStatus" first="False" fullname="BadHTTPResponseStatus.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Bad HTTP response status %(status)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BadResetResourceStatus" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BadResetResourceStatus</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BadResetResourceStatus" first="False" fullname="BadResetResourceStatus.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Bad reset resource status : %(message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BrocadeZoningCliException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BrocadeZoningCliException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BrocadeZoningCliException" first="False" fullname="BrocadeZoningCliException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Brocade Fibre Channel Zoning CLI error: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="BrocadeZoningHttpException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">BrocadeZoningHttpException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="BrocadeZoningHttpException" first="False" fullname="BrocadeZoningHttpException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Brocade Fibre Channel Zoning HTTP error: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="CappedVersionUnknown" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">CappedVersionUnknown</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="CappedVersionUnknown" first="False" fullname="CappedVersionUnknown.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Unrecoverable Error: Versioned Objects in DB are capped to unknown version %(version)s. Most likely your environment contains only new services and you're trying to start an older one. Use `cinder-manage service list` to check that and upgrade this service."</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="CgSnapshotNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">CgSnapshotNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="CgSnapshotNotFound" first="False" fullname="CgSnapshotNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'CgSnapshot %(cgsnapshot_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="CinderException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">CinderException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <paragraph>Base Cinder Exception</paragraph>
                    <paragraph>To correctly use this class, inherit from it and define
                        a ‘message’ property. That message will get printf’d
                        with the keyword arguments provided to the constructor.</paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="CinderException" first="False" fullname="CinderException.code" module="cinder.exception"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 500</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="CinderException" first="False" fullname="CinderException.headers" module="cinder.exception"><desc_name xml:space="preserve">headers</desc_name><desc_annotation xml:space="preserve"> = {}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="CinderException" first="False" fullname="CinderException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'An unknown exception occurred.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="CinderException" first="False" fullname="CinderException.safe" module="cinder.exception"><desc_name xml:space="preserve">safe</desc_name><desc_annotation xml:space="preserve"> = False</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="CiscoZoningCliException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">CiscoZoningCliException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="CiscoZoningCliException" first="False" fullname="CiscoZoningCliException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cisco Fibre Channel Zoning CLI error: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="CleanableInUse" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">CleanableInUse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="CleanableInUse" first="False" fullname="CleanableInUse.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(type)s with id %(id)s is already being cleaned up or another host has taken over it.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ClusterExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ClusterExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Duplicate" refuri="api/cinder.exception#cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ClusterExists" first="False" fullname="ClusterExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cluster %(name)s already exists.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ClusterHasHosts" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ClusterHasHosts</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ClusterHasHosts" first="False" fullname="ClusterHasHosts.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cluster %(id)s still has hosts.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ClusterNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ClusterNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ClusterNotFound" first="False" fullname="ClusterNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cluster %(id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="CohoException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">CohoException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="CohoException" first="False" fullname="CohoException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Coho Data Cinder driver failure: %(message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ConfigNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ConfigNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ConfigNotFound" first="False" fullname="ConfigNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Could not find config at %(path)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ConsistencyGroupNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ConsistencyGroupNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ConsistencyGroupNotFound" first="False" fullname="ConsistencyGroupNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'ConsistencyGroup %(consistencygroup_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ConvertedException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ConvertedException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">code=500</desc_parameter><desc_parameter xml:space="preserve">title=''</desc_parameter><desc_parameter xml:space="preserve">explanation=''</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">webob.exc.WSGIHTTPException</literal></paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DateraAPIException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DateraAPIException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="api/cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DateraAPIException" first="False" fullname="DateraAPIException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Bad response from Datera API'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DellDriverRetryableException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DellDriverRetryableException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="api/cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DellDriverRetryableException" first="False" fullname="DellDriverRetryableException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Retryable Dell Exception encountered'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DellDriverUnknownSpec" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DellDriverUnknownSpec</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DellDriverUnknownSpec" first="False" fullname="DellDriverUnknownSpec.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Dell driver failure: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DeviceUnavailable" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DeviceUnavailable</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DeviceUnavailable" first="False" fullname="DeviceUnavailable.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The device in the path %(path)s is unavailable: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DotHillAuthenticationError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillAuthenticationError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DotHillAuthenticationError" first="False" fullname="DotHillAuthenticationError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DotHillConnectionError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillConnectionError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DotHillConnectionError" first="False" fullname="DotHillConnectionError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DotHillDriverNotSupported" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillDriverNotSupported</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DotHillDriverNotSupported" first="False" fullname="DotHillDriverNotSupported.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The Dot Hill driver is no longer supported.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DotHillInvalidBackend" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillInvalidBackend</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DotHillInvalidBackend" first="False" fullname="DotHillInvalidBackend.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Backend doesn't exist (%(backend)s)"</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DotHillNotEnoughSpace" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillNotEnoughSpace</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DotHillNotEnoughSpace" first="False" fullname="DotHillNotEnoughSpace.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Not enough space on backend (%(backend)s)'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DotHillNotTargetPortal" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillNotTargetPortal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DotHillNotTargetPortal" first="False" fullname="DotHillNotTargetPortal.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No active iSCSI portals with supplied iSCSI IPs'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DotHillRequestError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DotHillRequestError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DotHillRequestError" first="False" fullname="DotHillRequestError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DriverNotInitialized" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DriverNotInitialized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DriverNotInitialized" first="False" fullname="DriverNotInitialized.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume driver not ready.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="Duplicate" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">Duplicate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="DuplicateSfVolumeNames" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">DuplicateSfVolumeNames</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Duplicate" refuri="api/cinder.exception#cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="DuplicateSfVolumeNames" first="False" fullname="DuplicateSfVolumeNames.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Detected more than one volume with name %(vol_name)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="EMCSPUnavailableException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">EMCSPUnavailableException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.EMCVnxCLICmdError" refuri="api/cinder.exception#cinder.exception.EMCVnxCLICmdError"><literal classes="xref py py-class">cinder.exception.EMCVnxCLICmdError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="EMCSPUnavailableException" first="False" fullname="EMCSPUnavailableException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'EMC VNX Cinder Driver SPUnavailableException: %(cmd)s (Return Code: %(rc)s) (Output: %(out)s).'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="EMCVnxCLICmdError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">EMCVnxCLICmdError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="api/cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="EMCVnxCLICmdError" first="False" fullname="EMCVnxCLICmdError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'EMC VNX Cinder Driver CLI exception: %(cmd)s (Return Code: %(rc)s) (Output: %(out)s).'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="EncryptedBackupOperationFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">EncryptedBackupOperationFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.BackupDriverException" refuri="api/cinder.exception#cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="EncryptedBackupOperationFailed" first="False" fullname="EncryptedBackupOperationFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backup operation of an encrypted volume failed.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="Error" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">Error</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ErrorInFetchingConfiguration" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ErrorInFetchingConfiguration</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ErrorInFetchingConfiguration" first="False" fullname="ErrorInFetchingConfiguration.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Error in fetching configuration for '%(persona)s'"</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ErrorInHyperScaleVersion" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ErrorInHyperScaleVersion</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ErrorInHyperScaleVersion" first="False" fullname="ErrorInHyperScaleVersion.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Error in getting HyperScale version '%(cmd_error)s'"</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ErrorInParsingArguments" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ErrorInParsingArguments</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ErrorInParsingArguments" first="False" fullname="ErrorInParsingArguments.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Error in parsing message arguments : Invalid Payload'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ErrorInSendingMsg" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ErrorInSendingMsg</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ErrorInSendingMsg" first="False" fullname="ErrorInSendingMsg.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Error in sending message '%(cmd_error)s'"</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="EvaluatorParseException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">EvaluatorParseException</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="EvaluatorParseException" first="False" fullname="EvaluatorParseException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Error during evaluator parsing: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ExportFailure" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ExportFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ExportFailure" first="False" fullname="ExportFailure.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to export for volume: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ExtendVolumeError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ExtendVolumeError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ExtendVolumeError" first="False" fullname="ExtendVolumeError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Error extending volume: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="FCSanLookupServiceException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">FCSanLookupServiceException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="FCSanLookupServiceException" first="False" fullname="FCSanLookupServiceException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Fibre Channel SAN Lookup failure: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="FCZoneDriverException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">FCZoneDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="FCZoneDriverException" first="False" fullname="FCZoneDriverException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Fibre Channel Zone operation failed: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="FailedCmdWithDump" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">FailedCmdWithDump</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="FailedCmdWithDump" first="False" fullname="FailedCmdWithDump.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Operation failed with status=%(status)s. Full dump: %(data)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="FileNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">FileNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="FileNotFound" first="False" fullname="FileNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'File %(file_path)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GCSApiFailure" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GCSApiFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.BackupDriverException" refuri="api/cinder.exception#cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GCSApiFailure" first="False" fullname="GCSApiFailure.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Google Cloud Storage api failure: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GCSConnectionFailure" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GCSConnectionFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.BackupDriverException" refuri="api/cinder.exception#cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GCSConnectionFailure" first="False" fullname="GCSConnectionFailure.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Google Cloud Storage connection failure: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GCSOAuth2Failure" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GCSOAuth2Failure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.BackupDriverException" refuri="api/cinder.exception#cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GCSOAuth2Failure" first="False" fullname="GCSOAuth2Failure.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Google Cloud Storage oauth2 failure: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GPFSDriverUnsupportedOperation" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GPFSDriverUnsupportedOperation</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="api/cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GPFSDriverUnsupportedOperation" first="False" fullname="GPFSDriverUnsupportedOperation.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'GPFS driver unsupported operation: %(msg)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GlanceConnectionFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GlanceConnectionFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GlanceConnectionFailed" first="False" fullname="GlanceConnectionFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Connection to glance failed: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GlanceMetadataExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GlanceMetadataExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GlanceMetadataExists" first="False" fullname="GlanceMetadataExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Glance metadata cannot be updated, key %(key)s exists for volume id %(volume_id)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GlanceMetadataNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GlanceMetadataNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GlanceMetadataNotFound" first="False" fullname="GlanceMetadataNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Glance metadata for volume/snapshot %(id)s cannot be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupLimitExceeded" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupLimitExceeded</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaError" refuri="api/cinder.exception#cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupLimitExceeded" first="False" fullname="GroupLimitExceeded.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Maximum number of groups allowed (%(allowed)d) exceeded'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupNotFound" first="False" fullname="GroupNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group %(group_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupSnapshotNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupSnapshotNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupSnapshotNotFound" first="False" fullname="GroupSnapshotNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'GroupSnapshot %(group_snapshot_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupTypeAccessExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeAccessExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Duplicate" refuri="api/cinder.exception#cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupTypeAccessExists" first="False" fullname="GroupTypeAccessExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group type access for %(group_type_id)s / %(project_id)s combination already exists.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupTypeAccessNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeAccessNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupTypeAccessNotFound" first="False" fullname="GroupTypeAccessNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group type access not found for %(group_type_id)s / %(project_id)s combination.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupTypeCreateFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeCreateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupTypeCreateFailed" first="False" fullname="GroupTypeCreateFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cannot create group_type with name %(name)s and specs %(group_specs)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupTypeEncryptionExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeEncryptionExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupTypeEncryptionExists" first="False" fullname="GroupTypeEncryptionExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group type encryption for type %(type_id)s already exists.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupTypeEncryptionNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeEncryptionNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupTypeEncryptionNotFound" first="False" fullname="GroupTypeEncryptionNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group type encryption for type %(type_id)s does not exist.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupTypeExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Duplicate" refuri="api/cinder.exception#cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupTypeExists" first="False" fullname="GroupTypeExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group Type %(id)s already exists.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupTypeInUse" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeInUse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupTypeInUse" first="False" fullname="GroupTypeInUse.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group Type %(group_type_id)s deletion is not allowed with groups present with the type.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupTypeNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupTypeNotFound" first="False" fullname="GroupTypeNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group type %(group_type_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupTypeNotFoundByName" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeNotFoundByName</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.GroupTypeNotFound" refuri="api/cinder.exception#cinder.exception.GroupTypeNotFound"><literal classes="xref py py-class">cinder.exception.GroupTypeNotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupTypeNotFoundByName" first="False" fullname="GroupTypeNotFoundByName.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group type with name %(group_type_name)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupTypeSpecsNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeSpecsNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupTypeSpecsNotFound" first="False" fullname="GroupTypeSpecsNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group Type %(group_type_id)s has no specs with key %(group_specs_key)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupTypeUpdateFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupTypeUpdateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupTypeUpdateFailed" first="False" fullname="GroupTypeUpdateFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cannot update group_type %(id)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="GroupVolumeTypeMappingExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">GroupVolumeTypeMappingExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Duplicate" refuri="api/cinder.exception#cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="GroupVolumeTypeMappingExists" first="False" fullname="GroupVolumeTypeMappingExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group volume type mapping for %(group_id)s / %(volume_type_id)s combination already exists.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="HBSDBusy" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HBSDBusy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.HBSDError" refuri="api/cinder.exception#cinder.exception.HBSDError"><literal classes="xref py py-class">cinder.exception.HBSDError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="HBSDBusy" first="False" fullname="HBSDBusy.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Device or resource is busy.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="HBSDCmdError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HBSDCmdError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">ret=None</desc_parameter><desc_parameter xml:space="preserve">err=None</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.HBSDError" refuri="api/cinder.exception#cinder.exception.HBSDError"><literal classes="xref py py-class">cinder.exception.HBSDError</literal></reference></paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="HBSDError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HBSDError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="HBSDError" first="False" fullname="HBSDError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'HBSD error occurs.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="HBSDNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HBSDNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="HBSDNotFound" first="False" fullname="HBSDNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Storage resource could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="HBSDVolumeIsBusy" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HBSDVolumeIsBusy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeIsBusy" refuri="api/cinder.exception#cinder.exception.VolumeIsBusy"><literal classes="xref py py-class">cinder.exception.VolumeIsBusy</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="HBSDVolumeIsBusy" first="False" fullname="HBSDVolumeIsBusy.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(volume_name)s is busy.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="HNASConnError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HNASConnError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="HNASConnError" first="False" fullname="HNASConnError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="HostNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">HostNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="HostNotFound" first="False" fullname="HostNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Host %(host)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ISCSITargetAttachFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ISCSITargetAttachFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ISCSITargetAttachFailed" first="False" fullname="ISCSITargetAttachFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to attach iSCSI target for volume %(volume_id)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ISCSITargetCreateFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ISCSITargetCreateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ISCSITargetCreateFailed" first="False" fullname="ISCSITargetCreateFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to create iscsi target for volume %(volume_id)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ISCSITargetDetachFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ISCSITargetDetachFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ISCSITargetDetachFailed" first="False" fullname="ISCSITargetDetachFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to detach iSCSI target for volume %(volume_id)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ISCSITargetHelperCommandFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ISCSITargetHelperCommandFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ISCSITargetHelperCommandFailed" first="False" fullname="ISCSITargetHelperCommandFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(error_message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ISCSITargetNotFoundForVolume" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ISCSITargetNotFoundForVolume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ISCSITargetNotFoundForVolume" first="False" fullname="ISCSITargetNotFoundForVolume.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No target id found for volume %(volume_id)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ISCSITargetRemoveFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ISCSITargetRemoveFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ISCSITargetRemoveFailed" first="False" fullname="ISCSITargetRemoveFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to remove iscsi target for volume %(volume_id)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ImageCopyFailure" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ImageCopyFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ImageCopyFailure" first="False" fullname="ImageCopyFailure.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to copy image to volume: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ImageLimitExceeded" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ImageLimitExceeded</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaError" refuri="api/cinder.exception#cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ImageLimitExceeded" first="False" fullname="ImageLimitExceeded.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Image quota exceeded'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ImageNotAuthorized" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ImageNotAuthorized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ImageNotAuthorized" first="False" fullname="ImageNotAuthorized.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Not authorized for image %(image_id)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ImageNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ImageNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ImageNotFound" first="False" fullname="ImageNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Image %(image_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ImageTooBig" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ImageTooBig</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ImageTooBig" first="False" fullname="ImageTooBig.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Image %(image_id)s size exceeded available disk space: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ImageUnacceptable" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ImageUnacceptable</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ImageUnacceptable" first="False" fullname="ImageUnacceptable.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Image %(image_id)s is unacceptable: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InfortrendCliException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InfortrendCliException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InfortrendCliException" first="False" fullname="InfortrendCliException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Infortrend CLI exception: %(err)s Param: %(param)s (Return Code: %(rc)s) (Output: %(out)s)'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="Invalid" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">Invalid</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="Invalid" first="False" fullname="Invalid.code" module="cinder.exception"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 400</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="Invalid" first="False" fullname="Invalid.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unacceptable parameters.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="Invalid3PARDomain" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">Invalid3PARDomain</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="Invalid3PARDomain" first="False" fullname="Invalid3PARDomain.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid 3PAR Domain: %(err)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidAPIVersionString" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidAPIVersionString</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidAPIVersionString" first="False" fullname="InvalidAPIVersionString.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'API Version String %(version)s is of invalid format. Must be of format MajorNum.MinorNum.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidAttachment" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidAttachment</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidAttachment" first="False" fullname="InvalidAttachment.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid attachment: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidAuthKey" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidAuthKey</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidAuthKey" first="False" fullname="InvalidAuthKey.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid auth key: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidAvailabilityZone" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidAvailabilityZone</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidAvailabilityZone" first="False" fullname="InvalidAvailabilityZone.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Availability zone '%(az)s' is invalid."</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidBackup" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidBackup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidBackup" first="False" fullname="InvalidBackup.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid backup: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidCgSnapshot" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidCgSnapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidCgSnapshot" first="False" fullname="InvalidCgSnapshot.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid CgSnapshot: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidConfigurationValue" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidConfigurationValue</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidConfigurationValue" first="False" fullname="InvalidConfigurationValue.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Value "%(value)s" is not valid for configuration option "%(option)s"'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidConnectorException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidConnectorException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidConnectorException" first="False" fullname="InvalidConnectorException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Connector doesn't have required information: %(missing)s"</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidConsistencyGroup" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidConsistencyGroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidConsistencyGroup" first="False" fullname="InvalidConsistencyGroup.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid ConsistencyGroup: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidContentType" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidContentType</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidContentType" first="False" fullname="InvalidContentType.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid content type %(content_type)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidGlobalAPIVersion" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidGlobalAPIVersion</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidGlobalAPIVersion" first="False" fullname="InvalidGlobalAPIVersion.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Version %(req_ver)s is not supported by the API. Minimum is %(min_ver)s and maximum is %(max_ver)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidGroup" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidGroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidGroup" first="False" fullname="InvalidGroup.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid Group: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidGroupSnapshot" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidGroupSnapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidGroupSnapshot" first="False" fullname="InvalidGroupSnapshot.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid GroupSnapshot: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidGroupSnapshotStatus" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidGroupSnapshotStatus</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidGroupSnapshotStatus" first="False" fullname="InvalidGroupSnapshotStatus.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid GroupSnapshot Status: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidGroupStatus" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidGroupStatus</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidGroupStatus" first="False" fullname="InvalidGroupStatus.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid Group Status: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidGroupType" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidGroupType</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidGroupType" first="False" fullname="InvalidGroupType.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid group type: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidHost" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidHost</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidHost" first="False" fullname="InvalidHost.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid host: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidImageRef" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidImageRef</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidImageRef" first="False" fullname="InvalidImageRef.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid image href %(image_href)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidInput" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidInput</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidInput" first="False" fullname="InvalidInput.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid input received: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidMetadataType" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidMetadataType</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidMetadataType" first="False" fullname="InvalidMetadataType.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The type of metadata: %(metadata_type)s for volume/snapshot %(id)s is invalid.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidNestedQuotaSetup" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidNestedQuotaSetup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidNestedQuotaSetup" first="False" fullname="InvalidNestedQuotaSetup.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Project quotas are not properly setup for nested quotas: %(reason)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidParameterValue" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidParameterValue</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidParameterValue" first="False" fullname="InvalidParameterValue.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(err)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidQoSSpecs" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidQoSSpecs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidQoSSpecs" first="False" fullname="InvalidQoSSpecs.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid qos specs: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidQuotaValue" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidQuotaValue</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidQuotaValue" first="False" fullname="InvalidQuotaValue.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Change would make usage less than 0 for the following resources: %(unders)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidReplicationTarget" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidReplicationTarget</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidReplicationTarget" first="False" fullname="InvalidReplicationTarget.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid Replication Target: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidReservationExpiration" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidReservationExpiration</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidReservationExpiration" first="False" fullname="InvalidReservationExpiration.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid reservation expiration %(expire)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidResults" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidResults</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidResults" first="False" fullname="InvalidResults.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The results are invalid.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidSnapshot" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidSnapshot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidSnapshot" first="False" fullname="InvalidSnapshot.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid snapshot: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidUUID" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidUUID</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidUUID" first="False" fullname="InvalidUUID.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Expected a UUID but received %(uuid)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidVolume" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidVolume</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidVolume" first="False" fullname="InvalidVolume.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid volume: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidVolumeAttachMode" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidVolumeAttachMode</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidVolumeAttachMode" first="False" fullname="InvalidVolumeAttachMode.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Invalid attaching mode '%(mode)s' for volume %(volume_id)s."</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidVolumeMetadata" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidVolumeMetadata</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidVolumeMetadata" first="False" fullname="InvalidVolumeMetadata.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid metadata: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidVolumeMetadataSize" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidVolumeMetadataSize</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidVolumeMetadataSize" first="False" fullname="InvalidVolumeMetadataSize.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid metadata size: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="InvalidVolumeType" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">InvalidVolumeType</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="InvalidVolumeType" first="False" fullname="InvalidVolumeType.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid volume type: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="KaminarioCinderDriverException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">KaminarioCinderDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="KaminarioCinderDriverException" first="False" fullname="KaminarioCinderDriverException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'KaminarioCinderDriver failure: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="KaminarioRetryableException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">KaminarioRetryableException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="KaminarioRetryableException" first="False" fullname="KaminarioRetryableException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Kaminario retryable exception: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="KeyManagerError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">KeyManagerError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="KeyManagerError" first="False" fullname="KeyManagerError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'key manager error: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="LockCreationFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">LockCreationFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="LockCreationFailed" first="False" fullname="LockCreationFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to create lock. Coordination backend not started.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="LockingFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">LockingFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="LockingFailed" first="False" fullname="LockingFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Lock acquisition failed.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="MalformedRequestBody" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MalformedRequestBody</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="MalformedRequestBody" first="False" fullname="MalformedRequestBody.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Malformed message body: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="MalformedResponse" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MalformedResponse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="MalformedResponse" first="False" fullname="MalformedResponse.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Malformed response to command %(cmd)s: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ManageExistingAlreadyManaged" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ManageExistingAlreadyManaged</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ManageExistingAlreadyManaged" first="False" fullname="ManageExistingAlreadyManaged.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to manage existing volume. Volume %(volume_ref)s already managed.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ManageExistingInvalidReference" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ManageExistingInvalidReference</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ManageExistingInvalidReference" first="False" fullname="ManageExistingInvalidReference.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Manage existing volume failed due to invalid backend reference %(existing_ref)s: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ManageExistingVolumeTypeMismatch" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ManageExistingVolumeTypeMismatch</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ManageExistingVolumeTypeMismatch" first="False" fullname="ManageExistingVolumeTypeMismatch.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Manage existing volume failed due to volume type mismatch: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="MessageNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MessageNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="MessageNotFound" first="False" fullname="MessageNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Message %(message_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="MetadataAbsent" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MetadataAbsent</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="MetadataAbsent" first="False" fullname="MetadataAbsent.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'There is no metadata in DB object.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="MetadataCopyFailure" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MetadataCopyFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="MetadataCopyFailure" first="False" fullname="MetadataCopyFailure.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to copy metadata to volume: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="MetadataCreateFailure" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MetadataCreateFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="MetadataCreateFailure" first="False" fullname="MetadataCreateFailure.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to create metadata for volume: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="MetadataUpdateFailure" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MetadataUpdateFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="MetadataUpdateFailure" first="False" fullname="MetadataUpdateFailure.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to update metadata for volume: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="MissingRequired" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">MissingRequired</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="MissingRequired" first="False" fullname="MissingRequired.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Missing required element '%(element)s' in request body."</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="NetAppDriverException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NetAppDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NetAppDriverException" first="False" fullname="NetAppDriverException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'NetApp Cinder Driver exception.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="NexentaException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NexentaException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NexentaException" first="False" fullname="NexentaException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="NfsException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NfsException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.RemoteFSException" refuri="api/cinder.exception#cinder.exception.RemoteFSException"><literal classes="xref py py-class">cinder.exception.RemoteFSException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NfsException" first="False" fullname="NfsException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unknown NFS exception'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="NfsNoSharesMounted" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NfsNoSharesMounted</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.RemoteFSNoSharesMounted" refuri="api/cinder.exception#cinder.exception.RemoteFSNoSharesMounted"><literal classes="xref py py-class">cinder.exception.RemoteFSNoSharesMounted</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NfsNoSharesMounted" first="False" fullname="NfsNoSharesMounted.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No mounted NFS shares found'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="NfsNoSuitableShareFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NfsNoSuitableShareFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.RemoteFSNoSuitableShareFound" refuri="api/cinder.exception#cinder.exception.RemoteFSNoSuitableShareFound"><literal classes="xref py py-class">cinder.exception.RemoteFSNoSuitableShareFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NfsNoSuitableShareFound" first="False" fullname="NfsNoSuitableShareFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'There is no share which can host %(volume_size)sG'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="NoMoreTargets" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NoMoreTargets</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <paragraph>No more available targets.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="NoValidBackend" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NoValidBackend</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NoValidBackend" first="False" fullname="NoValidBackend.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No valid backend was found. %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="NotAuthorized" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NotAuthorized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NotAuthorized" first="False" fullname="NotAuthorized.code" module="cinder.exception"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 403</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NotAuthorized" first="False" fullname="NotAuthorized.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Not authorized.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="NotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NotFound" first="False" fullname="NotFound.code" module="cinder.exception"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 404</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NotFound" first="False" fullname="NotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Resource could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NotFound" first="False" fullname="NotFound.safe" module="cinder.exception"><desc_name xml:space="preserve">safe</desc_name><desc_annotation xml:space="preserve"> = True</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="NotSupportedOperation" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">NotSupportedOperation</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NotSupportedOperation" first="False" fullname="NotSupportedOperation.code" module="cinder.exception"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 405</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="NotSupportedOperation" first="False" fullname="NotSupportedOperation.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Operation not supported: %(operation)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="OverQuota" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">OverQuota</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="OverQuota" first="False" fullname="OverQuota.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota exceeded for resources: %(overs)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ParameterNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ParameterNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ParameterNotFound" first="False" fullname="ParameterNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Could not find parameter %(param)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="PolicyNotAuthorized" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">PolicyNotAuthorized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotAuthorized" refuri="api/cinder.exception#cinder.exception.NotAuthorized"><literal classes="xref py py-class">cinder.exception.NotAuthorized</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="PolicyNotAuthorized" first="False" fullname="PolicyNotAuthorized.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Policy doesn't allow %(action)s to be performed."</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ProgrammingError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ProgrammingError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ProgrammingError" first="False" fullname="ProgrammingError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Programming error in Cinder: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ProjectQuotaNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ProjectQuotaNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaNotFound" refuri="api/cinder.exception#cinder.exception.QuotaNotFound"><literal classes="xref py py-class">cinder.exception.QuotaNotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ProjectQuotaNotFound" first="False" fullname="ProjectQuotaNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota for project %(project_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="PureDriverException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">PureDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="PureDriverException" first="False" fullname="PureDriverException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Pure Storage Cinder driver failure: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="PureRetryableException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">PureRetryableException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="api/cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="PureRetryableException" first="False" fullname="PureRetryableException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Retryable Pure Storage Exception encountered'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QoSSpecsAssociateFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsAssociateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QoSSpecsAssociateFailed" first="False" fullname="QoSSpecsAssociateFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to associate qos_specs: %(specs_id)s with type %(type_id)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QoSSpecsCreateFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsCreateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QoSSpecsCreateFailed" first="False" fullname="QoSSpecsCreateFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to create qos_specs: %(name)s with specs %(qos_specs)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QoSSpecsDisassociateFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsDisassociateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QoSSpecsDisassociateFailed" first="False" fullname="QoSSpecsDisassociateFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to disassociate qos_specs: %(specs_id)s with type %(type_id)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QoSSpecsExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Duplicate" refuri="api/cinder.exception#cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QoSSpecsExists" first="False" fullname="QoSSpecsExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'QoS Specs %(specs_id)s already exists.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QoSSpecsInUse" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsInUse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QoSSpecsInUse" first="False" fullname="QoSSpecsInUse.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'QoS Specs %(specs_id)s is still associated with entities.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QoSSpecsKeyNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsKeyNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QoSSpecsKeyNotFound" first="False" fullname="QoSSpecsKeyNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'QoS spec %(specs_id)s has no spec with key %(specs_key)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QoSSpecsNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QoSSpecsNotFound" first="False" fullname="QoSSpecsNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No such QoS spec %(specs_id)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QoSSpecsUpdateFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QoSSpecsUpdateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QoSSpecsUpdateFailed" first="False" fullname="QoSSpecsUpdateFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to update qos_specs: %(specs_id)s with specs %(qos_specs)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QuotaClassNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QuotaClassNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaNotFound" refuri="api/cinder.exception#cinder.exception.QuotaNotFound"><literal classes="xref py py-class">cinder.exception.QuotaNotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QuotaClassNotFound" first="False" fullname="QuotaClassNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota class %(class_name)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QuotaError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QuotaError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QuotaError" first="False" fullname="QuotaError.code" module="cinder.exception"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 413</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QuotaError" first="False" fullname="QuotaError.headers" module="cinder.exception"><desc_name xml:space="preserve">headers</desc_name><desc_annotation xml:space="preserve"> = {'Retry-After': '0'}</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QuotaError" first="False" fullname="QuotaError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota exceeded: code=%(code)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QuotaError" first="False" fullname="QuotaError.safe" module="cinder.exception"><desc_name xml:space="preserve">safe</desc_name><desc_annotation xml:space="preserve"> = True</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QuotaNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QuotaNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QuotaNotFound" first="False" fullname="QuotaNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota could not be found'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QuotaResourceUnknown" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QuotaResourceUnknown</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaNotFound" refuri="api/cinder.exception#cinder.exception.QuotaNotFound"><literal classes="xref py py-class">cinder.exception.QuotaNotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QuotaResourceUnknown" first="False" fullname="QuotaResourceUnknown.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unknown quota resources %(unknown)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="QuotaUsageNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">QuotaUsageNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaNotFound" refuri="api/cinder.exception#cinder.exception.QuotaNotFound"><literal classes="xref py py-class">cinder.exception.QuotaNotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="QuotaUsageNotFound" first="False" fullname="QuotaUsageNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota usage for project %(project_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="RPCTimeout" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RPCTimeout</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="RPCTimeout" first="False" fullname="RPCTimeout.code" module="cinder.exception"><desc_name xml:space="preserve">code</desc_name><desc_annotation xml:space="preserve"> = 502</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="RPCTimeout" first="False" fullname="RPCTimeout.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Timeout while requesting capabilities from backend %(service)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="RdxAPICommandException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RdxAPICommandException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="RdxAPICommandException" first="False" fullname="RdxAPICommandException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Reduxio API Command Exception'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="RdxAPIConnectionException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RdxAPIConnectionException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="RdxAPIConnectionException" first="False" fullname="RdxAPIConnectionException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Reduxio API Connection Exception'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="RemoteFSConcurrentRequest" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RemoteFSConcurrentRequest</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.RemoteFSException" refuri="api/cinder.exception#cinder.exception.RemoteFSException"><literal classes="xref py py-class">cinder.exception.RemoteFSException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="RemoteFSConcurrentRequest" first="False" fullname="RemoteFSConcurrentRequest.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'A concurrent, possibly contradictory, request has been made.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="RemoteFSException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RemoteFSException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="RemoteFSException" first="False" fullname="RemoteFSException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unknown RemoteFS exception'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="RemoteFSNoSharesMounted" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RemoteFSNoSharesMounted</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.RemoteFSException" refuri="api/cinder.exception#cinder.exception.RemoteFSException"><literal classes="xref py py-class">cinder.exception.RemoteFSException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="RemoteFSNoSharesMounted" first="False" fullname="RemoteFSNoSharesMounted.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No mounted shares found'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="RemoteFSNoSuitableShareFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RemoteFSNoSuitableShareFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.RemoteFSException" refuri="api/cinder.exception#cinder.exception.RemoteFSException"><literal classes="xref py py-class">cinder.exception.RemoteFSException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="RemoteFSNoSuitableShareFound" first="False" fullname="RemoteFSNoSuitableShareFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'There is no share which can host %(volume_size)sG'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="RemoveExportException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">RemoveExportException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="RemoveExportException" first="False" fullname="RemoveExportException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to remove export for volume %(volume)s: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ReplicationError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ReplicationError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ReplicationError" first="False" fullname="ReplicationError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(volume_id)s replication error: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ReplicationGroupError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ReplicationGroupError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ReplicationGroupError" first="False" fullname="ReplicationGroupError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Group %(group_id)s replication error: %(reason)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ReplicationNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ReplicationNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ReplicationNotFound" first="False" fullname="ReplicationNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume replication for %(volume_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ReservationNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ReservationNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaNotFound" refuri="api/cinder.exception#cinder.exception.QuotaNotFound"><literal classes="xref py py-class">cinder.exception.QuotaNotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ReservationNotFound" first="False" fullname="ReservationNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Quota reservation %(uuid)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SSHInjectionThreat" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SSHInjectionThreat</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SSHInjectionThreat" first="False" fullname="SSHInjectionThreat.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'SSH command injection detected: %(command)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SchedulerHostFilterNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SchedulerHostFilterNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SchedulerHostFilterNotFound" first="False" fullname="SchedulerHostFilterNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Scheduler Host Filter %(filter_name)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SchedulerHostWeigherNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SchedulerHostWeigherNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SchedulerHostWeigherNotFound" first="False" fullname="SchedulerHostWeigherNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Scheduler Host Weigher %(weigher_name)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ServerNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ServerNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ServerNotFound" first="False" fullname="ServerNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Instance %(uuid)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ServiceNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ServiceNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ServiceTooOld" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ServiceTooOld</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ServiceTooOld" first="False" fullname="ServiceTooOld.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Service is too old to fulfil this request.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ServiceUnavailable" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ServiceUnavailable</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ServiceUnavailable" first="False" fullname="ServiceUnavailable.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Service is unavailable at this time.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SheepdogCmdError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SheepdogCmdError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.SheepdogError" refuri="api/cinder.exception#cinder.exception.SheepdogError"><literal classes="xref py py-class">cinder.exception.SheepdogError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SheepdogCmdError" first="False" fullname="SheepdogCmdError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '(Command: %(cmd)s) (Return Code: %(exit_code)s) (Stdout: %(stdout)s) (Stderr: %(stderr)s)'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SheepdogError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SheepdogError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="api/cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SheepdogError" first="False" fullname="SheepdogError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'An error has occurred in SheepdogDriver. (Reason: %(reason)s)'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SmbfsException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SmbfsException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.RemoteFSException" refuri="api/cinder.exception#cinder.exception.RemoteFSException"><literal classes="xref py py-class">cinder.exception.RemoteFSException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SmbfsException" first="False" fullname="SmbfsException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unknown SMBFS exception.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SmbfsNoSharesMounted" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SmbfsNoSharesMounted</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.RemoteFSNoSharesMounted" refuri="api/cinder.exception#cinder.exception.RemoteFSNoSharesMounted"><literal classes="xref py py-class">cinder.exception.RemoteFSNoSharesMounted</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SmbfsNoSharesMounted" first="False" fullname="SmbfsNoSharesMounted.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No mounted SMBFS shares found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SmbfsNoSuitableShareFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SmbfsNoSuitableShareFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.RemoteFSNoSuitableShareFound" refuri="api/cinder.exception#cinder.exception.RemoteFSNoSuitableShareFound"><literal classes="xref py py-class">cinder.exception.RemoteFSNoSuitableShareFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SmbfsNoSuitableShareFound" first="False" fullname="SmbfsNoSuitableShareFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'There is no share which can host %(volume_size)sG.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SnapshotIsBusy" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SnapshotIsBusy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SnapshotIsBusy" first="False" fullname="SnapshotIsBusy.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'deleting snapshot %(snapshot_name)s that has dependent volumes'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SnapshotLimitExceeded" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SnapshotLimitExceeded</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaError" refuri="api/cinder.exception#cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SnapshotLimitExceeded" first="False" fullname="SnapshotLimitExceeded.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Maximum number of snapshots allowed (%(allowed)d) exceeded'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SnapshotMetadataNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SnapshotMetadataNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SnapshotMetadataNotFound" first="False" fullname="SnapshotMetadataNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Snapshot %(snapshot_id)s has no metadata with key %(metadata_key)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SnapshotNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SnapshotNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SnapshotNotFound" first="False" fullname="SnapshotNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Snapshot %(snapshot_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SnapshotUnavailable" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SnapshotUnavailable</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="api/cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SnapshotUnavailable" first="False" fullname="SnapshotUnavailable.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The snapshot is unavailable: %(data)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SolidFireAPIDataException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SolidFireAPIDataException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.SolidFireAPIException" refuri="api/cinder.exception#cinder.exception.SolidFireAPIException"><literal classes="xref py py-class">cinder.exception.SolidFireAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SolidFireAPIDataException" first="False" fullname="SolidFireAPIDataException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Error in SolidFire API response: data=%(data)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SolidFireAPIException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SolidFireAPIException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="api/cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SolidFireAPIException" first="False" fullname="SolidFireAPIException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Bad response from SolidFire API'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SolidFireAccountNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SolidFireAccountNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.SolidFireDriverException" refuri="api/cinder.exception#cinder.exception.SolidFireDriverException"><literal classes="xref py py-class">cinder.exception.SolidFireDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SolidFireAccountNotFound" first="False" fullname="SolidFireAccountNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to locate account %(account_name)s on Solidfire device'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SolidFireDriverException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SolidFireDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SolidFireDriverException" first="False" fullname="SolidFireDriverException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'SolidFire Cinder Driver exception'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SolidFireRetryableException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SolidFireRetryableException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="api/cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SolidFireRetryableException" first="False" fullname="SolidFireRetryableException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Retryable SolidFire Exception encountered'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SwiftConnectionFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SwiftConnectionFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.BackupDriverException" refuri="api/cinder.exception#cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SwiftConnectionFailed" first="False" fullname="SwiftConnectionFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Connection to swift failed: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SynoAPIHTTPError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SynoAPIHTTPError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SynoAPIHTTPError" first="False" fullname="SynoAPIHTTPError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'HTTP exit code: [%(code)s]'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SynoAuthError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SynoAuthError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SynoAuthError" first="False" fullname="SynoAuthError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Synology driver authentication failed: %(reason)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="SynoLUNNotExist" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">SynoLUNNotExist</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="SynoLUNNotExist" first="False" fullname="SynoLUNNotExist.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'LUN not found by UUID: %(uuid)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="TegileAPIException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">TegileAPIException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="api/cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="TegileAPIException" first="False" fullname="TegileAPIException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unexpected response from Tegile IntelliFlash API'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="TransferNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">TransferNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="TransferNotFound" first="False" fullname="TransferNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Transfer %(transfer_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="UnableToExecuteHyperScaleCmd" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">UnableToExecuteHyperScaleCmd</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="UnableToExecuteHyperScaleCmd" first="False" fullname="UnableToExecuteHyperScaleCmd.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Failed HyperScale command for '%(message)s'"</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="UnableToFailOver" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">UnableToFailOver</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="UnableToFailOver" first="False" fullname="UnableToFailOver.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to failover to replication target: %(reason)s).'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="UnableToProcessHyperScaleCmdOutput" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">UnableToProcessHyperScaleCmdOutput</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="UnableToProcessHyperScaleCmdOutput" first="False" fullname="UnableToProcessHyperScaleCmdOutput.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Failed processing command output '%(cmd_out)s' for HyperScale command"</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="UnavailableDuringUpgrade" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">UnavailableDuringUpgrade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="UnavailableDuringUpgrade" first="False" fullname="UnavailableDuringUpgrade.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cannot perform %(action)s during system upgrade.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="UnexpectedOverQuota" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">UnexpectedOverQuota</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaError" refuri="api/cinder.exception#cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="UnexpectedOverQuota" first="False" fullname="UnexpectedOverQuota.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unexpected over quota on %(name)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="UnknownCmd" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">UnknownCmd</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="UnknownCmd" first="False" fullname="UnknownCmd.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unknown or unsupported command %(cmd)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VSPBusy" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VSPBusy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VSPError" refuri="api/cinder.exception#cinder.exception.VSPError"><literal classes="xref py py-class">cinder.exception.VSPError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VSPBusy" first="False" fullname="VSPBusy.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Device or resource is busy.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VSPError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VSPError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VSPError" first="False" fullname="VSPError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'VSP error occurred. %(message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VSPNotSupported" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VSPNotSupported</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VSPError" refuri="api/cinder.exception#cinder.exception.VSPError"><literal classes="xref py py-class">cinder.exception.VSPError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VSPNotSupported" first="False" fullname="VSPNotSupported.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The function on the storage is not supported.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ValidationError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ValidationError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ValidationError" first="False" fullname="ValidationError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(detail)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VersionNotFoundForAPIMethod" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VersionNotFoundForAPIMethod</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VersionNotFoundForAPIMethod" first="False" fullname="VersionNotFoundForAPIMethod.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'API version %(version)s is not supported on this method.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ViolinBackendErr" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ViolinBackendErr</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="api/cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ViolinBackendErr" first="False" fullname="ViolinBackendErr.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backend reports: %(message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ViolinBackendErrExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ViolinBackendErrExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeBackendAPIException" refuri="api/cinder.exception#cinder.exception.VolumeBackendAPIException"><literal classes="xref py py-class">cinder.exception.VolumeBackendAPIException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ViolinBackendErrExists" first="False" fullname="ViolinBackendErrExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backend reports: item already exists'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ViolinBackendErrNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ViolinBackendErrNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ViolinBackendErrNotFound" first="False" fullname="ViolinBackendErrNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backend reports: item not found'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ViolinInvalidBackendConfig" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ViolinInvalidBackendConfig</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ViolinInvalidBackendConfig" first="False" fullname="ViolinInvalidBackendConfig.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume backend config is invalid: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ViolinRequestRetryTimeout" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ViolinRequestRetryTimeout</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ViolinRequestRetryTimeout" first="False" fullname="ViolinRequestRetryTimeout.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backend service retry timeout hit: %(timeout)s sec'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ViolinResourceNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ViolinResourceNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ViolinResourceNotFound" first="False" fullname="ViolinResourceNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Backend reports: %(message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeAdminMetadataNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeAdminMetadataNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeAdminMetadataNotFound" first="False" fullname="VolumeAdminMetadataNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(volume_id)s has no administration metadata with key %(metadata_key)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeAttached" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeAttached</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeAttached" first="False" fullname="VolumeAttached.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(volume_id)s is still attached, detach volume first.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeAttachmentNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeAttachmentNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeAttachmentNotFound" first="False" fullname="VolumeAttachmentNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume attachment could not be found with filter: %(filter)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeBackendAPIException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeBackendAPIException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeBackendAPIException" first="False" fullname="VolumeBackendAPIException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Bad or unexpected response from the storage volume backend API: %(data)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeBackupSizeExceedsAvailableQuota" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeBackupSizeExceedsAvailableQuota</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaError" refuri="api/cinder.exception#cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeBackupSizeExceedsAvailableQuota" first="False" fullname="VolumeBackupSizeExceedsAvailableQuota.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Requested backup exceeds allowed Backup gigabytes quota. Requested %(requested)sG, quota is %(quota)sG and %(consumed)sG has been consumed.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeDeviceNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeDeviceNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeDeviceNotFound" first="False" fullname="VolumeDeviceNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume device not found at %(device)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeDriverException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeDriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeDriverException" first="False" fullname="VolumeDriverException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume driver reported an error: %(message)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeGroupCreationFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeGroupCreationFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeGroupCreationFailed" first="False" fullname="VolumeGroupCreationFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to create Volume Group: %(vg_name)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeGroupNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeGroupNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeGroupNotFound" first="False" fullname="VolumeGroupNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to find Volume Group: %(vg_name)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeIsBusy" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeIsBusy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeIsBusy" first="False" fullname="VolumeIsBusy.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'deleting volume %(volume_name)s that has snapshot'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeLimitExceeded" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeLimitExceeded</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaError" refuri="api/cinder.exception#cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeLimitExceeded" first="False" fullname="VolumeLimitExceeded.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = "Maximum number of volumes allowed (%(allowed)d) exceeded for quota '%(name)s'."</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeMetadataBackupExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeMetadataBackupExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.BackupDriverException" refuri="api/cinder.exception#cinder.exception.BackupDriverException"><literal classes="xref py py-class">cinder.exception.BackupDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeMetadataBackupExists" first="False" fullname="VolumeMetadataBackupExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Metadata backup already exists for this volume'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeMetadataNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeMetadataNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeMetadataNotFound" first="False" fullname="VolumeMetadataNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(volume_id)s has no metadata with key %(metadata_key)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeMigrationFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeMigrationFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeMigrationFailed" first="False" fullname="VolumeMigrationFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume migration failed: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeNotDeactivated" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeNotDeactivated</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeNotDeactivated" first="False" fullname="VolumeNotDeactivated.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(name)s was not deactivated in time.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeNotFound" first="False" fullname="VolumeNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume %(volume_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeSizeExceedsAvailableQuota" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeSizeExceedsAvailableQuota</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaError" refuri="api/cinder.exception#cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeSizeExceedsAvailableQuota" first="False" fullname="VolumeSizeExceedsAvailableQuota.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Requested volume or snapshot exceeds allowed %(name)s quota. Requested %(requested)sG, quota is %(quota)sG and %(consumed)sG has been consumed.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeSizeExceedsLimit" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeSizeExceedsLimit</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.QuotaError" refuri="api/cinder.exception#cinder.exception.QuotaError"><literal classes="xref py py-class">cinder.exception.QuotaError</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeSizeExceedsLimit" first="False" fullname="VolumeSizeExceedsLimit.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Requested volume size %(size)dG is larger than maximum allowed limit %(limit)dG.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeSnapshotNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeSnapshotNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeSnapshotNotFound" first="False" fullname="VolumeSnapshotNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No snapshots found for volume %(volume_id)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeTypeAccessExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeAccessExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Duplicate" refuri="api/cinder.exception#cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeTypeAccessExists" first="False" fullname="VolumeTypeAccessExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume type access for %(volume_type_id)s / %(project_id)s combination already exists.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeTypeAccessNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeAccessNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeTypeAccessNotFound" first="False" fullname="VolumeTypeAccessNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume type access not found for %(volume_type_id)s / %(project_id)s combination.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeTypeCreateFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeCreateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeTypeCreateFailed" first="False" fullname="VolumeTypeCreateFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cannot create volume_type with name %(name)s and specs %(extra_specs)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeTypeEncryptionExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeEncryptionExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeTypeEncryptionExists" first="False" fullname="VolumeTypeEncryptionExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume type encryption for type %(type_id)s already exists.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeTypeEncryptionNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeEncryptionNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeTypeEncryptionNotFound" first="False" fullname="VolumeTypeEncryptionNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume type encryption for type %(type_id)s does not exist.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeTypeExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Duplicate" refuri="api/cinder.exception#cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeTypeExists" first="False" fullname="VolumeTypeExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume Type %(id)s already exists.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeTypeExtraSpecsNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeExtraSpecsNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeTypeExtraSpecsNotFound" first="False" fullname="VolumeTypeExtraSpecsNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume Type %(volume_type_id)s has no extra specs with key %(extra_specs_key)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeTypeInUse" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeInUse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeTypeInUse" first="False" fullname="VolumeTypeInUse.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume Type %(volume_type_id)s deletion is not allowed with volumes present with the type.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeTypeNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeTypeNotFound" first="False" fullname="VolumeTypeNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume type %(volume_type_id)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeTypeNotFoundByName" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeNotFoundByName</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeTypeNotFound" refuri="api/cinder.exception#cinder.exception.VolumeTypeNotFound"><literal classes="xref py py-class">cinder.exception.VolumeTypeNotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeTypeNotFoundByName" first="False" fullname="VolumeTypeNotFoundByName.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume type with name %(volume_type_name)s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VolumeTypeUpdateFailed" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VolumeTypeUpdateFailed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VolumeTypeUpdateFailed" first="False" fullname="VolumeTypeUpdateFailed.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Cannot update volume_type %(id)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VzStorageException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VzStorageException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.RemoteFSException" refuri="api/cinder.exception#cinder.exception.RemoteFSException"><literal classes="xref py py-class">cinder.exception.RemoteFSException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VzStorageException" first="False" fullname="VzStorageException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unknown Virtuozzo Storage exception'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VzStorageNoSharesMounted" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VzStorageNoSharesMounted</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.RemoteFSNoSharesMounted" refuri="api/cinder.exception#cinder.exception.RemoteFSNoSharesMounted"><literal classes="xref py py-class">cinder.exception.RemoteFSNoSharesMounted</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VzStorageNoSharesMounted" first="False" fullname="VzStorageNoSharesMounted.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'No mounted Virtuozzo Storage shares found'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="VzStorageNoSuitableShareFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">VzStorageNoSuitableShareFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.RemoteFSNoSuitableShareFound" refuri="api/cinder.exception#cinder.exception.RemoteFSNoSuitableShareFound"><literal classes="xref py py-class">cinder.exception.RemoteFSNoSuitableShareFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="VzStorageNoSuitableShareFound" first="False" fullname="VzStorageNoSuitableShareFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'There is no share which can host %(volume_size)sG'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="WebDAVClientError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">WebDAVClientError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="WebDAVClientError" first="False" fullname="WebDAVClientError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'The WebDAV request failed. Reason: %(msg)s, Return code/reason: %(code)s, Source Volume: %(src)s, Destination Volume: %(dst)s, Method: %(method)s.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="WorkerExists" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">WorkerExists</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Duplicate" refuri="api/cinder.exception#cinder.exception.Duplicate"><literal classes="xref py py-class">cinder.exception.Duplicate</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="WorkerExists" first="False" fullname="WorkerExists.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Worker for %(type)s %(id)s already exists.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="WorkerNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">WorkerNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="WorkerNotFound" first="False" fullname="WorkerNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Worker with %s could not be found.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="XIODriverException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">XIODriverException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="XIODriverException" first="False" fullname="XIODriverException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'X-IO Volume Driver exception!'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="XtremIOAlreadyMappedError" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">XtremIOAlreadyMappedError</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="XtremIOAlreadyMappedError" first="False" fullname="XtremIOAlreadyMappedError.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Volume to Initiator Group mapping already exists'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="XtremIOArrayBusy" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">XtremIOArrayBusy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="XtremIOArrayBusy" first="False" fullname="XtremIOArrayBusy.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'System is busy, retry operation.'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="XtremIOSnapshotsLimitExceeded" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">XtremIOSnapshotsLimitExceeded</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="XtremIOSnapshotsLimitExceeded" first="False" fullname="XtremIOSnapshotsLimitExceeded.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Exceeded the limit of snapshots per volume'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ZadaraAttachmentsNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZadaraAttachmentsNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ZadaraAttachmentsNotFound" first="False" fullname="ZadaraAttachmentsNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Failed to retrieve attachments for volume %(name)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ZadaraInvalidAttachmentInfo" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZadaraInvalidAttachmentInfo</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.Invalid" refuri="api/cinder.exception#cinder.exception.Invalid"><literal classes="xref py py-class">cinder.exception.Invalid</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ZadaraInvalidAttachmentInfo" first="False" fullname="ZadaraInvalidAttachmentInfo.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Invalid attachment info for volume %(name)s: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ZadaraServerCreateFailure" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZadaraServerCreateFailure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ZadaraServerCreateFailure" first="False" fullname="ZadaraServerCreateFailure.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to create server object for initiator %(name)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ZadaraServerNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZadaraServerNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.NotFound" refuri="api/cinder.exception#cinder.exception.NotFound"><literal classes="xref py py-class">cinder.exception.NotFound</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ZadaraServerNotFound" first="False" fullname="ZadaraServerNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to find server object for initiator %(name)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ZadaraVPSANoActiveController" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZadaraVPSANoActiveController</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ZadaraVPSANoActiveController" first="False" fullname="ZadaraVPSANoActiveController.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Unable to find any active VPSA controller'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ZadaraVolumeNotFound" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZadaraVolumeNotFound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.VolumeDriverException" refuri="api/cinder.exception#cinder.exception.VolumeDriverException"><literal classes="xref py py-class">cinder.exception.VolumeDriverException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ZadaraVolumeNotFound" first="False" fullname="ZadaraVolumeNotFound.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = '%(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ZoneManagerException" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZoneManagerException</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ZoneManagerException" first="False" fullname="ZoneManagerException.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Fibre Channel connection control failure: %(reason)s'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="ZoneManagerNotInitialized" module="cinder.exception"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">ZoneManagerNotInitialized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.exception.CinderException" refuri="api/cinder.exception#cinder.exception.CinderException"><literal classes="xref py py-class">cinder.exception.CinderException</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="ZoneManagerNotInitialized" first="False" fullname="ZoneManagerNotInitialized.message" module="cinder.exception"><desc_name xml:space="preserve">message</desc_name><desc_annotation xml:space="preserve"> = 'Fibre Channel Zone Manager not initialized'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
        <section ids="the-cinder-common-config-module" names="the\ cinder.common.config\ module">
            <title>The <reference internal="True" reftitle="cinder.common.config" refuri="api/cinder.common.config#module-cinder.common.config"><literal classes="xref py py-mod">cinder.common.config</literal></reference> Module</title>
            <paragraph>Command-line flag library.</paragraph>
            <paragraph>Emulates gflags by wrapping cfg.ConfigOpts.</paragraph>
            <paragraph>The idea is to move fully to cfg eventually, and this wrapper is a
                stepping stone.</paragraph>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="set_middleware_defaults" module="cinder.common.config"><desc_name xml:space="preserve">set_middleware_defaults</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Update default configuration options for oslo.middleware.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="the-cinder-rpc-module" names="the\ cinder.rpc\ module">
            <title>The <reference internal="True" reftitle="cinder.rpc" refuri="api/cinder.rpc#module-cinder.rpc"><literal classes="xref py py-mod">cinder.rpc</literal></reference> Module</title>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="init" module="cinder.rpc"><desc_name xml:space="preserve">init</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">conf</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="cleanup" module="cinder.rpc"><desc_name xml:space="preserve">cleanup</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="set_defaults" module="cinder.rpc"><desc_name xml:space="preserve">set_defaults</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">control_exchange</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="add_extra_exmods" module="cinder.rpc"><desc_name xml:space="preserve">add_extra_exmods</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="clear_extra_exmods" module="cinder.rpc"><desc_name xml:space="preserve">clear_extra_exmods</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_allowed_exmods" module="cinder.rpc"><desc_name xml:space="preserve">get_allowed_exmods</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="class" domain="py" noindex="True" objtype="class">
                <desc_signature class="" first="False" fullname="RequestContextSerializer" module="cinder.rpc"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">RequestContextSerializer</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">base</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">oslo_messaging.serializer.Serializer</literal></paragraph>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="RequestContextSerializer" first="False" fullname="RequestContextSerializer.deserialize_context" module="cinder.rpc"><desc_name xml:space="preserve">deserialize_context</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="RequestContextSerializer" first="False" fullname="RequestContextSerializer.deserialize_entity" module="cinder.rpc"><desc_name xml:space="preserve">deserialize_entity</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">entity</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="RequestContextSerializer" first="False" fullname="RequestContextSerializer.serialize_context" module="cinder.rpc"><desc_name xml:space="preserve">serialize_context</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="RequestContextSerializer" first="False" fullname="RequestContextSerializer.serialize_entity" module="cinder.rpc"><desc_name xml:space="preserve">serialize_entity</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">entity</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_client" module="cinder.rpc"><desc_name xml:space="preserve">get_client</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">target</desc_parameter><desc_parameter xml:space="preserve">version_cap=None</desc_parameter><desc_parameter xml:space="preserve">serializer=None</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_server" module="cinder.rpc"><desc_name xml:space="preserve">get_server</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">target</desc_parameter><desc_parameter xml:space="preserve">endpoints</desc_parameter><desc_parameter xml:space="preserve">serializer=None</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_notifier" module="cinder.rpc"><desc_name xml:space="preserve">get_notifier</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">service=None</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter><desc_parameter xml:space="preserve">publisher_id=None</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
        </section>
        <section ids="the-cinder-test-module" names="the\ cinder.test\ module">
            <title>The <reference internal="True" reftitle="cinder.test" refuri="api/cinder.test#module-cinder.test"><literal classes="xref py py-mod">cinder.test</literal></reference> Module</title>
            <paragraph>Base classes for our unit tests.</paragraph>
            <paragraph>Allows overriding of CONF for use of fakes, and some black magic for
                inline callbacks.</paragraph>
            <index entries=""></index>
            <desc desctype="class" domain="py" noindex="True" objtype="class">
                <desc_signature class="" first="False" fullname="Database" module="cinder.test"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">Database</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">db_api</desc_parameter><desc_parameter xml:space="preserve">db_migrate</desc_parameter><desc_parameter xml:space="preserve">sql_connection</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">fixtures.fixture.Fixture</literal></paragraph>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="Database" first="False" fullname="Database.setUp" module="cinder.test"><desc_name xml:space="preserve">setUp</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="class" domain="py" noindex="True" objtype="class">
                <desc_signature class="" first="False" fullname="ModelsObjectComparatorMixin" module="cinder.test"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ModelsObjectComparatorMixin</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="class" domain="py" noindex="True" objtype="class">
                <desc_signature class="" first="False" fullname="RPCAPITestCase" module="cinder.test"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">RPCAPITestCase</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <reference internal="True" reftitle="cinder.test.TestCase" refuri="api/cinder.test#cinder.test.TestCase"><literal classes="xref py py-class">cinder.test.TestCase</literal></reference>, <reference internal="True" reftitle="cinder.test.ModelsObjectComparatorMixin" refuri="api/cinder.test#cinder.test.ModelsObjectComparatorMixin"><literal classes="xref py py-class">cinder.test.ModelsObjectComparatorMixin</literal></reference></paragraph>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="RPCAPITestCase" first="False" fullname="RPCAPITestCase.setUp" module="cinder.test"><desc_name xml:space="preserve">setUp</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="class" domain="py" noindex="True" objtype="class">
                <desc_signature class="" first="False" fullname="TestCase" module="cinder.test"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">TestCase</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">testtools.testcase.TestCase</literal></paragraph>
                    <paragraph>Test case base class for all unit tests.</paragraph>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="TestCase" first="False" fullname="TestCase.MOCK_TOOZ" module="cinder.test"><desc_name xml:space="preserve">MOCK_TOOZ</desc_name><desc_annotation xml:space="preserve"> = True</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="TestCase" first="False" fullname="TestCase.MOCK_WORKER" module="cinder.test"><desc_name xml:space="preserve">MOCK_WORKER</desc_name><desc_annotation xml:space="preserve"> = True</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="TestCase" first="False" fullname="TestCase.POLICY_PATH" module="cinder.test"><desc_name xml:space="preserve">POLICY_PATH</desc_name><desc_annotation xml:space="preserve"> = 'cinder/tests/unit/policy.json'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                        <desc_signature class="TestCase" first="False" fullname="TestCase.RESOURCE_FILTER_PATH" module="cinder.test"><desc_name xml:space="preserve">RESOURCE_FILTER_PATH</desc_name><desc_annotation xml:space="preserve"> = 'etc/cinder/resource_filters.json'</desc_annotation></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="TestCase" first="False" fullname="TestCase.assertTrue" module="cinder.test"><desc_name xml:space="preserve">assertTrue</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">x</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="TestCase" first="False" fullname="TestCase.assert_notify_called" module="cinder.test"><desc_name xml:space="preserve">assert_notify_called</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mock_notify</desc_parameter><desc_parameter xml:space="preserve">calls</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="TestCase" first="False" fullname="TestCase.flags" module="cinder.test"><desc_name xml:space="preserve">flags</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kw</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Override CONF variables for a test.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="TestCase" first="False" fullname="TestCase.mock_object" module="cinder.test"><desc_name xml:space="preserve">mock_object</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">obj</desc_parameter><desc_parameter xml:space="preserve">attr_name</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Use python mock to mock an object attribute</paragraph>
                            <paragraph>Mocks the specified objects attribute with the given value.
                                Automatically performs ‘addCleanup’ for the mock.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="TestCase" first="False" fullname="TestCase.override_config" module="cinder.test"><desc_name xml:space="preserve">override_config</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">override</desc_parameter><desc_parameter xml:space="preserve">group=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Cleanly override CONF variables.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="TestCase" first="False" fullname="TestCase.patch" module="cinder.test"><desc_name xml:space="preserve">patch</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Use python mock to mock a path with automatic cleanup.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="TestCase" first="False" fullname="TestCase.setUp" module="cinder.test"><desc_name xml:space="preserve">setUp</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Run before each test method to initialize test environment.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries=""></index>
                    <desc desctype="method" domain="py" noindex="True" objtype="method">
                        <desc_signature class="TestCase" first="False" fullname="TestCase.start_service" module="cinder.test"><desc_name xml:space="preserve">start_service</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">host=None</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="exception" domain="py" noindex="True" objtype="exception">
                <desc_signature class="" first="False" fullname="TestingException" module="cinder.test"><desc_annotation xml:space="preserve">exception </desc_annotation><desc_name xml:space="preserve">TestingException</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">Exception</literal></paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="the-cinder-utils-module" names="the\ cinder.utils\ module">
            <title>The <reference internal="True" reftitle="cinder.utils" refuri="api/cinder.utils#module-cinder.utils"><literal classes="xref py py-mod">cinder.utils</literal></reference> Module</title>
            <paragraph>Utilities and helper functions.</paragraph>
            <index entries=""></index>
            <desc desctype="class" domain="py" noindex="True" objtype="class">
                <desc_signature class="" first="False" fullname="ComparableMixin" module="cinder.utils"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">ComparableMixin</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">object</literal></paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                <desc_signature class="" first="False" fullname="DO_NOTHING" module="cinder.utils"><desc_name xml:space="preserve">DO_NOTHING</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Class that literrally does nothing.</paragraph>
                    <paragraph>We inherit from str in case it’s called with json.dumps.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="class" domain="py" noindex="True" objtype="class">
                <desc_signature class="" first="False" fullname="DoNothing" module="cinder.utils"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">DoNothing</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">str</literal></paragraph>
                    <paragraph>Class that literrally does nothing.</paragraph>
                    <paragraph>We inherit from str in case it’s called with json.dumps.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="class" domain="py" noindex="True" objtype="class">
                <desc_signature class="" first="False" fullname="TraceWrapperMetaclass" module="cinder.utils"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">TraceWrapperMetaclass</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">type</literal></paragraph>
                    <paragraph>Metaclass that wraps all methods of a class with trace_method.</paragraph>
                    <paragraph>This metaclass will cause every function inside of the class to be
                        decorated with the trace_method decorator.</paragraph>
                    <paragraph>To use the metaclass you define a class like so:
                        @six.add_metaclass(utils.TraceWrapperMetaclass)
                        class MyClass(object):</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="class" domain="py" noindex="True" objtype="class">
                <desc_signature class="" first="False" fullname="TraceWrapperWithABCMetaclass" module="cinder.utils"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">TraceWrapperWithABCMetaclass</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Bases: <literal classes="xref py py-class">abc.ABCMeta</literal>, <reference internal="True" reftitle="cinder.utils.TraceWrapperMetaclass" refuri="api/cinder.utils#cinder.utils.TraceWrapperMetaclass"><literal classes="xref py py-class">cinder.utils.TraceWrapperMetaclass</literal></reference></paragraph>
                    <paragraph>Metaclass that wraps all methods of a class with trace.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="add_visible_admin_metadata" module="cinder.utils"><desc_name xml:space="preserve">add_visible_admin_metadata</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">volume</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Add user-visible admin metadata to regular metadata.</paragraph>
                    <paragraph>Extracts the admin metadata keys that are to be made visible to
                        non-administrators, and adds them to the regular metadata structure for the
                        passed-in volume.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="as_int" module="cinder.utils"><desc_name xml:space="preserve">as_int</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">obj</desc_parameter><desc_parameter xml:space="preserve">quiet=True</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="brick_attach_volume_encryptor" module="cinder.utils"><desc_name xml:space="preserve">brick_attach_volume_encryptor</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">attach_info</desc_parameter><desc_parameter xml:space="preserve">encryption</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Attach encryption layer.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="brick_detach_volume_encryptor" module="cinder.utils"><desc_name xml:space="preserve">brick_detach_volume_encryptor</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">attach_info</desc_parameter><desc_parameter xml:space="preserve">encryption</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Detach encryption layer.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="brick_get_connector" module="cinder.utils"><desc_name xml:space="preserve">brick_get_connector</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">protocol</desc_parameter><desc_parameter xml:space="preserve">driver=None</desc_parameter><desc_parameter xml:space="preserve">use_multipath=False</desc_parameter><desc_parameter xml:space="preserve">device_scan_attempts=3</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Wrapper to get a brick connector object.</paragraph>
                    <paragraph>This automatically populates the required protocol as well
                        as the root_helper needed to execute commands.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="brick_get_connector_properties" module="cinder.utils"><desc_name xml:space="preserve">brick_get_connector_properties</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">multipath=False</desc_parameter><desc_parameter xml:space="preserve">enforce_multipath=False</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Wrapper to automatically set root_helper in brick calls.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">multipath</literal_strong> – A boolean indicating whether the connector can
                                            support multipath.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">enforce_multipath</literal_strong> – If True, it raises exception when multipath=True
                                            is specified but multipathd is not running.
                                            If False, it falls back to multipath=False
                                            when multipathd is not running.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="brick_get_encryptor" module="cinder.utils"><desc_name xml:space="preserve">brick_get_encryptor</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">connection_info</desc_parameter><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Wrapper to get a brick encryptor object.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="build_or_str" module="cinder.utils"><desc_name xml:space="preserve">build_or_str</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">elements</desc_parameter><desc_parameter xml:space="preserve">str_format=None</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Builds a string of elements joined by ‘or’.</paragraph>
                    <paragraph>Will join strings with the ‘or’ word and if a str_format is provided it
                        will be used to format the resulted joined string.
                        If there are no elements an empty string will be returned.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">elements</literal_strong> (<literal_emphasis>String</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>iterable of strings.</literal_emphasis>) – Elements we want to join.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">str_format</literal_strong> (<literal_emphasis>String.</literal_emphasis>) – String to use to format the response.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="calculate_virtual_free_capacity" module="cinder.utils"><desc_name xml:space="preserve">calculate_virtual_free_capacity</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">total_capacity</desc_parameter><desc_parameter xml:space="preserve">free_capacity</desc_parameter><desc_parameter xml:space="preserve">provisioned_capacity</desc_parameter><desc_parameter xml:space="preserve">thin_provisioning_support</desc_parameter><desc_parameter xml:space="preserve">max_over_subscription_ratio</desc_parameter><desc_parameter xml:space="preserve">reserved_percentage</desc_parameter><desc_parameter xml:space="preserve">thin</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Calculate the virtual free capacity based on thin provisioning support.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">total_capacity</literal_strong> – total_capacity_gb of a host_state or pool.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">free_capacity</literal_strong> – free_capacity_gb of a host_state or pool.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">provisioned_capacity</literal_strong> – provisioned_capacity_gb of a host_state
                                            or pool.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">thin_provisioning_support</literal_strong> – thin_provisioning_support of
                                            a host_state or a pool.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">max_over_subscription_ratio</literal_strong> – max_over_subscription_ratio of
                                            a host_state or a pool</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">reserved_percentage</literal_strong> – reserved_percentage of a host_state or
                                            a pool.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">thin</literal_strong> – whether volume to be provisioned is thin</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>the calculated virtual free capacity.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="check_exclusive_options" module="cinder.utils"><desc_name xml:space="preserve">check_exclusive_options</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Checks that only one of the provided options is actually not-none.</paragraph>
                    <paragraph>Iterates over all the kwargs passed in and checks that only one of said
                        arguments is not-none, if more than one is not-none then an exception will
                        be raised with the names of those arguments who were not-none.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="check_metadata_properties" module="cinder.utils"><desc_name xml:space="preserve">check_metadata_properties</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">metadata=None</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Checks that the volume metadata properties are valid.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="check_ssh_injection" module="cinder.utils"><desc_name xml:space="preserve">check_ssh_injection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">cmd_list</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="check_string_length" module="cinder.utils"><desc_name xml:space="preserve">check_string_length</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">value</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">min_length=0</desc_parameter><desc_parameter xml:space="preserve">max_length=None</desc_parameter><desc_parameter xml:space="preserve">allow_all_spaces=True</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check the length of specified string.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">value</literal_strong> – the value of the string</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">name</literal_strong> – the name of the string</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">min_length</literal_strong> – the min_length of the string</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">max_length</literal_strong> – the max_length of the string</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="convert_str" module="cinder.utils"><desc_name xml:space="preserve">convert_str</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">text</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Convert to native string.</paragraph>
                    <paragraph>Convert bytes and Unicode strings to native strings:</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>convert to bytes on Python 2:
                                encode Unicode using encodeutils.safe_encode()</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>convert to Unicode on Python 3: decode bytes from UTF-8</paragraph>
                        </list_item>
                    </bullet_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="execute" module="cinder.utils"><desc_name xml:space="preserve">execute</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*cmd</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Convenience wrapper around oslo’s execute() method.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_blkdev_major_minor" module="cinder.utils"><desc_name xml:space="preserve">get_blkdev_major_minor</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">lookup_for_file=True</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Get ‘major:minor’ number of block device.</paragraph>
                    <paragraph>Get the device’s ‘major:minor’ number of a block device to control
                        I/O ratelimit of the specified path.
                        If lookup_for_file is True and the path is a regular file, lookup a disk
                        device which the file lies on and returns the result for the device.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_bool_param" module="cinder.utils"><desc_name xml:space="preserve">get_bool_param</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">param_string</desc_parameter><desc_parameter xml:space="preserve">params</desc_parameter><desc_parameter xml:space="preserve">default=False</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_file_gid" module="cinder.utils"><desc_name xml:space="preserve">get_file_gid</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>This primarily exists to make unit testing easier.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_file_mode" module="cinder.utils"><desc_name xml:space="preserve">get_file_mode</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>This primarily exists to make unit testing easier.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_file_size" module="cinder.utils"><desc_name xml:space="preserve">get_file_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Returns the file size.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_log_levels" module="cinder.utils"><desc_name xml:space="preserve">get_log_levels</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">prefix</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_log_method" module="cinder.utils"><desc_name xml:space="preserve">get_log_method</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">level_string</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="get_root_helper" module="cinder.utils"><desc_name xml:space="preserve">get_root_helper</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="if_notifications_enabled" module="cinder.utils"><desc_name xml:space="preserve">if_notifications_enabled</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Calls decorated method only if notifications are enabled.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="is_blk_device" module="cinder.utils"><desc_name xml:space="preserve">is_blk_device</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dev</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="is_none_string" module="cinder.utils"><desc_name xml:space="preserve">is_none_string</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">val</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check if a string represents a None value.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="last_completed_audit_period" module="cinder.utils"><desc_name xml:space="preserve">last_completed_audit_period</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">unit=None</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>This method gives you the most recently <emphasis>completed</emphasis> audit period.</paragraph>
                    <definition_list>
                        <definition_list_item>
                            <term>arguments:</term>
                            <definition>
                                <definition_list>
                                    <definition_list_item>
                                        <term>units: string, one of ‘hour’, ‘day’, ‘month’, ‘year’</term>
                                        <definition>
                                            <paragraph>Periods normally begin at the beginning (UTC) of the
                                                period unit (So a ‘day’ period begins at midnight UTC,
                                                a ‘month’ unit on the 1st, a ‘year’ on Jan, 1)
                                                unit string may be appended with an optional offset
                                                like so:  <reference refuri="mailto:'day@18">‘day@18</reference>’  This will begin the period at 18:00
                                                UTC.  <reference refuri="mailto:'month@15">‘month@15</reference>’ starts a monthly period on the 15th,
                                                and year@3 begins a yearly one on March 1st.</paragraph>
                                        </definition>
                                    </definition_list_item>
                                </definition_list>
                            </definition>
                        </definition_list_item>
                        <definition_list_item>
                            <term>returns:  2 tuple of datetimes (begin, end)</term>
                            <definition>
                                <paragraph>The begin timestamp of this audit period is the same as the
                                    end of the previous.</paragraph>
                            </definition>
                        </definition_list_item>
                    </definition_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="log_unsupported_driver_warning" module="cinder.utils"><desc_name xml:space="preserve">log_unsupported_driver_warning</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">driver</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Annoy the log about unsupported drivers.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="make_dev_path" module="cinder.utils"><desc_name xml:space="preserve">make_dev_path</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dev</desc_parameter><desc_parameter xml:space="preserve">partition=None</desc_parameter><desc_parameter xml:space="preserve">base='/dev'</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return a path to a particular device.</paragraph>
                    <doctest_block xml:space="preserve">&gt;&gt;&gt; make_dev_path('xvdc')
/dev/xvdc</doctest_block>
                    <doctest_block xml:space="preserve">&gt;&gt;&gt; make_dev_path('xvdc', 1)
/dev/xvdc1</doctest_block>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="monkey_patch" module="cinder.utils"><desc_name xml:space="preserve">monkey_patch</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Patches decorators for all functions in a specified module.</paragraph>
                    <paragraph>If the CONF.monkey_patch set as True,
                        this function patches a decorator
                        for all functions in specified modules.</paragraph>
                    <paragraph>You can set decorators for each modules
                        using CONF.monkey_patch_modules.
                        The format is “Module path:Decorator function”.
                        Example: ‘cinder.api.ec2.cloud:’      cinder.openstack.common.notifier.api.notify_decorator’</paragraph>
                    <paragraph>Parameters of the decorator are as follows.
                        (See cinder.openstack.common.notifier.api.notify_decorator)</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">name</literal_strong> – name of the function</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">function</literal_strong> – object of the function</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="notifications_enabled" module="cinder.utils"><desc_name xml:space="preserve">notifications_enabled</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">conf</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check if oslo notifications are enabled.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="paths_normcase_equal" module="cinder.utils"><desc_name xml:space="preserve">paths_normcase_equal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path_a</desc_parameter><desc_parameter xml:space="preserve">path_b</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="read_file_as_root" module="cinder.utils"><desc_name xml:space="preserve">read_file_as_root</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">file_path</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Secure helper to read file as root.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="remove_invalid_filter_options" module="cinder.utils"><desc_name xml:space="preserve">remove_invalid_filter_options</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">filters</desc_parameter><desc_parameter xml:space="preserve">allowed_search_options</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Remove search options that are not valid for non-admin API/context.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="require_driver_initialized" module="cinder.utils"><desc_name xml:space="preserve">require_driver_initialized</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">driver</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Verifies if <title_reference>driver</title_reference> is initialized</paragraph>
                    <paragraph>If the driver is not initialized, an exception will be raised.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Params driver</field_name>
                            <field_body>
                                <paragraph>The driver instance.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Raises</field_name>
                            <field_body>
                                <paragraph><title_reference>exception.DriverNotInitialized</title_reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="resolve_hostname" module="cinder.utils"><desc_name xml:space="preserve">resolve_hostname</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">hostname</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Resolves host name to IP address.</paragraph>
                    <paragraph>Resolves a host name (my.data.point.com) to an IP address (10.12.143.11).
                        This routine also works if the data passed in hostname is already an IP.
                        In this case, the same IP address will be returned.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">hostname</literal_strong> – Host name to resolve.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>IP Address for Host name.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="retry" module="cinder.utils"><desc_name xml:space="preserve">retry</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">exceptions</desc_parameter><desc_parameter xml:space="preserve">interval=1</desc_parameter><desc_parameter xml:space="preserve">retries=3</desc_parameter><desc_parameter xml:space="preserve">backoff_rate=2</desc_parameter><desc_parameter xml:space="preserve">wait_random=False</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="robust_file_write" module="cinder.utils"><desc_name xml:space="preserve">robust_file_write</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">directory</desc_parameter><desc_parameter xml:space="preserve">filename</desc_parameter><desc_parameter xml:space="preserve">data</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Robust file write.</paragraph>
                    <paragraph>Use “write to temp file and rename” model for writing the
                        persistence file.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">directory</literal_strong> – Target directory to create a file.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">filename</literal_strong> – File name to store specified data.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">data</literal_strong> – String data.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="sanitize_hostname" module="cinder.utils"><desc_name xml:space="preserve">sanitize_hostname</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">hostname</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return a hostname which conforms to RFC-952 and RFC-1123 specs.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="service_expired_time" module="cinder.utils"><desc_name xml:space="preserve">service_expired_time</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">with_timezone=False</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="set_log_levels" module="cinder.utils"><desc_name xml:space="preserve">set_log_levels</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">prefix</desc_parameter><desc_parameter xml:space="preserve">level_string</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="setup_tracing" module="cinder.utils"><desc_name xml:space="preserve">setup_tracing</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">trace_flags</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Set global variables for each trace flag.</paragraph>
                    <paragraph>Sets variables TRACE_METHOD and TRACE_API, which represent
                        whether to log methods or api traces.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">trace_flags</literal_strong> – a list of strings</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="tempdir" module="cinder.utils"><desc_name xml:space="preserve">tempdir</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="temporary_chown" module="cinder.utils"><desc_name xml:space="preserve">temporary_chown</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">owner_uid=None</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Temporarily chown a path.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Params owner_uid</field_name>
                            <field_body>
                                <paragraph>UID of temporary owner (defaults to current user)</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="trace" module="cinder.utils"><desc_name xml:space="preserve">trace</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Trace calls to the decorated function.</paragraph>
                    <paragraph>This decorator should always be defined as the outermost decorator so it
                        is defined last. This is important so it does not interfere
                        with other decorators.</paragraph>
                    <paragraph>Using this decorator on a function will cause its execution to be logged at
                        <title_reference>DEBUG</title_reference> level with arguments, return values, and exceptions.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>a function decorator</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="trace_api" module="cinder.utils"><desc_name xml:space="preserve">trace_api</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Decorates a function if TRACE_API is true.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="trace_method" module="cinder.utils"><desc_name xml:space="preserve">trace_method</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">f</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Decorates a function if TRACE_METHOD is true.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="validate_dictionary_string_length" module="cinder.utils"><desc_name xml:space="preserve">validate_dictionary_string_length</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">specs</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Check the length of each key and value of dictionary.</paragraph>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="validate_integer" module="cinder.utils"><desc_name xml:space="preserve">validate_integer</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">value</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">min_value=None</desc_parameter><desc_parameter xml:space="preserve">max_value=None</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Make sure that value is a valid integer, potentially within range.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">value</literal_strong> – the value of the integer</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">name</literal_strong> – the name of the integer</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">min_length</literal_strong> – the min_length of the integer</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">max_length</literal_strong> – the max_length of the integer</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>integer</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries=""></index>
            <desc desctype="function" domain="py" noindex="True" objtype="function">
                <desc_signature class="" first="False" fullname="walk_class_hierarchy" module="cinder.utils"><desc_name xml:space="preserve">walk_class_hierarchy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">clazz</desc_parameter><desc_parameter xml:space="preserve">encountered=None</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Walk class hierarchy, yielding most derived classes first.</paragraph>
                </desc_content>
            </desc>
        </section>
        <section ids="the-cinder-wsgi-module" names="the\ cinder.wsgi\ module">
            <title>The <literal classes="xref py py-mod">cinder.wsgi</literal> Module</title>
        </section>
        <section ids="tests" names="tests">
            <title>Tests</title>
            <section ids="the-conf-fixture-module" names="the\ conf_fixture\ module">
                <title>The <literal classes="xref py py-mod">conf_fixture</literal> Module</title>
                <index entries=""></index>
                <desc desctype="function" domain="py" noindex="True" objtype="function">
                    <desc_signature class="" first="False" fullname="set_defaults" module="cinder.tests.unit.conf_fixture"><desc_name xml:space="preserve">set_defaults</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">conf</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </section>
            <section ids="the-test-rpc-module" names="the\ test_rpc\ module">
                <title>The <literal classes="xref py py-mod">test_rpc</literal> Module</title>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="FakeAPI" module="cinder.tests.unit.test_rpc"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">FakeAPI</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <literal classes="xref py py-class">cinder.rpc.RPCAPI</literal></paragraph>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="FakeAPI" first="False" fullname="FakeAPI.BINARY" module="cinder.tests.unit.test_rpc"><desc_name xml:space="preserve">BINARY</desc_name><desc_annotation xml:space="preserve"> = 'cinder-scheduler'</desc_annotation></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="FakeAPI" first="False" fullname="FakeAPI.RPC_API_VERSION" module="cinder.tests.unit.test_rpc"><desc_name xml:space="preserve">RPC_API_VERSION</desc_name><desc_annotation xml:space="preserve"> = '1.5'</desc_annotation></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="attribute" domain="py" noindex="True" objtype="attribute">
                            <desc_signature class="FakeAPI" first="False" fullname="FakeAPI.TOPIC" module="cinder.tests.unit.test_rpc"><desc_name xml:space="preserve">TOPIC</desc_name><desc_annotation xml:space="preserve"> = 'cinder-scheduler-topic'</desc_annotation></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="class" domain="py" noindex="True" objtype="class">
                    <desc_signature class="" first="False" fullname="RPCAPITestCase" module="cinder.tests.unit.test_rpc"><desc_annotation xml:space="preserve">class </desc_annotation><desc_name xml:space="preserve">RPCAPITestCase</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">*args</desc_parameter><desc_parameter xml:space="preserve">**kwargs</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Bases: <reference internal="True" reftitle="cinder.test.TestCase" refuri="api/cinder.test#cinder.test.TestCase"><literal classes="xref py py-class">cinder.test.TestCase</literal></reference></paragraph>
                        <paragraph>Tests RPCAPI mixin aggregating stuff related to RPC compatibility.</paragraph>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="RPCAPITestCase" first="False" fullname="RPCAPITestCase.setUp" module="cinder.tests.unit.test_rpc"><desc_name xml:space="preserve">setUp</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="RPCAPITestCase" first="False" fullname="RPCAPITestCase.test_init" module="cinder.tests.unit.test_rpc"><desc_name xml:space="preserve">test_init</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">get_client</desc_parameter><desc_parameter xml:space="preserve">get_min_obj</desc_parameter><desc_parameter xml:space="preserve">get_min_rpc</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="RPCAPITestCase" first="False" fullname="RPCAPITestCase.test_init_cached_caps" module="cinder.tests.unit.test_rpc"><desc_name xml:space="preserve">test_init_cached_caps</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">get_client</desc_parameter><desc_parameter xml:space="preserve">get_min_obj</desc_parameter><desc_parameter xml:space="preserve">get_min_rpc</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="RPCAPITestCase" first="False" fullname="RPCAPITestCase.test_init_no_notifications_1___" module="cinder.tests.unit.test_rpc"><desc_name xml:space="preserve">test_init_no_notifications_1___</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">driver</desc_parameter><desc_parameter xml:space="preserve">serializer_mock</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Test short-circuiting notifications with default and noop driver.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="RPCAPITestCase" first="False" fullname="RPCAPITestCase.test_init_no_notifications_2___noop__" module="cinder.tests.unit.test_rpc"><desc_name xml:space="preserve">test_init_no_notifications_2___noop__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">driver</desc_parameter><desc_parameter xml:space="preserve">serializer_mock</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Test short-circuiting notifications with default and noop driver.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="RPCAPITestCase" first="False" fullname="RPCAPITestCase.test_init_no_notifications_3___noop____noop__" module="cinder.tests.unit.test_rpc"><desc_name xml:space="preserve">test_init_no_notifications_3___noop____noop__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">driver</desc_parameter><desc_parameter xml:space="preserve">serializer_mock</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Test short-circuiting notifications with default and noop driver.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="RPCAPITestCase" first="False" fullname="RPCAPITestCase.test_init_none_caps" module="cinder.tests.unit.test_rpc"><desc_name xml:space="preserve">test_init_none_caps</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">get_client</desc_parameter><desc_parameter xml:space="preserve">serializer</desc_parameter><desc_parameter xml:space="preserve">get_min_obj</desc_parameter><desc_parameter xml:space="preserve">get_min_rpc</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>Test that with no service latest versions are selected.</paragraph>
                            </desc_content>
                        </desc>
                        <index entries=""></index>
                        <desc desctype="method" domain="py" noindex="True" objtype="method">
                            <desc_signature class="RPCAPITestCase" first="False" fullname="RPCAPITestCase.test_init_notifications" module="cinder.tests.unit.test_rpc"><desc_name xml:space="preserve">test_init_notifications</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">messaging_mock</desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
            </section>
        </section>
    </section>
</document>
