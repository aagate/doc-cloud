<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/configuration/block-storage/block-storage-overview.rst">
    <section ids="introduction-to-the-block-storage-service" names="introduction\ to\ the\ block\ storage\ service">
        <title>Introduction to the Block Storage service</title>
        <paragraph>The Block Storage service provides persistent block storage
            resources that Compute instances can consume. This includes
            secondary attached storage similar to the Amazon Elastic Block Storage
            (EBS) offering. In addition, you can write images to a Block Storage
            device for Compute to use as a bootable persistent instance.</paragraph>
        <paragraph>The Block Storage service differs slightly from the Amazon EBS offering.
            The Block Storage service does not provide a shared storage solution
            like NFS. With the Block Storage service, you can attach a device to
            only one instance.</paragraph>
        <paragraph>The Block Storage service provides:</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph><literal>cinder-api</literal> - a WSGI app that authenticates and routes requests
                    throughout the Block Storage service. It supports the OpenStack APIs
                    only, although there is a translation that can be done through
                    Compute’s EC2 interface, which calls in to the Block Storage client.</paragraph>
            </list_item>
            <list_item>
                <paragraph><literal>cinder-scheduler</literal> - schedules and routes requests to the appropriate
                    volume service. Depending upon your configuration, this may be simple
                    round-robin scheduling to the running volume services, or it can be
                    more sophisticated through the use of the Filter Scheduler. The
                    Filter Scheduler is the default and enables filters on things like
                    Capacity, Availability Zone, Volume Types, and Capabilities as well
                    as custom filters.</paragraph>
            </list_item>
            <list_item>
                <paragraph><literal>cinder-volume</literal> - manages Block Storage devices, specifically the
                    back-end devices themselves.</paragraph>
            </list_item>
            <list_item>
                <paragraph><literal>cinder-backup</literal> - provides a means to back up a Block Storage volume to
                    OpenStack Object Storage (swift).</paragraph>
            </list_item>
        </bullet_list>
        <paragraph>The Block Storage service contains the following components:</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph><strong>Back-end Storage Devices</strong> - the Block Storage service requires some
                    form of back-end storage that the service is built on. The default
                    implementation is to use LVM on a local volume group named
                    “cinder-volumes.” In addition to the base driver implementation, the
                    Block Storage service also provides the means to add support for
                    other storage devices to be utilized such as external Raid Arrays or
                    other storage appliances. These back-end storage devices may have
                    custom block sizes when using KVM or QEMU as the hypervisor.</paragraph>
            </list_item>
            <list_item>
                <paragraph><strong>Users and Tenants (Projects)</strong> - the Block Storage service can be
                    used by many different cloud computing consumers or customers
                    (tenants on a shared system), using role-based access assignments.
                    Roles control the actions that a user is allowed to perform. In the
                    default configuration, most actions do not require a particular role,
                    but this can be configured by the system administrator in the
                    appropriate <literal>policy.json</literal> file that maintains the rules. A user’s
                    access to particular volumes is limited by tenant, but the user name
                    and password are assigned per user. Key pairs granting access to a
                    volume are enabled per user, but quotas to control resource
                    consumption across available hardware resources are per tenant.</paragraph>
                <paragraph>For tenants, quota controls are available to limit:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>The number of volumes that can be created.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The number of snapshots that can be created.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The total number of GBs allowed per tenant (shared between
                            snapshots and volumes).</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>You can revise the default quota values with the Block Storage CLI,
                    so the limits placed by quotas are editable by admin users.</paragraph>
            </list_item>
            <list_item>
                <paragraph><strong>Volumes, Snapshots, and Backups</strong> - the basic resources offered by
                    the Block Storage service are volumes and snapshots which are derived
                    from volumes and volume backups:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>Volumes</strong> - allocated block storage resources that can be
                            attached to instances as secondary storage or they can be used as
                            the root store to boot instances. Volumes are persistent R/W block
                            storage devices most commonly attached to the compute node through
                            iSCSI.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Snapshots</strong> - a read-only point in time copy of a volume. The
                            snapshot can be created from a volume that is currently in use
                            (through the use of <literal>--force True</literal>) or in an available state.
                            The snapshot can then be used to create a new volume through
                            create from snapshot.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Backups</strong> - an archived copy of a volume currently stored in
                            Object Storage (swift).</paragraph>
                    </list_item>
                </bullet_list>
            </list_item>
        </bullet_list>
    </section>
</document>
