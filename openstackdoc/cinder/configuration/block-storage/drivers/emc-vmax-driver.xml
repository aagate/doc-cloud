<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/configuration/block-storage/drivers/emc-vmax-driver.rst">
    <section ids="dell-emc-vmax-iscsi-and-fc-drivers" names="dell\ emc\ vmax\ iscsi\ and\ fc\ drivers">
        <title>Dell EMC VMAX iSCSI and FC drivers</title>
        <paragraph>The Dell EMC VMAX drivers, <literal>VMAXISCSIDriver</literal> and <literal>VMAXFCDriver</literal>, support
            the use of Dell EMC VMAX storage arrays with Block Storage. They both provide
            equivalent functions and differ only in support for their respective host
            attachment methods.</paragraph>
        <paragraph>The drivers perform volume operations by communicating with the back-end VMAX
            storage. They use the Requests HTTP library to communicate with a Unisphere
            for VMAX instance, using a RESTAPI interface in the backend to perform VMAX
            storage operations.</paragraph>
        <section ids="system-requirements" names="system\ requirements">
            <title>System requirements</title>
            <paragraph>The Cinder driver supports the VMAX-3 series and VMAX All-Flash arrays.</paragraph>
            <paragraph>Solutions Enabler 8.4.0.7 or later, and Unisphere for VMAX 8.4.0.15 or later
                are required.</paragraph>
            <paragraph>You can download Solutions Enabler and Unisphere from the Dell EMC’s support
                web site (login is required). See the <literal>Solutions Enabler 8.4.0 Installation
and Configuration Guide</literal> and <literal>Unisphere for VMAX 8.4.0 Installation Guide</literal>
                at <literal>support.emc.com</literal>.</paragraph>
        </section>
        <section ids="required-vmax-software-suites-for-openstack" names="required\ vmax\ software\ suites\ for\ openstack">
            <title>Required VMAX software suites for OpenStack</title>
            <paragraph>There are five Software Suites available for the VMAX All Flash and Hybrid:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Base Suite</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Advanced Suite</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Local Replication Suite</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Remote Replication Suite</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Total Productivity Pack</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>OpenStack requires the Advanced Suite and the Local Replication Suite
                or the Total Productivity Pack (it includes the Advanced Suite and the
                Local Replication Suite) for the VMAX All Flash and Hybrid.</paragraph>
            <paragraph>Using the Remote Replication functionality will also require the Remote
                Replication Suite.</paragraph>
            <paragraph>The storage system also requires a Unisphere for VMAX (SMC) eLicence.</paragraph>
            <paragraph>Each are licensed separately. For further details on how to get the
                relevant license(s), reference eLicensing Support below.</paragraph>
        </section>
        <section ids="elicensing-support" names="elicensing\ support">
            <title>eLicensing support</title>
            <paragraph>To activate your entitlements and obtain your VMAX license files, visit the
                Service Center on <reference name="https://support.emc.com" refuri="https://support.emc.com">https://support.emc.com</reference><target ids="https-support-emc-com" names="https://support.emc.com" refuri="https://support.emc.com"></target>, as directed on your License
                Authorization Code (LAC) letter emailed to you.</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>For help with missing or incorrect entitlements after activation
                        (that is, expected functionality remains unavailable because it is not
                        licensed), contact your EMC account representative or authorized reseller.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>For help with any errors applying license files through Solutions Enabler,
                        contact the Dell EMC Customer Support Center.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>If you are missing a LAC letter or require further instructions on
                        activating your licenses through the Online Support site, contact EMC’s
                        worldwide Licensing team at <literal>licensing@emc.com</literal> or call:</paragraph>
                    <paragraph>North America, Latin America, APJK, Australia, New Zealand: SVC4EMC
                        (800-782-4362) and follow the voice prompts.</paragraph>
                    <paragraph>EMEA: +353 (0) 21 4879862 and follow the voice prompts.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="supported-operations" names="supported\ operations">
            <title>Supported operations</title>
            <paragraph>VMAX drivers support these operations:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Create, list, delete, attach, and detach volumes</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Create, list, and delete volume snapshots</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Copy an image to a volume</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Copy a volume to an image</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Clone a volume</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Extend a volume</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Retype a volume (Host and storage assisted volume migration)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Create a volume from a snapshot</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Create and delete generic volume group</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Create and delete generice volume group snapshot</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Modify generic volume group (add and remove volumes)</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Create generic volume group from source</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Live Migration</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Volume replication</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>VMAX drivers also support the following features:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Dynamic masking view creation</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Dynamic determination of the target iSCSI IP address</paragraph>
                </list_item>
                <list_item>
                    <paragraph>iSCSI multipath support</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Oversubscription</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Service Level support</paragraph>
                </list_item>
                <list_item>
                    <paragraph>SnapVX support</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Compression support(All Flash only)</paragraph>
                </list_item>
            </bullet_list>
            <note>
                <paragraph>VMAX All Flash array with Solutions Enabler 8.3.0.11 or later have
                    compression enabled by default when associated with Diamond Service Level.
                    This means volumes added to any newly created storage groups will be
                    compressed.</paragraph>
            </note>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Install iSCSI Utilities (for iSCSI drivers only).</paragraph>
                    <enumerated_list enumtype="arabic" prefix="" suffix=".">
                        <list_item>
                            <paragraph>Download and configure the Cinder node as an iSCSI initiator.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Install the <literal>open-iscsi</literal> package.</paragraph>
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>On Ubuntu:</paragraph>
                                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># apt-get install open-iscsi</literal_block>
                                </list_item>
                                <list_item>
                                    <paragraph>On openSUSE:</paragraph>
                                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># zypper install open-iscsi</literal_block>
                                </list_item>
                                <list_item>
                                    <paragraph>On Red Hat Enterprise Linux, CentOS, and Fedora:</paragraph>
                                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># yum install scsi-target-utils.x86_64</literal_block>
                                </list_item>
                            </bullet_list>
                        </list_item>
                        <list_item>
                            <paragraph>Enable the iSCSI driver to start automatically.</paragraph>
                        </list_item>
                    </enumerated_list>
                </list_item>
                <list_item>
                    <paragraph>Download Solutions Enabler from <literal>support.emc.com</literal> and install it.</paragraph>
                    <paragraph>You can install Solutions Enabler on a non-OpenStack host. Supported
                        platforms include different flavors of Windows, Red Hat, and SUSE Linux.
                        Solutions Enabler can be installed on a physical server, or as a Virtual
                        Appliance (a VMware ESX server VM). Additionally, starting with HYPERMAX
                        OS Q3 2015, you can manage VMAX3 arrays using the Embedded Management
                        (eManagement) container application. See the <literal>Solutions Enabler 8.4.0
Installation and Configuration Guide</literal> on <literal>support.emc.com</literal> for more
                        details.</paragraph>
                    <note>
                        <paragraph>You must discover storage arrays before you can use the VMAX drivers.
                            Follow instructions in <literal>Solutions Enabler 8.4.0 Installation and
Configuration Guide</literal> on <literal>support.emc.com</literal> for more
                            details.</paragraph>
                    </note>
                </list_item>
                <list_item>
                    <paragraph>Download Unisphere from <literal>support.emc.com</literal> and install it.</paragraph>
                    <paragraph>Unisphere can be installed in local, remote, or embedded configurations
                        - i.e., on the same server running Solutions Enabler; on a server
                        connected to the Solutions Enabler server; or using the eManagement
                        container application (containing Solutions Enabler and Unisphere for
                        VMAX). See <literal>Unisphere for VMAX 8.4.0 Installation Guide</literal> at
                        <literal>support.emc.com</literal>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Configure Block Storage</paragraph>
                    <paragraph>Add the following entries to <literal>/etc/cinder/cinder.conf</literal>:</paragraph>
                    <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">enabled_backends = CONF_GROUP_ISCSI, CONF_GROUP_FC

[CONF_GROUP_ISCSI]
volume_driver = cinder.volume.drivers.dell_emc.vmax.iscsi.VMAXISCSIDriver
cinder_dell_emc_config_file = /etc/cinder/cinder_dell_emc_config_CONF_GROUP_ISCSI.xml
volume_backend_name = ISCSI_backend


[CONF_GROUP_FC]
volume_driver = cinder.volume.drivers.dell_emc.vmax.fc.VMAXFCDriver
cinder_dell_emc_config_file = /etc/cinder/cinder_dell_emc_config_CONF_GROUP_FC.xml
volume_backend_name = FC_backend</literal_block>
                    <paragraph>In this example, two back-end configuration groups are enabled:
                        <literal>CONF_GROUP_ISCSI</literal> and <literal>CONF_GROUP_FC</literal>. Each configuration group has a
                        section describing unique parameters for connections, drivers, the
                        <literal>volume_backend_name</literal>, and the name of the EMC-specific configuration file
                        containing additional settings. Note that the file name is in the format
                        <literal>/etc/cinder/cinder_dell_emc_config_[confGroup].xml</literal>.</paragraph>
                    <paragraph>Once the <literal>cinder.conf</literal> and EMC-specific configuration files have been
                        created, <literal_strong classes="command">openstack</literal_strong> commands need to be issued in order to
                        create and associate OpenStack volume types with the declared
                        <literal>volume_backend_names</literal>:</paragraph>
                    <paragraph>Additionally, each volume type will need an associated <literal>pool_name</literal> - an
                        extra specification indicating the service level/ workload combination to
                        be used for that volume type.</paragraph>
                    <paragraph>There is also the option to assign a port group to a volume type by
                        setting the <literal>storagetype:portgroupname</literal> extra specification.</paragraph>
                </list_item>
            </enumerated_list>
            <definition_list>
                <definition_list_item>
                    <term><literal>ServiceLevel</literal></term>
                    <definition>
                        <paragraph>The Service Level manages the underlying storage to provide expected
                            performance. Setting the <literal>ServiceLevel</literal> to <literal>NONE</literal> means that non-FAST
                            managed storage groups will be created instead (storage groups not
                            associated with any service level).</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>Workload</literal></term>
                    <definition>
                        <paragraph>When a workload type is added, the latency range is reduced due to the
                            added information. Setting the <literal>Workload</literal> to <literal>NONE</literal> means the latency
                            range will be the widest for its Service Level type. Please note that you
                            cannot set a Workload without a Service Level.</paragraph>
                    </definition>
                </definition_list_item>
            </definition_list>
            <note>
                <paragraph>Run the command cinder get-pools –detail to query for the pool
                    information. This should list all the available Service Level and Workload
                    combinations available for the SRP as pools belonging to the same backend.
                    You can create many volume types for different service level and workload
                    types using the same backend.</paragraph>
            </note>
            <definition_list>
                <definition_list_item>
                    <term><literal>Port Groups</literal></term>
                    <definition>
                        <paragraph>Port groups refer to VMAX port groups that have been pre-configured to
                            expose volumes managed by this backend. Each supplied port group should
                            have sufficient number and distribution of ports (across directors and
                            switches) as to ensure adequate bandwidth and failure protection for the
                            volume connections. PortGroups can contain one or more port groups of
                            either iSCSI or FC ports. Make sure that any PortGroups provided contain
                            either all FC or all iSCSI port groups (for a given back end), as
                            appropriate for the configured driver (iSCSI or FC). Port groups can be
                            assigned as an extra spec, or can be provided in the xml file.
                            Port groups provided as the extra spec are selected first.</paragraph>
                    </definition>
                </definition_list_item>
            </definition_list>
            <note>
                <paragraph>Create as many volume types as the number of Service Level and Workload
                    (available) combinations which you are going to use for provisioning
                    volumes. The pool_name is the additional property which has to be set and
                    is of the format: <literal>&lt;ServiceLevel&gt;+&lt;Workload&gt;+&lt;SRP&gt;+&lt;Array ID&gt;</literal>. This
                    can be obtained from the output of the <literal>cinder get-pools--detail</literal>.</paragraph>
            </note>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume type create VMAX_ISCI_SILVER_OLTP
$ openstack volume type set --property volume_backend_name=ISCSI_backend \
                            --property pool_name=Silver+OLTP+SRP_1+000197800123 \
                            --property storagetype:portgroupname=OS-PG2 \
                            VMAX_ ISCI_SILVER_OLTP
$ openstack volume type create VMAX_FC_DIAMOND_DSS
$ openstack volume type set --property volume_backend_name=FC_backend \
                            --property pool_name=Diamond+DSS+SRP_1+000197800123 \
                             --property port_group_name=OS-PG1 \
                            VMAX_FC_DIAMOND_DSS</literal_block>
            <paragraph>By issuing these commands, the Block Storage volume type
                <literal>VMAX_ISCSI_SILVER_OLTP</literal> is associated with the <literal>ISCSI_backend</literal>, a Silver
                Service Level, and an OLTP workload.</paragraph>
            <paragraph>The type <literal>VMAX_FC_DIAMOND_DSS</literal> is associated with the <literal>FC_backend</literal>, a
                Diamond Service Level, and a DSS workload.</paragraph>
            <note>
                <paragraph>VMAX Hybrid supports Optimized, Diamond, Platinum, Gold, Silver, Bronze,
                    and NONE service levels. VMAX All Flash supports Diamond and NONE. Both
                    support DSS_REP, DSS, OLTP_REP, OLTP, and NONE workloads.</paragraph>
            </note>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Create an XML file</paragraph>
                    <paragraph>Create the <literal>/etc/cinder/cinder_dell_emc_config_CONF_GROUP_ISCSI.xml</literal>
                        file. You do not need to restart the service for this change.</paragraph>
                    <paragraph>Add the following lines to the XML file:</paragraph>
                </list_item>
            </enumerated_list>
            <literal_block highlight_args="{}" language="xml" linenos="False" xml:space="preserve">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;EMC&gt;
   &lt;RestServerIp&gt;1.1.1.1&lt;/RestServerIp&gt;
   &lt;RestServerPort&gt;8443&lt;/RestServerPort&gt;
   &lt;RestUserName&gt;smc&lt;/RestUserName&gt;
   &lt;RestPassword&gt;smc&lt;/RestPassword&gt;
   &lt;PortGroups&gt;
      &lt;PortGroup&gt;OS-PORTGROUP1-PG&lt;/PortGroup&gt;
      &lt;PortGroup&gt;OS-PORTGROUP2-PG&lt;/PortGroup&gt;
   &lt;/PortGroups&gt;
   &lt;Array&gt;111111111111&lt;/Array&gt;
   &lt;SRP&gt;SRP_1&lt;/SRP&gt;
   &lt;SSLVerify&gt;/path/to/sslcert&lt;/SSLVerify&gt;
&lt;/EMC&gt;</literal_block>
            <paragraph>Where:</paragraph>
            <definition_list>
                <definition_list_item>
                    <term><literal>RestServerIp</literal></term>
                    <definition>
                        <paragraph>IP address of the Unisphere server.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>RestServerPort</literal></term>
                    <definition>
                        <paragraph>Port number of the Unisphere server.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>RestUserName</literal> and <literal>RestPassword</literal></term>
                    <definition>
                        <paragraph>Credentials for the Unisphere server.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>PortGroups</literal></term>
                    <definition>
                        <paragraph>Supplies the names of VMAX port groups that have been pre-configured to
                            expose volumes managed by this array. Port groups can be supplied in the
                            XML file, or can be specified as an extra spec on a volume type for more
                            control. Please see above section on port groups. When a dynamic masking
                            view is created by the VMAX driver, if there is no port group specified
                            as an extra specification, the port group is chosen randomly from the
                            PortGroup list, to evenly distribute load across the set of groups
                            provided.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>Array</literal></term>
                    <definition>
                        <paragraph>Unique VMAX array serial number.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>SRP</literal></term>
                    <definition>
                        <paragraph>The name of the storage resource pool for the given array.</paragraph>
                    </definition>
                </definition_list_item>
                <definition_list_item>
                    <term><literal>SSLVerify</literal></term>
                    <definition>
                        <paragraph>The path to the <literal>ca_cert.pem</literal> file of the Unisphere instance below, or
                            <literal>True</literal> if the SSL cert has been added to the bundle - see <literal>SSL support</literal>.</paragraph>
                    </definition>
                </definition_list_item>
            </definition_list>
        </section>
        <section ids="upgrading-from-smi-s-based-driver-to-restapi-based-driver" names="upgrading\ from\ smi-s\ based\ driver\ to\ restapi\ based\ driver">
            <title>Upgrading from SMI-S based driver to RESTAPI based driver</title>
            <paragraph>Seamless upgrades from an SMI-S based driver to RESTAPI based driver,
                following the setup instructions above, are supported with a few exceptions:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Live migration functionality will not work on already attached/in-use
                        legacy volumes. These volumes will first need to be detached and reattached
                        using the RESTAPI based driver. This is because we have changed the masking
                        view architecture from Pike to better support this functionality.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Consistency groups are deprecated in Pike. Generic Volume Groups are
                        supported from Pike onwards.</paragraph>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="ssl-support" names="ssl\ support">
            <title>SSL support</title>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Get the CA certificate of the Unisphere server. This pulls the CA cert file
                        and saves it as .pem file:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># openssl s_client -showcerts -connect my_unisphere_host:8443 &lt;/dev/null 2&gt;/dev/null|openssl x509 -outform PEM &gt;ca_cert.pem</literal_block>
                    <paragraph>Where <literal>my_unisphere_host</literal> is the hostname of the unisphere instance and
                        <literal>ca_cert.pem</literal> is the name of the .pem file.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Add this path to the &lt;SSLVerify&gt; tag in
                        <literal>/etc/cinder/cinder_dell_emc_config_&lt;conf_group&gt;.xml</literal></paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">&lt;SSLVerify&gt;/path/to/ca_cert.pem&lt;/SSLVerify&gt;</literal_block>
                    <paragraph><literal>OR</literal> follow the steps below:</paragraph>
                </list_item>
                <list_item>
                    <paragraph>OPTIONAL (if step 2 completed): Copy the pem file to the system certificate
                        directory:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># cp ca_cert.pem /usr/share/ca-certificates/ca_cert.crt</literal_block>
                </list_item>
                <list_item>
                    <paragraph>OPTIONAL: Update CA certificate database with the following commands:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># sudo dpkg-reconfigure ca-certificates</literal_block>
                    <note>
                        <paragraph>Check that the new <literal>ca_cert.crt</literal> will activate by selecting ask on the
                            dialog. If it is not enabled for activation, use the down and up keys to
                            select, and the space key to enable or disable.</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># sudo update-ca-certificates</literal_block>
                    </note>
                </list_item>
                <list_item>
                    <paragraph>Ensure <literal>&lt;SSLVerify&gt;</literal> tag in
                        <literal>/etc/cinder/cinder_dell_emc_config_&lt;conf_group&gt;.xml</literal> is set to True OR
                        the path defined in step 1.</paragraph>
                </list_item>
            </enumerated_list>
            <note>
                <paragraph>Issue</paragraph>
                <paragraph>“Caused by SSLError(CertificateError(“hostname ‘xx.xx.xx.xx’ doesn’t match ‘xx.xx.xx.xx’</paragraph>
                <paragraph>Solution</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Check that <literal>requests</literal> and it’s dependencies are up to date:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ sudo pip install requests --upgrade</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Verify the SSL cert was created using the command:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openssl s_client -showcerts -connect {my_unisphere_host}:{port} &lt;/dev/null 2&gt;/dev/null|openssl x509 -outform PEM &gt;{cert_name}.pem</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Verify the cert using command:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openssl s_client --connect {ip_address}:{port} -CAfile {cert_name}.pem -verify 9</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>If requests is up to date and the cert is created correctly and verified
                            but the hostname error still persists, install <literal>ipaddress</literal> to
                            determine if it clears the hostname error:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ sudo pip install ipaddress</literal_block>
                    </list_item>
                </enumerated_list>
            </note>
        </section>
        <section ids="fc-zoning-with-vmax" names="fc\ zoning\ with\ vmax">
            <title>FC Zoning with VMAX</title>
            <paragraph>Zone Manager is required when there is a fabric between the host and array.
                This is necessary for larger configurations where pre-zoning would be too
                complex and open-zoning would raise security concerns.</paragraph>
        </section>
        <section ids="iscsi-with-vmax" names="iscsi\ with\ vmax">
            <title>iSCSI with VMAX</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Make sure the <literal>iscsi-initiator-utils</literal> package is installed on all Compute
                        nodes.</paragraph>
                </list_item>
            </bullet_list>
            <note>
                <paragraph>You can only ping the VMAX iSCSI target ports when there is a valid masking
                    view. An attach operation creates this masking view.</paragraph>
            </note>
        </section>
        <section ids="vmax-masking-view-and-group-naming-info" names="vmax\ masking\ view\ and\ group\ naming\ info">
            <title>VMAX masking view and group naming info</title>
            <section ids="masking-view-names" names="masking\ view\ names">
                <title>Masking view names</title>
                <paragraph>Masking views are dynamically created by the VMAX FC and iSCSI drivers using
                    the following naming conventions. <literal>[protocol]</literal> is either <literal>I</literal> for volumes
                    attached over iSCSI or <literal>F</literal> for volumes attached over Fiber Channel.</paragraph>
            </section>
            <section ids="initiator-group-names" names="initiator\ group\ names">
                <title>Initiator group names</title>
                <paragraph>For each host that is attached to VMAX volumes using the drivers, an initiator
                    group is created or re-used (per attachment type). All initiators of the
                    appropriate type known for that host are included in the group. At each new
                    attach volume operation, the VMAX driver retrieves the initiators (either
                    WWNNs or IQNs) from OpenStack and adds or updates the contents of the
                    Initiator Group as required. Names are of the following format. <literal>[protocol]</literal>
                    is either <literal>I</literal> for volumes attached over iSCSI or <literal>F</literal> for volumes attached
                    over Fiber Channel.</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">OS-[shortHostName]-[protocol]-IG</literal_block>
                <note>
                    <paragraph>Hosts attaching to OpenStack managed VMAX storage cannot also attach to
                        storage on the same VMAX that are not managed by OpenStack.</paragraph>
                </note>
            </section>
            <section ids="fa-port-groups" names="fa\ port\ groups">
                <title>FA port groups</title>
                <paragraph>VMAX array FA ports to be used in a new masking view are retrieved from the
                    port group provided as the extra spec on the volume type, or chosen from the
                    list provided in the Dell EMC configuration file.</paragraph>
            </section>
            <section dupnames="storage\ group\ names" ids="storage-group-names">
                <title>Storage group names</title>
                <paragraph>As volumes are attached to a host, they are either added to an existing
                    storage group (if it exists) or a new storage group is created and the volume
                    is then added. Storage groups contain volumes created from a pool, attached
                    to a single host, over a single connection type (iSCSI or FC). <literal>[protocol]</literal>
                    is either <literal>I</literal> for volumes attached over iSCSI or <literal>F</literal> for volumes attached
                    over Fiber Channel. VMAX cinder driver utilizes cascaded storage groups -
                    a <literal>parent</literal> storage group which is associated with the masking view, which
                    contains <literal>child</literal> storage groups for each configured
                    SRP/slo/workload/compression-enabled or disabled/replication-enabled or
                    disabled combination.</paragraph>
                <paragraph>VMAX All Flash and Hybrid</paragraph>
                <paragraph>Parent storage group:</paragraph>
                <literal_block highlight_args="{}" language="text" linenos="False" xml:space="preserve">OS-[shortHostName]-[protocol]-[portgroup_name]-SG</literal_block>
                <paragraph>Child storage groups:</paragraph>
                <literal_block highlight_args="{}" language="text" linenos="False" xml:space="preserve">OS-[shortHostName]-[SRP]-[ServiceLevel/Workload]-[portgroup_name]-CD-RE</literal_block>
                <note>
                    <paragraph>CD and RE are only set if compression is explicitly disabled or replication
                        explicitly enabled . see the compression and replication sections below.</paragraph>
                </note>
            </section>
            <section ids="interval-and-retries" names="interval\ and\ retries">
                <title>Interval and Retries</title>
                <paragraph>By default, <literal>interval</literal> and <literal>retries</literal> are <literal>3</literal> seconds and <literal>200</literal> retries
                    respectively. These determine how long (<literal>interval</literal>) and how many times
                    (<literal>retries</literal>) a user is willing to wait for a single Rest call,
                    <literal>3*200=600seconds</literal>. Depending on usage, these may need to be overriden by
                    the user in the cinder.conf. For example, if performance is a factor, then the
                    <literal>interval</literal> should be decreased to check the job status more frequently, and
                    if multiple concurrent provisioning requests are issued then <literal>retries</literal>
                    should be increased so calls will not timeout prematurely.</paragraph>
                <paragraph>In the example below, the driver checks every 3 seconds for the status of the
                    job. It will continue checking for 150 retries before it times out.</paragraph>
                <paragraph>Add the following lines to the VMAX backend in the cinder.conf:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">[CONF_GROUP_ISCSI]
volume_driver = cinder.volume.drivers.dell_emc.vmax.iscsi.VMAXISCSIDriver
cinder_dell_emc_config_file = /etc/cinder/cinder_dell_emc_config_CONF_GROUP_ISCSI.xml
volume_backend_name = ISCSI_backend
interval = 3
retries = 200</literal_block>
            </section>
        </section>
        <section ids="qos-quality-of-service-support" names="qos\ (quality\ of\ service)\ support">
            <title>QoS (Quality of Service) support</title>
            <paragraph>Quality of service (QOS) has traditionally been associated with network
                bandwidth usage. Network administrators set limitations on certain networks
                in terms of bandwidth usage for clients. This enables them to provide a
                tiered level of service based on cost. The Nova/cinder QOS offer similar
                functionality based on volume type setting limits on host storage bandwidth
                per service offering. Each volume type is tied to specific QoS attributes
                some of which are unique to each storage vendor. In the hypervisor, the QoS
                limits the following</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Limit by throughput - Total bytes/sec, read bytes/sec, write bytes/sec</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Limit by IOPS - Total IOPS/sec, read IOPS/sec, write IOPS/sec</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>QoS enforcement in cinder is done either at the hypervisor (front end),
                the storage subsystem (back end), or both. This document focuses on QoS
                limits that are enforced by either the VMAX backend or the hypervisor
                front end interchangeably or just back end (Vendor Specific). The VMAX driver
                offers support for Total bytes/sec limit in throughput and Total IOPS/sec
                limit of IOPS.</paragraph>
            <paragraph>The VMAX driver supports the following attributes that are front end/back end
                agnostic</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>total_iops_sec - Maximum IOPs (in I/Os per second). Valid values range from
                        100 IO/Sec to 100,000 IO/sec.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>total_bytes_sec - Maximum bandwidth (throughput) in bytes per second. Valid
                        values range from 1048576bytes (1MB) to 104857600000bytes (100, 000MB)</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The VMAX driver offers the following attribute that is vendor specific to the
                VMAX and dependent on the total_iops_sec and/or total_bytes_sec being set.</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Dynamic Distribution - Enables/Disables dynamic distribution of host I/O
                        limits. Possible values are:</paragraph>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>Always - Enables full dynamic distribution mode. When enabled, the
                                configured host I/O limits will be dynamically distributed across the
                                configured ports, thereby allowing the limits on each individual port to
                                adjust to fluctuating demand.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>OnFailure - Enables port failure capability. When enabled, the fraction
                                of configured host I/O limits available to a configured port will adjust
                                based on the number of ports currently online.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Never - Disables this feature (Default).</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
            </bullet_list>
            <section ids="use-case-1-default-values" names="use\ case\ 1\ -\ default\ values">
                <title>USE CASE 1 - Default values</title>
                <paragraph>Prerequisites - VMAX</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Host I/O Limit (MB/Sec) -     No Limit</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Host I/O Limit (IO/Sec) -     No Limit</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set Dynamic Distribution -    N/A</paragraph>
                    </list_item>
                </bullet_list>
                <table ids="id2">
                    <title><strong>Prerequisites - Block Storage (cinder) back end (storage group)</strong></title>
                    <tgroup cols="2">
                        <colspec colwidth="19"></colspec>
                        <colspec colwidth="19"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>Key</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Value</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>total_iops_sec</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>500</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>total_bytes_sec</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>104857600 (100MB)</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>DistributionType</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Always</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Create QoS Specs with the prerequisite values above:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume qos create --consumer back-end \
                              --property total_iops_sec=500 \
                              --property total_bytes_sec=104857600 \
                              --property DistributionType=Always \
                              SILVER</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Associate QoS specs with specified volume type:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume qos associate SILVER VOLUME_TYPE</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Create volume with the volume type indicated above:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume create --size 1 --type VOLUME_TYPE TEST_VOLUME</literal_block>
                    </list_item>
                </enumerated_list>
                <paragraph><strong>Outcome - VMAX (storage group)</strong></paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Host I/O Limit (MB/Sec) -     100</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Host I/O Limit (IO/Sec) -     500</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set Dynamic Distribution -    Always</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Outcome - Block Storage (cinder)</strong></paragraph>
                <paragraph>Volume is created against volume type and QoS is enforced with the parameters
                    above.</paragraph>
            </section>
            <section ids="use-case-2-preset-limits" names="use\ case\ 2\ -\ preset\ limits">
                <title>USE CASE 2 - Preset limits</title>
                <paragraph>Prerequisites - VMAX</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Host I/O Limit (MB/Sec) -     2000</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Host I/O Limit (IO/Sec) -     2000</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set Dynamic Distribution -    Never</paragraph>
                    </list_item>
                </bullet_list>
                <table ids="id3">
                    <title><strong>Prerequisites - Block Storage (cinder) back end (storage group)</strong></title>
                    <tgroup cols="2">
                        <colspec colwidth="19"></colspec>
                        <colspec colwidth="19"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>Key</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Value</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>total_iops_sec</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>500</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>total_bytes_sec</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>104857600 (100MB)</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>DistributionType</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Always</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Create QoS specifications with the prerequisite values above. The consumer
                            in this case use case is both for front end and back end:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume qos create --consumer back-end \
                              --property total_iops_sec=500 \
                              --property total_bytes_sec=104857600 \
                              --property DistributionType=Always \
                              SILVER</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Associate QoS specifications with specified volume type:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume qos associate SILVER VOLUME_TYPE</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Create volume with the volume type indicated above:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume create --size 1 --type VOLUME_TYPE TEST_VOLUME</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Attach the volume created in step 3 to an instance</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack server add volume TEST_VOLUME TEST_INSTANCE</literal_block>
                    </list_item>
                </enumerated_list>
                <paragraph><strong>Outcome - VMAX (storage group)</strong></paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Host I/O Limit (MB/Sec) -     100</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Host I/O Limit (IO/Sec) -     500</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set Dynamic Distribution -    Always</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Outcome - Block Storage (cinder)</strong></paragraph>
                <paragraph>Volume is created against volume type and QoS is enforced with the parameters
                    above.</paragraph>
                <paragraph><strong>Outcome - Hypervisor (nova)</strong></paragraph>
                <paragraph>Libvirt includes an extra xml flag within the &lt;disk&gt; section called iotune
                    that is responsible for rate limitation. To confirm that, first get the
                    <literal>OS-EXT-SRV-ATTR:instance_name</literal> value of the server instance
                    i.e. instance-00000005. We then run the following command using the
                    <literal>OS-EXT-SRV-ATTR:instance_name</literal> retrieved above.</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ virsh dumpxml instance-00000005 | grep -1 "total_bytes_sec\|total_iops_sec"</literal_block>
                <paragraph>The outcome is shown below</paragraph>
                <literal_block highlight_args="{}" language="xml" linenos="False" xml:space="preserve">&lt;iotune&gt;
   &lt;total_bytes_sec&gt;104857600&lt;/total_bytes_sec&gt;
   &lt;total_iops_sec&gt;500&lt;/total_iops_sec&gt;
&lt;/iotune&gt;</literal_block>
            </section>
            <section ids="use-case-3-preset-limits" names="use\ case\ 3\ -\ preset\ limits">
                <title>USE CASE 3 - Preset limits</title>
                <paragraph>Prerequisites - VMAX</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Host I/O Limit (MB/Sec) -     100</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Host I/O Limit (IO/Sec) -     500</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set Dynamic Distribution -    Always</paragraph>
                    </list_item>
                </bullet_list>
                <table ids="id4">
                    <title><strong>Prerequisites - Block Storage (cinder) back end (storage group)</strong></title>
                    <tgroup cols="2">
                        <colspec colwidth="19"></colspec>
                        <colspec colwidth="19"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>Key</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Value</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>total_iops_sec</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>500</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>total_bytes_sec</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>104857600 (100MB)</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>DistributionType</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>OnFailure</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Create QoS specifications with the prerequisite values above:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume qos create --consumer back-end \
                              --property total_iops_sec=500 \
                              --property total_bytes_sec=104857600 \
                              --property DistributionType=Always \
                              SILVER</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Associate QoS specifications with specified volume type:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume qos associate SILVER VOLUME_TYPE</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Create volume with the volume type indicated above:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume create --size 1 --type VOLUME_TYPE TEST_VOLUME</literal_block>
                    </list_item>
                </enumerated_list>
                <paragraph><strong>Outcome - VMAX (storage group)</strong></paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Host I/O Limit (MB/Sec) -     100</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Host I/O Limit (IO/Sec) -     500</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set Dynamic Distribution -    OnFailure</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Outcome - Block Storage (cinder)</strong></paragraph>
                <paragraph>Volume is created against volume type and QOS is enforced with the parameters above</paragraph>
            </section>
            <section ids="use-case-4-default-values" names="use\ case\ 4\ -\ default\ values">
                <title>USE CASE 4 - Default values</title>
                <paragraph>Prerequisites - VMAX</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Host I/O Limit (MB/Sec) -     No Limit</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Host I/O Limit (IO/Sec) -     No Limit</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set Dynamic Distribution -    N/A</paragraph>
                    </list_item>
                </bullet_list>
                <table ids="id5">
                    <title><strong>Prerequisites - Block Storage (cinder) back end (storage group)</strong></title>
                    <tgroup cols="2">
                        <colspec colwidth="19"></colspec>
                        <colspec colwidth="11"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>Key</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Value</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>DistributionType</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Always</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Create QoS specifications with the prerequisite values above:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume qos create --consumer back-end \
                              --property DistributionType=Always \
                              SILVER</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Associate QoS specifications with specified volume type:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume qos associate SILVER VOLUME_TYPE</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Create volume with the volume type indicated above:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume create --size 1 --type VOLUME_TYPE TEST_VOLUME</literal_block>
                    </list_item>
                </enumerated_list>
                <paragraph><strong>Outcome - VMAX (storage group)</strong></paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Host I/O Limit (MB/Sec) -     No Limit</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Host I/O Limit (IO/Sec) -     No Limit</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set Dynamic Distribution -    N/A</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>Outcome - Block Storage (cinder)</strong></paragraph>
                <paragraph>Volume is created against volume type and there is no QoS change.</paragraph>
            </section>
        </section>
        <section ids="iscsi-multipathing-support" names="iscsi\ multipathing\ support">
            <title>iSCSI multipathing support</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Install open-iscsi on all nodes on your system</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Do not install EMC PowerPath as they cannot co-exist with native multipath
                        software</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Multipath tools must be installed on all nova compute nodes</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>On Ubuntu:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># apt-get install open-iscsi           #ensure iSCSI is installed
# apt-get install multipath-tools      #multipath modules
# apt-get install sysfsutils sg3-utils #file system utilities
# apt-get install scsitools            #SCSI tools</literal_block>
            <paragraph>On openSUSE and SUSE Linux Enterprise Server:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># zipper install open-iscsi           #ensure iSCSI is installed
# zipper install multipath-tools      #multipath modules
# zipper install sysfsutils sg3-utils #file system utilities
# zipper install scsitools            #SCSI tools</literal_block>
            <paragraph>On Red Hat Enterprise Linux and CentOS:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># yum install iscsi-initiator-utils   #ensure iSCSI is installed
# yum install device-mapper-multipath #multipath modules
# yum install sysfsutils sg3-utils    #file system utilities
# yum install scsitools               #SCSI tools</literal_block>
            <section ids="multipath-configuration-file" names="multipath\ configuration\ file">
                <title>Multipath configuration file</title>
                <paragraph>The multipath configuration file may be edited for better management and
                    performance. Log in as a privileged user and make the following changes to
                    <literal classes="file" role="file">/etc/multipath.conf</literal> on the  Compute (nova) node(s).</paragraph>
                <literal_block highlight_args="{}" language="vim" linenos="False" xml:space="preserve">devices {
# Device attributed for EMC VMAX
    device {
            vendor "EMC"
            product "SYMMETRIX"
            path_grouping_policy multibus
            getuid_callout "/lib/udev/scsi_id --page=pre-spc3-83 --whitelisted --device=/dev/%n"
            path_selector "round-robin 0"
            path_checker tur
            features "0"
            hardware_handler "0"
            prio const
            rr_weight uniform
            no_path_retry 6
            rr_min_io 1000
            rr_min_io_rq 1
    }
}</literal_block>
                <paragraph>You may need to reboot the host after installing the MPIO tools or restart
                    iSCSI and multipath services.</paragraph>
                <paragraph>On Ubuntu:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># service open-iscsi restart
# service multipath-tools restart</literal_block>
                <paragraph>On openSUSE, SUSE Linux Enterprise Server, Red Hat Enterprise Linux, and
                    CentOS:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># systemctl restart open-iscsi
# systemctl restart multipath-tools</literal_block>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ lsblk
NAME                                       MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINT
sda                                          8:0    0     1G  0 disk
..360000970000196701868533030303235 (dm-6) 252:6    0     1G  0 mpath
sdb                                          8:16   0     1G  0 disk
..360000970000196701868533030303235 (dm-6) 252:6    0     1G  0 mpath
vda                                        253:0    0     1T  0 disk</literal_block>
            </section>
            <section ids="openstack-configurations" names="openstack\ configurations">
                <title>OpenStack configurations</title>
                <paragraph>On Compute (nova) node, add the following flag in the <literal>[libvirt]</literal> section of
                    <literal classes="file" role="file">/etc/nova/nova.conf</literal>:</paragraph>
                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">iscsi_use_multipath = True</literal_block>
                <paragraph>On cinder controller node, set the multipath flag to true in
                    <literal classes="file" role="file">/etc/cinder/cinder.conf</literal>:</paragraph>
                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">use_multipath_for_image_xfer = True</literal_block>
                <paragraph>Restart <literal>nova-compute</literal> and <literal>cinder-volume</literal> services after the change.</paragraph>
            </section>
            <section ids="verify-you-have-multiple-initiators-available-on-the-compute-node-for-i-o" names="verify\ you\ have\ multiple\ initiators\ available\ on\ the\ compute\ node\ for\ i/o">
                <title>Verify you have multiple initiators available on the compute node for I/O</title>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Create a 3GB VMAX volume.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Create an instance from image out of native LVM storage or from VMAX
                            storage, for example, from a bootable volume</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Attach the 3GB volume to the new instance:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ multipath -ll
mpath102 (360000970000196700531533030383039) dm-3 EMC,SYMMETRIX
size=3G features='1 queue_if_no_path' hwhandler='0' wp=rw
'-+- policy='round-robin 0' prio=1 status=active
33:0:0:1 sdb 8:16 active ready running
'- 34:0:0:1 sdc 8:32 active ready running</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Use the <literal>lsblk</literal> command to see the multipath device:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ lsblk
NAME                                       MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINT
sdb                                          8:0    0     3G  0 disk
..360000970000196700531533030383039 (dm-6) 252:6    0     3G  0 mpath
sdc                                          8:16   0     3G  0 disk
..360000970000196700531533030383039 (dm-6) 252:6    0     3G  0 mpath
vda</literal_block>
                    </list_item>
                </enumerated_list>
            </section>
        </section>
        <section ids="workload-planner-wlp" names="workload\ planner\ (wlp)">
            <title>Workload Planner (WLP)</title>
            <paragraph>VMAX Hybrid allows you to manage application storage by using Service Level
                (SL) using policy based automation. The VMAX Hybrid comes with
                up to 6 SL policies defined. Each has a
                set of workload characteristics that determine the drive types and mixes
                which will be used for the SL. All storage in the VMAX Array is virtually
                provisioned, and all of the pools are created in containers called Storage
                Resource Pools (SRP). Typically there is only one SRP, however there can be
                more. Therefore, it is the same pool we will provision to but we can provide
                different SLO/Workload combinations.</paragraph>
            <paragraph>The SL capacity is retrieved by interfacing with Unisphere Workload Planner
                (WLP). If you do not set up this relationship then the capacity retrieved is
                that of the entire SRP. This can cause issues as it can never be an accurate
                representation of what storage is available for any given SL and Workload
                combination.</paragraph>
            <section ids="enabling-wlp-on-unisphere" names="enabling\ wlp\ on\ unisphere">
                <title>Enabling WLP on Unisphere</title>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>To enable WLP on Unisphere, click on the
                            <inline classes="menuselection" rawtext=":menuselection:`array--&gt;Performance--&gt;Settings`">array‣Performance‣Settings</inline>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set both the <inline classes="guilabel" rawtext=":guilabel:`Real Time`">Real Time</inline> and the <inline classes="guilabel" rawtext=":guilabel:`Root Cause Analysis`">Root Cause Analysis</inline>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Click <inline classes="guilabel" rawtext=":guilabel:`Register`">Register</inline>.</paragraph>
                    </list_item>
                </enumerated_list>
                <note>
                    <paragraph>This should be set up ahead of time (allowing for several hours of data
                        collection), so that the Unisphere for VMAX Performance Analyzer can
                        collect rated metrics for each of the supported element types.</paragraph>
                </note>
            </section>
        </section>
        <section ids="all-flash-compression-support" names="all\ flash\ compression\ support">
            <title>All Flash compression support</title>
            <paragraph>On an All Flash array, the creation of any storage group has a compressed
                attribute by default. Setting compression on a storage group does not mean
                that all the devices will be immediately compressed. It means that for all
                incoming writes compression will be considered. Setting compression <literal>off</literal> on
                a storage group does not mean that all the devices will be uncompressed.
                It means all the writes to compressed tracks will make these tracks
                uncompressed.</paragraph>
            <note>
                <paragraph>This feature is only applicable for All Flash arrays, 250F, 450F or 850F.</paragraph>
            </note>
            <section ids="use-case-1-compression-disabled-create-attach-detach-and-delete-volume" names="use\ case\ 1\ -\ compression\ disabled\ create,\ attach,\ detach,\ and\ delete\ volume">
                <title>Use case 1 - Compression disabled create, attach, detach, and delete volume</title>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Create a new volume type called <literal>VMAX_COMPRESSION_DISABLED</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set an extra spec <literal>volume_backend_name</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set a new extra spec <literal>storagetype:disablecompression = True</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Create a new volume.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Check in Unisphere or symcli to see if the volume
                            exists in storage group <literal>OS-&lt;srp&gt;-&lt;servicelevel&gt;-&lt;workload&gt;-CD-SG</literal>, and
                            compression is disabled on that storage group.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Attach the volume to an instance. Check in Unisphere or symcli to see if the
                            volume exists in storage group
                            <literal>OS-&lt;shorthostname&gt;-&lt;srp&gt;-&lt;servicelevel/workload&gt;-&lt;portgroup&gt;-CD</literal>, and
                            compression is disabled on that storage group.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Detach volume from instance. Check in Unisphere or symcli to see if the
                            volume exists in storage group <literal>OS-&lt;srp&gt;-&lt;servicelevel&gt;-&lt;workload&gt;-CD-SG</literal>,
                            and compression is disabled on that storage group.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Delete the volume. If this was the last volume in the
                            <literal>OS-&lt;srp&gt;-&lt;servicelevel&gt;-&lt;workload&gt;-CD-SG</literal> storage group,
                            it should also be deleted.</paragraph>
                    </list_item>
                </enumerated_list>
            </section>
            <section ids="use-case-2-compression-disabled-create-delete-snapshot-and-delete-volume" names="use\ case\ 2\ -\ compression\ disabled\ create,\ delete\ snapshot\ and\ delete\ volume">
                <title>Use case 2 - Compression disabled create, delete snapshot and delete volume</title>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Repeat steps 1-5 of Use case 1.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Create a snapshot. The volume should now exist in
                            <literal>OS-&lt;srp&gt;-&lt;servicelevel&gt;-&lt;workload&gt;-CD-SG</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Delete the snapshot. The volume should be removed from
                            <literal>OS-&lt;srp&gt;-&lt;servicelevel&gt;-&lt;workload&gt;-CD-SG</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Delete the volume. If this volume is the last volume in
                            <literal>OS-&lt;srp&gt;-&lt;servicelevel&gt;-&lt;workload&gt;-CD-SG</literal>, it should also be deleted.</paragraph>
                    </list_item>
                </enumerated_list>
            </section>
            <section ids="use-case-3-retype-from-compression-disabled-to-compression-enabled" names="use\ case\ 3\ -\ retype\ from\ compression\ disabled\ to\ compression\ enabled">
                <title>Use case 3 - Retype from compression disabled to compression enabled</title>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Repeat steps 1-4 of Use case 1.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Create a new volume type. For example <literal>VMAX_COMPRESSION_ENABLED</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set extra spec <literal>volume_backend_name</literal> as before.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Set the new extra spec’s compression as
                            <literal>storagetype:disablecompression = False</literal> or DO NOT set this extra spec.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Retype from volume type <literal>VMAX_COMPRESSION_DISABLED</literal> to
                            <literal>VMAX_COMPRESSION_ENABLED</literal>.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Check in Unisphere or symcli to see if the volume exists in storage group
                            <literal>OS-&lt;srp&gt;-&lt;servicelevel&gt;-&lt;workload&gt;-SG</literal>, and compression is enabled on
                            that storage group.</paragraph>
                    </list_item>
                </enumerated_list>
                <note>
                    <paragraph>If extra spec <literal>storagetype:disablecompression</literal> is set on a hybrid, it is
                        ignored because compression is not a feature on a VMAX3 hybrid.</paragraph>
                </note>
            </section>
        </section>
        <section ids="volume-replication-support" names="volume\ replication\ support">
            <title>Volume replication support</title>
            <section ids="configure-the-source-and-target-arrays" names="configure\ the\ source\ and\ target\ arrays">
                <title>Configure the source and target arrays</title>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Configure a synchronous SRDF group between the chosen source and target
                            arrays for the VMAX cinder driver to use. The source array must correspond
                            with the <literal>&lt;Array&gt;</literal> entry in the VMAX XML file.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Select both the director and the ports for the SRDF emulation to use on
                            both sides. Bear in mind that network topology is important when choosing
                            director endpoints. Currently, the only supported mode is <title_reference>Synchronous</title_reference>.</paragraph>
                        <note>
                            <paragraph>If the source and target arrays are not managed by the same Unisphere
                                server (that is, the target array is remotely connected to server -
                                for example, if you are using embedded management), in the event of a
                                full disaster scenario (i.e. the primary array is completely lost and
                                all connectivity to it is gone), the Unisphere server would no longer
                                be able to contact the target array. In this scenario, the volumes would
                                be automatically failed over to the target array, but administrator
                                intervention would be required to either; configure the target (remote)
                                array as local to the current Unisphere server (if it is a stand-alone
                                server), or enter the details to the XML file of a second Unisphere
                                server, which is locally connected to the target array (for example, the
                                embedded management Unisphere server of the target array), and restart
                                the cinder volume service.</paragraph>
                        </note>
                    </list_item>
                    <list_item>
                        <paragraph>Enable replication in <literal>/etc/cinder/cinder.conf</literal>.
                            To enable the replication functionality in VMAX cinder driver, it is
                            necessary to create a replication volume-type. The corresponding
                            back-end stanza in the <literal>cinder.conf</literal> for this volume-type must then
                            include a <literal>replication_device</literal> parameter. This parameter defines a
                            single replication target array and takes the form of a list of key
                            value pairs.</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">enabled_backends = VMAX_FC_REPLICATION
[VMAX_FC_REPLICATION]
volume_driver = cinder.volume.drivers.dell_emc.vmax_fc.VMAXFCDriver
cinder_dell_emc_config_file = /etc/cinder/cinder_dell_emc_config_VMAX_FC_REPLICATION.xml
volume_backend_name = VMAX_FC_REPLICATION
replication_device = target_device_id:000197811111, remote_port_group:os-failover-pg, remote_pool:SRP_1, rdf_group_label: 28_11_07, allow_extend:False</literal_block>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>target_device_id</literal> is a unique VMAX array serial number of the target
                                    array. For full failover functionality, the source and target VMAX arrays
                                    must be discovered and managed by the same U4V server.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>remote_port_group</literal> is the name of a VMAX port group that has been
                                    pre-configured to expose volumes managed by this backend in the event
                                    of a failover. Make sure that this portgroup contains either all FC or
                                    all iSCSI port groups (for a given back end), as appropriate for the
                                    configured driver (iSCSI or FC).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>remote_pool</literal> is the unique pool name for the given target array.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>rdf_group_label</literal> is the name of a VMAX SRDF group (Synchronous) that
                                    has been pre-configured between the source and target arrays.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>allow_extend</literal> is a flag for allowing the extension of replicated volumes.
                                    To extend a volume in an SRDF relationship, this relationship must first be
                                    broken, both the source and target volumes are then independently extended,
                                    and then the replication relationship is re-established. If not explicitly
                                    set, this flag defaults to <literal>False</literal>.</paragraph>
                                <note>
                                    <paragraph>As the SRDF link must be severed, due caution should be exercised when
                                        performing this operation. If absolutely necessary, only one source and
                                        target pair should be extended at a time.
                                        In Queens, the underlying VMAX architecture will support extending
                                        source and target volumes without having to sever links.</paragraph>
                                </note>
                            </list_item>
                        </bullet_list>
                        <note>
                            <paragraph>Service Level and Workload: An attempt will be made to create a storage
                                group on the target array with the same service level and workload combination
                                as the primary. However, if this combination is unavailable on the target
                                (for example, in a situation where the source array is a Hybrid, the target array
                                is an All Flash, and an All Flash incompatible service level like Bronze is
                                configured), no service level will be applied.</paragraph>
                        </note>
                        <note>
                            <paragraph>The VMAX cinder drivers can support a single replication target per
                                back-end, that is we do not support Concurrent SRDF or Cascaded SRDF.
                                Ensure there is only a single <literal>replication_device</literal> entry per
                                back-end stanza.</paragraph>
                        </note>
                    </list_item>
                    <list_item>
                        <paragraph>Create a <literal>replication-enabled</literal> volume type. Once the
                            <literal>replication_device</literal> parameter has been entered in the VMAX
                            backend entry in the <literal>cinder.conf</literal>, a corresponding volume type
                            needs to be created <literal>replication_enabled</literal> property set. See
                            above <literal>Setup VMAX drivers</literal> for details.</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume type set --property replication_enabled = "&lt;is&gt; True" \
                      VMAX_FC_REPLICATION</literal_block>
                    </list_item>
                </enumerated_list>
            </section>
            <section ids="volume-replication-interoperability-with-other-features" names="volume\ replication\ interoperability\ with\ other\ features">
                <title>Volume replication interoperability with other features</title>
                <paragraph>Most features are supported, except for the following:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>There is no OpenStack Generic Volume Group support for replication-enabled
                            VMAX volumes.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Storage-assisted retype operations on replication-enabled VMAX volumes
                            (moving from a non-replicated type to a replicated-type and vice-versa.
                            Moving to another service level/workload combination, for example) are
                            not supported.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The image volume cache functionality is supported (enabled by setting
                            <literal>image_volume_cache_enabled = True</literal>), but one of two actions must be taken
                            when creating the cached volume:</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph>The first boot volume created on a backend (which will trigger the
                                    cached volume to be created) should be the smallest necessary size.
                                    For example, if the minimum size disk to hold an image is 5GB, create
                                    the first boot volume as 5GB.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>Alternatively, ensure that the <literal>allow_extend</literal> option in the
                                    <literal>replication_device parameter</literal> is set to <literal>True</literal>.</paragraph>
                            </list_item>
                        </bullet_list>
                        <paragraph>This is because the initial boot volume is created at the minimum required
                            size for the requested image, and then extended to the user specified size.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="failover-host" names="failover\ host">
                <title>Failover host</title>
                <paragraph>In the event of a disaster, or where there is required downtime, upgrade
                    of the primary array for example, the administrator can issue the failover
                    host command to failover to the configured target:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ cinder failover-host cinder_host@VMAX_FC_REPLICATION#Diamond+SRP_1+000192800111</literal_block>
                <paragraph>If the primary array becomes available again, you can initiate a failback
                    using the same command and specifying <literal>--backend_id default</literal>:</paragraph>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ cinder failover-host \
  cinder_host@VMAX_FC_REPLICATION#Diamond+SRP_1+000192800111 \
  --backend_id default</literal_block>
            </section>
        </section>
        <section ids="volume-retype-storage-assisted-volume-migration" names="volume\ retype\ -\ storage\ assisted\ volume\ migration">
            <title>Volume retype -  storage assisted volume migration</title>
            <paragraph>Volume retype with storage assisted migration is supported now for
                VMAX3 arrays. Cinder requires that for storage assisted migration, a
                volume cannot be retyped across backends. For using storage assisted volume
                retype, follow these steps:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>For migrating a volume from one Service Level or Workload combination to
                        another, use volume retype with the migration-policy to on-demand. The
                        target volume type should have the same volume_backend_name configured and
                        should have the desired pool_name to which you are trying to retype to
                        (please above <literal>Setup VMAX Drivers</literal> for details).</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ cinder retype --migration-policy on-demand &lt;volume&gt; &lt;volume-type&gt;</literal_block>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="generic-volume-group-support" names="generic\ volume\ group\ support">
            <title>Generic volume group support</title>
            <paragraph>Generic volume group operations are performed through the CLI using API
                version 3.1x of the cinder API. Generic volume groups are multi-purpose
                groups which can be used for various features. The only feature supported
                currently by the VMAX plugin is the ability to take group snapshots which
                are consistent based on the group specs. Generic volume groups are a
                replacement for the consistency groups.</paragraph>
            <section ids="consistent-group-snapshot" names="consistent\ group\ snapshot">
                <title>Consistent group snapshot</title>
                <paragraph>For creating a consistent group snapshot, a group-spec, having the key
                    <literal>consistent_group_snapshot_enabled</literal> set to <literal>&lt;is&gt; True</literal>, should be set
                    on the group. Similarly the same key should be set on any volume type which
                    is specified while creating the group. The VMAX plugin doesn’t support
                    creating/managing a group which doesn’t have this group-spec set. If this key
                    is not set on the group-spec then the generic volume group will be
                    created/managed by cinder (not the VMAX plugin).</paragraph>
                <note>
                    <paragraph>The consistent group snapshot should not be confused with the VMAX
                        consistency which primarily applies to SRDF.</paragraph>
                </note>
                <note>
                    <paragraph>For creating consistent group snapshots, no changes are required to be
                        done to the <literal>/etc/cinder/policy.json</literal>.</paragraph>
                </note>
            </section>
            <section dupnames="storage\ group\ names" ids="id1">
                <title>Storage Group Names</title>
                <paragraph>Storage groups are created on the VMAX as a result of creation of generic
                    volume groups. These storage groups follow a different naming convention
                    and are of the following format depending upon whether the groups have a
                    name.</paragraph>
                <literal_block highlight_args="{}" language="text" linenos="False" xml:space="preserve">TruncatedGroupName_GroupUUID or GroupUUID</literal_block>
            </section>
            <section ids="operations" names="operations">
                <title>Operations</title>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Create a group type</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.11 group-type-create GROUP_TYPE</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Show a group type</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.11 group-type-show GROUP_TYPE</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>List group types</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.11 group-type-list</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Delete group type</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.11 group-type-delete GROUP_TYPE</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Set/unset a group spec</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.11 group-type-key GROUP_TYPE set consistent_group_snapshot_enabled= "&lt;is&gt; True"</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>List group types and group specs:</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.11 group-specs-list</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Create a group:</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.13 group-create --name GROUP GROUP_TYPE VOLUME_TYPE1,VOLUME_TYPE2</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Show a group:</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.13 group-show GROUP</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>List all groups:</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.13 group-list</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Create a volume and add it to a group at the time of creation:</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.13 create --volume-type VOLUME_TYPE1 --group-id GROUP_ID 1</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Modify a group to add or remove volumes:</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.13 group-update --add-volumes UUID1,UUID2 --remove-volumes UUID3,UUID4 GROUP</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Create a group snapshot:</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.14 group-snapshot-create --name GROUP_SNAPSHOT GROUP</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Delete group snapshot(s):</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.14 group-snapshot-delete GROUP_SNAPSHOT</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Create a group from a group snapshot:</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ cinder --os-volume-api-version 3.14 group-create-from-src --group-snapshot GROUP_SNAPSHOT --name GROUP</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Create a group from a source snapshot:</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ cinder --os-volume-api-version 3.14 group-create-from-src --source-group SOURCE_GROUP --name GROUP</literal_block>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Delete a group</paragraph>
                    </list_item>
                </bullet_list>
                <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">cinder --os-volume-api-version 3.13 group-delete --delete-volumes GROUP</literal_block>
            </section>
        </section>
        <section ids="oversubscription-support" names="oversubscription\ support">
            <title>Oversubscription support</title>
            <paragraph>Please refer to the following:
                <reference refuri="https://docs.openstack.org/cinder/latest/admin/blockstorage-over-subscription.html">https://docs.openstack.org/cinder/latest/admin/blockstorage-over-subscription.html</reference></paragraph>
        </section>
        <section ids="live-migration-support" names="live\ migration\ support">
            <title>Live Migration support</title>
            <paragraph>Non-live migration (sometimes referred to simply as ‘migration’). The instance
                is shut down for a period of time to be moved to another hypervisor. In this
                case, the instance recognizes that it was rebooted. Live migration
                (or ‘true live migration’). Almost no instance downtime. Useful when the
                instances must be kept running during the migration. The different types
                of live migration are:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Shared storage-based live migration. Both hypervisors have access to shared
                        storage.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Block live migration. No shared storage is required. Incompatible with
                        read-only devices such as CD-ROMs and Configuration Drive (config_drive).</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Volume-backed live migration. Instances are backed by volumes rather than
                        ephemeral disk.  For VMAX volume-backed live migration on shared storage
                        is required.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The VMAX driver supports shared storage-based live migration.</paragraph>
            <section ids="architecture" names="architecture">
                <title>Architecture</title>
                <paragraph>In VMAX, A volume cannot belong to two or more FAST storage groups at the
                    same time. To get around this limitation we leverage both cascaded storage
                    groups and a temporary non FAST storage group.</paragraph>
                <paragraph>A volume can remain ‘live’ if moved between masking views that have the same
                    initiator group and port groups which preserves the host path.</paragraph>
                <paragraph>During live migration, the following steps are performed by the VMAX plugin
                    on the volume:</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Within the originating masking view, the volume is moved from the FAST
                            storage group to the non-FAST storage group within the parent storage
                            group.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The volume is added to the FAST storage group within the destination
                            parent storage group of the destination masking view. At this point the
                            volume belongs to two storage groups.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>One of two things happens:</paragraph>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>If the connection to the destination instance is successful, the volume
                                    is removed from the non-FAST storage group in the originating masking
                                    view, deleting the storage group if it contains no other volumes.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>If the connection to the destination instance fails, the volume is
                                    removed from the destination storage group, deleting the storage group,
                                    if empty. The volume is reverted back to the original storage group.</paragraph>
                            </list_item>
                        </bullet_list>
                    </list_item>
                </enumerated_list>
            </section>
            <section ids="libvirt-configuration" names="libvirt\ configuration">
                <title>Libvirt configuration</title>
                <paragraph>Make the following updates on all nodes, controller and compute nodes, that
                    are involved in live migration. Update the libvirt configurations. Please
                    refer to following link for further information:
                    <reference refuri="http://libvirt.org/remote.html">http://libvirt.org/remote.html</reference></paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Update the libvirt configurations. Modify the <literal>/etc/libvirt/libvirtd.conf</literal>
                            file</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">before : #listen_tls = 0
after : listen_tls = 0

before : #listen_tcp = 1
after : listen_tcp = 1
add: auth_tcp = "none"</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Modify the /etc/libvirt/qemu.conf file:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">before : #dynamic_ownership = 1
after : dynamic_ownership = 0
before : #security_driver = "selinux"
after : security_driver = "none"
before : #user = "root"
after : user = "root"
before : #group = "root"
after : group = "root"</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Modify the /etc/default/libvirtd file:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">before: libvirtd_opts=" -d"
after: libvirtd_opts=" -d -l"</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Restart libvirt. After you run the command below, ensure that libvirt is
                            successfully restarted:</paragraph>
                    </list_item>
                </enumerated_list>
                <note>
                    <paragraph>OpenStack Oslo uses an open standard for messaging middleware known as AMQP.
                        This messaging middleware (the RPC messaging system) enables the OpenStack
                        services that run on multiple servers to talk to each other.
                        By default, the RPC messaging client is set to timeout after 60 seconds,
                        meaning if any operation you perform takes longer than 60 seconds to
                        complete the operation will timeout and fail with the ERROR message
                        “Messaging Timeout: Timed out waiting for a reply to message ID [message_id]”</paragraph>
                    <paragraph>If this occurs, increase the <literal>rpc_response_timeout</literal> flag value in
                        <literal>cinder.conf</literal> and <literal>nova.conf</literal> on all Cinder and Nova nodes and restart
                        the services.</paragraph>
                    <paragraph>What to change this value to will depend entirely on your own environment,
                        you might only need to increase it slightly, or if your environment is
                        under heavy network load it could need a bit more time than normal. Fine
                        tuning is required here, change the value and run intensive operations to
                        determine if your timeout value matches your environment requirements.</paragraph>
                    <paragraph>At a minimum please set <literal>rpc_response_timeout</literal> to <literal>240</literal>, but this will
                        need to be raised if high concurrency is a factor. This should be
                        sufficient for all cinder backup commands also.</paragraph>
                </note>
            </section>
            <section ids="system-configuration" names="system\ configuration">
                <title>System configuration</title>
                <paragraph><literal>NOVA-INST-DIR/instances/</literal> (for example, <literal>/opt/stack/data/nova/instances</literal>)
                    has to be mounted by shared storage. Ensure that NOVA-INST-DIR (set with
                    state_path in the nova.conf file) is the same on all hosts.</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Configure your DNS or <literal>/etc/hosts</literal> and ensure it is consistent across all
                            hosts. Make sure that the three hosts can perform name resolution with each
                            other. As a test, use the ping command to ping each host from one another.</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ ping HostA
$ ping HostB
$ ping HostC</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Export NOVA-INST-DIR/instances from HostA, and ensure it is readable and
                            writable by the Compute user on HostB and HostC. Please refer to the
                            relevant OS documentation for further details.
                            e.g. <reference refuri="https://help.ubuntu.com/lts/serverguide/network-file-system.html">https://help.ubuntu.com/lts/serverguide/network-file-system.html</reference>
                            <reference refuri="https://help.ubuntu.com/community/SettingUpNFSHowTo">https://help.ubuntu.com/community/SettingUpNFSHowTo</reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>On all compute nodes, enable the ‘execute/search’ bit on your shared
                            directory to allow qemu to be able to use the images within the
                            directories. On all hosts, run the following command:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ chmod o+x NOVA-INST-DIR/instances</literal_block>
                    </list_item>
                </enumerated_list>
                <note>
                    <paragraph>If migrating from compute to controller, make sure to run step two above on
                        the controller node to export the instance directory.</paragraph>
                </note>
            </section>
            <section ids="use-case" names="use\ case">
                <title>Use case</title>
                <paragraph>For our use case shown below, we have three hosts with host names HostA, HostB
                    and HostC. HostA is the compute node while HostB and HostC are the compute
                    nodes. The following were also used in live migration.</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>2 gb bootable volume using the cirros image.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Instance created using the 2gb volume above with a flavor m1.small using
                            2048 RAM, 20GB of Disk and 1 VCPU.</paragraph>
                    </list_item>
                </bullet_list>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>Create a bootable volume.</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume create --size 2 \
                          --image cirros-0.3.5-x86_64-disk \
                          --volume_lm_1</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Launch an instance using the volume created above on HostB.</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack server create --volume volume_lm_1 \
                          --flavor m1.small \
                          --nic net-id=private \
                          --security-group default \
                          --availability-zone nova:HostB \
                          server_lm_1</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Confirm on HostB has the instance created by running:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack server show server_lm_1 | grep "hypervisor_hostname\|instance_name"
  | OS-EXT-SRV-ATTR:hypervisor_hostname | HostB
  | OS-EXT-SRV-ATTR:instance_name | instance-00000006</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Confirm, through virsh using the instance_name returned in step 3
                            (instance-00000006), on HostB that the instance is created using:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ virsh list --all

Id   Name                  State
--------------------------------
1    instance-00000006     Running</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Migrate the instance from HostB to HostA with:</paragraph>
                        <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack server migrate --live HostA \
                           server_lm_1</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph>Run the command on step 3 above when the instance is back in available
                            status. The hypervisor should be on Host A.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Run the command on Step 4 on Host A to confirm that the instance is
                            created through virsh.</paragraph>
                    </list_item>
                </enumerated_list>
            </section>
        </section>
    </section>
</document>
