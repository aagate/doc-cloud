<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/configuration/block-storage/drivers/violin-v7000-driver.rst">
    <section ids="violin-memory-7000-series-fsp-volume-driver" names="violin\ memory\ 7000\ series\ fsp\ volume\ driver">
        <title>Violin Memory 7000 Series FSP volume driver</title>
        <paragraph>The OpenStack V7000 driver package from Violin Memory adds Block Storage
            service support for Violin 7300 Flash Storage Platforms (FSPs) and 7700 FSP
            controllers.</paragraph>
        <paragraph>The driver package release can be used with any OpenStack Liberty deployment
            for all 7300 FSPs and 7700 FSP controllers running Concerto 7.5.3 and later
            using Fibre Channel HBAs.</paragraph>
        <section ids="system-requirements" names="system\ requirements">
            <title>System requirements</title>
            <paragraph>To use the Violin driver, the following are required:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Violin 7300/7700 series FSP with:</paragraph>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>Concerto OS version 7.5.3 or later</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Fibre channel host interfaces</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph>The Violin block storage driver: This driver implements the block storage API
                        calls. The driver is included with the OpenStack Liberty release.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>The vmemclient library: This is the Violin Array Communications library to
                        the Flash Storage Platform through a REST-like interface.  The client can be
                        installed using the python ‘pip’ installer tool.  Further information on
                        vmemclient can be found on <reference name="PyPI" refuri="https://pypi.python.org/pypi/vmemclient/">PyPI</reference>.</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">pip install vmemclient</literal_block>
                </list_item>
            </bullet_list>
        </section>
        <section ids="supported-operations" names="supported\ operations">
            <title>Supported operations</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Create, delete, attach, and detach volumes.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Create, list, and delete volume snapshots.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Create a volume from a snapshot.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Copy an image to a volume.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Copy a volume to an image.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Clone a volume.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Extend a volume.</paragraph>
                </list_item>
            </bullet_list>
            <note>
                <paragraph>Listed operations are supported for thick, thin, and dedup luns,
                    with the exception of cloning. Cloning operations are supported only
                    on thick luns.</paragraph>
            </note>
        </section>
        <section ids="driver-configuration" names="driver\ configuration">
            <title>Driver configuration</title>
            <paragraph>Once the array is configured as per the installation guide, it is simply a
                matter of editing the cinder configuration file to add or modify the
                parameters. The driver currently only supports fibre channel configuration.</paragraph>
            <section ids="fibre-channel-configuration" names="fibre\ channel\ configuration">
                <title>Fibre channel configuration</title>
                <paragraph>Set the following in your <literal>cinder.conf</literal> configuration file, replacing the
                    variables using the guide in the following section:</paragraph>
                <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">volume_driver = cinder.volume.drivers.violin.v7000_fcp.V7000FCPDriver
volume_backend_name = vmem_violinfsp
extra_capabilities = VMEM_CAPABILITIES
san_ip = VMEM_MGMT_IP
san_login = VMEM_USER_NAME
san_password = VMEM_PASSWORD
use_multipath_for_image_xfer = true</literal_block>
            </section>
            <section ids="configuration-parameters" names="configuration\ parameters">
                <title>Configuration parameters</title>
                <paragraph>Description of configuration value placeholders:</paragraph>
                <definition_list>
                    <definition_list_item>
                        <term>VMEM_CAPABILITIES</term>
                        <definition>
                            <paragraph>User defined capabilities, a JSON formatted string specifying key-value
                                pairs (string value). The ones particularly supported are
                                <literal>dedup</literal> and <literal>thin</literal>. Only these two capabilities are listed here in
                                <literal>cinder.conf</literal> file, indicating this backend be selected for creating
                                luns which have a volume type associated with them that have <literal>dedup</literal>
                                or <literal>thin</literal> extra_specs specified. For example, if the FSP is configured
                                to support dedup luns, set the associated driver capabilities
                                to: {“dedup”:”True”,”thin”:”True”}.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term>VMEM_MGMT_IP</term>
                        <definition>
                            <paragraph>External IP address or host name of the Violin 7300 Memory Gateway.  This
                                can be an IP address or host name.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term>VMEM_USER_NAME</term>
                        <definition>
                            <paragraph>Log-in user name for the Violin 7300 Memory Gateway or 7700 FSP controller.
                                This user must have administrative rights on the array or controller.</paragraph>
                        </definition>
                    </definition_list_item>
                    <definition_list_item>
                        <term>VMEM_PASSWORD</term>
                        <definition>
                            <paragraph>Log-in user’s password.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </section>
        </section>
    </section>
</document>
