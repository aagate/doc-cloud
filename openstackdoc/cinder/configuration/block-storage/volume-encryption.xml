<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.13.1 -->
<document source="/home/fbaumanis/openstack/soc8_test/openstack_repo/cinder/doc/source/configuration/block-storage/volume-encryption.rst">
    <section ids="volume-encryption-supported-by-the-key-manager" names="volume\ encryption\ supported\ by\ the\ key\ manager">
        <title>Volume encryption supported by the key manager</title>
        <paragraph>We recommend the Key management service (barbican) for storing
            encryption keys used by the OpenStack volume encryption feature. It can
            be enabled by updating <literal>cinder.conf</literal> and <literal>nova.conf</literal>.</paragraph>
        <section ids="initial-configuration" names="initial\ configuration">
            <title>Initial configuration</title>
            <paragraph>Configuration changes need to be made to any nodes running the
                <literal>cinder-api</literal> or <literal>nova-compute</literal> server.</paragraph>
            <paragraph>Steps to update <literal>cinder-api</literal> servers:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Edit the <literal>/etc/cinder/cinder.conf</literal> file to use Key management service
                        as follows:</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>Look for the <literal>[key_manager]</literal> section.</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>Enter a new line directly below <literal>[key_manager]</literal> with the following:</paragraph>
                            <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve">api_class = castellan.key_manager.barbican_key_manager.BarbicanKeyManager</literal_block>
                        </list_item>
                    </bullet_list>
                </list_item>
                <list_item>
                    <paragraph>Restart <literal>cinder-api</literal>.</paragraph>
                </list_item>
            </enumerated_list>
            <paragraph>Update <literal>nova-compute</literal> servers:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Ensure the <literal>cryptsetup</literal> utility is installed, and install
                        the <literal>python-barbicanclient</literal> Python package.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Set up the Key Manager service by editing <literal>/etc/nova/nova.conf</literal>:</paragraph>
                    <literal_block highlight_args="{}" language="ini" linenos="False" xml:space="preserve"> [key_manager]
 api_class = castellan.key_manager.barbican_key_manager.BarbicanKeyManager

.. note::

   Use a '#' prefix to comment out the line in this section that
   begins with 'fixed_key'.</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Restart <literal>nova-compute</literal>.</paragraph>
                </list_item>
            </enumerated_list>
        </section>
        <section ids="key-management-access-control" names="key\ management\ access\ control">
            <title>Key management access control</title>
            <paragraph>Special privileges can be assigned on behalf of an end user to allow
                them to manage their own encryption keys, which are required when
                creating the encrypted volumes. The Barbican <reference name="Default Policy" refuri="https://docs.openstack.org/developer/barbican/admin-guide-cloud/access_control.html#default-policy">Default Policy</reference><target ids="default-policy" names="default\ policy" refuri="https://docs.openstack.org/developer/barbican/admin-guide-cloud/access_control.html#default-policy"></target>
                for access control specifies that only users with an <literal>admin</literal> or
                <literal>creator</literal> role can create keys. The policy is very flexible and
                can be modified.</paragraph>
            <paragraph>To assign the <literal>creator</literal> role, the admin must know the user ID,
                project ID, and creator role ID. See <reference name="Assign a role" refuri="https://docs.openstack.org/admin-guide/cli-manage-projects-users-and-roles.html#assign-a-role">Assign a role</reference><target ids="assign-a-role" names="assign\ a\ role" refuri="https://docs.openstack.org/admin-guide/cli-manage-projects-users-and-roles.html#assign-a-role"></target>
                for more information. An admin can list existing roles and associated
                IDs using the <literal>openstack role list</literal> command. If the creator
                role does not exist, the admin can <reference name="create the role" refuri="https://docs.openstack.org/admin-guide/cli-manage-projects-users-and-roles.html#create-a-role">create the role</reference><target ids="create-the-role" names="create\ the\ role" refuri="https://docs.openstack.org/admin-guide/cli-manage-projects-users-and-roles.html#create-a-role"></target>.</paragraph>
        </section>
        <section dupnames="create\ an\ encrypted\ volume\ type" ids="create-an-encrypted-volume-type">
            <title>Create an encrypted volume type</title>
            <paragraph>Block Storage volume type assignment provides scheduling to a specific
                back-end, and can be used to specify actionable information for a
                back-end storage device.</paragraph>
            <paragraph>This example creates a volume type called LUKS and provides
                configuration information for the storage system to encrypt or decrypt
                the volume.</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Source your admin credentials:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ . admin-openrc.sh</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Create the volume type, marking the volume type as encrypted and providing
                        the necessary details. Use <literal>--encryption-control-location</literal> to specify
                        where encryption is performed: <literal>front-end</literal> (default) or <literal>back-end</literal>.</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume type create --encryption-provider nova.volume.encryptors.luks.LuksEncryptor \
  --encryption-cipher aes-xts-plain64 --encryption-key-size 256 --encryption-control-location front-end LUKS

  +-------------+----------------------------------------------------------------+
  | Field       | Value                                                          |
  +-------------+----------------------------------------------------------------+
  | description | None                                                           |
  | encryption  | cipher='aes-xts-plain64', control_location='front-end',        |
  |             | encryption_id='8584c43f-1666-43d1-a348-45cfcef72898',          |
  |             | key_size='256',                                                |
  |             | provider='nova.volume.encryptors.luks.LuksEncryptor'           |
  | id          | b9a8cff5-2f60-40d1-8562-d33f3bf18312                           |
  | is_public   | True                                                           |
  | name        | LUKS                                                           |
  +-------------+----------------------------------------------------------------+</literal_block>
                </list_item>
            </enumerated_list>
            <paragraph>The OpenStack dashboard (horizon) supports creating the encrypted
                volume type as of the Kilo release. For instructions, see
                <reference name="Create an encrypted volume type" refuri="https://docs.openstack.org/admin-guide/dashboard-manage-volumes.html">Create an encrypted volume type</reference><target ids="id1" names="create\ an\ encrypted\ volume\ type" refuri="https://docs.openstack.org/admin-guide/dashboard-manage-volumes.html"></target>.</paragraph>
        </section>
        <section ids="create-an-encrypted-volume" names="create\ an\ encrypted\ volume">
            <title>Create an encrypted volume</title>
            <paragraph>Use the OpenStack dashboard (horizon), or <literal_strong classes="command">openstack volume
                    create</literal_strong> command to create volumes just as you normally would. For an
                encrypted volume, pass the <literal>--type LUKS</literal> flag, which specifies that the
                volume type will be <literal>LUKS</literal> (Linux Unified Key Setup). If that argument is
                left out, the default volume type, <literal>unencrypted</literal>, is used.</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Source your admin credentials:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ . admin-openrc.sh</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Create an unencrypted 1Â GB test volume:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume create --size 1 'unencrypted volume'</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Create an encrypted 1Â GB test volume:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume create --size 1 --type LUKS 'encrypted volume'</literal_block>
                </list_item>
            </enumerated_list>
            <paragraph>Notice the encrypted parameter; it will show <literal>True</literal> or <literal>False</literal>.
                The option <literal>volume_type</literal> is also shown for easy review.</paragraph>
            <paragraph>Non-admin users need the <literal>creator</literal> role to store secrets in Barbican
                and to create encrypted volumes. As an administrator, you can give a user
                the creator role in the following way:</paragraph>
            <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack role add --project PROJECT --user USER creator</literal_block>
            <paragraph>For details, see the
                <reference name="Barbican Access Control page" refuri="https://docs.openstack.org/developer/barbican/admin-guide-cloud/access_control.html">Barbican Access Control page</reference><target ids="barbican-access-control-page" names="barbican\ access\ control\ page" refuri="https://docs.openstack.org/developer/barbican/admin-guide-cloud/access_control.html"></target>.</paragraph>
            <note>
                <paragraph>Due to the issue that some of the volume drivers do not set
                    <literal>encrypted</literal> flag, attaching of encrypted volumes to a virtual
                    guest will fail, because OpenStack Compute service will not run
                    encryption providers.</paragraph>
            </note>
        </section>
        <section ids="testing-volume-encryption" names="testing\ volume\ encryption">
            <title>Testing volume encryption</title>
            <paragraph>This is a simple test scenario to help validate your encryption. It
                assumes an LVM based Block Storage server.</paragraph>
            <paragraph>Perform these steps after completing the volume encryption setup and
                creating the volume-type for LUKS as described in the preceding
                sections.</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>Create a VM:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack server create --image cirros-0.3.1-x86_64-disk --flavor m1.tiny TESTVM</literal_block>
                </list_item>
                <list_item>
                    <paragraph>Create two volumes, one encrypted and one not encrypted then attach them
                        to your VM:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve">$ openstack volume create --size 1 'unencrypted volume'
$ openstack volume create --size 1 --type LUKS 'encrypted volume'
$ openstack volume list
$ openstack server add volume --device /dev/vdb TESTVM 'unencrypted volume'
$ openstack server add volume --device /dev/vdc TESTVM 'encrypted volume'</literal_block>
                </list_item>
                <list_item>
                    <paragraph>On the VM, send some text to the newly attached volumes and synchronize
                        them:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># echo "Hello, world (unencrypted /dev/vdb)" &gt;&gt; /dev/vdb
# echo "Hello, world (encrypted /dev/vdc)" &gt;&gt; /dev/vdc
# sync &amp;&amp; sleep 2
# sync &amp;&amp; sleep 2</literal_block>
                </list_item>
                <list_item>
                    <paragraph>On the system hosting cinder volume services, synchronize to flush the
                        I/O cache then test to see if your strings can be found:</paragraph>
                    <literal_block highlight_args="{}" language="console" linenos="False" xml:space="preserve"># sync &amp;&amp; sleep 2
# sync &amp;&amp; sleep 2
# strings /dev/stack-volumes/volume-* | grep "Hello"
Hello, world (unencrypted /dev/vdb)</literal_block>
                </list_item>
            </enumerated_list>
            <paragraph>In the above example you see that the search returns the string
                written to the unencrypted volume, but not the encrypted one.</paragraph>
        </section>
    </section>
</document>
